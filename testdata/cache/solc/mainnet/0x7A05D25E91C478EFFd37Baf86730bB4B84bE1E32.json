{"data":[{"SourceCode":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMathUpgradeable {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/MathUpgradeable.sol\";\nimport \"./math/SignedMathUpgradeable.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary StringsUpgradeable {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = MathUpgradeable.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMathUpgradeable.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, MathUpgradeable.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlUpgradeable.sol\";\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../utils/StringsUpgradeable.sol\";\nimport \"../utils/introspection/ERC165Upgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControlUpgradeable, ERC165Upgradeable {\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        StringsUpgradeable.toHexString(account),\n                        \" is missing role \",\n                        StringsUpgradeable.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"contracts/pendle/contracts/core/libraries/math/PMath.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\n/* solhint-disable private-vars-leading-underscore, reason-string */\n\nlibrary PMath {\n    uint256 internal constant ONE = 1e18; // 18 decimal places\n    int256 internal constant IONE = 1e18; // 18 decimal places\n\n    function subMax0(uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            return (a >= b ? a - b : 0);\n        }\n    }\n\n    function subNoNeg(int256 a, int256 b) internal pure returns (int256) {\n        require(a >= b, \"negative\");\n        return a - b; // no unchecked since if b is very negative, a - b might overflow\n    }\n\n    function mulDown(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 product = a * b;\n        unchecked {\n            return product / ONE;\n        }\n    }\n\n    function mulDown(int256 a, int256 b) internal pure returns (int256) {\n        int256 product = a * b;\n        unchecked {\n            return product / IONE;\n        }\n    }\n\n    function divDown(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 aInflated = a * ONE;\n        unchecked {\n            return aInflated / b;\n        }\n    }\n\n    function divDown(int256 a, int256 b) internal pure returns (int256) {\n        int256 aInflated = a * IONE;\n        unchecked {\n            return aInflated / b;\n        }\n    }\n\n    function rawDivUp(uint256 a, uint256 b) internal pure returns (uint256) {\n        return (a + b - 1) / b;\n    }\n\n    // @author Uniswap\n    function sqrt(uint256 y) internal pure returns (uint256 z) {\n        if (y > 3) {\n            z = y;\n            uint256 x = y / 2 + 1;\n            while (x < z) {\n                z = x;\n                x = (y / x + x) / 2;\n            }\n        } else if (y != 0) {\n            z = 1;\n        }\n    }\n\n    function square(uint256 x) internal pure returns (uint256) {\n        return x * x;\n    }\n\n    function squareDown(uint256 x) internal pure returns (uint256) {\n        return mulDown(x, x);\n    }\n\n    function abs(int256 x) internal pure returns (uint256) {\n        return uint256(x > 0 ? x : -x);\n    }\n\n    function neg(int256 x) internal pure returns (int256) {\n        return x * (-1);\n    }\n\n    function neg(uint256 x) internal pure returns (int256) {\n        return Int(x) * (-1);\n    }\n\n    function max(uint256 x, uint256 y) internal pure returns (uint256) {\n        return (x > y ? x : y);\n    }\n\n    function max(int256 x, int256 y) internal pure returns (int256) {\n        return (x > y ? x : y);\n    }\n\n    function min(uint256 x, uint256 y) internal pure returns (uint256) {\n        return (x < y ? x : y);\n    }\n\n    function min(int256 x, int256 y) internal pure returns (int256) {\n        return (x < y ? x : y);\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                               SIGNED CASTS\n    //////////////////////////////////////////////////////////////*/\n\n    function Int(uint256 x) internal pure returns (int256) {\n        require(x <= uint256(type(int256).max));\n        return int256(x);\n    }\n\n    function Int128(int256 x) internal pure returns (int128) {\n        require(type(int128).min <= x && x <= type(int128).max);\n        return int128(x);\n    }\n\n    function Int128(uint256 x) internal pure returns (int128) {\n        return Int128(Int(x));\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                               UNSIGNED CASTS\n    //////////////////////////////////////////////////////////////*/\n\n    function Uint(int256 x) internal pure returns (uint256) {\n        require(x >= 0);\n        return uint256(x);\n    }\n\n    function Uint32(uint256 x) internal pure returns (uint32) {\n        require(x <= type(uint32).max);\n        return uint32(x);\n    }\n\n    function Uint64(uint256 x) internal pure returns (uint64) {\n        require(x <= type(uint64).max);\n        return uint64(x);\n    }\n\n    function Uint112(uint256 x) internal pure returns (uint112) {\n        require(x <= type(uint112).max);\n        return uint112(x);\n    }\n\n    function Uint96(uint256 x) internal pure returns (uint96) {\n        require(x <= type(uint96).max);\n        return uint96(x);\n    }\n\n    function Uint128(uint256 x) internal pure returns (uint128) {\n        require(x <= type(uint128).max);\n        return uint128(x);\n    }\n\n    function Uint192(uint256 x) internal pure returns (uint192) {\n        require(x <= type(uint192).max);\n        return uint192(x);\n    }\n\n    function isAApproxB(uint256 a, uint256 b, uint256 eps) internal pure returns (bool) {\n        return mulDown(b, ONE - eps) <= a && a <= mulDown(b, ONE + eps);\n    }\n\n    function isAGreaterApproxB(uint256 a, uint256 b, uint256 eps) internal pure returns (bool) {\n        return a >= b && a <= mulDown(b, ONE + eps);\n    }\n\n    function isASmallerApproxB(uint256 a, uint256 b, uint256 eps) internal pure returns (bool) {\n        return a <= b && a >= mulDown(b, ONE - eps);\n    }\n}\n"},"contracts/pendle/contracts/interfaces/IPExchangeRateOracle.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IPExchangeRateOracle {\n    function getExchangeRate() external view returns (uint256);\n}\n"},"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\nimport \"../core/libraries/BoringOwnableUpgradeable.sol\";\nimport \"../core/libraries/math/PMath.sol\";\nimport \"../interfaces/IPExchangeRateOracle.sol\";\n\ncontract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {\n    using PMath for uint256;\n    using PMath for uint128;\n\n    enum RateRejectReason {\n        RATE_TOO_SMALL,\n        RATE_TOO_LARGE\n    }\n\n    struct ExchangeRateData {\n        uint128 rate;\n        uint64 dataBlock; // the pin block which the data is sampled at\n        uint32 dataTimestamp; // block(dataBlock).timestamp\n        uint32 updatedAt;\n    }\n\n    error RateRejected(uint256 oldRate, uint256 newRate, RateRejectReason reason);\n    error InvalidMetadata(ExchangeRateData data);\n\n    event RateUpdated(ExchangeRateData data);\n\n    uint256 public constant MIN_UPDATE_TIME_GAP = 12 hours;\n\n    string public name;\n    ExchangeRateData public data;\n    uint256 public immutable maxRateDiff;\n\n    constructor(string memory _name, uint256 _maxRateDiff) initializer {\n        name = _name;\n        maxRateDiff = _maxRateDiff;\n\n        __BoringOwnable_init();\n    }\n\n    function getExchangeRate() external view returns (uint256) {\n        return data.rate;\n    }\n\n    function setExchangeRate(uint128 rate, uint64 dataBlock, uint32 dataTimestamp) external onlyOwner {\n        ExchangeRateData memory newData = ExchangeRateData({\n            rate: rate,\n            dataBlock: dataBlock,\n            dataTimestamp: dataTimestamp,\n            updatedAt: uint32(block.timestamp)\n        });\n        _setExchangeRate(newData);\n    }\n\n    function _setExchangeRate(ExchangeRateData memory newData) internal {\n        ExchangeRateData memory oldData = data;\n\n        _validateNewRate(oldData.rate, newData.rate);\n        _validateMetadata(oldData, newData);\n\n        data = newData;\n        emit RateUpdated(newData);\n    }\n\n    function _validateNewRate(uint256 oldRate, uint256 newRate) internal view {\n        if (oldRate > newRate) {\n            revert RateRejected(oldRate, newRate, RateRejectReason.RATE_TOO_SMALL);\n        }\n\n        if (oldRate != 0 && oldRate.mulDown(PMath.ONE + maxRateDiff) < newRate) {\n            revert RateRejected(oldRate, newRate, RateRejectReason.RATE_TOO_LARGE);\n        }\n    }\n\n    function _validateMetadata(ExchangeRateData memory oldData, ExchangeRateData memory newData) internal pure {\n        if (\n            oldData.dataBlock >= newData.dataBlock ||\n            oldData.dataTimestamp >= newData.dataTimestamp ||\n            oldData.updatedAt + MIN_UPDATE_TIME_GAP >= newData.updatedAt\n        ) {\n            revert InvalidMetadata(newData);\n        }\n    }\n}\n"},"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\n\ncontract BoringOwnableUpgradeableData {\n    address public owner;\n    address public pendingOwner;\n}\n\nabstract contract BoringOwnableUpgradeable is BoringOwnableUpgradeableData, Initializable {\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    function __BoringOwnable_init() internal onlyInitializing {\n        owner = msg.sender;\n    }\n\n    /// @notice Transfers ownership to `newOwner`. Either directly or claimable by the new pending owner.\n    /// Can only be invoked by the current `owner`.\n    /// @param newOwner Address of the new owner.\n    /// @param direct True if `newOwner` should be set immediately. False if `newOwner` needs to use `claimOwnership`.\n    /// @param renounce Allows the `newOwner` to be `address(0)` if `direct` and `renounce` is True. Has no effect otherwise.\n    function transferOwnership(address newOwner, bool direct, bool renounce) public onlyOwner {\n        if (direct) {\n            // Checks\n            require(newOwner != address(0) || renounce, \"Ownable: zero address\");\n\n            // Effects\n            emit OwnershipTransferred(owner, newOwner);\n            owner = newOwner;\n            pendingOwner = address(0);\n        } else {\n            // Effects\n            pendingOwner = newOwner;\n        }\n    }\n\n    /// @notice Needs to be called by `pendingOwner` to claim ownership.\n    function claimOwnership() public {\n        address _pendingOwner = pendingOwner;\n\n        // Checks\n        require(msg.sender == _pendingOwner, \"Ownable: caller != pending owner\");\n\n        // Effects\n        emit OwnershipTransferred(owner, _pendingOwner);\n        owner = _pendingOwner;\n        pendingOwner = address(0);\n    }\n\n    /// @notice Only allows the `owner` to execute the function.\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    uint256[48] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary MathUpgradeable {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControlUpgradeable {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165Upgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165Upgradeable {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":1000000},"viaIR":true,"evmVersion":"berlin","outputSelection":{"*":{"*":["evm.bytecode","evm.deployedBytecode","devdoc","userdoc","metadata","abi"]}},"libraries":{}}},"ABI":"[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_maxRateDiff\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"dataBlock\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"dataTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"updatedAt\",\"type\":\"uint32\"}],\"internalType\":\"struct PendleExchangeRateOracle.ExchangeRateData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"InvalidMetadata\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"oldRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"},{\"internalType\":\"enum PendleExchangeRateOracle.RateRejectReason\",\"name\":\"reason\",\"type\":\"uint8\"}],\"name\":\"RateRejected\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"dataBlock\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"dataTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"updatedAt\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct PendleExchangeRateOracle.ExchangeRateData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"RateUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MIN_UPDATE_TIME_GAP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"dataBlock\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"dataTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"updatedAt\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxRateDiff\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"dataBlock\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"dataTimestamp\",\"type\":\"uint32\"}],\"name\":\"setExchangeRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"direct\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"renounce\",\"type\":\"bool\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"PendleExchangeRateOracle","CompilerVersion":"v0.8.23+commit.f704f362","OptimizationUsed":1,"Runs":1000000,"ConstructorArguments":"0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000000000000000000000000000000000000000001a52534554482045786368616e67652052617465204f7261636c65000000000000","EVMVersion":"berlin","Library":"","LicenseType":"","Proxy":0,"SwarmSource":""},{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlUpgradeable.sol\";\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../utils/StringsUpgradeable.sol\";\nimport \"../utils/introspection/ERC165Upgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControlUpgradeable, ERC165Upgradeable {\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        StringsUpgradeable.toHexString(account),\n                        \" is missing role \",\n                        StringsUpgradeable.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControlUpgradeable {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/MathUpgradeable.sol\";\nimport \"./math/SignedMathUpgradeable.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary StringsUpgradeable {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = MathUpgradeable.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMathUpgradeable.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, MathUpgradeable.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165Upgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165Upgradeable {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary MathUpgradeable {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMathUpgradeable {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\n\ncontract BoringOwnableUpgradeableData {\n    address public owner;\n    address public pendingOwner;\n}\n\nabstract contract BoringOwnableUpgradeable is BoringOwnableUpgradeableData, Initializable {\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    function __BoringOwnable_init() internal onlyInitializing {\n        owner = msg.sender;\n    }\n\n    /// @notice Transfers ownership to `newOwner`. Either directly or claimable by the new pending owner.\n    /// Can only be invoked by the current `owner`.\n    /// @param newOwner Address of the new owner.\n    /// @param direct True if `newOwner` should be set immediately. False if `newOwner` needs to use `claimOwnership`.\n    /// @param renounce Allows the `newOwner` to be `address(0)` if `direct` and `renounce` is True. Has no effect otherwise.\n    function transferOwnership(address newOwner, bool direct, bool renounce) public onlyOwner {\n        if (direct) {\n            // Checks\n            require(newOwner != address(0) || renounce, \"Ownable: zero address\");\n\n            // Effects\n            emit OwnershipTransferred(owner, newOwner);\n            owner = newOwner;\n            pendingOwner = address(0);\n        } else {\n            // Effects\n            pendingOwner = newOwner;\n        }\n    }\n\n    /// @notice Needs to be called by `pendingOwner` to claim ownership.\n    function claimOwnership() public {\n        address _pendingOwner = pendingOwner;\n\n        // Checks\n        require(msg.sender == _pendingOwner, \"Ownable: caller != pending owner\");\n\n        // Effects\n        emit OwnershipTransferred(owner, _pendingOwner);\n        owner = _pendingOwner;\n        pendingOwner = address(0);\n    }\n\n    /// @notice Only allows the `owner` to execute the function.\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    uint256[48] private __gap;\n}\n"},"contracts/pendle/contracts/core/libraries/math/PMath.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\n/* solhint-disable private-vars-leading-underscore, reason-string */\n\nlibrary PMath {\n    uint256 internal constant ONE = 1e18; // 18 decimal places\n    int256 internal constant IONE = 1e18; // 18 decimal places\n\n    function subMax0(uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            return (a >= b ? a - b : 0);\n        }\n    }\n\n    function subNoNeg(int256 a, int256 b) internal pure returns (int256) {\n        require(a >= b, \"negative\");\n        return a - b; // no unchecked since if b is very negative, a - b might overflow\n    }\n\n    function mulDown(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 product = a * b;\n        unchecked {\n            return product / ONE;\n        }\n    }\n\n    function mulDown(int256 a, int256 b) internal pure returns (int256) {\n        int256 product = a * b;\n        unchecked {\n            return product / IONE;\n        }\n    }\n\n    function divDown(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 aInflated = a * ONE;\n        unchecked {\n            return aInflated / b;\n        }\n    }\n\n    function divDown(int256 a, int256 b) internal pure returns (int256) {\n        int256 aInflated = a * IONE;\n        unchecked {\n            return aInflated / b;\n        }\n    }\n\n    function rawDivUp(uint256 a, uint256 b) internal pure returns (uint256) {\n        return (a + b - 1) / b;\n    }\n\n    // @author Uniswap\n    function sqrt(uint256 y) internal pure returns (uint256 z) {\n        if (y > 3) {\n            z = y;\n            uint256 x = y / 2 + 1;\n            while (x < z) {\n                z = x;\n                x = (y / x + x) / 2;\n            }\n        } else if (y != 0) {\n            z = 1;\n        }\n    }\n\n    function square(uint256 x) internal pure returns (uint256) {\n        return x * x;\n    }\n\n    function squareDown(uint256 x) internal pure returns (uint256) {\n        return mulDown(x, x);\n    }\n\n    function abs(int256 x) internal pure returns (uint256) {\n        return uint256(x > 0 ? x : -x);\n    }\n\n    function neg(int256 x) internal pure returns (int256) {\n        return x * (-1);\n    }\n\n    function neg(uint256 x) internal pure returns (int256) {\n        return Int(x) * (-1);\n    }\n\n    function max(uint256 x, uint256 y) internal pure returns (uint256) {\n        return (x > y ? x : y);\n    }\n\n    function max(int256 x, int256 y) internal pure returns (int256) {\n        return (x > y ? x : y);\n    }\n\n    function min(uint256 x, uint256 y) internal pure returns (uint256) {\n        return (x < y ? x : y);\n    }\n\n    function min(int256 x, int256 y) internal pure returns (int256) {\n        return (x < y ? x : y);\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                               SIGNED CASTS\n    //////////////////////////////////////////////////////////////*/\n\n    function Int(uint256 x) internal pure returns (int256) {\n        require(x <= uint256(type(int256).max));\n        return int256(x);\n    }\n\n    function Int128(int256 x) internal pure returns (int128) {\n        require(type(int128).min <= x && x <= type(int128).max);\n        return int128(x);\n    }\n\n    function Int128(uint256 x) internal pure returns (int128) {\n        return Int128(Int(x));\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                               UNSIGNED CASTS\n    //////////////////////////////////////////////////////////////*/\n\n    function Uint(int256 x) internal pure returns (uint256) {\n        require(x >= 0);\n        return uint256(x);\n    }\n\n    function Uint32(uint256 x) internal pure returns (uint32) {\n        require(x <= type(uint32).max);\n        return uint32(x);\n    }\n\n    function Uint64(uint256 x) internal pure returns (uint64) {\n        require(x <= type(uint64).max);\n        return uint64(x);\n    }\n\n    function Uint112(uint256 x) internal pure returns (uint112) {\n        require(x <= type(uint112).max);\n        return uint112(x);\n    }\n\n    function Uint96(uint256 x) internal pure returns (uint96) {\n        require(x <= type(uint96).max);\n        return uint96(x);\n    }\n\n    function Uint128(uint256 x) internal pure returns (uint128) {\n        require(x <= type(uint128).max);\n        return uint128(x);\n    }\n\n    function Uint192(uint256 x) internal pure returns (uint192) {\n        require(x <= type(uint192).max);\n        return uint192(x);\n    }\n\n    function isAApproxB(uint256 a, uint256 b, uint256 eps) internal pure returns (bool) {\n        return mulDown(b, ONE - eps) <= a && a <= mulDown(b, ONE + eps);\n    }\n\n    function isAGreaterApproxB(uint256 a, uint256 b, uint256 eps) internal pure returns (bool) {\n        return a >= b && a <= mulDown(b, ONE + eps);\n    }\n\n    function isASmallerApproxB(uint256 a, uint256 b, uint256 eps) internal pure returns (bool) {\n        return a <= b && a >= mulDown(b, ONE - eps);\n    }\n}\n"},"contracts/pendle/contracts/interfaces/IPExchangeRateOracle.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IPExchangeRateOracle {\n    function getExchangeRate() external view returns (uint256);\n}\n"},"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\nimport \"../core/libraries/BoringOwnableUpgradeable.sol\";\nimport \"../core/libraries/math/PMath.sol\";\nimport \"../interfaces/IPExchangeRateOracle.sol\";\n\ncontract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {\n    using PMath for uint256;\n    using PMath for uint128;\n\n    enum RateRejectReason {\n        RATE_TOO_SMALL,\n        RATE_TOO_LARGE\n    }\n\n    struct ExchangeRateData {\n        uint128 rate;\n        uint64 dataBlock; // the pin block which the data is sampled at\n        uint32 dataTimestamp; // block(dataBlock).timestamp\n        uint32 updatedAt;\n    }\n\n    error RateRejected(uint256 oldRate, uint256 newRate, RateRejectReason reason);\n    error InvalidMetadata(ExchangeRateData data);\n\n    event RateUpdated(ExchangeRateData data);\n\n    uint256 public constant MIN_UPDATE_TIME_GAP = 12 hours;\n\n    string public name;\n    ExchangeRateData public data;\n    uint256 public immutable maxRateDiff;\n\n    constructor(string memory _name, uint256 _maxRateDiff) initializer {\n        name = _name;\n        maxRateDiff = _maxRateDiff;\n\n        __BoringOwnable_init();\n    }\n\n    function getExchangeRate() external view returns (uint256) {\n        return data.rate;\n    }\n\n    function setExchangeRate(uint128 rate, uint64 dataBlock, uint32 dataTimestamp) external onlyOwner {\n        ExchangeRateData memory newData = ExchangeRateData({\n            rate: rate,\n            dataBlock: dataBlock,\n            dataTimestamp: dataTimestamp,\n            updatedAt: uint32(block.timestamp)\n        });\n        _setExchangeRate(newData);\n    }\n\n    function _setExchangeRate(ExchangeRateData memory newData) internal {\n        ExchangeRateData memory oldData = data;\n\n        _validateNewRate(oldData.rate, newData.rate);\n        _validateMetadata(oldData, newData);\n\n        data = newData;\n        emit RateUpdated(newData);\n    }\n\n    function _validateNewRate(uint256 oldRate, uint256 newRate) internal view {\n        if (oldRate > newRate) {\n            revert RateRejected(oldRate, newRate, RateRejectReason.RATE_TOO_SMALL);\n        }\n\n        if (oldRate != 0 && oldRate.mulDown(PMath.ONE + maxRateDiff) < newRate) {\n            revert RateRejected(oldRate, newRate, RateRejectReason.RATE_TOO_LARGE);\n        }\n    }\n\n    function _validateMetadata(ExchangeRateData memory oldData, ExchangeRateData memory newData) internal pure {\n        if (\n            oldData.dataBlock >= newData.dataBlock ||\n            oldData.dataTimestamp >= newData.dataTimestamp ||\n            oldData.updatedAt + MIN_UPDATE_TIME_GAP >= newData.updatedAt\n        ) {\n            revert InvalidMetadata(newData);\n        }\n    }\n}\n"}},{"sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"id":0,"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","id":336,"exportedSymbols":{"AccessControlUpgradeable":[335],"AddressUpgradeable":[907],"ContextUpgradeable":[949],"ERC165Upgradeable":[1222],"IAccessControlUpgradeable":[408],"IERC165Upgradeable":[1234],"Initializable":[577],"MathUpgradeable":[2100],"SignedMathUpgradeable":[2205],"StringsUpgradeable":[1178]},"nodeType":"SourceUnit","src":"108:8741:0","nodes":[{"id":1,"nodeType":"PragmaDirective","src":"108:23:0","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":2,"nodeType":"ImportDirective","src":"133:41:0","nodes":[],"absolutePath":"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol","file":"./IAccessControlUpgradeable.sol","nameLocation":"-1:-1:-1","scope":336,"sourceUnit":409,"symbolAliases":[],"unitAlias":""},{"id":3,"nodeType":"ImportDirective","src":"175:41:0","nodes":[],"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","nameLocation":"-1:-1:-1","scope":336,"sourceUnit":950,"symbolAliases":[],"unitAlias":""},{"id":4,"nodeType":"ImportDirective","src":"217:41:0","nodes":[],"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol","file":"../utils/StringsUpgradeable.sol","nameLocation":"-1:-1:-1","scope":336,"sourceUnit":1179,"symbolAliases":[],"unitAlias":""},{"id":5,"nodeType":"ImportDirective","src":"259:54:0","nodes":[],"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../utils/introspection/ERC165Upgradeable.sol","nameLocation":"-1:-1:-1","scope":336,"sourceUnit":1223,"symbolAliases":[],"unitAlias":""},{"id":6,"nodeType":"ImportDirective","src":"314:42:0","nodes":[],"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","nameLocation":"-1:-1:-1","scope":336,"sourceUnit":578,"symbolAliases":[],"unitAlias":""},{"id":335,"nodeType":"ContractDefinition","src":"2019:6829:0","nodes":[{"id":21,"nodeType":"FunctionDefinition","src":"2151:65:0","nodes":[],"body":{"id":20,"nodeType":"Block","src":"2209:7:0","nodes":[],"statements":[]},"implemented":true,"kind":"function","modifiers":[{"id":18,"kind":"modifierInvocation","modifierName":{"id":17,"name":"onlyInitializing","nameLocations":["2192:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":522,"src":"2192:16:0"},"nodeType":"ModifierInvocation","src":"2192:16:0"}],"name":"__AccessControl_init","nameLocation":"2160:20:0","parameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"2180:2:0"},"returnParameters":{"id":19,"nodeType":"ParameterList","parameters":[],"src":"2209:0:0"},"scope":335,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":27,"nodeType":"FunctionDefinition","src":"2222:75:0","nodes":[],"body":{"id":26,"nodeType":"Block","src":"2290:7:0","nodes":[],"statements":[]},"implemented":true,"kind":"function","modifiers":[{"id":24,"kind":"modifierInvocation","modifierName":{"id":23,"name":"onlyInitializing","nameLocations":["2273:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":522,"src":"2273:16:0"},"nodeType":"ModifierInvocation","src":"2273:16:0"}],"name":"__AccessControl_init_unchained","nameLocation":"2231:30:0","parameters":{"id":22,"nodeType":"ParameterList","parameters":[],"src":"2261:2:0"},"returnParameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"2290:0:0"},"scope":335,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":34,"nodeType":"StructDefinition","src":"2302:92:0","nodes":[],"canonicalName":"AccessControlUpgradeable.RoleData","members":[{"constant":false,"id":31,"mutability":"mutable","name":"members","nameLocation":"2353:7:0","nodeType":"VariableDeclaration","scope":34,"src":"2328:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":30,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":28,"name":"address","nodeType":"ElementaryTypeName","src":"2336:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2328:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":29,"name":"bool","nodeType":"ElementaryTypeName","src":"2347:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":33,"mutability":"mutable","name":"adminRole","nameLocation":"2378:9:0","nodeType":"VariableDeclaration","scope":34,"src":"2370:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2370:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2309:8:0","scope":335,"visibility":"public"},{"id":39,"nodeType":"VariableDeclaration","src":"2400:43:0","nodes":[],"constant":false,"mutability":"mutable","name":"_roles","nameLocation":"2437:6:0","scope":335,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$34_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"typeName":{"id":38,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":35,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2408:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2400:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$34_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":37,"nodeType":"UserDefinedTypeName","pathNode":{"id":36,"name":"RoleData","nameLocations":["2419:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":34,"src":"2419:8:0"},"referencedDeclaration":34,"src":"2419:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$34_storage_ptr","typeString":"struct AccessControlUpgradeable.RoleData"}}},"visibility":"private"},{"id":42,"nodeType":"VariableDeclaration","src":"2450:49:0","nodes":[],"constant":true,"functionSelector":"a217fddf","mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2474:18:0","scope":335,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":40,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2450:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":41,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"id":53,"nodeType":"ModifierDefinition","src":"2886:76:0","nodes":[],"body":{"id":52,"nodeType":"Block","src":"2918:44:0","nodes":[],"statements":[{"expression":{"arguments":[{"id":48,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"2939:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":47,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[107,146],"referencedDeclaration":107,"src":"2928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2928:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":50,"nodeType":"ExpressionStatement","src":"2928:16:0"},{"id":51,"nodeType":"PlaceholderStatement","src":"2954:1:0"}]},"documentation":{"id":43,"nodeType":"StructuredDocumentation","src":"2506:375:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"},"name":"onlyRole","nameLocation":"2895:8:0","parameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"role","nameLocation":"2912:4:0","nodeType":"VariableDeclaration","scope":53,"src":"2904:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":44,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2904:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2903:14:0"},"virtual":false,"visibility":"internal"},{"id":75,"nodeType":"FunctionDefinition","src":"3029:213:0","nodes":[],"body":{"id":74,"nodeType":"Block","src":"3120:122:0","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":67,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"3137:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":64,"name":"IAccessControlUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"3157:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControlUpgradeable_$408_$","typeString":"type(contract IAccessControlUpgradeable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControlUpgradeable_$408_$","typeString":"type(contract IAccessControlUpgradeable)"}],"id":63,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3152:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3152:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControlUpgradeable_$408","typeString":"type(contract IAccessControlUpgradeable)"}},"id":66,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3184:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"3152:43:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3137:58:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":70,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"3223:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":68,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3199:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlUpgradeable_$335_$","typeString":"type(contract super AccessControlUpgradeable)"}},"id":69,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3205:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1216,"src":"3199:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":71,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3199:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3137:98:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":61,"id":73,"nodeType":"Return","src":"3130:105:0"}]},"baseFunctions":[1216],"documentation":{"id":54,"nodeType":"StructuredDocumentation","src":"2968:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"3038:17:0","overrides":{"id":58,"nodeType":"OverrideSpecifier","overrides":[],"src":"3096:8:0"},"parameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"interfaceId","nameLocation":"3063:11:0","nodeType":"VariableDeclaration","scope":75,"src":"3056:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":55,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3056:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3055:20:0"},"returnParameters":{"id":61,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":75,"src":"3114:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":59,"name":"bool","nodeType":"ElementaryTypeName","src":"3114:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3113:6:0"},"scope":335,"stateMutability":"view","virtual":true,"visibility":"public"},{"id":94,"nodeType":"FunctionDefinition","src":"3329:145:0","nodes":[],"body":{"id":93,"nodeType":"Block","src":"3421:53:0","nodes":[],"statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":86,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"3438:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$34_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":88,"indexExpression":{"id":87,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":78,"src":"3445:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3438:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$34_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":89,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3451:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":31,"src":"3438:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":91,"indexExpression":{"id":90,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3459:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3438:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":85,"id":92,"nodeType":"Return","src":"3431:36:0"}]},"baseFunctions":[375],"documentation":{"id":76,"nodeType":"StructuredDocumentation","src":"3248:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3338:7:0","overrides":{"id":82,"nodeType":"OverrideSpecifier","overrides":[],"src":"3397:8:0"},"parameters":{"id":81,"nodeType":"ParameterList","parameters":[{"constant":false,"id":78,"mutability":"mutable","name":"role","nameLocation":"3354:4:0","nodeType":"VariableDeclaration","scope":94,"src":"3346:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":77,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3346:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":80,"mutability":"mutable","name":"account","nameLocation":"3368:7:0","nodeType":"VariableDeclaration","scope":94,"src":"3360:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":79,"name":"address","nodeType":"ElementaryTypeName","src":"3360:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3345:31:0"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":84,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":94,"src":"3415:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":83,"name":"bool","nodeType":"ElementaryTypeName","src":"3415:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3414:6:0"},"scope":335,"stateMutability":"view","virtual":true,"visibility":"public"},{"id":107,"nodeType":"FunctionDefinition","src":"3768:103:0","nodes":[],"body":{"id":106,"nodeType":"Block","src":"3824:47:0","nodes":[],"statements":[{"expression":{"arguments":[{"id":101,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3845:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":102,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"3851:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3851:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[107,146],"referencedDeclaration":146,"src":"3834:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3834:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":105,"nodeType":"ExpressionStatement","src":"3834:30:0"}]},"documentation":{"id":95,"nodeType":"StructuredDocumentation","src":"3480:283:0","text":" @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"},"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3777:10:0","parameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":97,"mutability":"mutable","name":"role","nameLocation":"3796:4:0","nodeType":"VariableDeclaration","scope":107,"src":"3788:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":96,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3788:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3787:14:0"},"returnParameters":{"id":99,"nodeType":"ParameterList","parameters":[],"src":"3824:0:0"},"scope":335,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":146,"nodeType":"FunctionDefinition","src":"4152:501:0","nodes":[],"body":{"id":145,"nodeType":"Block","src":"4225:428:0","nodes":[],"statements":[{"condition":{"id":119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4239:23:0","subExpression":{"arguments":[{"id":116,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"4248:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":117,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"4254:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":115,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"4240:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4240:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":144,"nodeType":"IfStatement","src":"4235:412:0","trueBody":{"id":143,"nodeType":"Block","src":"4264:383:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","id":125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4372:25:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},"value":"AccessControl: account "},{"arguments":[{"id":128,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"4454:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":126,"name":"StringsUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"4423:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StringsUpgradeable_$1178_$","typeString":"type(library StringsUpgradeable)"}},"id":127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4442:11:0","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":1152,"src":"4423:30:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4423:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"206973206d697373696e6720726f6c6520","id":130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4488:19:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},"value":" is missing role "},{"arguments":[{"arguments":[{"id":135,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"4572:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4564:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":133,"name":"uint256","nodeType":"ElementaryTypeName","src":"4564:7:0","typeDescriptions":{}}},"id":136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4564:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3332","id":137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4579:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":131,"name":"StringsUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"4533:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StringsUpgradeable_$1178_$","typeString":"type(library StringsUpgradeable)"}},"id":132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4552:11:0","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":1132,"src":"4533:30:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4533:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":123,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4330:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4334:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"4330:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4330:274:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4302:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":121,"name":"string","nodeType":"ElementaryTypeName","src":"4302:6:0","typeDescriptions":{}}},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:320:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":120,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"4278:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4278:358:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":142,"nodeType":"ExpressionStatement","src":"4278:358:0"}]}}]},"documentation":{"id":108,"nodeType":"StructuredDocumentation","src":"3877:270:0","text":" @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"},"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4161:10:0","parameters":{"id":113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":110,"mutability":"mutable","name":"role","nameLocation":"4180:4:0","nodeType":"VariableDeclaration","scope":146,"src":"4172:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":109,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4172:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":112,"mutability":"mutable","name":"account","nameLocation":"4194:7:0","nodeType":"VariableDeclaration","scope":146,"src":"4186:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"4186:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4171:31:0"},"returnParameters":{"id":114,"nodeType":"ParameterList","parameters":[],"src":"4225:0:0"},"scope":335,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":161,"nodeType":"FunctionDefinition","src":"4834:129:0","nodes":[],"body":{"id":160,"nodeType":"Block","src":"4917:46:0","nodes":[],"statements":[{"expression":{"expression":{"baseExpression":{"id":155,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"4934:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$34_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":157,"indexExpression":{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"4941:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4934:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$34_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":158,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4947:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":33,"src":"4934:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":154,"id":159,"nodeType":"Return","src":"4927:29:0"}]},"baseFunctions":[383],"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"4659:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4843:12:0","overrides":{"id":151,"nodeType":"OverrideSpecifier","overrides":[],"src":"4890:8:0"},"parameters":{"id":150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"role","nameLocation":"4864:4:0","nodeType":"VariableDeclaration","scope":161,"src":"4856:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4856:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4855:14:0"},"returnParameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":161,"src":"4908:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4908:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4907:9:0"},"scope":335,"stateMutability":"view","virtual":true,"visibility":"public"},{"id":181,"nodeType":"FunctionDefinition","src":"5259:145:0","nodes":[],"body":{"id":180,"nodeType":"Block","src":"5362:42:0","nodes":[],"statements":[{"expression":{"arguments":[{"id":176,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"5383:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":177,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":166,"src":"5389:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":175,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"5372:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5372:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":179,"nodeType":"ExpressionStatement","src":"5372:25:0"}]},"baseFunctions":[391],"documentation":{"id":162,"nodeType":"StructuredDocumentation","src":"4969:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":171,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"5355:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":170,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"5342:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5342:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":173,"kind":"modifierInvocation","modifierName":{"id":169,"name":"onlyRole","nameLocations":["5333:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":53,"src":"5333:8:0"},"nodeType":"ModifierInvocation","src":"5333:28:0"}],"name":"grantRole","nameLocation":"5268:9:0","overrides":{"id":168,"nodeType":"OverrideSpecifier","overrides":[],"src":"5324:8:0"},"parameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":164,"mutability":"mutable","name":"role","nameLocation":"5286:4:0","nodeType":"VariableDeclaration","scope":181,"src":"5278:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":163,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5278:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":166,"mutability":"mutable","name":"account","nameLocation":"5300:7:0","nodeType":"VariableDeclaration","scope":181,"src":"5292:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":165,"name":"address","nodeType":"ElementaryTypeName","src":"5292:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5277:31:0"},"returnParameters":{"id":174,"nodeType":"ParameterList","parameters":[],"src":"5362:0:0"},"scope":335,"stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"id":201,"nodeType":"FunctionDefinition","src":"5684:147:0","nodes":[],"body":{"id":200,"nodeType":"Block","src":"5788:43:0","nodes":[],"statements":[{"expression":{"arguments":[{"id":196,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"5810:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":197,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"5816:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":195,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"5798:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5798:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":199,"nodeType":"ExpressionStatement","src":"5798:26:0"}]},"baseFunctions":[399],"documentation":{"id":182,"nodeType":"StructuredDocumentation","src":"5410:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":191,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"5781:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":190,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"5768:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5768:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":193,"kind":"modifierInvocation","modifierName":{"id":189,"name":"onlyRole","nameLocations":["5759:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":53,"src":"5759:8:0"},"nodeType":"ModifierInvocation","src":"5759:28:0"}],"name":"revokeRole","nameLocation":"5693:10:0","overrides":{"id":188,"nodeType":"OverrideSpecifier","overrides":[],"src":"5750:8:0"},"parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"mutability":"mutable","name":"role","nameLocation":"5712:4:0","nodeType":"VariableDeclaration","scope":201,"src":"5704:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":183,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5704:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":186,"mutability":"mutable","name":"account","nameLocation":"5726:7:0","nodeType":"VariableDeclaration","scope":201,"src":"5718:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"5718:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5703:31:0"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"5788:0:0"},"scope":335,"stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"id":224,"nodeType":"FunctionDefinition","src":"6368:214:0","nodes":[],"body":{"id":223,"nodeType":"Block","src":"6445:137:0","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":211,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"6463:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":212,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"6474:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6474:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6463:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6488:49:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":210,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6455:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6455:83:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":217,"nodeType":"ExpressionStatement","src":"6455:83:0"},{"expression":{"arguments":[{"id":219,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"6561:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":220,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"6567:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":218,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"6549:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6549:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":222,"nodeType":"ExpressionStatement","src":"6549:26:0"}]},"baseFunctions":[407],"documentation":{"id":202,"nodeType":"StructuredDocumentation","src":"5837:526:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6377:12:0","overrides":{"id":208,"nodeType":"OverrideSpecifier","overrides":[],"src":"6436:8:0"},"parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"role","nameLocation":"6398:4:0","nodeType":"VariableDeclaration","scope":224,"src":"6390:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":203,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6390:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":206,"mutability":"mutable","name":"account","nameLocation":"6412:7:0","nodeType":"VariableDeclaration","scope":224,"src":"6404:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":205,"name":"address","nodeType":"ElementaryTypeName","src":"6404:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6389:31:0"},"returnParameters":{"id":209,"nodeType":"ParameterList","parameters":[],"src":"6445:0:0"},"scope":335,"stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"id":238,"nodeType":"FunctionDefinition","src":"7267:110:0","nodes":[],"body":{"id":237,"nodeType":"Block","src":"7335:42:0","nodes":[],"statements":[{"expression":{"arguments":[{"id":233,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"7356:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":234,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"7362:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":232,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"7345:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7345:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":236,"nodeType":"ExpressionStatement","src":"7345:25:0"}]},"documentation":{"id":225,"nodeType":"StructuredDocumentation","src":"6588:674:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."},"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nameLocation":"7276:10:0","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"role","nameLocation":"7295:4:0","nodeType":"VariableDeclaration","scope":238,"src":"7287:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":226,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7287:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":229,"mutability":"mutable","name":"account","nameLocation":"7309:7:0","nodeType":"VariableDeclaration","scope":238,"src":"7301:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"7301:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7286:31:0"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[],"src":"7335:0:0"},"scope":335,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":266,"nodeType":"FunctionDefinition","src":"7502:247:0","nodes":[],"body":{"id":265,"nodeType":"Block","src":"7575:174:0","nodes":[],"statements":[{"assignments":[247],"declarations":[{"constant":false,"id":247,"mutability":"mutable","name":"previousAdminRole","nameLocation":"7593:17:0","nodeType":"VariableDeclaration","scope":265,"src":"7585:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7585:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":251,"initialValue":{"arguments":[{"id":249,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"7626:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":248,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"7613:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7613:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7585:46:0"},{"expression":{"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":252,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"7641:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$34_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":254,"indexExpression":{"id":253,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"7648:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7641:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$34_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":255,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7654:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":33,"src":"7641:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":256,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"7666:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7641:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":258,"nodeType":"ExpressionStatement","src":"7641:34:0"},{"eventCall":{"arguments":[{"id":260,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"7707:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":261,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"7713:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":262,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"7732:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":259,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"7690:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7690:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":264,"nodeType":"EmitStatement","src":"7685:57:0"}]},"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"7383:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"7511:13:0","parameters":{"id":244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"role","nameLocation":"7533:4:0","nodeType":"VariableDeclaration","scope":266,"src":"7525:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":240,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7525:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"adminRole","nameLocation":"7547:9:0","nodeType":"VariableDeclaration","scope":266,"src":"7539:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":242,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7539:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7524:33:0"},"returnParameters":{"id":245,"nodeType":"ParameterList","parameters":[],"src":"7575:0:0"},"scope":335,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":298,"nodeType":"FunctionDefinition","src":"7917:233:0","nodes":[],"body":{"id":297,"nodeType":"Block","src":"7985:165:0","nodes":[],"statements":[{"condition":{"id":278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7999:23:0","subExpression":{"arguments":[{"id":275,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"8008:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":276,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"8014:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":274,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"8000:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8000:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":296,"nodeType":"IfStatement","src":"7995:149:0","trueBody":{"id":295,"nodeType":"Block","src":"8024:120:0","statements":[{"expression":{"id":286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":279,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"8038:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$34_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":281,"indexExpression":{"id":280,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"8045:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8038:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$34_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":282,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8051:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":31,"src":"8038:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":284,"indexExpression":{"id":283,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"8059:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8038:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8070:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8038:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":287,"nodeType":"ExpressionStatement","src":"8038:36:0"},{"eventCall":{"arguments":[{"id":289,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"8105:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":290,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"8111:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":291,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"8120:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8120:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":288,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"8093:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8093:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":294,"nodeType":"EmitStatement","src":"8088:45:0"}]}}]},"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"7755:157:0","text":" @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7926:10:0","parameters":{"id":272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"role","nameLocation":"7945:4:0","nodeType":"VariableDeclaration","scope":298,"src":"7937:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":268,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7937:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":271,"mutability":"mutable","name":"account","nameLocation":"7959:7:0","nodeType":"VariableDeclaration","scope":298,"src":"7951:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":270,"name":"address","nodeType":"ElementaryTypeName","src":"7951:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7936:31:0"},"returnParameters":{"id":273,"nodeType":"ParameterList","parameters":[],"src":"7985:0:0"},"scope":335,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":329,"nodeType":"FunctionDefinition","src":"8321:234:0","nodes":[],"body":{"id":328,"nodeType":"Block","src":"8390:165:0","nodes":[],"statements":[{"condition":{"arguments":[{"id":307,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"8412:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":308,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"8418:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":306,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"8404:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8404:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":327,"nodeType":"IfStatement","src":"8400:149:0","trueBody":{"id":326,"nodeType":"Block","src":"8428:121:0","statements":[{"expression":{"id":317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":310,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"8442:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$34_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":312,"indexExpression":{"id":311,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"8449:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8442:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$34_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":313,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8455:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":31,"src":"8442:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":315,"indexExpression":{"id":314,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"8463:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8442:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8474:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8442:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":318,"nodeType":"ExpressionStatement","src":"8442:37:0"},{"eventCall":{"arguments":[{"id":320,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"8510:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":321,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"8516:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":322,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"8525:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8525:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":319,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"8498:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8498:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":325,"nodeType":"EmitStatement","src":"8493:45:0"}]}}]},"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"8156:160:0","text":" @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"8330:11:0","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"role","nameLocation":"8350:4:0","nodeType":"VariableDeclaration","scope":329,"src":"8342:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":300,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8342:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"account","nameLocation":"8364:7:0","nodeType":"VariableDeclaration","scope":329,"src":"8356:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":302,"name":"address","nodeType":"ElementaryTypeName","src":"8356:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8341:31:0"},"returnParameters":{"id":305,"nodeType":"ParameterList","parameters":[],"src":"8390:0:0"},"scope":335,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":334,"nodeType":"VariableDeclaration","src":"8820:25:0","nodes":[],"constant":false,"documentation":{"id":330,"nodeType":"StructuredDocumentation","src":"8561:254:0","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"mutability":"mutable","name":"__gap","nameLocation":"8840:5:0","scope":335,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":331,"name":"uint256","nodeType":"ElementaryTypeName","src":"8820:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":333,"length":{"hexValue":"3439","id":332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8828:2:0","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"8820:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"abstract":true,"baseContracts":[{"baseName":{"id":8,"name":"Initializable","nameLocations":["2065:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":577,"src":"2065:13:0"},"id":9,"nodeType":"InheritanceSpecifier","src":"2065:13:0"},{"baseName":{"id":10,"name":"ContextUpgradeable","nameLocations":["2080:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":949,"src":"2080:18:0"},"id":11,"nodeType":"InheritanceSpecifier","src":"2080:18:0"},{"baseName":{"id":12,"name":"IAccessControlUpgradeable","nameLocations":["2100:25:0"],"nodeType":"IdentifierPath","referencedDeclaration":408,"src":"2100:25:0"},"id":13,"nodeType":"InheritanceSpecifier","src":"2100:25:0"},{"baseName":{"id":14,"name":"ERC165Upgradeable","nameLocations":["2127:17:0"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"2127:17:0"},"id":15,"nodeType":"InheritanceSpecifier","src":"2127:17:0"}],"canonicalName":"AccessControlUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":7,"nodeType":"StructuredDocumentation","src":"358:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"linearizedBaseContracts":[335,1222,1234,408,949,577],"name":"AccessControlUpgradeable","nameLocation":"2037:24:0","scope":336,"usedErrors":[],"usedEvents":[347,356,365,423]}],"license":"MIT"}},"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol":{"id":1,"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol","id":409,"exportedSymbols":{"IAccessControlUpgradeable":[408]},"nodeType":"SourceUnit","src":"94:2837:1","nodes":[{"id":337,"nodeType":"PragmaDirective","src":"94:23:1","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":408,"nodeType":"ContractDefinition","src":"209:2721:1","nodes":[{"id":347,"nodeType":"EventDefinition","src":"548:110:1","nodes":[],"anonymous":false,"documentation":{"id":339,"nodeType":"StructuredDocumentation","src":"251:292:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","name":"RoleAdminChanged","nameLocation":"554:16:1","parameters":{"id":346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":341,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"587:4:1","nodeType":"VariableDeclaration","scope":347,"src":"571:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":340,"name":"bytes32","nodeType":"ElementaryTypeName","src":"571:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":343,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"609:17:1","nodeType":"VariableDeclaration","scope":347,"src":"593:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":342,"name":"bytes32","nodeType":"ElementaryTypeName","src":"593:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":345,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"644:12:1","nodeType":"VariableDeclaration","scope":347,"src":"628:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":344,"name":"bytes32","nodeType":"ElementaryTypeName","src":"628:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"570:87:1"}},{"id":356,"nodeType":"EventDefinition","src":"881:89:1","nodes":[],"anonymous":false,"documentation":{"id":348,"nodeType":"StructuredDocumentation","src":"664:212:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","name":"RoleGranted","nameLocation":"887:11:1","parameters":{"id":355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":350,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"915:4:1","nodeType":"VariableDeclaration","scope":356,"src":"899:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":349,"name":"bytes32","nodeType":"ElementaryTypeName","src":"899:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":352,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"937:7:1","nodeType":"VariableDeclaration","scope":356,"src":"921:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":351,"name":"address","nodeType":"ElementaryTypeName","src":"921:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":354,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"962:6:1","nodeType":"VariableDeclaration","scope":356,"src":"946:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":353,"name":"address","nodeType":"ElementaryTypeName","src":"946:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"898:71:1"}},{"id":365,"nodeType":"EventDefinition","src":"1256:89:1","nodes":[],"anonymous":false,"documentation":{"id":357,"nodeType":"StructuredDocumentation","src":"976:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","name":"RoleRevoked","nameLocation":"1262:11:1","parameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1290:4:1","nodeType":"VariableDeclaration","scope":365,"src":"1274:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":358,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1274:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":361,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1312:7:1","nodeType":"VariableDeclaration","scope":365,"src":"1296:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":360,"name":"address","nodeType":"ElementaryTypeName","src":"1296:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":363,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1337:6:1","nodeType":"VariableDeclaration","scope":365,"src":"1321:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":362,"name":"address","nodeType":"ElementaryTypeName","src":"1321:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1273:71:1"}},{"id":375,"nodeType":"FunctionDefinition","src":"1432:77:1","nodes":[],"documentation":{"id":366,"nodeType":"StructuredDocumentation","src":"1351:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1441:7:1","parameters":{"id":371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"role","nameLocation":"1457:4:1","nodeType":"VariableDeclaration","scope":375,"src":"1449:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":367,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1449:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":370,"mutability":"mutable","name":"account","nameLocation":"1471:7:1","nodeType":"VariableDeclaration","scope":375,"src":"1463:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":369,"name":"address","nodeType":"ElementaryTypeName","src":"1463:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1448:31:1"},"returnParameters":{"id":374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":375,"src":"1503:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":372,"name":"bool","nodeType":"ElementaryTypeName","src":"1503:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1502:6:1"},"scope":408,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":383,"nodeType":"FunctionDefinition","src":"1704:68:1","nodes":[],"documentation":{"id":376,"nodeType":"StructuredDocumentation","src":"1515:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"1713:12:1","parameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"mutability":"mutable","name":"role","nameLocation":"1734:4:1","nodeType":"VariableDeclaration","scope":383,"src":"1726:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1726:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1725:14:1"},"returnParameters":{"id":382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":383,"src":"1763:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":380,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1763:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1762:9:1"},"scope":408,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":391,"nodeType":"FunctionDefinition","src":"2022:59:1","nodes":[],"documentation":{"id":384,"nodeType":"StructuredDocumentation","src":"1778:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2031:9:1","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":386,"mutability":"mutable","name":"role","nameLocation":"2049:4:1","nodeType":"VariableDeclaration","scope":391,"src":"2041:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":385,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2041:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"account","nameLocation":"2063:7:1","nodeType":"VariableDeclaration","scope":391,"src":"2055:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"2055:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2040:31:1"},"returnParameters":{"id":390,"nodeType":"ParameterList","parameters":[],"src":"2080:0:1"},"scope":408,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":399,"nodeType":"FunctionDefinition","src":"2315:60:1","nodes":[],"documentation":{"id":392,"nodeType":"StructuredDocumentation","src":"2087:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2324:10:1","parameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"mutability":"mutable","name":"role","nameLocation":"2343:4:1","nodeType":"VariableDeclaration","scope":399,"src":"2335:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":393,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2335:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":396,"mutability":"mutable","name":"account","nameLocation":"2357:7:1","nodeType":"VariableDeclaration","scope":399,"src":"2349:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"2349:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2334:31:1"},"returnParameters":{"id":398,"nodeType":"ParameterList","parameters":[],"src":"2374:0:1"},"scope":408,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":407,"nodeType":"FunctionDefinition","src":"2866:62:1","nodes":[],"documentation":{"id":400,"nodeType":"StructuredDocumentation","src":"2381:480:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"2875:12:1","parameters":{"id":405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":402,"mutability":"mutable","name":"role","nameLocation":"2896:4:1","nodeType":"VariableDeclaration","scope":407,"src":"2888:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":401,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2888:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":404,"mutability":"mutable","name":"account","nameLocation":"2910:7:1","nodeType":"VariableDeclaration","scope":407,"src":"2902:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":403,"name":"address","nodeType":"ElementaryTypeName","src":"2902:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2887:31:1"},"returnParameters":{"id":406,"nodeType":"ParameterList","parameters":[],"src":"2927:0:1"},"scope":408,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IAccessControlUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":338,"nodeType":"StructuredDocumentation","src":"119:89:1","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"linearizedBaseContracts":[408],"name":"IAccessControlUpgradeable","nameLocation":"219:25:1","scope":409,"usedErrors":[],"usedEvents":[347,356,365]}],"license":"MIT"}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"id":2,"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":578,"exportedSymbols":{"AddressUpgradeable":[907],"Initializable":[577]},"nodeType":"SourceUnit","src":"113:6528:2","nodes":[{"id":410,"nodeType":"PragmaDirective","src":"113:23:2","nodes":[],"literals":["solidity","^","0.8",".2"]},{"id":411,"nodeType":"ImportDirective","src":"138:44:2","nodes":[],"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","nameLocation":"-1:-1:-1","scope":578,"sourceUnit":908,"symbolAliases":[],"unitAlias":""},{"id":577,"nodeType":"ContractDefinition","src":"2394:4246:2","nodes":[{"id":415,"nodeType":"VariableDeclaration","src":"2546:26:2","nodes":[],"constant":false,"documentation":{"id":413,"nodeType":"StructuredDocumentation","src":"2432:109:2","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"mutability":"mutable","name":"_initialized","nameLocation":"2560:12:2","scope":577,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":414,"name":"uint8","nodeType":"ElementaryTypeName","src":"2546:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"id":418,"nodeType":"VariableDeclaration","src":"2675:26:2","nodes":[],"constant":false,"documentation":{"id":416,"nodeType":"StructuredDocumentation","src":"2579:91:2","text":" @dev Indicates that the contract is in the process of being initialized."},"mutability":"mutable","name":"_initializing","nameLocation":"2688:13:2","scope":577,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":417,"name":"bool","nodeType":"ElementaryTypeName","src":"2675:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"id":423,"nodeType":"EventDefinition","src":"2803:33:2","nodes":[],"anonymous":false,"documentation":{"id":419,"nodeType":"StructuredDocumentation","src":"2708:90:2","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","name":"Initialized","nameLocation":"2809:11:2","parameters":{"id":422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":421,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2827:7:2","nodeType":"VariableDeclaration","scope":423,"src":"2821:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":420,"name":"uint8","nodeType":"ElementaryTypeName","src":"2821:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2820:15:2"}},{"id":479,"nodeType":"ModifierDefinition","src":"3246:506:2","nodes":[],"body":{"id":478,"nodeType":"Block","src":"3269:483:2","nodes":[],"statements":[{"assignments":[427],"declarations":[{"constant":false,"id":427,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3284:14:2","nodeType":"VariableDeclaration","scope":478,"src":"3279:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":426,"name":"bool","nodeType":"ElementaryTypeName","src":"3279:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":430,"initialValue":{"id":429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3301:14:2","subExpression":{"id":428,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"3302:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3279:36:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":432,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"3347:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":433,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"3365:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3380:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3365:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3347:34:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":437,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3346:36:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3387:45:2","subExpression":{"arguments":[{"arguments":[{"id":442,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3426:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$577","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$577","typeString":"contract Initializable"}],"id":441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3418:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":440,"name":"address","nodeType":"ElementaryTypeName","src":"3418:7:2","typeDescriptions":{}}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3418:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":438,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"3388:18:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$907_$","typeString":"type(library AddressUpgradeable)"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3407:10:2","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":595,"src":"3388:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3388:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":446,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"3436:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3452:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3436:17:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3387:66:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":450,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3386:68:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3346:108:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3468:48:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":431,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3325:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3325:201:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":454,"nodeType":"ExpressionStatement","src":"3325:201:2"},{"expression":{"id":457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":455,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"3536:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3551:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3536:16:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":458,"nodeType":"ExpressionStatement","src":"3536:16:2"},{"condition":{"id":459,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"3566:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":465,"nodeType":"IfStatement","src":"3562:65:2","trueBody":{"id":464,"nodeType":"Block","src":"3582:45:2","statements":[{"expression":{"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":460,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"3596:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3612:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3596:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":463,"nodeType":"ExpressionStatement","src":"3596:20:2"}]}},{"id":466,"nodeType":"PlaceholderStatement","src":"3636:1:2"},{"condition":{"id":467,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"3651:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":477,"nodeType":"IfStatement","src":"3647:99:2","trueBody":{"id":476,"nodeType":"Block","src":"3667:79:2","statements":[{"expression":{"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":468,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"3681:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3697:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3681:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":471,"nodeType":"ExpressionStatement","src":"3681:21:2"},{"eventCall":{"arguments":[{"hexValue":"31","id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3733:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":472,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"3721:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3721:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":475,"nodeType":"EmitStatement","src":"3716:19:2"}]}}]},"documentation":{"id":424,"nodeType":"StructuredDocumentation","src":"2842:399:2","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"name":"initializer","nameLocation":"3255:11:2","parameters":{"id":425,"nodeType":"ParameterList","parameters":[],"src":"3266:2:2"},"virtual":false,"visibility":"internal"},{"id":512,"nodeType":"ModifierDefinition","src":"4825:293:2","nodes":[],"body":{"id":511,"nodeType":"Block","src":"4863:255:2","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4881:14:2","subExpression":{"id":485,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"4882:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":487,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"4899:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":488,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"4914:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4899:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4881:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4923:48:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":484,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4873:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:99:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":493,"nodeType":"ExpressionStatement","src":"4873:99:2"},{"expression":{"id":496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":494,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"4982:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":495,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"4997:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4982:22:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":497,"nodeType":"ExpressionStatement","src":"4982:22:2"},{"expression":{"id":500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":498,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"5014:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5030:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5014:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":501,"nodeType":"ExpressionStatement","src":"5014:20:2"},{"id":502,"nodeType":"PlaceholderStatement","src":"5044:1:2"},{"expression":{"id":505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":503,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"5055:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5071:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5055:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":506,"nodeType":"ExpressionStatement","src":"5055:21:2"},{"eventCall":{"arguments":[{"id":508,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"5103:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":507,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"5091:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":510,"nodeType":"EmitStatement","src":"5086:25:2"}]},"documentation":{"id":480,"nodeType":"StructuredDocumentation","src":"3758:1062:2","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"name":"reinitializer","nameLocation":"4834:13:2","parameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":482,"mutability":"mutable","name":"version","nameLocation":"4854:7:2","nodeType":"VariableDeclaration","scope":512,"src":"4848:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":481,"name":"uint8","nodeType":"ElementaryTypeName","src":"4848:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4847:15:2"},"virtual":false,"visibility":"internal"},{"id":522,"nodeType":"ModifierDefinition","src":"5328:125:2","nodes":[],"body":{"id":521,"nodeType":"Block","src":"5356:97:2","nodes":[],"statements":[{"expression":{"arguments":[{"id":516,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"5374:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5389:45:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":515,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5366:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5366:69:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":519,"nodeType":"ExpressionStatement","src":"5366:69:2"},{"id":520,"nodeType":"PlaceholderStatement","src":"5445:1:2"}]},"documentation":{"id":513,"nodeType":"StructuredDocumentation","src":"5124:199:2","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"name":"onlyInitializing","nameLocation":"5337:16:2","parameters":{"id":514,"nodeType":"ParameterList","parameters":[],"src":"5353:2:2"},"virtual":false,"visibility":"internal"},{"id":558,"nodeType":"FunctionDefinition","src":"5939:280:2","nodes":[],"body":{"id":557,"nodeType":"Block","src":"5988:231:2","nodes":[],"statements":[{"expression":{"arguments":[{"id":528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6006:14:2","subExpression":{"id":527,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"6007:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6022:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":526,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5998:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5998:66:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":531,"nodeType":"ExpressionStatement","src":"5998:66:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":532,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"6078:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6099:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":534,"name":"uint8","nodeType":"ElementaryTypeName","src":"6099:5:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":533,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6094:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6094:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6106:3:2","memberName":"max","nodeType":"MemberAccess","src":"6094:15:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6078:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":556,"nodeType":"IfStatement","src":"6074:139:2","trueBody":{"id":555,"nodeType":"Block","src":"6111:102:2","statements":[{"expression":{"id":545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":539,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"6125:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6145:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":541,"name":"uint8","nodeType":"ElementaryTypeName","src":"6145:5:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":540,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6140:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6152:3:2","memberName":"max","nodeType":"MemberAccess","src":"6140:15:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6125:30:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":546,"nodeType":"ExpressionStatement","src":"6125:30:2"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6191:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":549,"name":"uint8","nodeType":"ElementaryTypeName","src":"6191:5:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":548,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6186:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6198:3:2","memberName":"max","nodeType":"MemberAccess","src":"6186:15:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":547,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"6174:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":554,"nodeType":"EmitStatement","src":"6169:33:2"}]}}]},"documentation":{"id":523,"nodeType":"StructuredDocumentation","src":"5459:475:2","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5948:20:2","parameters":{"id":524,"nodeType":"ParameterList","parameters":[],"src":"5968:2:2"},"returnParameters":{"id":525,"nodeType":"ParameterList","parameters":[],"src":"5988:0:2"},"scope":577,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":567,"nodeType":"FunctionDefinition","src":"6329:100:2","nodes":[],"body":{"id":566,"nodeType":"Block","src":"6393:36:2","nodes":[],"statements":[{"expression":{"id":564,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"6410:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":563,"id":565,"nodeType":"Return","src":"6403:19:2"}]},"documentation":{"id":559,"nodeType":"StructuredDocumentation","src":"6225:99:2","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6338:22:2","parameters":{"id":560,"nodeType":"ParameterList","parameters":[],"src":"6360:2:2"},"returnParameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":567,"src":"6386:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":561,"name":"uint8","nodeType":"ElementaryTypeName","src":"6386:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6385:7:2"},"scope":577,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":576,"nodeType":"FunctionDefinition","src":"6545:93:2","nodes":[],"body":{"id":575,"nodeType":"Block","src":"6601:37:2","nodes":[],"statements":[{"expression":{"id":573,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"6618:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":572,"id":574,"nodeType":"Return","src":"6611:20:2"}]},"documentation":{"id":568,"nodeType":"StructuredDocumentation","src":"6435:105:2","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6554:15:2","parameters":{"id":569,"nodeType":"ParameterList","parameters":[],"src":"6569:2:2"},"returnParameters":{"id":572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":576,"src":"6595:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":570,"name":"bool","nodeType":"ElementaryTypeName","src":"6595:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6594:6:2"},"scope":577,"stateMutability":"view","virtual":false,"visibility":"internal"}],"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":412,"nodeType":"StructuredDocumentation","src":"184:2209:2","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"linearizedBaseContracts":[577],"name":"Initializable","nameLocation":"2412:13:2","scope":578,"usedErrors":[],"usedEvents":[423]}],"license":"MIT"}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"id":3,"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","id":908,"exportedSymbols":{"AddressUpgradeable":[907]},"nodeType":"SourceUnit","src":"101:9274:3","nodes":[{"id":579,"nodeType":"PragmaDirective","src":"101:23:3","nodes":[],"literals":["solidity","^","0.8",".1"]},{"id":907,"nodeType":"ContractDefinition","src":"194:9180:3","nodes":[{"id":595,"nodeType":"FunctionDefinition","src":"1423:320:3","nodes":[],"body":{"id":594,"nodeType":"Block","src":"1489:254:3","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":588,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"1713:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1721:4:3","memberName":"code","nodeType":"MemberAccess","src":"1713:12:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:6:3","memberName":"length","nodeType":"MemberAccess","src":"1713:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1735:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1713:23:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":587,"id":593,"nodeType":"Return","src":"1706:30:3"}]},"documentation":{"id":581,"nodeType":"StructuredDocumentation","src":"227:1191:3","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1432:10:3","parameters":{"id":584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":583,"mutability":"mutable","name":"account","nameLocation":"1451:7:3","nodeType":"VariableDeclaration","scope":595,"src":"1443:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":582,"name":"address","nodeType":"ElementaryTypeName","src":"1443:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1442:17:3"},"returnParameters":{"id":587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":586,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":595,"src":"1483:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":585,"name":"bool","nodeType":"ElementaryTypeName","src":"1483:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1482:6:3"},"scope":907,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":629,"nodeType":"FunctionDefinition","src":"2658:312:3","nodes":[],"body":{"id":628,"nodeType":"Block","src":"2729:241:3","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":606,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2755:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$907","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$907","typeString":"library AddressUpgradeable"}],"id":605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2747:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"2747:7:3","typeDescriptions":{}}},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2747:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:7:3","memberName":"balance","nodeType":"MemberAccess","src":"2747:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":609,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"2772:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2747:31:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2780:31:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":603,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2739:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:73:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":613,"nodeType":"ExpressionStatement","src":"2739:73:3"},{"assignments":[615,null],"declarations":[{"constant":false,"id":615,"mutability":"mutable","name":"success","nameLocation":"2829:7:3","nodeType":"VariableDeclaration","scope":628,"src":"2824:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":614,"name":"bool","nodeType":"ElementaryTypeName","src":"2824:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":622,"initialValue":{"arguments":[{"hexValue":"","id":620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2872:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":616,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"2842:9:3","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2852:4:3","memberName":"call","nodeType":"MemberAccess","src":"2842:14:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":618,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"2864:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2842:29:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2842:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2823:52:3"},{"expression":{"arguments":[{"id":624,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"2893:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2902:60:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":623,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2885:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2885:78:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":627,"nodeType":"ExpressionStatement","src":"2885:78:3"}]},"documentation":{"id":596,"nodeType":"StructuredDocumentation","src":"1749:904:3","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2667:9:3","parameters":{"id":601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"recipient","nameLocation":"2693:9:3","nodeType":"VariableDeclaration","scope":629,"src":"2677:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":597,"name":"address","nodeType":"ElementaryTypeName","src":"2677:15:3","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":600,"mutability":"mutable","name":"amount","nameLocation":"2712:6:3","nodeType":"VariableDeclaration","scope":629,"src":"2704:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":599,"name":"uint256","nodeType":"ElementaryTypeName","src":"2704:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:3"},"returnParameters":{"id":602,"nodeType":"ParameterList","parameters":[],"src":"2729:0:3"},"scope":907,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":647,"nodeType":"FunctionDefinition","src":"3712:185:3","nodes":[],"body":{"id":646,"nodeType":"Block","src":"3801:96:3","nodes":[],"statements":[{"expression":{"arguments":[{"id":640,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"3840:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":641,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"3848:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3854:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3857:32:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":639,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[687,731],"referencedDeclaration":731,"src":"3818:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3818:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":638,"id":645,"nodeType":"Return","src":"3811:79:3"}]},"documentation":{"id":630,"nodeType":"StructuredDocumentation","src":"2976:731:3","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3721:12:3","parameters":{"id":635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":632,"mutability":"mutable","name":"target","nameLocation":"3742:6:3","nodeType":"VariableDeclaration","scope":647,"src":"3734:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":631,"name":"address","nodeType":"ElementaryTypeName","src":"3734:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":634,"mutability":"mutable","name":"data","nameLocation":"3763:4:3","nodeType":"VariableDeclaration","scope":647,"src":"3750:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":633,"name":"bytes","nodeType":"ElementaryTypeName","src":"3750:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3733:35:3"},"returnParameters":{"id":638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":647,"src":"3787:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":636,"name":"bytes","nodeType":"ElementaryTypeName","src":"3787:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3786:14:3"},"scope":907,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":667,"nodeType":"FunctionDefinition","src":"4119:223:3","nodes":[],"body":{"id":666,"nodeType":"Block","src":"4266:76:3","nodes":[],"statements":[{"expression":{"arguments":[{"id":660,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"4305:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":661,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"4313:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4319:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":663,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"4322:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":659,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[687,731],"referencedDeclaration":731,"src":"4283:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4283:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":658,"id":665,"nodeType":"Return","src":"4276:59:3"}]},"documentation":{"id":648,"nodeType":"StructuredDocumentation","src":"3903:211:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4128:12:3","parameters":{"id":655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":650,"mutability":"mutable","name":"target","nameLocation":"4158:6:3","nodeType":"VariableDeclaration","scope":667,"src":"4150:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":649,"name":"address","nodeType":"ElementaryTypeName","src":"4150:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":652,"mutability":"mutable","name":"data","nameLocation":"4187:4:3","nodeType":"VariableDeclaration","scope":667,"src":"4174:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":651,"name":"bytes","nodeType":"ElementaryTypeName","src":"4174:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":654,"mutability":"mutable","name":"errorMessage","nameLocation":"4215:12:3","nodeType":"VariableDeclaration","scope":667,"src":"4201:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":653,"name":"string","nodeType":"ElementaryTypeName","src":"4201:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4140:93:3"},"returnParameters":{"id":658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":667,"src":"4252:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":656,"name":"bytes","nodeType":"ElementaryTypeName","src":"4252:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4251:14:3"},"scope":907,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":687,"nodeType":"FunctionDefinition","src":"4704:224:3","nodes":[],"body":{"id":686,"nodeType":"Block","src":"4817:111:3","nodes":[],"statements":[{"expression":{"arguments":[{"id":680,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"4856:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":681,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"4864:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"4870:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4877:43:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":679,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[687,731],"referencedDeclaration":731,"src":"4834:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4834:87:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":678,"id":685,"nodeType":"Return","src":"4827:94:3"}]},"documentation":{"id":668,"nodeType":"StructuredDocumentation","src":"4348:351:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4713:21:3","parameters":{"id":675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":670,"mutability":"mutable","name":"target","nameLocation":"4743:6:3","nodeType":"VariableDeclaration","scope":687,"src":"4735:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":669,"name":"address","nodeType":"ElementaryTypeName","src":"4735:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":672,"mutability":"mutable","name":"data","nameLocation":"4764:4:3","nodeType":"VariableDeclaration","scope":687,"src":"4751:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":671,"name":"bytes","nodeType":"ElementaryTypeName","src":"4751:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":674,"mutability":"mutable","name":"value","nameLocation":"4778:5:3","nodeType":"VariableDeclaration","scope":687,"src":"4770:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":673,"name":"uint256","nodeType":"ElementaryTypeName","src":"4770:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4734:50:3"},"returnParameters":{"id":678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":677,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":687,"src":"4803:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":676,"name":"bytes","nodeType":"ElementaryTypeName","src":"4803:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4802:14:3"},"scope":907,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":731,"nodeType":"FunctionDefinition","src":"5176:446:3","nodes":[],"body":{"id":730,"nodeType":"Block","src":"5355:267:3","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":704,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5381:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$907","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$907","typeString":"library AddressUpgradeable"}],"id":703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5373:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":702,"name":"address","nodeType":"ElementaryTypeName","src":"5373:7:3","typeDescriptions":{}}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5373:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5387:7:3","memberName":"balance","nodeType":"MemberAccess","src":"5373:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"5398:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5373:30:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5405:40:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":701,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5365:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5365:81:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":711,"nodeType":"ExpressionStatement","src":"5365:81:3"},{"assignments":[713,715],"declarations":[{"constant":false,"id":713,"mutability":"mutable","name":"success","nameLocation":"5462:7:3","nodeType":"VariableDeclaration","scope":730,"src":"5457:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":712,"name":"bool","nodeType":"ElementaryTypeName","src":"5457:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":715,"mutability":"mutable","name":"returndata","nameLocation":"5484:10:3","nodeType":"VariableDeclaration","scope":730,"src":"5471:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":714,"name":"bytes","nodeType":"ElementaryTypeName","src":"5471:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":722,"initialValue":{"arguments":[{"id":720,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"5524:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":716,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"5498:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5505:4:3","memberName":"call","nodeType":"MemberAccess","src":"5498:11:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"5517:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5498:25:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5456:73:3"},{"expression":{"arguments":[{"id":724,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"5573:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":725,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"5581:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":726,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"5590:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":727,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"5602:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":723,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"5546:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5546:69:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":700,"id":729,"nodeType":"Return","src":"5539:76:3"}]},"documentation":{"id":688,"nodeType":"StructuredDocumentation","src":"4934:237:3","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5185:21:3","parameters":{"id":697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":690,"mutability":"mutable","name":"target","nameLocation":"5224:6:3","nodeType":"VariableDeclaration","scope":731,"src":"5216:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":689,"name":"address","nodeType":"ElementaryTypeName","src":"5216:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":692,"mutability":"mutable","name":"data","nameLocation":"5253:4:3","nodeType":"VariableDeclaration","scope":731,"src":"5240:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":691,"name":"bytes","nodeType":"ElementaryTypeName","src":"5240:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":694,"mutability":"mutable","name":"value","nameLocation":"5275:5:3","nodeType":"VariableDeclaration","scope":731,"src":"5267:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":693,"name":"uint256","nodeType":"ElementaryTypeName","src":"5267:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":696,"mutability":"mutable","name":"errorMessage","nameLocation":"5304:12:3","nodeType":"VariableDeclaration","scope":731,"src":"5290:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":695,"name":"string","nodeType":"ElementaryTypeName","src":"5290:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5206:116:3"},"returnParameters":{"id":700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":731,"src":"5341:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":698,"name":"bytes","nodeType":"ElementaryTypeName","src":"5341:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5340:14:3"},"scope":907,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":748,"nodeType":"FunctionDefinition","src":"5799:197:3","nodes":[],"body":{"id":747,"nodeType":"Block","src":"5899:97:3","nodes":[],"statements":[{"expression":{"arguments":[{"id":742,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"5935:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":743,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"5943:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5949:39:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":741,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[748,777],"referencedDeclaration":777,"src":"5916:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5916:73:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":740,"id":746,"nodeType":"Return","src":"5909:80:3"}]},"documentation":{"id":732,"nodeType":"StructuredDocumentation","src":"5628:166:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5808:18:3","parameters":{"id":737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":734,"mutability":"mutable","name":"target","nameLocation":"5835:6:3","nodeType":"VariableDeclaration","scope":748,"src":"5827:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":733,"name":"address","nodeType":"ElementaryTypeName","src":"5827:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":736,"mutability":"mutable","name":"data","nameLocation":"5856:4:3","nodeType":"VariableDeclaration","scope":748,"src":"5843:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":735,"name":"bytes","nodeType":"ElementaryTypeName","src":"5843:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5826:35:3"},"returnParameters":{"id":740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":748,"src":"5885:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":738,"name":"bytes","nodeType":"ElementaryTypeName","src":"5885:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5884:14:3"},"scope":907,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":777,"nodeType":"FunctionDefinition","src":"6180:326:3","nodes":[],"body":{"id":776,"nodeType":"Block","src":"6338:168:3","nodes":[],"statements":[{"assignments":[761,763],"declarations":[{"constant":false,"id":761,"mutability":"mutable","name":"success","nameLocation":"6354:7:3","nodeType":"VariableDeclaration","scope":776,"src":"6349:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":760,"name":"bool","nodeType":"ElementaryTypeName","src":"6349:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":763,"mutability":"mutable","name":"returndata","nameLocation":"6376:10:3","nodeType":"VariableDeclaration","scope":776,"src":"6363:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":762,"name":"bytes","nodeType":"ElementaryTypeName","src":"6363:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":768,"initialValue":{"arguments":[{"id":766,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"6408:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":764,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":751,"src":"6390:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6397:10:3","memberName":"staticcall","nodeType":"MemberAccess","src":"6390:17:3","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6348:65:3"},{"expression":{"arguments":[{"id":770,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":751,"src":"6457:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":771,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"6465:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":772,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"6474:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":773,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"6486:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":769,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"6430:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6430:69:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":759,"id":775,"nodeType":"Return","src":"6423:76:3"}]},"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"6002:173:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6189:18:3","parameters":{"id":756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"mutability":"mutable","name":"target","nameLocation":"6225:6:3","nodeType":"VariableDeclaration","scope":777,"src":"6217:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":750,"name":"address","nodeType":"ElementaryTypeName","src":"6217:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":753,"mutability":"mutable","name":"data","nameLocation":"6254:4:3","nodeType":"VariableDeclaration","scope":777,"src":"6241:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":752,"name":"bytes","nodeType":"ElementaryTypeName","src":"6241:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":755,"mutability":"mutable","name":"errorMessage","nameLocation":"6282:12:3","nodeType":"VariableDeclaration","scope":777,"src":"6268:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":754,"name":"string","nodeType":"ElementaryTypeName","src":"6268:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6207:93:3"},"returnParameters":{"id":759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":777,"src":"6324:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":757,"name":"bytes","nodeType":"ElementaryTypeName","src":"6324:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6323:14:3"},"scope":907,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":794,"nodeType":"FunctionDefinition","src":"6685:198:3","nodes":[],"body":{"id":793,"nodeType":"Block","src":"6782:101:3","nodes":[],"statements":[{"expression":{"arguments":[{"id":788,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"6820:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":789,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"6828:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6834:41:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":787,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[794,823],"referencedDeclaration":823,"src":"6799:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6799:77:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":786,"id":792,"nodeType":"Return","src":"6792:84:3"}]},"documentation":{"id":778,"nodeType":"StructuredDocumentation","src":"6512:168:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6694:20:3","parameters":{"id":783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":780,"mutability":"mutable","name":"target","nameLocation":"6723:6:3","nodeType":"VariableDeclaration","scope":794,"src":"6715:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"6715:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":782,"mutability":"mutable","name":"data","nameLocation":"6744:4:3","nodeType":"VariableDeclaration","scope":794,"src":"6731:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":781,"name":"bytes","nodeType":"ElementaryTypeName","src":"6731:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6714:35:3"},"returnParameters":{"id":786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":794,"src":"6768:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":784,"name":"bytes","nodeType":"ElementaryTypeName","src":"6768:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6767:14:3"},"scope":907,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":823,"nodeType":"FunctionDefinition","src":"7069:325:3","nodes":[],"body":{"id":822,"nodeType":"Block","src":"7224:170:3","nodes":[],"statements":[{"assignments":[807,809],"declarations":[{"constant":false,"id":807,"mutability":"mutable","name":"success","nameLocation":"7240:7:3","nodeType":"VariableDeclaration","scope":822,"src":"7235:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":806,"name":"bool","nodeType":"ElementaryTypeName","src":"7235:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":809,"mutability":"mutable","name":"returndata","nameLocation":"7262:10:3","nodeType":"VariableDeclaration","scope":822,"src":"7249:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":808,"name":"bytes","nodeType":"ElementaryTypeName","src":"7249:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":814,"initialValue":{"arguments":[{"id":812,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"7296:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":810,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"7276:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7283:12:3","memberName":"delegatecall","nodeType":"MemberAccess","src":"7276:19:3","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7276:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7234:67:3"},{"expression":{"arguments":[{"id":816,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"7345:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":817,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"7353:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":818,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"7362:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":819,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"7374:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":815,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"7318:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7318:69:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":805,"id":821,"nodeType":"Return","src":"7311:76:3"}]},"documentation":{"id":795,"nodeType":"StructuredDocumentation","src":"6889:175:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7078:20:3","parameters":{"id":802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":797,"mutability":"mutable","name":"target","nameLocation":"7116:6:3","nodeType":"VariableDeclaration","scope":823,"src":"7108:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":796,"name":"address","nodeType":"ElementaryTypeName","src":"7108:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":799,"mutability":"mutable","name":"data","nameLocation":"7145:4:3","nodeType":"VariableDeclaration","scope":823,"src":"7132:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":798,"name":"bytes","nodeType":"ElementaryTypeName","src":"7132:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":801,"mutability":"mutable","name":"errorMessage","nameLocation":"7173:12:3","nodeType":"VariableDeclaration","scope":823,"src":"7159:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":800,"name":"string","nodeType":"ElementaryTypeName","src":"7159:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7098:93:3"},"returnParameters":{"id":805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":804,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":823,"src":"7210:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":803,"name":"bytes","nodeType":"ElementaryTypeName","src":"7210:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7209:14:3"},"scope":907,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":862,"nodeType":"FunctionDefinition","src":"7682:628:3","nodes":[],"body":{"id":861,"nodeType":"Block","src":"7876:434:3","nodes":[],"statements":[{"condition":{"id":837,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"7890:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":859,"nodeType":"Block","src":"8246:58:3","statements":[{"expression":{"arguments":[{"id":855,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"8268:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":856,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"8280:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":854,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"8260:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8260:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":858,"nodeType":"ExpressionStatement","src":"8260:33:3"}]},"id":860,"nodeType":"IfStatement","src":"7886:418:3","trueBody":{"id":853,"nodeType":"Block","src":"7899:341:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":838,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"7917:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7928:6:3","memberName":"length","nodeType":"MemberAccess","src":"7917:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7938:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7917:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":850,"nodeType":"IfStatement","src":"7913:286:3","trueBody":{"id":849,"nodeType":"Block","src":"7941:258:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":844,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"8143:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":843,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"8132:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8152:31:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":842,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8124:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8124:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":848,"nodeType":"ExpressionStatement","src":"8124:60:3"}]}},{"expression":{"id":851,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"8219:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":836,"id":852,"nodeType":"Return","src":"8212:17:3"}]}}]},"documentation":{"id":824,"nodeType":"StructuredDocumentation","src":"7400:277:3","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7691:26:3","parameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":826,"mutability":"mutable","name":"target","nameLocation":"7735:6:3","nodeType":"VariableDeclaration","scope":862,"src":"7727:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":825,"name":"address","nodeType":"ElementaryTypeName","src":"7727:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":828,"mutability":"mutable","name":"success","nameLocation":"7756:7:3","nodeType":"VariableDeclaration","scope":862,"src":"7751:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":827,"name":"bool","nodeType":"ElementaryTypeName","src":"7751:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":830,"mutability":"mutable","name":"returndata","nameLocation":"7786:10:3","nodeType":"VariableDeclaration","scope":862,"src":"7773:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":829,"name":"bytes","nodeType":"ElementaryTypeName","src":"7773:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":832,"mutability":"mutable","name":"errorMessage","nameLocation":"7820:12:3","nodeType":"VariableDeclaration","scope":862,"src":"7806:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":831,"name":"string","nodeType":"ElementaryTypeName","src":"7806:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7717:121:3"},"returnParameters":{"id":836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":862,"src":"7862:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":834,"name":"bytes","nodeType":"ElementaryTypeName","src":"7862:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7861:14:3"},"scope":907,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":886,"nodeType":"FunctionDefinition","src":"8531:295:3","nodes":[],"body":{"id":885,"nodeType":"Block","src":"8691:135:3","nodes":[],"statements":[{"condition":{"id":874,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"8705:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":883,"nodeType":"Block","src":"8762:58:3","statements":[{"expression":{"arguments":[{"id":879,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"8784:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":880,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"8796:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":878,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"8776:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8776:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":882,"nodeType":"ExpressionStatement","src":"8776:33:3"}]},"id":884,"nodeType":"IfStatement","src":"8701:119:3","trueBody":{"id":877,"nodeType":"Block","src":"8714:42:3","statements":[{"expression":{"id":875,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"8735:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":873,"id":876,"nodeType":"Return","src":"8728:17:3"}]}}]},"documentation":{"id":863,"nodeType":"StructuredDocumentation","src":"8316:210:3","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8540:16:3","parameters":{"id":870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":865,"mutability":"mutable","name":"success","nameLocation":"8571:7:3","nodeType":"VariableDeclaration","scope":886,"src":"8566:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":864,"name":"bool","nodeType":"ElementaryTypeName","src":"8566:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":867,"mutability":"mutable","name":"returndata","nameLocation":"8601:10:3","nodeType":"VariableDeclaration","scope":886,"src":"8588:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":866,"name":"bytes","nodeType":"ElementaryTypeName","src":"8588:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":869,"mutability":"mutable","name":"errorMessage","nameLocation":"8635:12:3","nodeType":"VariableDeclaration","scope":886,"src":"8621:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":868,"name":"string","nodeType":"ElementaryTypeName","src":"8621:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8556:97:3"},"returnParameters":{"id":873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":886,"src":"8677:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":871,"name":"bytes","nodeType":"ElementaryTypeName","src":"8677:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8676:14:3"},"scope":907,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":906,"nodeType":"FunctionDefinition","src":"8832:540:3","nodes":[],"body":{"id":905,"nodeType":"Block","src":"8915:457:3","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":893,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"8991:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9002:6:3","memberName":"length","nodeType":"MemberAccess","src":"8991:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9011:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8991:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":903,"nodeType":"Block","src":"9321:45:3","statements":[{"expression":{"arguments":[{"id":900,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"9342:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":899,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9335:6:3","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9335:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":902,"nodeType":"ExpressionStatement","src":"9335:20:3"}]},"id":904,"nodeType":"IfStatement","src":"8987:379:3","trueBody":{"id":898,"nodeType":"Block","src":"9014:301:3","statements":[{"AST":{"nativeSrc":"9172:133:3","nodeType":"YulBlock","src":"9172:133:3","statements":[{"nativeSrc":"9190:40:3","nodeType":"YulVariableDeclaration","src":"9190:40:3","value":{"arguments":[{"name":"returndata","nativeSrc":"9219:10:3","nodeType":"YulIdentifier","src":"9219:10:3"}],"functionName":{"name":"mload","nativeSrc":"9213:5:3","nodeType":"YulIdentifier","src":"9213:5:3"},"nativeSrc":"9213:17:3","nodeType":"YulFunctionCall","src":"9213:17:3"},"variables":[{"name":"returndata_size","nativeSrc":"9194:15:3","nodeType":"YulTypedName","src":"9194:15:3","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9258:2:3","nodeType":"YulLiteral","src":"9258:2:3","type":"","value":"32"},{"name":"returndata","nativeSrc":"9262:10:3","nodeType":"YulIdentifier","src":"9262:10:3"}],"functionName":{"name":"add","nativeSrc":"9254:3:3","nodeType":"YulIdentifier","src":"9254:3:3"},"nativeSrc":"9254:19:3","nodeType":"YulFunctionCall","src":"9254:19:3"},{"name":"returndata_size","nativeSrc":"9275:15:3","nodeType":"YulIdentifier","src":"9275:15:3"}],"functionName":{"name":"revert","nativeSrc":"9247:6:3","nodeType":"YulIdentifier","src":"9247:6:3"},"nativeSrc":"9247:44:3","nodeType":"YulFunctionCall","src":"9247:44:3"},"nativeSrc":"9247:44:3","nodeType":"YulExpressionStatement","src":"9247:44:3"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"berlin","externalReferences":[{"declaration":888,"isOffset":false,"isSlot":false,"src":"9219:10:3","valueSize":1},{"declaration":888,"isOffset":false,"isSlot":false,"src":"9262:10:3","valueSize":1}],"id":897,"nodeType":"InlineAssembly","src":"9163:142:3"}]}}]},"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8841:7:3","parameters":{"id":891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":888,"mutability":"mutable","name":"returndata","nameLocation":"8862:10:3","nodeType":"VariableDeclaration","scope":906,"src":"8849:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":887,"name":"bytes","nodeType":"ElementaryTypeName","src":"8849:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":890,"mutability":"mutable","name":"errorMessage","nameLocation":"8888:12:3","nodeType":"VariableDeclaration","scope":906,"src":"8874:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":889,"name":"string","nodeType":"ElementaryTypeName","src":"8874:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8848:53:3"},"returnParameters":{"id":892,"nodeType":"ParameterList","parameters":[],"src":"8915:0:3"},"scope":907,"stateMutability":"pure","virtual":false,"visibility":"private"}],"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":580,"nodeType":"StructuredDocumentation","src":"126:67:3","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"linearizedBaseContracts":[907],"name":"AddressUpgradeable","nameLocation":"202:18:3","scope":908,"usedErrors":[],"usedEvents":[]}],"license":"MIT"}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"id":4,"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","id":950,"exportedSymbols":{"AddressUpgradeable":[907],"ContextUpgradeable":[949],"Initializable":[577]},"nodeType":"SourceUnit","src":"86:1259:4","nodes":[{"id":909,"nodeType":"PragmaDirective","src":"86:23:4","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":910,"nodeType":"ImportDirective","src":"110:42:4","nodes":[],"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","nameLocation":"-1:-1:-1","scope":950,"sourceUnit":578,"symbolAliases":[],"unitAlias":""},{"id":949,"nodeType":"ContractDefinition","src":"651:693:4","nodes":[{"id":919,"nodeType":"FunctionDefinition","src":"711:59:4","nodes":[],"body":{"id":918,"nodeType":"Block","src":"763:7:4","nodes":[],"statements":[]},"implemented":true,"kind":"function","modifiers":[{"id":916,"kind":"modifierInvocation","modifierName":{"id":915,"name":"onlyInitializing","nameLocations":["746:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":522,"src":"746:16:4"},"nodeType":"ModifierInvocation","src":"746:16:4"}],"name":"__Context_init","nameLocation":"720:14:4","parameters":{"id":914,"nodeType":"ParameterList","parameters":[],"src":"734:2:4"},"returnParameters":{"id":917,"nodeType":"ParameterList","parameters":[],"src":"763:0:4"},"scope":949,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":925,"nodeType":"FunctionDefinition","src":"776:69:4","nodes":[],"body":{"id":924,"nodeType":"Block","src":"838:7:4","nodes":[],"statements":[]},"implemented":true,"kind":"function","modifiers":[{"id":922,"kind":"modifierInvocation","modifierName":{"id":921,"name":"onlyInitializing","nameLocations":["821:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":522,"src":"821:16:4"},"nodeType":"ModifierInvocation","src":"821:16:4"}],"name":"__Context_init_unchained","nameLocation":"785:24:4","parameters":{"id":920,"nodeType":"ParameterList","parameters":[],"src":"809:2:4"},"returnParameters":{"id":923,"nodeType":"ParameterList","parameters":[],"src":"838:0:4"},"scope":949,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":934,"nodeType":"FunctionDefinition","src":"850:96:4","nodes":[],"body":{"id":933,"nodeType":"Block","src":"912:34:4","nodes":[],"statements":[{"expression":{"expression":{"id":930,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"929:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"933:6:4","memberName":"sender","nodeType":"MemberAccess","src":"929:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":929,"id":932,"nodeType":"Return","src":"922:17:4"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"859:10:4","parameters":{"id":926,"nodeType":"ParameterList","parameters":[],"src":"869:2:4"},"returnParameters":{"id":929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":934,"src":"903:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":927,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"902:9:4"},"scope":949,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":943,"nodeType":"FunctionDefinition","src":"952:99:4","nodes":[],"body":{"id":942,"nodeType":"Block","src":"1019:32:4","nodes":[],"statements":[{"expression":{"expression":{"id":939,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1036:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1040:4:4","memberName":"data","nodeType":"MemberAccess","src":"1036:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":938,"id":941,"nodeType":"Return","src":"1029:15:4"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"961:8:4","parameters":{"id":935,"nodeType":"ParameterList","parameters":[],"src":"969:2:4"},"returnParameters":{"id":938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":943,"src":"1003:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":936,"name":"bytes","nodeType":"ElementaryTypeName","src":"1003:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1002:16:4"},"scope":949,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":948,"nodeType":"VariableDeclaration","src":"1316:25:4","nodes":[],"constant":false,"documentation":{"id":944,"nodeType":"StructuredDocumentation","src":"1057:254:4","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"mutability":"mutable","name":"__gap","nameLocation":"1336:5:4","scope":949,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":945,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":947,"length":{"hexValue":"3530","id":946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1324:2:4","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1316:11:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"abstract":true,"baseContracts":[{"baseName":{"id":912,"name":"Initializable","nameLocations":["691:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":577,"src":"691:13:4"},"id":913,"nodeType":"InheritanceSpecifier","src":"691:13:4"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":911,"nodeType":"StructuredDocumentation","src":"154:496:4","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"linearizedBaseContracts":[949,577],"name":"ContextUpgradeable","nameLocation":"669:18:4","scope":950,"usedErrors":[],"usedEvents":[423]}],"license":"MIT"}},"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":{"id":5,"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol","id":1179,"exportedSymbols":{"MathUpgradeable":[2100],"SignedMathUpgradeable":[2205],"StringsUpgradeable":[1178]},"nodeType":"SourceUnit","src":"101:2745:5","nodes":[{"id":951,"nodeType":"PragmaDirective","src":"101:23:5","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":952,"nodeType":"ImportDirective","src":"126:36:5","nodes":[],"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol","file":"./math/MathUpgradeable.sol","nameLocation":"-1:-1:-1","scope":1179,"sourceUnit":2101,"symbolAliases":[],"unitAlias":""},{"id":953,"nodeType":"ImportDirective","src":"163:42:5","nodes":[],"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol","file":"./math/SignedMathUpgradeable.sol","nameLocation":"-1:-1:-1","scope":1179,"sourceUnit":2206,"symbolAliases":[],"unitAlias":""},{"id":1178,"nodeType":"ContractDefinition","src":"242:2603:5","nodes":[{"id":957,"nodeType":"VariableDeclaration","src":"275:54:5","nodes":[],"constant":true,"mutability":"constant","name":"_SYMBOLS","nameLocation":"300:8:5","scope":1178,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":955,"name":"bytes16","nodeType":"ElementaryTypeName","src":"275:7:5","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"id":960,"nodeType":"VariableDeclaration","src":"335:43:5","nodes":[],"constant":true,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"358:15:5","scope":1178,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":958,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"376:2:5","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"id":1008,"nodeType":"FunctionDefinition","src":"480:707:5","nodes":[],"body":{"id":1007,"nodeType":"Block","src":"551:636:5","nodes":[],"statements":[{"id":1006,"nodeType":"UncheckedBlock","src":"561:620:5","statements":[{"assignments":[969],"declarations":[{"constant":false,"id":969,"mutability":"mutable","name":"length","nameLocation":"593:6:5","nodeType":"VariableDeclaration","scope":1006,"src":"585:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":968,"name":"uint256","nodeType":"ElementaryTypeName","src":"585:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":976,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"624:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":970,"name":"MathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"602:15:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MathUpgradeable_$2100_$","typeString":"type(library MathUpgradeable)"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"618:5:5","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":1937,"src":"602:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"602:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"633:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"602:32:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"585:49:5"},{"assignments":[978],"declarations":[{"constant":false,"id":978,"mutability":"mutable","name":"buffer","nameLocation":"662:6:5","nodeType":"VariableDeclaration","scope":1006,"src":"648:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":977,"name":"string","nodeType":"ElementaryTypeName","src":"648:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":983,"initialValue":{"arguments":[{"id":981,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"682:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"671:10:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":979,"name":"string","nodeType":"ElementaryTypeName","src":"675:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"671:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"648:41:5"},{"assignments":[985],"declarations":[{"constant":false,"id":985,"mutability":"mutable","name":"ptr","nameLocation":"711:3:5","nodeType":"VariableDeclaration","scope":1006,"src":"703:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":984,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":986,"nodeType":"VariableDeclarationStatement","src":"703:11:5"},{"AST":{"nativeSrc":"784:67:5","nodeType":"YulBlock","src":"784:67:5","statements":[{"nativeSrc":"802:35:5","nodeType":"YulAssignment","src":"802:35:5","value":{"arguments":[{"name":"buffer","nativeSrc":"813:6:5","nodeType":"YulIdentifier","src":"813:6:5"},{"arguments":[{"kind":"number","nativeSrc":"825:2:5","nodeType":"YulLiteral","src":"825:2:5","type":"","value":"32"},{"name":"length","nativeSrc":"829:6:5","nodeType":"YulIdentifier","src":"829:6:5"}],"functionName":{"name":"add","nativeSrc":"821:3:5","nodeType":"YulIdentifier","src":"821:3:5"},"nativeSrc":"821:15:5","nodeType":"YulFunctionCall","src":"821:15:5"}],"functionName":{"name":"add","nativeSrc":"809:3:5","nodeType":"YulIdentifier","src":"809:3:5"},"nativeSrc":"809:28:5","nodeType":"YulFunctionCall","src":"809:28:5"},"variableNames":[{"name":"ptr","nativeSrc":"802:3:5","nodeType":"YulIdentifier","src":"802:3:5"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"berlin","externalReferences":[{"declaration":978,"isOffset":false,"isSlot":false,"src":"813:6:5","valueSize":1},{"declaration":969,"isOffset":false,"isSlot":false,"src":"829:6:5","valueSize":1},{"declaration":985,"isOffset":false,"isSlot":false,"src":"802:3:5","valueSize":1}],"id":987,"nodeType":"InlineAssembly","src":"775:76:5"},{"body":{"id":1002,"nodeType":"Block","src":"877:267:5","statements":[{"expression":{"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"895:5:5","subExpression":{"id":989,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"895:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":991,"nodeType":"ExpressionStatement","src":"895:5:5"},{"AST":{"nativeSrc":"978:84:5","nodeType":"YulBlock","src":"978:84:5","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1008:3:5","nodeType":"YulIdentifier","src":"1008:3:5"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1022:5:5","nodeType":"YulIdentifier","src":"1022:5:5"},{"kind":"number","nativeSrc":"1029:2:5","nodeType":"YulLiteral","src":"1029:2:5","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1018:3:5","nodeType":"YulIdentifier","src":"1018:3:5"},"nativeSrc":"1018:14:5","nodeType":"YulFunctionCall","src":"1018:14:5"},{"name":"_SYMBOLS","nativeSrc":"1034:8:5","nodeType":"YulIdentifier","src":"1034:8:5"}],"functionName":{"name":"byte","nativeSrc":"1013:4:5","nodeType":"YulIdentifier","src":"1013:4:5"},"nativeSrc":"1013:30:5","nodeType":"YulFunctionCall","src":"1013:30:5"}],"functionName":{"name":"mstore8","nativeSrc":"1000:7:5","nodeType":"YulIdentifier","src":"1000:7:5"},"nativeSrc":"1000:44:5","nodeType":"YulFunctionCall","src":"1000:44:5"},"nativeSrc":"1000:44:5","nodeType":"YulExpressionStatement","src":"1000:44:5"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"berlin","externalReferences":[{"declaration":957,"isOffset":false,"isSlot":false,"src":"1034:8:5","valueSize":1},{"declaration":985,"isOffset":false,"isSlot":false,"src":"1008:3:5","valueSize":1},{"declaration":963,"isOffset":false,"isSlot":false,"src":"1022:5:5","valueSize":1}],"id":992,"nodeType":"InlineAssembly","src":"969:93:5"},{"expression":{"id":995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"1079:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1079:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":996,"nodeType":"ExpressionStatement","src":"1079:11:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":997,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"1112:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1121:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1112:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1001,"nodeType":"IfStatement","src":"1108:21:5","trueBody":{"id":1000,"nodeType":"Break","src":"1124:5:5"}}]},"condition":{"hexValue":"74727565","id":988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"871:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1003,"nodeType":"WhileStatement","src":"864:280:5"},{"expression":{"id":1004,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"1164:6:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":967,"id":1005,"nodeType":"Return","src":"1157:13:5"}]}]},"documentation":{"id":961,"nodeType":"StructuredDocumentation","src":"385:90:5","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"489:8:5","parameters":{"id":964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":963,"mutability":"mutable","name":"value","nameLocation":"506:5:5","nodeType":"VariableDeclaration","scope":1008,"src":"498:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":962,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"497:15:5"},"returnParameters":{"id":967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1008,"src":"536:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":965,"name":"string","nodeType":"ElementaryTypeName","src":"536:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"535:15:5"},"scope":1178,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1036,"nodeType":"FunctionDefinition","src":"1287:184:5","nodes":[],"body":{"id":1035,"nodeType":"Block","src":"1357:114:5","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"1398:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1406:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1398:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1416:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1398:20:5","trueExpression":{"hexValue":"2d","id":1023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1410:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"1455:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1027,"name":"SignedMathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"1429:21:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMathUpgradeable_$2205_$","typeString":"type(library SignedMathUpgradeable)"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1451:3:5","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":2204,"src":"1429:25:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1429:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1026,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[1008,1036],"referencedDeclaration":1008,"src":"1420:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1420:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1018,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1381:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1385:12:5","memberName":"encodePacked","nodeType":"MemberAccess","src":"1381:16:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1381:82:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1374:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1016,"name":"string","nodeType":"ElementaryTypeName","src":"1374:6:5","typeDescriptions":{}}},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1374:90:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1015,"id":1034,"nodeType":"Return","src":"1367:97:5"}]},"documentation":{"id":1009,"nodeType":"StructuredDocumentation","src":"1193:89:5","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1296:8:5","parameters":{"id":1012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1011,"mutability":"mutable","name":"value","nameLocation":"1312:5:5","nodeType":"VariableDeclaration","scope":1036,"src":"1305:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1010,"name":"int256","nodeType":"ElementaryTypeName","src":"1305:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1304:14:5"},"returnParameters":{"id":1015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1036,"src":"1342:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1013,"name":"string","nodeType":"ElementaryTypeName","src":"1342:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1341:15:5"},"scope":1178,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1056,"nodeType":"FunctionDefinition","src":"1576:185:5","nodes":[],"body":{"id":1055,"nodeType":"Block","src":"1650:111:5","nodes":[],"statements":[{"id":1054,"nodeType":"UncheckedBlock","src":"1660:95:5","statements":[{"expression":{"arguments":[{"id":1045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"1703:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"1733:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1046,"name":"MathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"1710:15:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MathUpgradeable_$2100_$","typeString":"type(library MathUpgradeable)"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:6:5","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":2060,"src":"1710:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1710:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1742:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1710:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1044,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1056,1132,1152],"referencedDeclaration":1132,"src":"1691:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1691:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1043,"id":1053,"nodeType":"Return","src":"1684:60:5"}]}]},"documentation":{"id":1037,"nodeType":"StructuredDocumentation","src":"1477:94:5","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1585:11:5","parameters":{"id":1040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1039,"mutability":"mutable","name":"value","nameLocation":"1605:5:5","nodeType":"VariableDeclaration","scope":1056,"src":"1597:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1038,"name":"uint256","nodeType":"ElementaryTypeName","src":"1597:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1596:15:5"},"returnParameters":{"id":1043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1056,"src":"1635:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1041,"name":"string","nodeType":"ElementaryTypeName","src":"1635:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1634:15:5"},"scope":1178,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1132,"nodeType":"FunctionDefinition","src":"1884:437:5","nodes":[],"body":{"id":1131,"nodeType":"Block","src":"1974:347:5","nodes":[],"statements":[{"assignments":[1067],"declarations":[{"constant":false,"id":1067,"mutability":"mutable","name":"buffer","nameLocation":"1997:6:5","nodeType":"VariableDeclaration","scope":1131,"src":"1984:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1066,"name":"bytes","nodeType":"ElementaryTypeName","src":"1984:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1076,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2016:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1071,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"2020:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2016:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2029:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2016:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2006:9:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1068,"name":"bytes","nodeType":"ElementaryTypeName","src":"2010:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2006:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1984:47:5"},{"expression":{"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1077,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"2041:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1079,"indexExpression":{"hexValue":"30","id":1078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2041:9:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2053:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2041:15:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1082,"nodeType":"ExpressionStatement","src":"2041:15:5"},{"expression":{"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1083,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"2066:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1085,"indexExpression":{"hexValue":"31","id":1084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2073:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2066:9:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2078:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2066:15:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1088,"nodeType":"ExpressionStatement","src":"2066:15:5"},{"body":{"id":1117,"nodeType":"Block","src":"2136:83:5","statements":[{"expression":{"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1103,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"2150:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1105,"indexExpression":{"id":1104,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"2157:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2150:9:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1106,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"2162:8:5","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1110,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"2171:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:3:5","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2171:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2162:21:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2150:33:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1112,"nodeType":"ExpressionStatement","src":"2150:33:5"},{"expression":{"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"2197:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2207:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2197:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1116,"nodeType":"ExpressionStatement","src":"2197:11:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1097,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"2124:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2128:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2124:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1118,"initializationExpression":{"assignments":[1090],"declarations":[{"constant":false,"id":1090,"mutability":"mutable","name":"i","nameLocation":"2104:1:5","nodeType":"VariableDeclaration","scope":1118,"src":"2096:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1089,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1096,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2108:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1092,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"2112:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2108:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2121:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2108:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2096:26:5"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2131:3:5","subExpression":{"id":1100,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"2133:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1102,"nodeType":"ExpressionStatement","src":"2131:3:5"},"nodeType":"ForStatement","src":"2091:128:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"2236:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2245:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":1123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2248:34:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":1119,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2228:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2228:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1125,"nodeType":"ExpressionStatement","src":"2228:55:5"},{"expression":{"arguments":[{"id":1128,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"2307:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2300:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1126,"name":"string","nodeType":"ElementaryTypeName","src":"2300:6:5","typeDescriptions":{}}},"id":1129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1065,"id":1130,"nodeType":"Return","src":"2293:21:5"}]},"documentation":{"id":1057,"nodeType":"StructuredDocumentation","src":"1767:112:5","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1893:11:5","parameters":{"id":1062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1059,"mutability":"mutable","name":"value","nameLocation":"1913:5:5","nodeType":"VariableDeclaration","scope":1132,"src":"1905:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1058,"name":"uint256","nodeType":"ElementaryTypeName","src":"1905:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1061,"mutability":"mutable","name":"length","nameLocation":"1928:6:5","nodeType":"VariableDeclaration","scope":1132,"src":"1920:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1060,"name":"uint256","nodeType":"ElementaryTypeName","src":"1920:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1904:31:5"},"returnParameters":{"id":1065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1064,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1132,"src":"1959:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1063,"name":"string","nodeType":"ElementaryTypeName","src":"1959:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1958:15:5"},"scope":1178,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1152,"nodeType":"FunctionDefinition","src":"2473:149:5","nodes":[],"body":{"id":1151,"nodeType":"Block","src":"2546:76:5","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1145,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"2591:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2583:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1143,"name":"uint160","nodeType":"ElementaryTypeName","src":"2583:7:5","typeDescriptions":{}}},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2583:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2575:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1141,"name":"uint256","nodeType":"ElementaryTypeName","src":"2575:7:5","typeDescriptions":{}}},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2575:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1148,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"2599:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1140,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1056,1132,1152],"referencedDeclaration":1132,"src":"2563:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2563:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1139,"id":1150,"nodeType":"Return","src":"2556:59:5"}]},"documentation":{"id":1133,"nodeType":"StructuredDocumentation","src":"2327:141:5","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2482:11:5","parameters":{"id":1136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1135,"mutability":"mutable","name":"addr","nameLocation":"2502:4:5","nodeType":"VariableDeclaration","scope":1152,"src":"2494:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1134,"name":"address","nodeType":"ElementaryTypeName","src":"2494:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2493:14:5"},"returnParameters":{"id":1139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1152,"src":"2531:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1137,"name":"string","nodeType":"ElementaryTypeName","src":"2531:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2530:15:5"},"scope":1178,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1177,"nodeType":"FunctionDefinition","src":"2699:144:5","nodes":[],"body":{"id":1176,"nodeType":"Block","src":"2777:66:5","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1165,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"2810:1:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2804:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1163,"name":"bytes","nodeType":"ElementaryTypeName","src":"2804:5:5","typeDescriptions":{}}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2804:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1162,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2794:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2794:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1171,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"2833:1:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2827:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1169,"name":"bytes","nodeType":"ElementaryTypeName","src":"2827:5:5","typeDescriptions":{}}},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2827:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1168,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2817:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2817:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2794:42:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1161,"id":1175,"nodeType":"Return","src":"2787:49:5"}]},"documentation":{"id":1153,"nodeType":"StructuredDocumentation","src":"2628:66:5","text":" @dev Returns true if the two strings are equal."},"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2708:5:5","parameters":{"id":1158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1155,"mutability":"mutable","name":"a","nameLocation":"2728:1:5","nodeType":"VariableDeclaration","scope":1177,"src":"2714:15:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1154,"name":"string","nodeType":"ElementaryTypeName","src":"2714:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1157,"mutability":"mutable","name":"b","nameLocation":"2745:1:5","nodeType":"VariableDeclaration","scope":1177,"src":"2731:15:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1156,"name":"string","nodeType":"ElementaryTypeName","src":"2731:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2713:34:5"},"returnParameters":{"id":1161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1177,"src":"2771:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1159,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:5"},"scope":1178,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"StringsUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":954,"nodeType":"StructuredDocumentation","src":"207:34:5","text":" @dev String operations."},"fullyImplemented":true,"linearizedBaseContracts":[1178],"name":"StringsUpgradeable","nameLocation":"250:18:5","scope":1179,"usedErrors":[],"usedEvents":[]}],"license":"MIT"}},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"id":6,"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","id":1223,"exportedSymbols":{"AddressUpgradeable":[907],"ERC165Upgradeable":[1222],"IERC165Upgradeable":[1234],"Initializable":[577]},"nodeType":"SourceUnit","src":"99:1421:6","nodes":[{"id":1180,"nodeType":"PragmaDirective","src":"99:23:6","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":1181,"nodeType":"ImportDirective","src":"124:34:6","nodes":[],"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","file":"./IERC165Upgradeable.sol","nameLocation":"-1:-1:-1","scope":1223,"sourceUnit":1235,"symbolAliases":[],"unitAlias":""},{"id":1182,"nodeType":"ImportDirective","src":"159:45:6","nodes":[],"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","nameLocation":"-1:-1:-1","scope":1223,"sourceUnit":578,"symbolAliases":[],"unitAlias":""},{"id":1222,"nodeType":"ContractDefinition","src":"783:736:6","nodes":[{"id":1193,"nodeType":"FunctionDefinition","src":"862:58:6","nodes":[],"body":{"id":1192,"nodeType":"Block","src":"913:7:6","nodes":[],"statements":[]},"implemented":true,"kind":"function","modifiers":[{"id":1190,"kind":"modifierInvocation","modifierName":{"id":1189,"name":"onlyInitializing","nameLocations":["896:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":522,"src":"896:16:6"},"nodeType":"ModifierInvocation","src":"896:16:6"}],"name":"__ERC165_init","nameLocation":"871:13:6","parameters":{"id":1188,"nodeType":"ParameterList","parameters":[],"src":"884:2:6"},"returnParameters":{"id":1191,"nodeType":"ParameterList","parameters":[],"src":"913:0:6"},"scope":1222,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":1199,"nodeType":"FunctionDefinition","src":"926:68:6","nodes":[],"body":{"id":1198,"nodeType":"Block","src":"987:7:6","nodes":[],"statements":[]},"implemented":true,"kind":"function","modifiers":[{"id":1196,"kind":"modifierInvocation","modifierName":{"id":1195,"name":"onlyInitializing","nameLocations":["970:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":522,"src":"970:16:6"},"nodeType":"ModifierInvocation","src":"970:16:6"}],"name":"__ERC165_init_unchained","nameLocation":"935:23:6","parameters":{"id":1194,"nodeType":"ParameterList","parameters":[],"src":"958:2:6"},"returnParameters":{"id":1197,"nodeType":"ParameterList","parameters":[],"src":"987:0:6"},"scope":1222,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":1216,"nodeType":"FunctionDefinition","src":"1060:166:6","nodes":[],"body":{"id":1215,"nodeType":"Block","src":"1151:75:6","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1208,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"1168:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1210,"name":"IERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"1188:18:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165Upgradeable_$1234_$","typeString":"type(contract IERC165Upgradeable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165Upgradeable_$1234_$","typeString":"type(contract IERC165Upgradeable)"}],"id":1209,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1183:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1183:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165Upgradeable_$1234","typeString":"type(contract IERC165Upgradeable)"}},"id":1212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1208:11:6","memberName":"interfaceId","nodeType":"MemberAccess","src":"1183:36:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1168:51:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1207,"id":1214,"nodeType":"Return","src":"1161:58:6"}]},"baseFunctions":[1233],"documentation":{"id":1200,"nodeType":"StructuredDocumentation","src":"999:56:6","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1069:17:6","overrides":{"id":1204,"nodeType":"OverrideSpecifier","overrides":[],"src":"1127:8:6"},"parameters":{"id":1203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1202,"mutability":"mutable","name":"interfaceId","nameLocation":"1094:11:6","nodeType":"VariableDeclaration","scope":1216,"src":"1087:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1201,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1087:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1086:20:6"},"returnParameters":{"id":1207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1216,"src":"1145:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1205,"name":"bool","nodeType":"ElementaryTypeName","src":"1145:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1144:6:6"},"scope":1222,"stateMutability":"view","virtual":true,"visibility":"public"},{"id":1221,"nodeType":"VariableDeclaration","src":"1491:25:6","nodes":[],"constant":false,"documentation":{"id":1217,"nodeType":"StructuredDocumentation","src":"1232:254:6","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"mutability":"mutable","name":"__gap","nameLocation":"1511:5:6","scope":1222,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1218,"name":"uint256","nodeType":"ElementaryTypeName","src":"1491:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1220,"length":{"hexValue":"3530","id":1219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1499:2:6","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1491:11:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"abstract":true,"baseContracts":[{"baseName":{"id":1184,"name":"Initializable","nameLocations":["822:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":577,"src":"822:13:6"},"id":1185,"nodeType":"InheritanceSpecifier","src":"822:13:6"},{"baseName":{"id":1186,"name":"IERC165Upgradeable","nameLocations":["837:18:6"],"nodeType":"IdentifierPath","referencedDeclaration":1234,"src":"837:18:6"},"id":1187,"nodeType":"InheritanceSpecifier","src":"837:18:6"}],"canonicalName":"ERC165Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1183,"nodeType":"StructuredDocumentation","src":"206:576:6","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"linearizedBaseContracts":[1222,1234,577],"name":"ERC165Upgradeable","nameLocation":"801:17:6","scope":1223,"usedErrors":[],"usedEvents":[423]}],"license":"MIT"}},"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol":{"id":7,"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","id":1235,"exportedSymbols":{"IERC165Upgradeable":[1234]},"nodeType":"SourceUnit","src":"100:764:7","nodes":[{"id":1224,"nodeType":"PragmaDirective","src":"100:23:7","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":1234,"nodeType":"ContractDefinition","src":"405:458:7","nodes":[{"id":1233,"nodeType":"FunctionDefinition","src":"785:76:7","nodes":[],"documentation":{"id":1226,"nodeType":"StructuredDocumentation","src":"440:340:7","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"794:17:7","parameters":{"id":1229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1228,"mutability":"mutable","name":"interfaceId","nameLocation":"819:11:7","nodeType":"VariableDeclaration","scope":1233,"src":"812:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1227,"name":"bytes4","nodeType":"ElementaryTypeName","src":"812:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"811:20:7"},"returnParameters":{"id":1232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1233,"src":"855:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1230,"name":"bool","nodeType":"ElementaryTypeName","src":"855:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"854:6:7"},"scope":1234,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IERC165Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1225,"nodeType":"StructuredDocumentation","src":"125:279:7","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"linearizedBaseContracts":[1234],"name":"IERC165Upgradeable","nameLocation":"415:18:7","scope":1235,"usedErrors":[],"usedEvents":[]}],"license":"MIT"}},"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"id":8,"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol","id":2101,"exportedSymbols":{"MathUpgradeable":[2100]},"nodeType":"SourceUnit","src":"103:12693:8","nodes":[{"id":1236,"nodeType":"PragmaDirective","src":"103:23:8","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":2100,"nodeType":"ContractDefinition","src":"202:12593:8","nodes":[{"id":1241,"nodeType":"EnumDefinition","src":"232:122:8","nodes":[],"canonicalName":"MathUpgradeable.Rounding","members":[{"id":1238,"name":"Down","nameLocation":"256:4:8","nodeType":"EnumValue","src":"256:4:8"},{"id":1239,"name":"Up","nameLocation":"298:2:8","nodeType":"EnumValue","src":"298:2:8"},{"id":1240,"name":"Zero","nameLocation":"329:4:8","nodeType":"EnumValue","src":"329:4:8"}],"name":"Rounding","nameLocation":"237:8:8"},{"id":1259,"nodeType":"FunctionDefinition","src":"424:104:8","nodes":[],"body":{"id":1258,"nodeType":"Block","src":"491:37:8","nodes":[],"statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1251,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"508:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1252,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"512:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"508:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1255,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"520:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"508:13:8","trueExpression":{"id":1254,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"516:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1250,"id":1257,"nodeType":"Return","src":"501:20:8"}]},"documentation":{"id":1242,"nodeType":"StructuredDocumentation","src":"360:59:8","text":" @dev Returns the largest of two numbers."},"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"433:3:8","parameters":{"id":1247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1244,"mutability":"mutable","name":"a","nameLocation":"445:1:8","nodeType":"VariableDeclaration","scope":1259,"src":"437:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1243,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1246,"mutability":"mutable","name":"b","nameLocation":"456:1:8","nodeType":"VariableDeclaration","scope":1259,"src":"448:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1245,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"436:22:8"},"returnParameters":{"id":1250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1259,"src":"482:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1248,"name":"uint256","nodeType":"ElementaryTypeName","src":"482:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"481:9:8"},"scope":2100,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1277,"nodeType":"FunctionDefinition","src":"599:104:8","nodes":[],"body":{"id":1276,"nodeType":"Block","src":"666:37:8","nodes":[],"statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1269,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"683:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1270,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"687:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"683:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1273,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"695:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"683:13:8","trueExpression":{"id":1272,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"691:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1268,"id":1275,"nodeType":"Return","src":"676:20:8"}]},"documentation":{"id":1260,"nodeType":"StructuredDocumentation","src":"534:60:8","text":" @dev Returns the smallest of two numbers."},"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"608:3:8","parameters":{"id":1265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1262,"mutability":"mutable","name":"a","nameLocation":"620:1:8","nodeType":"VariableDeclaration","scope":1277,"src":"612:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1261,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1264,"mutability":"mutable","name":"b","nameLocation":"631:1:8","nodeType":"VariableDeclaration","scope":1277,"src":"623:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1263,"name":"uint256","nodeType":"ElementaryTypeName","src":"623:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"611:22:8"},"returnParameters":{"id":1268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1277,"src":"657:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1266,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:9:8"},"scope":2100,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1300,"nodeType":"FunctionDefinition","src":"816:153:8","nodes":[],"body":{"id":1299,"nodeType":"Block","src":"887:82:8","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1287,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"942:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1288,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"946:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"942:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1290,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"941:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1291,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"952:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1292,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"956:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"952:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1294,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"951:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"961:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"951:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1286,"id":1298,"nodeType":"Return","src":"934:28:8"}]},"documentation":{"id":1278,"nodeType":"StructuredDocumentation","src":"709:102:8","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"825:7:8","parameters":{"id":1283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1280,"mutability":"mutable","name":"a","nameLocation":"841:1:8","nodeType":"VariableDeclaration","scope":1300,"src":"833:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1279,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1282,"mutability":"mutable","name":"b","nameLocation":"852:1:8","nodeType":"VariableDeclaration","scope":1300,"src":"844:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1281,"name":"uint256","nodeType":"ElementaryTypeName","src":"844:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"832:22:8"},"returnParameters":{"id":1286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1300,"src":"878:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1284,"name":"uint256","nodeType":"ElementaryTypeName","src":"878:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"877:9:8"},"scope":2100,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1325,"nodeType":"FunctionDefinition","src":"1168:194:8","nodes":[],"body":{"id":1324,"nodeType":"Block","src":"1239:123:8","nodes":[],"statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1310,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"1327:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1332:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1327:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1314,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"1341:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1345:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1341:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1317,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1340:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1318,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"1350:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1340:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1354:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1340:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1327:28:8","trueExpression":{"hexValue":"30","id":1313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1336:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1309,"id":1323,"nodeType":"Return","src":"1320:35:8"}]},"documentation":{"id":1301,"nodeType":"StructuredDocumentation","src":"975:188:8","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1177:7:8","parameters":{"id":1306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1303,"mutability":"mutable","name":"a","nameLocation":"1193:1:8","nodeType":"VariableDeclaration","scope":1325,"src":"1185:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1302,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1305,"mutability":"mutable","name":"b","nameLocation":"1204:1:8","nodeType":"VariableDeclaration","scope":1325,"src":"1196:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1304,"name":"uint256","nodeType":"ElementaryTypeName","src":"1196:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1184:22:8"},"returnParameters":{"id":1309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1325,"src":"1230:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1307,"name":"uint256","nodeType":"ElementaryTypeName","src":"1230:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1229:9:8"},"scope":2100,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1448,"nodeType":"FunctionDefinition","src":"1678:4213:8","nodes":[],"body":{"id":1447,"nodeType":"Block","src":"1776:4115:8","nodes":[],"statements":[{"id":1446,"nodeType":"UncheckedBlock","src":"1786:4099:8","statements":[{"assignments":[1338],"declarations":[{"constant":false,"id":1338,"mutability":"mutable","name":"prod0","nameLocation":"2115:5:8","nodeType":"VariableDeclaration","scope":1446,"src":"2107:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1337,"name":"uint256","nodeType":"ElementaryTypeName","src":"2107:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1339,"nodeType":"VariableDeclarationStatement","src":"2107:13:8"},{"assignments":[1341],"declarations":[{"constant":false,"id":1341,"mutability":"mutable","name":"prod1","nameLocation":"2187:5:8","nodeType":"VariableDeclaration","scope":1446,"src":"2179:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1340,"name":"uint256","nodeType":"ElementaryTypeName","src":"2179:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1342,"nodeType":"VariableDeclarationStatement","src":"2179:13:8"},{"AST":{"nativeSrc":"2259:157:8","nodeType":"YulBlock","src":"2259:157:8","statements":[{"nativeSrc":"2277:30:8","nodeType":"YulVariableDeclaration","src":"2277:30:8","value":{"arguments":[{"name":"x","nativeSrc":"2294:1:8","nodeType":"YulIdentifier","src":"2294:1:8"},{"name":"y","nativeSrc":"2297:1:8","nodeType":"YulIdentifier","src":"2297:1:8"},{"arguments":[{"kind":"number","nativeSrc":"2304:1:8","nodeType":"YulLiteral","src":"2304:1:8","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2300:3:8","nodeType":"YulIdentifier","src":"2300:3:8"},"nativeSrc":"2300:6:8","nodeType":"YulFunctionCall","src":"2300:6:8"}],"functionName":{"name":"mulmod","nativeSrc":"2287:6:8","nodeType":"YulIdentifier","src":"2287:6:8"},"nativeSrc":"2287:20:8","nodeType":"YulFunctionCall","src":"2287:20:8"},"variables":[{"name":"mm","nativeSrc":"2281:2:8","nodeType":"YulTypedName","src":"2281:2:8","type":""}]},{"nativeSrc":"2324:18:8","nodeType":"YulAssignment","src":"2324:18:8","value":{"arguments":[{"name":"x","nativeSrc":"2337:1:8","nodeType":"YulIdentifier","src":"2337:1:8"},{"name":"y","nativeSrc":"2340:1:8","nodeType":"YulIdentifier","src":"2340:1:8"}],"functionName":{"name":"mul","nativeSrc":"2333:3:8","nodeType":"YulIdentifier","src":"2333:3:8"},"nativeSrc":"2333:9:8","nodeType":"YulFunctionCall","src":"2333:9:8"},"variableNames":[{"name":"prod0","nativeSrc":"2324:5:8","nodeType":"YulIdentifier","src":"2324:5:8"}]},{"nativeSrc":"2359:43:8","nodeType":"YulAssignment","src":"2359:43:8","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"2376:2:8","nodeType":"YulIdentifier","src":"2376:2:8"},{"name":"prod0","nativeSrc":"2380:5:8","nodeType":"YulIdentifier","src":"2380:5:8"}],"functionName":{"name":"sub","nativeSrc":"2372:3:8","nodeType":"YulIdentifier","src":"2372:3:8"},"nativeSrc":"2372:14:8","nodeType":"YulFunctionCall","src":"2372:14:8"},{"arguments":[{"name":"mm","nativeSrc":"2391:2:8","nodeType":"YulIdentifier","src":"2391:2:8"},{"name":"prod0","nativeSrc":"2395:5:8","nodeType":"YulIdentifier","src":"2395:5:8"}],"functionName":{"name":"lt","nativeSrc":"2388:2:8","nodeType":"YulIdentifier","src":"2388:2:8"},"nativeSrc":"2388:13:8","nodeType":"YulFunctionCall","src":"2388:13:8"}],"functionName":{"name":"sub","nativeSrc":"2368:3:8","nodeType":"YulIdentifier","src":"2368:3:8"},"nativeSrc":"2368:34:8","nodeType":"YulFunctionCall","src":"2368:34:8"},"variableNames":[{"name":"prod1","nativeSrc":"2359:5:8","nodeType":"YulIdentifier","src":"2359:5:8"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":1338,"isOffset":false,"isSlot":false,"src":"2324:5:8","valueSize":1},{"declaration":1338,"isOffset":false,"isSlot":false,"src":"2380:5:8","valueSize":1},{"declaration":1338,"isOffset":false,"isSlot":false,"src":"2395:5:8","valueSize":1},{"declaration":1341,"isOffset":false,"isSlot":false,"src":"2359:5:8","valueSize":1},{"declaration":1328,"isOffset":false,"isSlot":false,"src":"2294:1:8","valueSize":1},{"declaration":1328,"isOffset":false,"isSlot":false,"src":"2337:1:8","valueSize":1},{"declaration":1330,"isOffset":false,"isSlot":false,"src":"2297:1:8","valueSize":1},{"declaration":1330,"isOffset":false,"isSlot":false,"src":"2340:1:8","valueSize":1}],"id":1343,"nodeType":"InlineAssembly","src":"2250:166:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1344,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"2497:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2506:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2497:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1352,"nodeType":"IfStatement","src":"2493:368:8","trueBody":{"id":1351,"nodeType":"Block","src":"2509:352:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1347,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"2827:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1348,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"2835:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2827:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1336,"id":1350,"nodeType":"Return","src":"2820:26:8"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1354,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"2971:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1355,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"2985:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2971:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":1357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2992:23:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":1353,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2963:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2963:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1359,"nodeType":"ExpressionStatement","src":"2963:53:8"},{"assignments":[1361],"declarations":[{"constant":false,"id":1361,"mutability":"mutable","name":"remainder","nameLocation":"3280:9:8","nodeType":"VariableDeclaration","scope":1446,"src":"3272:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1360,"name":"uint256","nodeType":"ElementaryTypeName","src":"3272:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1362,"nodeType":"VariableDeclarationStatement","src":"3272:17:8"},{"AST":{"nativeSrc":"3312:291:8","nodeType":"YulBlock","src":"3312:291:8","statements":[{"nativeSrc":"3381:38:8","nodeType":"YulAssignment","src":"3381:38:8","value":{"arguments":[{"name":"x","nativeSrc":"3401:1:8","nodeType":"YulIdentifier","src":"3401:1:8"},{"name":"y","nativeSrc":"3404:1:8","nodeType":"YulIdentifier","src":"3404:1:8"},{"name":"denominator","nativeSrc":"3407:11:8","nodeType":"YulIdentifier","src":"3407:11:8"}],"functionName":{"name":"mulmod","nativeSrc":"3394:6:8","nodeType":"YulIdentifier","src":"3394:6:8"},"nativeSrc":"3394:25:8","nodeType":"YulFunctionCall","src":"3394:25:8"},"variableNames":[{"name":"remainder","nativeSrc":"3381:9:8","nodeType":"YulIdentifier","src":"3381:9:8"}]},{"nativeSrc":"3501:41:8","nodeType":"YulAssignment","src":"3501:41:8","value":{"arguments":[{"name":"prod1","nativeSrc":"3514:5:8","nodeType":"YulIdentifier","src":"3514:5:8"},{"arguments":[{"name":"remainder","nativeSrc":"3524:9:8","nodeType":"YulIdentifier","src":"3524:9:8"},{"name":"prod0","nativeSrc":"3535:5:8","nodeType":"YulIdentifier","src":"3535:5:8"}],"functionName":{"name":"gt","nativeSrc":"3521:2:8","nodeType":"YulIdentifier","src":"3521:2:8"},"nativeSrc":"3521:20:8","nodeType":"YulFunctionCall","src":"3521:20:8"}],"functionName":{"name":"sub","nativeSrc":"3510:3:8","nodeType":"YulIdentifier","src":"3510:3:8"},"nativeSrc":"3510:32:8","nodeType":"YulFunctionCall","src":"3510:32:8"},"variableNames":[{"name":"prod1","nativeSrc":"3501:5:8","nodeType":"YulIdentifier","src":"3501:5:8"}]},{"nativeSrc":"3559:30:8","nodeType":"YulAssignment","src":"3559:30:8","value":{"arguments":[{"name":"prod0","nativeSrc":"3572:5:8","nodeType":"YulIdentifier","src":"3572:5:8"},{"name":"remainder","nativeSrc":"3579:9:8","nodeType":"YulIdentifier","src":"3579:9:8"}],"functionName":{"name":"sub","nativeSrc":"3568:3:8","nodeType":"YulIdentifier","src":"3568:3:8"},"nativeSrc":"3568:21:8","nodeType":"YulFunctionCall","src":"3568:21:8"},"variableNames":[{"name":"prod0","nativeSrc":"3559:5:8","nodeType":"YulIdentifier","src":"3559:5:8"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":1332,"isOffset":false,"isSlot":false,"src":"3407:11:8","valueSize":1},{"declaration":1338,"isOffset":false,"isSlot":false,"src":"3535:5:8","valueSize":1},{"declaration":1338,"isOffset":false,"isSlot":false,"src":"3559:5:8","valueSize":1},{"declaration":1338,"isOffset":false,"isSlot":false,"src":"3572:5:8","valueSize":1},{"declaration":1341,"isOffset":false,"isSlot":false,"src":"3501:5:8","valueSize":1},{"declaration":1341,"isOffset":false,"isSlot":false,"src":"3514:5:8","valueSize":1},{"declaration":1361,"isOffset":false,"isSlot":false,"src":"3381:9:8","valueSize":1},{"declaration":1361,"isOffset":false,"isSlot":false,"src":"3524:9:8","valueSize":1},{"declaration":1361,"isOffset":false,"isSlot":false,"src":"3579:9:8","valueSize":1},{"declaration":1328,"isOffset":false,"isSlot":false,"src":"3401:1:8","valueSize":1},{"declaration":1330,"isOffset":false,"isSlot":false,"src":"3404:1:8","valueSize":1}],"id":1363,"nodeType":"InlineAssembly","src":"3303:300:8"},{"assignments":[1365],"declarations":[{"constant":false,"id":1365,"mutability":"mutable","name":"twos","nameLocation":"3918:4:8","nodeType":"VariableDeclaration","scope":1446,"src":"3910:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1364,"name":"uint256","nodeType":"ElementaryTypeName","src":"3910:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1373,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1366,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"3925:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3940:12:8","subExpression":{"id":1367,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"3941:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3955:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3940:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1371,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3939:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3925:32:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3910:47:8"},{"AST":{"nativeSrc":"3980:362:8","nodeType":"YulBlock","src":"3980:362:8","statements":[{"nativeSrc":"4045:37:8","nodeType":"YulAssignment","src":"4045:37:8","value":{"arguments":[{"name":"denominator","nativeSrc":"4064:11:8","nodeType":"YulIdentifier","src":"4064:11:8"},{"name":"twos","nativeSrc":"4077:4:8","nodeType":"YulIdentifier","src":"4077:4:8"}],"functionName":{"name":"div","nativeSrc":"4060:3:8","nodeType":"YulIdentifier","src":"4060:3:8"},"nativeSrc":"4060:22:8","nodeType":"YulFunctionCall","src":"4060:22:8"},"variableNames":[{"name":"denominator","nativeSrc":"4045:11:8","nodeType":"YulIdentifier","src":"4045:11:8"}]},{"nativeSrc":"4149:25:8","nodeType":"YulAssignment","src":"4149:25:8","value":{"arguments":[{"name":"prod0","nativeSrc":"4162:5:8","nodeType":"YulIdentifier","src":"4162:5:8"},{"name":"twos","nativeSrc":"4169:4:8","nodeType":"YulIdentifier","src":"4169:4:8"}],"functionName":{"name":"div","nativeSrc":"4158:3:8","nodeType":"YulIdentifier","src":"4158:3:8"},"nativeSrc":"4158:16:8","nodeType":"YulFunctionCall","src":"4158:16:8"},"variableNames":[{"name":"prod0","nativeSrc":"4149:5:8","nodeType":"YulIdentifier","src":"4149:5:8"}]},{"nativeSrc":"4289:39:8","nodeType":"YulAssignment","src":"4289:39:8","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4309:1:8","nodeType":"YulLiteral","src":"4309:1:8","type":"","value":"0"},{"name":"twos","nativeSrc":"4312:4:8","nodeType":"YulIdentifier","src":"4312:4:8"}],"functionName":{"name":"sub","nativeSrc":"4305:3:8","nodeType":"YulIdentifier","src":"4305:3:8"},"nativeSrc":"4305:12:8","nodeType":"YulFunctionCall","src":"4305:12:8"},{"name":"twos","nativeSrc":"4319:4:8","nodeType":"YulIdentifier","src":"4319:4:8"}],"functionName":{"name":"div","nativeSrc":"4301:3:8","nodeType":"YulIdentifier","src":"4301:3:8"},"nativeSrc":"4301:23:8","nodeType":"YulFunctionCall","src":"4301:23:8"},{"kind":"number","nativeSrc":"4326:1:8","nodeType":"YulLiteral","src":"4326:1:8","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4297:3:8","nodeType":"YulIdentifier","src":"4297:3:8"},"nativeSrc":"4297:31:8","nodeType":"YulFunctionCall","src":"4297:31:8"},"variableNames":[{"name":"twos","nativeSrc":"4289:4:8","nodeType":"YulIdentifier","src":"4289:4:8"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":1332,"isOffset":false,"isSlot":false,"src":"4045:11:8","valueSize":1},{"declaration":1332,"isOffset":false,"isSlot":false,"src":"4064:11:8","valueSize":1},{"declaration":1338,"isOffset":false,"isSlot":false,"src":"4149:5:8","valueSize":1},{"declaration":1338,"isOffset":false,"isSlot":false,"src":"4162:5:8","valueSize":1},{"declaration":1365,"isOffset":false,"isSlot":false,"src":"4077:4:8","valueSize":1},{"declaration":1365,"isOffset":false,"isSlot":false,"src":"4169:4:8","valueSize":1},{"declaration":1365,"isOffset":false,"isSlot":false,"src":"4289:4:8","valueSize":1},{"declaration":1365,"isOffset":false,"isSlot":false,"src":"4312:4:8","valueSize":1},{"declaration":1365,"isOffset":false,"isSlot":false,"src":"4319:4:8","valueSize":1}],"id":1374,"nodeType":"InlineAssembly","src":"3971:371:8"},{"expression":{"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1375,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"4408:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1376,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"4417:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1377,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"4425:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4417:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4408:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1380,"nodeType":"ExpressionStatement","src":"4408:21:8"},{"assignments":[1382],"declarations":[{"constant":false,"id":1382,"mutability":"mutable","name":"inverse","nameLocation":"4755:7:8","nodeType":"VariableDeclaration","scope":1446,"src":"4747:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1381,"name":"uint256","nodeType":"ElementaryTypeName","src":"4747:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1389,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4766:1:8","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1384,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"4770:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4766:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1386,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4765:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4785:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4765:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4747:39:8"},{"expression":{"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1390,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"5003:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5014:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1392,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"5018:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1393,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"5032:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5018:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5014:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1397,"nodeType":"ExpressionStatement","src":"5003:36:8"},{"expression":{"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1398,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"5072:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5083:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1400,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"5087:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1401,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"5101:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5087:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5083:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1405,"nodeType":"ExpressionStatement","src":"5072:36:8"},{"expression":{"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1406,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"5142:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5153:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1408,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"5157:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1409,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"5171:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5153:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1413,"nodeType":"ExpressionStatement","src":"5142:36:8"},{"expression":{"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1414,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"5212:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5223:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1416,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"5227:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1417,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"5241:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5227:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5223:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1421,"nodeType":"ExpressionStatement","src":"5212:36:8"},{"expression":{"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1422,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"5282:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5293:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1424,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"5297:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1425,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"5311:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5297:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5293:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1429,"nodeType":"ExpressionStatement","src":"5282:36:8"},{"expression":{"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1430,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"5353:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5364:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1432,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"5368:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1433,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"5382:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5368:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5364:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1437,"nodeType":"ExpressionStatement","src":"5353:36:8"},{"expression":{"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1438,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"5823:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1439,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"5832:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1440,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"5840:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5832:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5823:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1443,"nodeType":"ExpressionStatement","src":"5823:24:8"},{"expression":{"id":1444,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"5868:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1336,"id":1445,"nodeType":"Return","src":"5861:13:8"}]}]},"documentation":{"id":1326,"nodeType":"StructuredDocumentation","src":"1368:305:8","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1687:6:8","parameters":{"id":1333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1328,"mutability":"mutable","name":"x","nameLocation":"1702:1:8","nodeType":"VariableDeclaration","scope":1448,"src":"1694:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1327,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1330,"mutability":"mutable","name":"y","nameLocation":"1713:1:8","nodeType":"VariableDeclaration","scope":1448,"src":"1705:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1329,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1332,"mutability":"mutable","name":"denominator","nameLocation":"1724:11:8","nodeType":"VariableDeclaration","scope":1448,"src":"1716:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1331,"name":"uint256","nodeType":"ElementaryTypeName","src":"1716:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1693:43:8"},"returnParameters":{"id":1336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1335,"mutability":"mutable","name":"result","nameLocation":"1768:6:8","nodeType":"VariableDeclaration","scope":1448,"src":"1760:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1334,"name":"uint256","nodeType":"ElementaryTypeName","src":"1760:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1759:16:8"},"scope":2100,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1492,"nodeType":"FunctionDefinition","src":"6023:299:8","nodes":[],"body":{"id":1491,"nodeType":"Block","src":"6133:189:8","nodes":[],"statements":[{"assignments":[1464],"declarations":[{"constant":false,"id":1464,"mutability":"mutable","name":"result","nameLocation":"6151:6:8","nodeType":"VariableDeclaration","scope":1491,"src":"6143:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1463,"name":"uint256","nodeType":"ElementaryTypeName","src":"6143:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1470,"initialValue":{"arguments":[{"id":1466,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"6167:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1467,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"6170:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1468,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"6173:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1465,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1448,1492],"referencedDeclaration":1448,"src":"6160:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6160:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6143:42:8"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1241","typeString":"enum MathUpgradeable.Rounding"},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1471,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"6199:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1241","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1472,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"6211:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1241_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6220:2:8","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1239,"src":"6211:11:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1241","typeString":"enum MathUpgradeable.Rounding"}},"src":"6199:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1476,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"6233:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1477,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"6236:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1478,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"6239:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1475,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6226:6:8","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6226:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6254:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6226:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6199:56:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1488,"nodeType":"IfStatement","src":"6195:98:8","trueBody":{"id":1487,"nodeType":"Block","src":"6257:36:8","statements":[{"expression":{"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1483,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"6271:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6281:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6271:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1486,"nodeType":"ExpressionStatement","src":"6271:11:8"}]}},{"expression":{"id":1489,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"6309:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1462,"id":1490,"nodeType":"Return","src":"6302:13:8"}]},"documentation":{"id":1449,"nodeType":"StructuredDocumentation","src":"5897:121:8","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6032:6:8","parameters":{"id":1459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1451,"mutability":"mutable","name":"x","nameLocation":"6047:1:8","nodeType":"VariableDeclaration","scope":1492,"src":"6039:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1450,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1453,"mutability":"mutable","name":"y","nameLocation":"6058:1:8","nodeType":"VariableDeclaration","scope":1492,"src":"6050:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1452,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1455,"mutability":"mutable","name":"denominator","nameLocation":"6069:11:8","nodeType":"VariableDeclaration","scope":1492,"src":"6061:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1454,"name":"uint256","nodeType":"ElementaryTypeName","src":"6061:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1458,"mutability":"mutable","name":"rounding","nameLocation":"6091:8:8","nodeType":"VariableDeclaration","scope":1492,"src":"6082:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1241","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":1457,"nodeType":"UserDefinedTypeName","pathNode":{"id":1456,"name":"Rounding","nameLocations":["6082:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":1241,"src":"6082:8:8"},"referencedDeclaration":1241,"src":"6082:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1241","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"6038:62:8"},"returnParameters":{"id":1462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1492,"src":"6124:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1460,"name":"uint256","nodeType":"ElementaryTypeName","src":"6124:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6123:9:8"},"scope":2100,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1604,"nodeType":"FunctionDefinition","src":"6541:1642:8","nodes":[],"body":{"id":1603,"nodeType":"Block","src":"6598:1585:8","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1500,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"6612:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6617:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6612:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1506,"nodeType":"IfStatement","src":"6608:45:8","trueBody":{"id":1505,"nodeType":"Block","src":"6620:33:8","statements":[{"expression":{"hexValue":"30","id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6641:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1499,"id":1504,"nodeType":"Return","src":"6634:8:8"}]}},{"assignments":[1508],"declarations":[{"constant":false,"id":1508,"mutability":"mutable","name":"result","nameLocation":"7340:6:8","nodeType":"VariableDeclaration","scope":1603,"src":"7332:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1507,"name":"uint256","nodeType":"ElementaryTypeName","src":"7332:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1517,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7349:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1511,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"7360:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1510,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1772,1808],"referencedDeclaration":1772,"src":"7355:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7355:7:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7366:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7355:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1515,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7354:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7349:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7332:36:8"},{"id":1602,"nodeType":"UncheckedBlock","src":"7769:408:8","statements":[{"expression":{"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1518,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"7793:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1519,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"7803:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1520,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"7812:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1521,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"7816:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7812:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7803:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1524,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7802:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7827:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7802:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7793:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1528,"nodeType":"ExpressionStatement","src":"7793:35:8"},{"expression":{"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1529,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"7842:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1530,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"7852:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1531,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"7861:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1532,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"7865:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7861:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7852:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1535,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7851:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7876:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7851:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7842:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1539,"nodeType":"ExpressionStatement","src":"7842:35:8"},{"expression":{"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1540,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"7891:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1541,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"7901:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1542,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"7910:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1543,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"7914:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7910:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7901:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1546,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7900:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7925:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7900:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7891:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1550,"nodeType":"ExpressionStatement","src":"7891:35:8"},{"expression":{"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1551,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"7940:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1552,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"7950:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1553,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"7959:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1554,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"7963:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7959:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7950:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1557,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7949:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7974:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7949:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7940:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1561,"nodeType":"ExpressionStatement","src":"7940:35:8"},{"expression":{"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1562,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"7989:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1563,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"7999:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1564,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"8008:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1565,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"8012:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8008:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7999:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1568,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7998:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8023:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7998:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7989:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1572,"nodeType":"ExpressionStatement","src":"7989:35:8"},{"expression":{"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1573,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"8038:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1574,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"8048:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1575,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"8057:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1576,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"8061:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8057:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8048:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1579,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8047:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8072:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8047:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8038:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1583,"nodeType":"ExpressionStatement","src":"8038:35:8"},{"expression":{"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1584,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"8087:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1585,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"8097:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1586,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"8106:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1587,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"8110:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8106:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8097:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1590,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8096:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8121:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8096:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8087:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1594,"nodeType":"ExpressionStatement","src":"8087:35:8"},{"expression":{"arguments":[{"id":1596,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"8147:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1597,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"8155:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1598,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"8159:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8155:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1595,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"8143:3:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8143:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1499,"id":1601,"nodeType":"Return","src":"8136:30:8"}]}]},"documentation":{"id":1493,"nodeType":"StructuredDocumentation","src":"6328:208:8","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6550:4:8","parameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1495,"mutability":"mutable","name":"a","nameLocation":"6563:1:8","nodeType":"VariableDeclaration","scope":1604,"src":"6555:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1494,"name":"uint256","nodeType":"ElementaryTypeName","src":"6555:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6554:11:8"},"returnParameters":{"id":1499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1604,"src":"6589:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1497,"name":"uint256","nodeType":"ElementaryTypeName","src":"6589:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6588:9:8"},"scope":2100,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1640,"nodeType":"FunctionDefinition","src":"8283:237:8","nodes":[],"body":{"id":1639,"nodeType":"Block","src":"8359:161:8","nodes":[],"statements":[{"id":1638,"nodeType":"UncheckedBlock","src":"8369:145:8","statements":[{"assignments":[1616],"declarations":[{"constant":false,"id":1616,"mutability":"mutable","name":"result","nameLocation":"8401:6:8","nodeType":"VariableDeclaration","scope":1638,"src":"8393:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1615,"name":"uint256","nodeType":"ElementaryTypeName","src":"8393:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1620,"initialValue":{"arguments":[{"id":1618,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"8415:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1617,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[1604,1640],"referencedDeclaration":1604,"src":"8410:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8410:7:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8393:24:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1621,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"8438:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1241","typeString":"enum MathUpgradeable.Rounding"},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1622,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"8448:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1241","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1623,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"8460:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1241_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8469:2:8","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1239,"src":"8460:11:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1241","typeString":"enum MathUpgradeable.Rounding"}},"src":"8448:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1626,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"8475:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1627,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"8484:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8475:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1629,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"8493:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8475:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8448:46:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8501:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8448:54:8","trueExpression":{"hexValue":"31","id":1632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8497:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1635,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8447:56:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8438:65:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1614,"id":1637,"nodeType":"Return","src":"8431:72:8"}]}]},"documentation":{"id":1605,"nodeType":"StructuredDocumentation","src":"8189:89:8","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8292:4:8","parameters":{"id":1611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1607,"mutability":"mutable","name":"a","nameLocation":"8305:1:8","nodeType":"VariableDeclaration","scope":1640,"src":"8297:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1606,"name":"uint256","nodeType":"ElementaryTypeName","src":"8297:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1610,"mutability":"mutable","name":"rounding","nameLocation":"8317:8:8","nodeType":"VariableDeclaration","scope":1640,"src":"8308:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1241","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":1609,"nodeType":"UserDefinedTypeName","pathNode":{"id":1608,"name":"Rounding","nameLocations":["8308:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":1241,"src":"8308:8:8"},"referencedDeclaration":1241,"src":"8308:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1241","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"8296:30:8"},"returnParameters":{"id":1614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1613,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1640,"src":"8350:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1612,"name":"uint256","nodeType":"ElementaryTypeName","src":"8350:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8349:9:8"},"scope":2100,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1772,"nodeType":"FunctionDefinition","src":"8644:983:8","nodes":[],"body":{"id":1771,"nodeType":"Block","src":"8705:922:8","nodes":[],"statements":[{"assignments":[1649],"declarations":[{"constant":false,"id":1649,"mutability":"mutable","name":"result","nameLocation":"8723:6:8","nodeType":"VariableDeclaration","scope":1771,"src":"8715:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1648,"name":"uint256","nodeType":"ElementaryTypeName","src":"8715:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1651,"initialValue":{"hexValue":"30","id":1650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8732:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8715:18:8"},{"id":1768,"nodeType":"UncheckedBlock","src":"8743:855:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"8771:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8780:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8771:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8786:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8771:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1666,"nodeType":"IfStatement","src":"8767:99:8","trueBody":{"id":1665,"nodeType":"Block","src":"8789:77:8","statements":[{"expression":{"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"8807:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8817:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8807:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1660,"nodeType":"ExpressionStatement","src":"8807:13:8"},{"expression":{"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1661,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"8838:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":1662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8848:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8838:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1664,"nodeType":"ExpressionStatement","src":"8838:13:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"8883:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8892:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8883:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8897:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8883:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1681,"nodeType":"IfStatement","src":"8879:96:8","trueBody":{"id":1680,"nodeType":"Block","src":"8900:75:8","statements":[{"expression":{"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"8918:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8928:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8918:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1675,"nodeType":"ExpressionStatement","src":"8918:12:8"},{"expression":{"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1676,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"8948:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8958:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8948:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1679,"nodeType":"ExpressionStatement","src":"8948:12:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"8992:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9001:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8992:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9006:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8992:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1696,"nodeType":"IfStatement","src":"8988:96:8","trueBody":{"id":1695,"nodeType":"Block","src":"9009:75:8","statements":[{"expression":{"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"9027:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9037:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9027:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1690,"nodeType":"ExpressionStatement","src":"9027:12:8"},{"expression":{"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1691,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"9057:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9067:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9057:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1694,"nodeType":"ExpressionStatement","src":"9057:12:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"9101:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9110:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9101:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9115:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9101:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1711,"nodeType":"IfStatement","src":"9097:96:8","trueBody":{"id":1710,"nodeType":"Block","src":"9118:75:8","statements":[{"expression":{"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"9136:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9146:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9136:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1705,"nodeType":"ExpressionStatement","src":"9136:12:8"},{"expression":{"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1706,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"9166:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9176:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9166:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1709,"nodeType":"ExpressionStatement","src":"9166:12:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"9210:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9219:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9210:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9223:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9210:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1726,"nodeType":"IfStatement","src":"9206:93:8","trueBody":{"id":1725,"nodeType":"Block","src":"9226:73:8","statements":[{"expression":{"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"9244:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9254:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9244:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1720,"nodeType":"ExpressionStatement","src":"9244:11:8"},{"expression":{"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1721,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"9273:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9283:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9273:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1724,"nodeType":"ExpressionStatement","src":"9273:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"9316:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":1728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9325:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9316:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9329:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9316:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1741,"nodeType":"IfStatement","src":"9312:93:8","trueBody":{"id":1740,"nodeType":"Block","src":"9332:73:8","statements":[{"expression":{"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"9350:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9360:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9350:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1735,"nodeType":"ExpressionStatement","src":"9350:11:8"},{"expression":{"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1736,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"9379:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9389:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9379:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1739,"nodeType":"ExpressionStatement","src":"9379:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"9422:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":1743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9431:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9422:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9435:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9422:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1756,"nodeType":"IfStatement","src":"9418:93:8","trueBody":{"id":1755,"nodeType":"Block","src":"9438:73:8","statements":[{"expression":{"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"9456:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":1748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9466:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9456:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1750,"nodeType":"ExpressionStatement","src":"9456:11:8"},{"expression":{"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1751,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"9485:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9495:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9485:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1754,"nodeType":"ExpressionStatement","src":"9485:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"9528:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9537:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9528:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9541:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9528:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1767,"nodeType":"IfStatement","src":"9524:64:8","trueBody":{"id":1766,"nodeType":"Block","src":"9544:44:8","statements":[{"expression":{"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1762,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"9562:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9572:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9562:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1765,"nodeType":"ExpressionStatement","src":"9562:11:8"}]}}]},{"expression":{"id":1769,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"9614:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1647,"id":1770,"nodeType":"Return","src":"9607:13:8"}]},"documentation":{"id":1641,"nodeType":"StructuredDocumentation","src":"8526:113:8","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8653:4:8","parameters":{"id":1644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1643,"mutability":"mutable","name":"value","nameLocation":"8666:5:8","nodeType":"VariableDeclaration","scope":1772,"src":"8658:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1642,"name":"uint256","nodeType":"ElementaryTypeName","src":"8658:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8657:15:8"},"returnParameters":{"id":1647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1646,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1772,"src":"8696:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1645,"name":"uint256","nodeType":"ElementaryTypeName","src":"8696:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8695:9:8"},"scope":2100,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1808,"nodeType":"FunctionDefinition","src":"9780:245:8","nodes":[],"body":{"id":1807,"nodeType":"Block","src":"9860:165:8","nodes":[],"statements":[{"id":1806,"nodeType":"UncheckedBlock","src":"9870:149:8","statements":[{"assignments":[1784],"declarations":[{"constant":false,"id":1784,"mutability":"mutable","name":"result","nameLocation":"9902:6:8","nodeType":"VariableDeclaration","scope":1806,"src":"9894:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1783,"name":"uint256","nodeType":"ElementaryTypeName","src":"9894:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1788,"initialValue":{"arguments":[{"id":1786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"9916:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1785,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1772,1808],"referencedDeclaration":1772,"src":"9911:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9911:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9894:28:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1789,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"9943:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1241","typeString":"enum MathUpgradeable.Rounding"},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1790,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"9953:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1241","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1791,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"9965:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1241_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9974:2:8","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1239,"src":"9965:11:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1241","typeString":"enum MathUpgradeable.Rounding"}},"src":"9953:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9980:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1795,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"9985:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9980:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"9994:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9980:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9953:46:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10006:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9953:54:8","trueExpression":{"hexValue":"31","id":1800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10002:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1803,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9952:56:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9943:65:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1782,"id":1805,"nodeType":"Return","src":"9936:72:8"}]}]},"documentation":{"id":1773,"nodeType":"StructuredDocumentation","src":"9633:142:8","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9789:4:8","parameters":{"id":1779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1775,"mutability":"mutable","name":"value","nameLocation":"9802:5:8","nodeType":"VariableDeclaration","scope":1808,"src":"9794:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1774,"name":"uint256","nodeType":"ElementaryTypeName","src":"9794:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1778,"mutability":"mutable","name":"rounding","nameLocation":"9818:8:8","nodeType":"VariableDeclaration","scope":1808,"src":"9809:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1241","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":1777,"nodeType":"UserDefinedTypeName","pathNode":{"id":1776,"name":"Rounding","nameLocations":["9809:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":1241,"src":"9809:8:8"},"referencedDeclaration":1241,"src":"9809:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1241","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"9793:34:8"},"returnParameters":{"id":1782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1808,"src":"9851:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1780,"name":"uint256","nodeType":"ElementaryTypeName","src":"9851:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9850:9:8"},"scope":2100,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1937,"nodeType":"FunctionDefinition","src":"10150:916:8","nodes":[],"body":{"id":1936,"nodeType":"Block","src":"10212:854:8","nodes":[],"statements":[{"assignments":[1817],"declarations":[{"constant":false,"id":1817,"mutability":"mutable","name":"result","nameLocation":"10230:6:8","nodeType":"VariableDeclaration","scope":1936,"src":"10222:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1816,"name":"uint256","nodeType":"ElementaryTypeName","src":"10222:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1819,"initialValue":{"hexValue":"30","id":1818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10239:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10222:18:8"},{"id":1933,"nodeType":"UncheckedBlock","src":"10250:787:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1820,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"10278:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10287:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10293:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10287:8:8","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10278:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1836,"nodeType":"IfStatement","src":"10274:103:8","trueBody":{"id":1835,"nodeType":"Block","src":"10297:80:8","statements":[{"expression":{"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"10315:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10324:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10330:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10324:8:8","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10315:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1830,"nodeType":"ExpressionStatement","src":"10315:17:8"},{"expression":{"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1831,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"10350:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10360:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10350:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1834,"nodeType":"ExpressionStatement","src":"10350:12:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"10394:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10403:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10409:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10403:8:8","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10394:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1853,"nodeType":"IfStatement","src":"10390:103:8","trueBody":{"id":1852,"nodeType":"Block","src":"10413:80:8","statements":[{"expression":{"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"10431:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10440:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10446:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10440:8:8","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10431:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1847,"nodeType":"ExpressionStatement","src":"10431:17:8"},{"expression":{"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1848,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"10466:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10476:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10466:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1851,"nodeType":"ExpressionStatement","src":"10466:12:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"10510:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10519:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10525:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10519:8:8","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10510:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1870,"nodeType":"IfStatement","src":"10506:103:8","trueBody":{"id":1869,"nodeType":"Block","src":"10529:80:8","statements":[{"expression":{"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"10547:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10556:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10562:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10556:8:8","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10547:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1864,"nodeType":"ExpressionStatement","src":"10547:17:8"},{"expression":{"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1865,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"10582:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10592:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10582:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1868,"nodeType":"ExpressionStatement","src":"10582:12:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"10626:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10635:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10641:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10635:7:8","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10626:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1887,"nodeType":"IfStatement","src":"10622:100:8","trueBody":{"id":1886,"nodeType":"Block","src":"10644:78:8","statements":[{"expression":{"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"10662:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10671:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10677:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10671:7:8","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10662:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1881,"nodeType":"ExpressionStatement","src":"10662:16:8"},{"expression":{"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1882,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"10696:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10706:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10696:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1885,"nodeType":"ExpressionStatement","src":"10696:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"10739:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10748:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10754:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10748:7:8","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10739:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1904,"nodeType":"IfStatement","src":"10735:100:8","trueBody":{"id":1903,"nodeType":"Block","src":"10757:78:8","statements":[{"expression":{"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"10775:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10784:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10790:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10784:7:8","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10775:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1898,"nodeType":"ExpressionStatement","src":"10775:16:8"},{"expression":{"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1899,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"10809:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10819:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10809:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1902,"nodeType":"ExpressionStatement","src":"10809:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"10852:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10861:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10867:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10861:7:8","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10852:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1921,"nodeType":"IfStatement","src":"10848:100:8","trueBody":{"id":1920,"nodeType":"Block","src":"10870:78:8","statements":[{"expression":{"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"10888:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10897:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10897:7:8","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10888:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1915,"nodeType":"ExpressionStatement","src":"10888:16:8"},{"expression":{"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1916,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"10922:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10932:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10922:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1919,"nodeType":"ExpressionStatement","src":"10922:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"10965:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":1925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10974:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":1924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10980:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10974:7:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10965:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1932,"nodeType":"IfStatement","src":"10961:66:8","trueBody":{"id":1931,"nodeType":"Block","src":"10983:44:8","statements":[{"expression":{"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1927,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"11001:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11001:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1930,"nodeType":"ExpressionStatement","src":"11001:11:8"}]}}]},{"expression":{"id":1934,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"11053:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1815,"id":1935,"nodeType":"Return","src":"11046:13:8"}]},"documentation":{"id":1809,"nodeType":"StructuredDocumentation","src":"10031:114:8","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10159:5:8","parameters":{"id":1812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1811,"mutability":"mutable","name":"value","nameLocation":"10173:5:8","nodeType":"VariableDeclaration","scope":1937,"src":"10165:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1810,"name":"uint256","nodeType":"ElementaryTypeName","src":"10165:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10164:15:8"},"returnParameters":{"id":1815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1814,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1937,"src":"10203:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1813,"name":"uint256","nodeType":"ElementaryTypeName","src":"10203:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10202:9:8"},"scope":2100,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1973,"nodeType":"FunctionDefinition","src":"11220:248:8","nodes":[],"body":{"id":1972,"nodeType":"Block","src":"11301:167:8","nodes":[],"statements":[{"id":1971,"nodeType":"UncheckedBlock","src":"11311:151:8","statements":[{"assignments":[1949],"declarations":[{"constant":false,"id":1949,"mutability":"mutable","name":"result","nameLocation":"11343:6:8","nodeType":"VariableDeclaration","scope":1971,"src":"11335:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1948,"name":"uint256","nodeType":"ElementaryTypeName","src":"11335:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1953,"initialValue":{"arguments":[{"id":1951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"11358:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1950,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[1937,1973],"referencedDeclaration":1937,"src":"11352:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11352:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11335:29:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1954,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"11385:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1241","typeString":"enum MathUpgradeable.Rounding"},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1955,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"11395:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1241","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1956,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"11407:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1241_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":1957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11416:2:8","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1239,"src":"11407:11:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1241","typeString":"enum MathUpgradeable.Rounding"}},"src":"11395:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11422:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1960,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"11428:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11422:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"11437:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11422:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11395:47:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11449:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11395:55:8","trueExpression":{"hexValue":"31","id":1965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11445:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1968,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11394:57:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11385:66:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1947,"id":1970,"nodeType":"Return","src":"11378:73:8"}]}]},"documentation":{"id":1938,"nodeType":"StructuredDocumentation","src":"11072:143:8","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11229:5:8","parameters":{"id":1944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1940,"mutability":"mutable","name":"value","nameLocation":"11243:5:8","nodeType":"VariableDeclaration","scope":1973,"src":"11235:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1939,"name":"uint256","nodeType":"ElementaryTypeName","src":"11235:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1943,"mutability":"mutable","name":"rounding","nameLocation":"11259:8:8","nodeType":"VariableDeclaration","scope":1973,"src":"11250:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1241","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":1942,"nodeType":"UserDefinedTypeName","pathNode":{"id":1941,"name":"Rounding","nameLocations":["11250:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":1241,"src":"11250:8:8"},"referencedDeclaration":1241,"src":"11250:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1241","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"11234:34:8"},"returnParameters":{"id":1947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1973,"src":"11292:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1945,"name":"uint256","nodeType":"ElementaryTypeName","src":"11292:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11291:9:8"},"scope":2100,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2060,"nodeType":"FunctionDefinition","src":"11719:663:8","nodes":[],"body":{"id":2059,"nodeType":"Block","src":"11782:600:8","nodes":[],"statements":[{"assignments":[1982],"declarations":[{"constant":false,"id":1982,"mutability":"mutable","name":"result","nameLocation":"11800:6:8","nodeType":"VariableDeclaration","scope":2059,"src":"11792:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1981,"name":"uint256","nodeType":"ElementaryTypeName","src":"11792:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1984,"initialValue":{"hexValue":"30","id":1983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11809:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11792:18:8"},{"id":2056,"nodeType":"UncheckedBlock","src":"11820:533:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"11848:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11857:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11848:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11863:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11848:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1999,"nodeType":"IfStatement","src":"11844:98:8","trueBody":{"id":1998,"nodeType":"Block","src":"11866:76:8","statements":[{"expression":{"id":1992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"11884:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11894:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11884:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1993,"nodeType":"ExpressionStatement","src":"11884:13:8"},{"expression":{"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1994,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"11915:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11925:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11915:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1997,"nodeType":"ExpressionStatement","src":"11915:12:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"11959:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11968:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11959:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11973:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11959:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2014,"nodeType":"IfStatement","src":"11955:95:8","trueBody":{"id":2013,"nodeType":"Block","src":"11976:74:8","statements":[{"expression":{"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"11994:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12004:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11994:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2008,"nodeType":"ExpressionStatement","src":"11994:12:8"},{"expression":{"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2009,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"12024:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12034:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12024:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2012,"nodeType":"ExpressionStatement","src":"12024:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"12067:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12076:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12067:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12081:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12067:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2029,"nodeType":"IfStatement","src":"12063:95:8","trueBody":{"id":2028,"nodeType":"Block","src":"12084:74:8","statements":[{"expression":{"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"12102:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12112:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12102:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2023,"nodeType":"ExpressionStatement","src":"12102:12:8"},{"expression":{"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2024,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"12132:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12142:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12132:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2027,"nodeType":"ExpressionStatement","src":"12132:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"12175:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12184:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12175:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12189:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12175:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2044,"nodeType":"IfStatement","src":"12171:95:8","trueBody":{"id":2043,"nodeType":"Block","src":"12192:74:8","statements":[{"expression":{"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"12210:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12220:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12210:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2038,"nodeType":"ExpressionStatement","src":"12210:12:8"},{"expression":{"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2039,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"12240:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12250:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12240:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2042,"nodeType":"ExpressionStatement","src":"12240:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"12283:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12292:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12283:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12296:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12283:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2055,"nodeType":"IfStatement","src":"12279:64:8","trueBody":{"id":2054,"nodeType":"Block","src":"12299:44:8","statements":[{"expression":{"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2050,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"12317:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12327:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12317:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2053,"nodeType":"ExpressionStatement","src":"12317:11:8"}]}}]},{"expression":{"id":2057,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"12369:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1980,"id":2058,"nodeType":"Return","src":"12362:13:8"}]},"documentation":{"id":1974,"nodeType":"StructuredDocumentation","src":"11474:240:8","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11728:6:8","parameters":{"id":1977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1976,"mutability":"mutable","name":"value","nameLocation":"11743:5:8","nodeType":"VariableDeclaration","scope":2060,"src":"11735:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1975,"name":"uint256","nodeType":"ElementaryTypeName","src":"11735:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11734:15:8"},"returnParameters":{"id":1980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1979,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2060,"src":"11773:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1978,"name":"uint256","nodeType":"ElementaryTypeName","src":"11773:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11772:9:8"},"scope":2100,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2099,"nodeType":"FunctionDefinition","src":"12537:256:8","nodes":[],"body":{"id":2098,"nodeType":"Block","src":"12619:174:8","nodes":[],"statements":[{"id":2097,"nodeType":"UncheckedBlock","src":"12629:158:8","statements":[{"assignments":[2072],"declarations":[{"constant":false,"id":2072,"mutability":"mutable","name":"result","nameLocation":"12661:6:8","nodeType":"VariableDeclaration","scope":2097,"src":"12653:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2071,"name":"uint256","nodeType":"ElementaryTypeName","src":"12653:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2076,"initialValue":{"arguments":[{"id":2074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"12677:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2073,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2060,2099],"referencedDeclaration":2060,"src":"12670:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12670:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12653:30:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2077,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"12704:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1241","typeString":"enum MathUpgradeable.Rounding"},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2078,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"12714:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1241","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2079,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"12726:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1241_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":2080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12735:2:8","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1239,"src":"12726:11:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1241","typeString":"enum MathUpgradeable.Rounding"}},"src":"12714:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2083,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"12747:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12757:1:8","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12747:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2086,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12746:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12741:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"12762:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12741:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12714:53:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12774:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12714:61:8","trueExpression":{"hexValue":"31","id":2091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2094,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12713:63:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12704:72:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2070,"id":2096,"nodeType":"Return","src":"12697:79:8"}]}]},"documentation":{"id":2061,"nodeType":"StructuredDocumentation","src":"12388:144:8","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12546:6:8","parameters":{"id":2067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2063,"mutability":"mutable","name":"value","nameLocation":"12561:5:8","nodeType":"VariableDeclaration","scope":2099,"src":"12553:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2062,"name":"uint256","nodeType":"ElementaryTypeName","src":"12553:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2066,"mutability":"mutable","name":"rounding","nameLocation":"12577:8:8","nodeType":"VariableDeclaration","scope":2099,"src":"12568:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1241","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":2065,"nodeType":"UserDefinedTypeName","pathNode":{"id":2064,"name":"Rounding","nameLocations":["12568:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":1241,"src":"12568:8:8"},"referencedDeclaration":1241,"src":"12568:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1241","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"12552:34:8"},"returnParameters":{"id":2070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2069,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2099,"src":"12610:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2068,"name":"uint256","nodeType":"ElementaryTypeName","src":"12610:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12609:9:8"},"scope":2100,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"MathUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":1237,"nodeType":"StructuredDocumentation","src":"128:73:8","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"linearizedBaseContracts":[2100],"name":"MathUpgradeable","nameLocation":"210:15:8","scope":2101,"usedErrors":[],"usedEvents":[]}],"license":"MIT"}},"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol":{"id":9,"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol","id":2206,"exportedSymbols":{"SignedMathUpgradeable":[2205]},"nodeType":"SourceUnit","src":"109:1165:9","nodes":[{"id":2102,"nodeType":"PragmaDirective","src":"109:23:9","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":2205,"nodeType":"ContractDefinition","src":"215:1058:9","nodes":[{"id":2121,"nodeType":"FunctionDefinition","src":"322:101:9","nodes":[],"body":{"id":2120,"nodeType":"Block","src":"386:37:9","nodes":[],"statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2113,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"403:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2114,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2108,"src":"407:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"403:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2117,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2108,"src":"415:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"403:13:9","trueExpression":{"id":2116,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"411:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2112,"id":2119,"nodeType":"Return","src":"396:20:9"}]},"documentation":{"id":2104,"nodeType":"StructuredDocumentation","src":"251:66:9","text":" @dev Returns the largest of two signed numbers."},"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"331:3:9","parameters":{"id":2109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2106,"mutability":"mutable","name":"a","nameLocation":"342:1:9","nodeType":"VariableDeclaration","scope":2121,"src":"335:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2105,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2108,"mutability":"mutable","name":"b","nameLocation":"352:1:9","nodeType":"VariableDeclaration","scope":2121,"src":"345:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2107,"name":"int256","nodeType":"ElementaryTypeName","src":"345:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"334:20:9"},"returnParameters":{"id":2112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2121,"src":"378:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2110,"name":"int256","nodeType":"ElementaryTypeName","src":"378:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"377:8:9"},"scope":2205,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2139,"nodeType":"FunctionDefinition","src":"501:101:9","nodes":[],"body":{"id":2138,"nodeType":"Block","src":"565:37:9","nodes":[],"statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2131,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"582:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2132,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"586:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"582:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2135,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"594:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"582:13:9","trueExpression":{"id":2134,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"590:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2130,"id":2137,"nodeType":"Return","src":"575:20:9"}]},"documentation":{"id":2122,"nodeType":"StructuredDocumentation","src":"429:67:9","text":" @dev Returns the smallest of two signed numbers."},"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"510:3:9","parameters":{"id":2127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2124,"mutability":"mutable","name":"a","nameLocation":"521:1:9","nodeType":"VariableDeclaration","scope":2139,"src":"514:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2123,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2126,"mutability":"mutable","name":"b","nameLocation":"531:1:9","nodeType":"VariableDeclaration","scope":2139,"src":"524:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2125,"name":"int256","nodeType":"ElementaryTypeName","src":"524:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"513:20:9"},"returnParameters":{"id":2130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2139,"src":"557:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2128,"name":"int256","nodeType":"ElementaryTypeName","src":"557:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"556:8:9"},"scope":2205,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2183,"nodeType":"FunctionDefinition","src":"739:230:9","nodes":[],"body":{"id":2182,"nodeType":"Block","src":"807:162:9","nodes":[],"statements":[{"assignments":[2150],"declarations":[{"constant":false,"id":2150,"mutability":"mutable","name":"x","nameLocation":"876:1:9","nodeType":"VariableDeclaration","scope":2182,"src":"869:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2149,"name":"int256","nodeType":"ElementaryTypeName","src":"869:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2163,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2151,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"881:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2152,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"885:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2154,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2155,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"892:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2156,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"896:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"892:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2158,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"891:7:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"902:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"891:12:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2161,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"890:14:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"880:24:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"869:35:9"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2164,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"921:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2169,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"941:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"933:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2167,"name":"uint256","nodeType":"ElementaryTypeName","src":"933:7:9","typeDescriptions":{}}},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"933:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"947:3:9","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"933:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"926:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2165,"name":"int256","nodeType":"ElementaryTypeName","src":"926:6:9","typeDescriptions":{}}},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"926:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2174,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"955:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2175,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"959:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"955:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2177,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"954:7:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"926:35:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2179,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"925:37:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"921:41:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2148,"id":2181,"nodeType":"Return","src":"914:48:9"}]},"documentation":{"id":2140,"nodeType":"StructuredDocumentation","src":"608:126:9","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"748:7:9","parameters":{"id":2145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2142,"mutability":"mutable","name":"a","nameLocation":"763:1:9","nodeType":"VariableDeclaration","scope":2183,"src":"756:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2141,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2144,"mutability":"mutable","name":"b","nameLocation":"773:1:9","nodeType":"VariableDeclaration","scope":2183,"src":"766:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2143,"name":"int256","nodeType":"ElementaryTypeName","src":"766:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"755:20:9"},"returnParameters":{"id":2148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2183,"src":"799:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2146,"name":"int256","nodeType":"ElementaryTypeName","src":"799:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"798:8:9"},"scope":2205,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2204,"nodeType":"FunctionDefinition","src":"1058:213:9","nodes":[],"body":{"id":2203,"nodeType":"Block","src":"1113:158:9","nodes":[],"statements":[{"id":2202,"nodeType":"UncheckedBlock","src":"1123:142:9","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2193,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"1238:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":2194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1243:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1238:6:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1251:2:9","subExpression":{"id":2197,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"1252:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1238:15:9","trueExpression":{"id":2196,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"1247:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1230:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2191,"name":"uint256","nodeType":"ElementaryTypeName","src":"1230:7:9","typeDescriptions":{}}},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1230:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2190,"id":2201,"nodeType":"Return","src":"1223:31:9"}]}]},"documentation":{"id":2184,"nodeType":"StructuredDocumentation","src":"975:78:9","text":" @dev Returns the absolute unsigned value of a signed value."},"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1067:3:9","parameters":{"id":2187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2186,"mutability":"mutable","name":"n","nameLocation":"1078:1:9","nodeType":"VariableDeclaration","scope":2204,"src":"1071:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2185,"name":"int256","nodeType":"ElementaryTypeName","src":"1071:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1070:10:9"},"returnParameters":{"id":2190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2204,"src":"1104:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2188,"name":"uint256","nodeType":"ElementaryTypeName","src":"1104:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1103:9:9"},"scope":2205,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"SignedMathUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":2103,"nodeType":"StructuredDocumentation","src":"134:80:9","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"linearizedBaseContracts":[2205],"name":"SignedMathUpgradeable","nameLocation":"223:21:9","scope":2206,"usedErrors":[],"usedEvents":[]}],"license":"MIT"}},"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol":{"id":10,"ast":{"absolutePath":"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol","id":2335,"exportedSymbols":{"AddressUpgradeable":[907],"BoringOwnableUpgradeable":[2334],"BoringOwnableUpgradeableData":[2213],"Initializable":[577]},"nodeType":"SourceUnit","src":"45:2029:10","nodes":[{"id":2207,"nodeType":"PragmaDirective","src":"45:23:10","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":2208,"nodeType":"ImportDirective","src":"70:75:10","nodes":[],"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","nameLocation":"-1:-1:-1","scope":2335,"sourceUnit":578,"symbolAliases":[],"unitAlias":""},{"id":2213,"nodeType":"ContractDefinition","src":"147:100:10","nodes":[{"id":2210,"nodeType":"VariableDeclaration","src":"191:20:10","nodes":[],"constant":false,"functionSelector":"8da5cb5b","mutability":"mutable","name":"owner","nameLocation":"206:5:10","scope":2213,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2209,"name":"address","nodeType":"ElementaryTypeName","src":"191:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"id":2212,"nodeType":"VariableDeclaration","src":"217:27:10","nodes":[],"constant":false,"functionSelector":"e30c3978","mutability":"mutable","name":"pendingOwner","nameLocation":"232:12:10","scope":2213,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2211,"name":"address","nodeType":"ElementaryTypeName","src":"217:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"}],"abstract":false,"baseContracts":[],"canonicalName":"BoringOwnableUpgradeableData","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"linearizedBaseContracts":[2213],"name":"BoringOwnableUpgradeableData","nameLocation":"156:28:10","scope":2335,"usedErrors":[],"usedEvents":[]},{"id":2334,"nodeType":"ContractDefinition","src":"249:1824:10","nodes":[{"id":2223,"nodeType":"EventDefinition","src":"345:84:10","nodes":[],"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","name":"OwnershipTransferred","nameLocation":"351:20:10","parameters":{"id":2222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2219,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"388:13:10","nodeType":"VariableDeclaration","scope":2223,"src":"372:29:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2218,"name":"address","nodeType":"ElementaryTypeName","src":"372:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2221,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"419:8:10","nodeType":"VariableDeclaration","scope":2223,"src":"403:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2220,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"371:57:10"}},{"id":2234,"nodeType":"FunctionDefinition","src":"435:93:10","nodes":[],"body":{"id":2233,"nodeType":"Block","src":"493:35:10","nodes":[],"statements":[{"expression":{"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2228,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"503:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2229,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"511:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"515:6:10","memberName":"sender","nodeType":"MemberAccess","src":"511:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"503:18:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2232,"nodeType":"ExpressionStatement","src":"503:18:10"}]},"implemented":true,"kind":"function","modifiers":[{"id":2226,"kind":"modifierInvocation","modifierName":{"id":2225,"name":"onlyInitializing","nameLocations":["476:16:10"],"nodeType":"IdentifierPath","referencedDeclaration":522,"src":"476:16:10"},"nodeType":"ModifierInvocation","src":"476:16:10"}],"name":"__BoringOwnable_init","nameLocation":"444:20:10","parameters":{"id":2224,"nodeType":"ParameterList","parameters":[],"src":"464:2:10"},"returnParameters":{"id":2227,"nodeType":"ParameterList","parameters":[],"src":"493:0:10"},"scope":2334,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":2283,"nodeType":"FunctionDefinition","src":"987:459:10","nodes":[],"body":{"id":2282,"nodeType":"Block","src":"1077:369:10","nodes":[],"statements":[{"condition":{"id":2246,"name":"direct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"1091:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2280,"nodeType":"Block","src":"1369:71:10","statements":[{"expression":{"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2276,"name":"pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"1406:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2277,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"1421:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1406:23:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2279,"nodeType":"ExpressionStatement","src":"1406:23:10"}]},"id":2281,"nodeType":"IfStatement","src":"1087:353:10","trueBody":{"id":2275,"nodeType":"Block","src":"1099:264:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2248,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"1143:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1163:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1155:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2249,"name":"address","nodeType":"ElementaryTypeName","src":"1155:7:10","typeDescriptions":{}}},"id":2252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1155:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1143:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2254,"name":"renounce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"1169:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1143:34:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a207a65726f2061646472657373","id":2256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1179:23:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_4bea69941b0d0257b3e89326ac37d51764d80d2e6e1a44e2d90b6a6f85f1b830","typeString":"literal_string \"Ownable: zero address\""},"value":"Ownable: zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4bea69941b0d0257b3e89326ac37d51764d80d2e6e1a44e2d90b6a6f85f1b830","typeString":"literal_string \"Ownable: zero address\""}],"id":2247,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1135:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1135:68:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2258,"nodeType":"ExpressionStatement","src":"1135:68:10"},{"eventCall":{"arguments":[{"id":2260,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"1267:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2261,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"1274:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2259,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"1246:20:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1246:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2263,"nodeType":"EmitStatement","src":"1241:42:10"},{"expression":{"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2264,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"1297:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2265,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"1305:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1297:16:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2267,"nodeType":"ExpressionStatement","src":"1297:16:10"},{"expression":{"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2268,"name":"pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"1327:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":2271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2269,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:10","typeDescriptions":{}}},"id":2272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1327:25:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2274,"nodeType":"ExpressionStatement","src":"1327:25:10"}]}}]},"documentation":{"id":2235,"nodeType":"StructuredDocumentation","src":"534:448:10","text":"@notice Transfers ownership to `newOwner`. Either directly or claimable by the new pending owner.\n Can only be invoked by the current `owner`.\n @param newOwner Address of the new owner.\n @param direct True if `newOwner` should be set immediately. False if `newOwner` needs to use `claimOwnership`.\n @param renounce Allows the `newOwner` to be `address(0)` if `direct` and `renounce` is True. Has no effect otherwise."},"functionSelector":"078dfbe7","implemented":true,"kind":"function","modifiers":[{"id":2244,"kind":"modifierInvocation","modifierName":{"id":2243,"name":"onlyOwner","nameLocations":["1067:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":2329,"src":"1067:9:10"},"nodeType":"ModifierInvocation","src":"1067:9:10"}],"name":"transferOwnership","nameLocation":"996:17:10","parameters":{"id":2242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2237,"mutability":"mutable","name":"newOwner","nameLocation":"1022:8:10","nodeType":"VariableDeclaration","scope":2283,"src":"1014:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2236,"name":"address","nodeType":"ElementaryTypeName","src":"1014:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2239,"mutability":"mutable","name":"direct","nameLocation":"1037:6:10","nodeType":"VariableDeclaration","scope":2283,"src":"1032:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2238,"name":"bool","nodeType":"ElementaryTypeName","src":"1032:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2241,"mutability":"mutable","name":"renounce","nameLocation":"1050:8:10","nodeType":"VariableDeclaration","scope":2283,"src":"1045:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2240,"name":"bool","nodeType":"ElementaryTypeName","src":"1045:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1013:46:10"},"returnParameters":{"id":2245,"nodeType":"ParameterList","parameters":[],"src":"1077:0:10"},"scope":2334,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":2316,"nodeType":"FunctionDefinition","src":"1525:330:10","nodes":[],"body":{"id":2315,"nodeType":"Block","src":"1558:297:10","nodes":[],"statements":[{"assignments":[2288],"declarations":[{"constant":false,"id":2288,"mutability":"mutable","name":"_pendingOwner","nameLocation":"1576:13:10","nodeType":"VariableDeclaration","scope":2315,"src":"1568:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2287,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2290,"initialValue":{"id":2289,"name":"pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"1592:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1568:36:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2292,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1641:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1645:6:10","memberName":"sender","nodeType":"MemberAccess","src":"1641:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2294,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"1655:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1641:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e6572","id":2296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1670:34:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_a7ec3208bb4c778bbdbdd3fdfe92b1d315d85dd01a9131ea9f648f906ac7a6b8","typeString":"literal_string \"Ownable: caller != pending owner\""},"value":"Ownable: caller != pending owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a7ec3208bb4c778bbdbdd3fdfe92b1d315d85dd01a9131ea9f648f906ac7a6b8","typeString":"literal_string \"Ownable: caller != pending owner\""}],"id":2291,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1633:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1633:72:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2298,"nodeType":"ExpressionStatement","src":"1633:72:10"},{"eventCall":{"arguments":[{"id":2300,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"1761:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2301,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"1768:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2299,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"1740:20:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1740:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2303,"nodeType":"EmitStatement","src":"1735:47:10"},{"expression":{"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2304,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"1792:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2305,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"1800:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1792:21:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2307,"nodeType":"ExpressionStatement","src":"1792:21:10"},{"expression":{"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2308,"name":"pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"1823:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":2311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1846:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1838:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2309,"name":"address","nodeType":"ElementaryTypeName","src":"1838:7:10","typeDescriptions":{}}},"id":2312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1838:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1823:25:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2314,"nodeType":"ExpressionStatement","src":"1823:25:10"}]},"documentation":{"id":2284,"nodeType":"StructuredDocumentation","src":"1452:68:10","text":"@notice Needs to be called by `pendingOwner` to claim ownership."},"functionSelector":"4e71e0c8","implemented":true,"kind":"function","modifiers":[],"name":"claimOwnership","nameLocation":"1534:14:10","parameters":{"id":2285,"nodeType":"ParameterList","parameters":[],"src":"1548:2:10"},"returnParameters":{"id":2286,"nodeType":"ParameterList","parameters":[],"src":"1558:0:10"},"scope":2334,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":2329,"nodeType":"ModifierDefinition","src":"1926:113:10","nodes":[],"body":{"id":2328,"nodeType":"Block","src":"1947:92:10","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2320,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1965:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1969:6:10","memberName":"sender","nodeType":"MemberAccess","src":"1965:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2322,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"1979:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1965:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":2324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1986:34:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":2319,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1957:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:64:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2326,"nodeType":"ExpressionStatement","src":"1957:64:10"},{"id":2327,"nodeType":"PlaceholderStatement","src":"2031:1:10"}]},"documentation":{"id":2317,"nodeType":"StructuredDocumentation","src":"1861:60:10","text":"@notice Only allows the `owner` to execute the function."},"name":"onlyOwner","nameLocation":"1935:9:10","parameters":{"id":2318,"nodeType":"ParameterList","parameters":[],"src":"1944:2:10"},"virtual":false,"visibility":"internal"},{"id":2333,"nodeType":"VariableDeclaration","src":"2045:25:10","nodes":[],"constant":false,"mutability":"mutable","name":"__gap","nameLocation":"2065:5:10","scope":2334,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$48_storage","typeString":"uint256[48]"},"typeName":{"baseType":{"id":2330,"name":"uint256","nodeType":"ElementaryTypeName","src":"2045:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2332,"length":{"hexValue":"3438","id":2331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2053:2:10","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"ArrayTypeName","src":"2045:11:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$48_storage_ptr","typeString":"uint256[48]"}},"visibility":"private"}],"abstract":true,"baseContracts":[{"baseName":{"id":2214,"name":"BoringOwnableUpgradeableData","nameLocations":["295:28:10"],"nodeType":"IdentifierPath","referencedDeclaration":2213,"src":"295:28:10"},"id":2215,"nodeType":"InheritanceSpecifier","src":"295:28:10"},{"baseName":{"id":2216,"name":"Initializable","nameLocations":["325:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":577,"src":"325:13:10"},"id":2217,"nodeType":"InheritanceSpecifier","src":"325:13:10"}],"canonicalName":"BoringOwnableUpgradeable","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"linearizedBaseContracts":[2334,577,2213],"name":"BoringOwnableUpgradeable","nameLocation":"267:24:10","scope":2335,"usedErrors":[],"usedEvents":[423,2223]}],"license":"GPL-3.0-or-later"}},"contracts/pendle/contracts/core/libraries/math/PMath.sol":{"id":11,"ast":{"absolutePath":"contracts/pendle/contracts/core/libraries/math/PMath.sol","id":2997,"exportedSymbols":{"PMath":[2996]},"nodeType":"SourceUnit","src":"688:4929:11","nodes":[{"id":2336,"nodeType":"PragmaDirective","src":"688:23:11","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":2996,"nodeType":"ContractDefinition","src":"783:4833:11","nodes":[{"id":2339,"nodeType":"VariableDeclaration","src":"803:36:11","nodes":[],"constant":true,"mutability":"constant","name":"ONE","nameLocation":"829:3:11","scope":2996,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2337,"name":"uint256","nodeType":"ElementaryTypeName","src":"803:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653138","id":2338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"835:4:11","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"visibility":"internal"},{"id":2342,"nodeType":"VariableDeclaration","src":"866:36:11","nodes":[],"constant":true,"mutability":"constant","name":"IONE","nameLocation":"891:4:11","scope":2996,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2340,"name":"int256","nodeType":"ElementaryTypeName","src":"866:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"31653138","id":2341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"898:4:11","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"visibility":"internal"},{"id":2363,"nodeType":"FunctionDefinition","src":"930:149:11","nodes":[],"body":{"id":2362,"nodeType":"Block","src":"1001:78:11","nodes":[],"statements":[{"id":2361,"nodeType":"UncheckedBlock","src":"1011:62:11","statements":[{"expression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2351,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"1043:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2352,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"1048:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1043:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1060:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1043:18:11","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2354,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"1052:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2355,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"1056:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1052:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2359,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1042:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2350,"id":2360,"nodeType":"Return","src":"1035:27:11"}]}]},"implemented":true,"kind":"function","modifiers":[],"name":"subMax0","nameLocation":"939:7:11","parameters":{"id":2347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2344,"mutability":"mutable","name":"a","nameLocation":"955:1:11","nodeType":"VariableDeclaration","scope":2363,"src":"947:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2343,"name":"uint256","nodeType":"ElementaryTypeName","src":"947:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2346,"mutability":"mutable","name":"b","nameLocation":"966:1:11","nodeType":"VariableDeclaration","scope":2363,"src":"958:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2345,"name":"uint256","nodeType":"ElementaryTypeName","src":"958:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"946:22:11"},"returnParameters":{"id":2350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2363,"src":"992:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2348,"name":"uint256","nodeType":"ElementaryTypeName","src":"992:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"991:9:11"},"scope":2996,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2384,"nodeType":"FunctionDefinition","src":"1085:201:11","nodes":[],"body":{"id":2383,"nodeType":"Block","src":"1154:132:11","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2373,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"1172:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2374,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"1177:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1172:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6e65676174697665","id":2376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1180:10:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_5c5e2f1fbc734e42aa272c3420aeb7631dc1efac79a3bf6e1303c2b8c0ccc2e4","typeString":"literal_string \"negative\""},"value":"negative"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5c5e2f1fbc734e42aa272c3420aeb7631dc1efac79a3bf6e1303c2b8c0ccc2e4","typeString":"literal_string \"negative\""}],"id":2372,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1164:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1164:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2378,"nodeType":"ExpressionStatement","src":"1164:27:11"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2379,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"1208:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2380,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"1212:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1208:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2371,"id":2382,"nodeType":"Return","src":"1201:12:11"}]},"implemented":true,"kind":"function","modifiers":[],"name":"subNoNeg","nameLocation":"1094:8:11","parameters":{"id":2368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2365,"mutability":"mutable","name":"a","nameLocation":"1110:1:11","nodeType":"VariableDeclaration","scope":2384,"src":"1103:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2364,"name":"int256","nodeType":"ElementaryTypeName","src":"1103:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2367,"mutability":"mutable","name":"b","nameLocation":"1120:1:11","nodeType":"VariableDeclaration","scope":2384,"src":"1113:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2366,"name":"int256","nodeType":"ElementaryTypeName","src":"1113:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1102:20:11"},"returnParameters":{"id":2371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2384,"src":"1146:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2369,"name":"int256","nodeType":"ElementaryTypeName","src":"1146:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1145:8:11"},"scope":2996,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2405,"nodeType":"FunctionDefinition","src":"1292:175:11","nodes":[],"body":{"id":2404,"nodeType":"Block","src":"1363:104:11","nodes":[],"statements":[{"assignments":[2394],"declarations":[{"constant":false,"id":2394,"mutability":"mutable","name":"product","nameLocation":"1381:7:11","nodeType":"VariableDeclaration","scope":2404,"src":"1373:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2393,"name":"uint256","nodeType":"ElementaryTypeName","src":"1373:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2398,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2395,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"1391:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2396,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"1395:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1391:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1373:23:11"},{"id":2403,"nodeType":"UncheckedBlock","src":"1406:55:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2399,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"1437:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2400,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"1447:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1437:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2392,"id":2402,"nodeType":"Return","src":"1430:20:11"}]}]},"implemented":true,"kind":"function","modifiers":[],"name":"mulDown","nameLocation":"1301:7:11","parameters":{"id":2389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2386,"mutability":"mutable","name":"a","nameLocation":"1317:1:11","nodeType":"VariableDeclaration","scope":2405,"src":"1309:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2385,"name":"uint256","nodeType":"ElementaryTypeName","src":"1309:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2388,"mutability":"mutable","name":"b","nameLocation":"1328:1:11","nodeType":"VariableDeclaration","scope":2405,"src":"1320:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2387,"name":"uint256","nodeType":"ElementaryTypeName","src":"1320:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1308:22:11"},"returnParameters":{"id":2392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2405,"src":"1354:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2390,"name":"uint256","nodeType":"ElementaryTypeName","src":"1354:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1353:9:11"},"scope":2996,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2426,"nodeType":"FunctionDefinition","src":"1473:172:11","nodes":[],"body":{"id":2425,"nodeType":"Block","src":"1541:104:11","nodes":[],"statements":[{"assignments":[2415],"declarations":[{"constant":false,"id":2415,"mutability":"mutable","name":"product","nameLocation":"1558:7:11","nodeType":"VariableDeclaration","scope":2425,"src":"1551:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2414,"name":"int256","nodeType":"ElementaryTypeName","src":"1551:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2419,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2416,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"1568:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2417,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"1572:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1568:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1551:22:11"},{"id":2424,"nodeType":"UncheckedBlock","src":"1583:56:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2420,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"1614:7:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2421,"name":"IONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"1624:4:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1614:14:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2413,"id":2423,"nodeType":"Return","src":"1607:21:11"}]}]},"implemented":true,"kind":"function","modifiers":[],"name":"mulDown","nameLocation":"1482:7:11","parameters":{"id":2410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2407,"mutability":"mutable","name":"a","nameLocation":"1497:1:11","nodeType":"VariableDeclaration","scope":2426,"src":"1490:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2406,"name":"int256","nodeType":"ElementaryTypeName","src":"1490:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2409,"mutability":"mutable","name":"b","nameLocation":"1507:1:11","nodeType":"VariableDeclaration","scope":2426,"src":"1500:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2408,"name":"int256","nodeType":"ElementaryTypeName","src":"1500:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1489:20:11"},"returnParameters":{"id":2413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2426,"src":"1533:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2411,"name":"int256","nodeType":"ElementaryTypeName","src":"1533:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1532:8:11"},"scope":2996,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2447,"nodeType":"FunctionDefinition","src":"1651:179:11","nodes":[],"body":{"id":2446,"nodeType":"Block","src":"1722:108:11","nodes":[],"statements":[{"assignments":[2436],"declarations":[{"constant":false,"id":2436,"mutability":"mutable","name":"aInflated","nameLocation":"1740:9:11","nodeType":"VariableDeclaration","scope":2446,"src":"1732:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2435,"name":"uint256","nodeType":"ElementaryTypeName","src":"1732:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2440,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2437,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"1752:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2438,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"1756:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1752:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1732:27:11"},{"id":2445,"nodeType":"UncheckedBlock","src":"1769:55:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2441,"name":"aInflated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"1800:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2442,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"1812:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1800:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2434,"id":2444,"nodeType":"Return","src":"1793:20:11"}]}]},"implemented":true,"kind":"function","modifiers":[],"name":"divDown","nameLocation":"1660:7:11","parameters":{"id":2431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2428,"mutability":"mutable","name":"a","nameLocation":"1676:1:11","nodeType":"VariableDeclaration","scope":2447,"src":"1668:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2427,"name":"uint256","nodeType":"ElementaryTypeName","src":"1668:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2430,"mutability":"mutable","name":"b","nameLocation":"1687:1:11","nodeType":"VariableDeclaration","scope":2447,"src":"1679:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2429,"name":"uint256","nodeType":"ElementaryTypeName","src":"1679:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1667:22:11"},"returnParameters":{"id":2434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2447,"src":"1713:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2432,"name":"uint256","nodeType":"ElementaryTypeName","src":"1713:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1712:9:11"},"scope":2996,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2468,"nodeType":"FunctionDefinition","src":"1836:176:11","nodes":[],"body":{"id":2467,"nodeType":"Block","src":"1904:108:11","nodes":[],"statements":[{"assignments":[2457],"declarations":[{"constant":false,"id":2457,"mutability":"mutable","name":"aInflated","nameLocation":"1921:9:11","nodeType":"VariableDeclaration","scope":2467,"src":"1914:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2456,"name":"int256","nodeType":"ElementaryTypeName","src":"1914:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2461,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2458,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"1933:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2459,"name":"IONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"1937:4:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1933:8:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1914:27:11"},{"id":2466,"nodeType":"UncheckedBlock","src":"1951:55:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2462,"name":"aInflated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"1982:9:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2463,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"1994:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1982:13:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2455,"id":2465,"nodeType":"Return","src":"1975:20:11"}]}]},"implemented":true,"kind":"function","modifiers":[],"name":"divDown","nameLocation":"1845:7:11","parameters":{"id":2452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2449,"mutability":"mutable","name":"a","nameLocation":"1860:1:11","nodeType":"VariableDeclaration","scope":2468,"src":"1853:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2448,"name":"int256","nodeType":"ElementaryTypeName","src":"1853:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2451,"mutability":"mutable","name":"b","nameLocation":"1870:1:11","nodeType":"VariableDeclaration","scope":2468,"src":"1863:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2450,"name":"int256","nodeType":"ElementaryTypeName","src":"1863:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1852:20:11"},"returnParameters":{"id":2455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2468,"src":"1896:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2453,"name":"int256","nodeType":"ElementaryTypeName","src":"1896:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1895:8:11"},"scope":2996,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2487,"nodeType":"FunctionDefinition","src":"2018:111:11","nodes":[],"body":{"id":2486,"nodeType":"Block","src":"2090:39:11","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2477,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"2108:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2478,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"2112:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2108:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2116:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2108:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2482,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2107:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2483,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"2121:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2107:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2476,"id":2485,"nodeType":"Return","src":"2100:22:11"}]},"implemented":true,"kind":"function","modifiers":[],"name":"rawDivUp","nameLocation":"2027:8:11","parameters":{"id":2473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2470,"mutability":"mutable","name":"a","nameLocation":"2044:1:11","nodeType":"VariableDeclaration","scope":2487,"src":"2036:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2469,"name":"uint256","nodeType":"ElementaryTypeName","src":"2036:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2472,"mutability":"mutable","name":"b","nameLocation":"2055:1:11","nodeType":"VariableDeclaration","scope":2487,"src":"2047:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2471,"name":"uint256","nodeType":"ElementaryTypeName","src":"2047:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2035:22:11"},"returnParameters":{"id":2476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2475,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2487,"src":"2081:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2474,"name":"uint256","nodeType":"ElementaryTypeName","src":"2081:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2080:9:11"},"scope":2996,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2541,"nodeType":"FunctionDefinition","src":"2158:301:11","nodes":[],"body":{"id":2540,"nodeType":"Block","src":"2217:242:11","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2494,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"2231:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"33","id":2495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2235:1:11","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"2231:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2530,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"2415:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2420:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2415:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2538,"nodeType":"IfStatement","src":"2411:42:11","trueBody":{"id":2537,"nodeType":"Block","src":"2423:30:11","statements":[{"expression":{"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2533,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"2437:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":2534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2441:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2437:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2536,"nodeType":"ExpressionStatement","src":"2437:5:11"}]}},"id":2539,"nodeType":"IfStatement","src":"2227:226:11","trueBody":{"id":2529,"nodeType":"Block","src":"2238:167:11","statements":[{"expression":{"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2497,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"2252:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2498,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"2256:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2252:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2500,"nodeType":"ExpressionStatement","src":"2252:5:11"},{"assignments":[2502],"declarations":[{"constant":false,"id":2502,"mutability":"mutable","name":"x","nameLocation":"2279:1:11","nodeType":"VariableDeclaration","scope":2529,"src":"2271:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2501,"name":"uint256","nodeType":"ElementaryTypeName","src":"2271:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2508,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2503,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"2283:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2287:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2283:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2291:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2283:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2271:21:11"},{"body":{"id":2527,"nodeType":"Block","src":"2320:75:11","statements":[{"expression":{"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2512,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"2338:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2513,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"2342:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2338:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2515,"nodeType":"ExpressionStatement","src":"2338:5:11"},{"expression":{"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2516,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"2361:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2517,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"2366:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2518,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"2370:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2366:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2520,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"2374:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2366:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2522,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2365:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2379:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2365:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2361:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2526,"nodeType":"ExpressionStatement","src":"2361:19:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2509,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"2313:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2510,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"2317:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2313:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2528,"nodeType":"WhileStatement","src":"2306:89:11"}]}}]},"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"2167:4:11","parameters":{"id":2490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2489,"mutability":"mutable","name":"y","nameLocation":"2180:1:11","nodeType":"VariableDeclaration","scope":2541,"src":"2172:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2488,"name":"uint256","nodeType":"ElementaryTypeName","src":"2172:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2171:11:11"},"returnParameters":{"id":2493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2492,"mutability":"mutable","name":"z","nameLocation":"2214:1:11","nodeType":"VariableDeclaration","scope":2541,"src":"2206:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2491,"name":"uint256","nodeType":"ElementaryTypeName","src":"2206:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2205:11:11"},"scope":2996,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2553,"nodeType":"FunctionDefinition","src":"2465:88:11","nodes":[],"body":{"id":2552,"nodeType":"Block","src":"2524:29:11","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2548,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"2541:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2549,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"2545:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2541:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2547,"id":2551,"nodeType":"Return","src":"2534:12:11"}]},"implemented":true,"kind":"function","modifiers":[],"name":"square","nameLocation":"2474:6:11","parameters":{"id":2544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2543,"mutability":"mutable","name":"x","nameLocation":"2489:1:11","nodeType":"VariableDeclaration","scope":2553,"src":"2481:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2542,"name":"uint256","nodeType":"ElementaryTypeName","src":"2481:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2480:11:11"},"returnParameters":{"id":2547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2553,"src":"2515:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2545,"name":"uint256","nodeType":"ElementaryTypeName","src":"2515:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2514:9:11"},"scope":2996,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2566,"nodeType":"FunctionDefinition","src":"2559:100:11","nodes":[],"body":{"id":2565,"nodeType":"Block","src":"2622:37:11","nodes":[],"statements":[{"expression":{"arguments":[{"id":2561,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2555,"src":"2647:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2562,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2555,"src":"2650:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2560,"name":"mulDown","nodeType":"Identifier","overloadedDeclarations":[2405,2426],"referencedDeclaration":2405,"src":"2639:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2559,"id":2564,"nodeType":"Return","src":"2632:20:11"}]},"implemented":true,"kind":"function","modifiers":[],"name":"squareDown","nameLocation":"2568:10:11","parameters":{"id":2556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2555,"mutability":"mutable","name":"x","nameLocation":"2587:1:11","nodeType":"VariableDeclaration","scope":2566,"src":"2579:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2554,"name":"uint256","nodeType":"ElementaryTypeName","src":"2579:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2578:11:11"},"returnParameters":{"id":2559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2558,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2566,"src":"2613:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2557,"name":"uint256","nodeType":"ElementaryTypeName","src":"2613:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2612:9:11"},"scope":2996,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2585,"nodeType":"FunctionDefinition","src":"2665:102:11","nodes":[],"body":{"id":2584,"nodeType":"Block","src":"2720:47:11","nodes":[],"statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2575,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"2745:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2749:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2745:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"2757:2:11","subExpression":{"id":2579,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"2758:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2745:14:11","trueExpression":{"id":2578,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"2753:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2737:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2573,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:11","typeDescriptions":{}}},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2737:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2572,"id":2583,"nodeType":"Return","src":"2730:30:11"}]},"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"2674:3:11","parameters":{"id":2569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2568,"mutability":"mutable","name":"x","nameLocation":"2685:1:11","nodeType":"VariableDeclaration","scope":2585,"src":"2678:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2567,"name":"int256","nodeType":"ElementaryTypeName","src":"2678:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2677:10:11"},"returnParameters":{"id":2572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2585,"src":"2711:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2570,"name":"uint256","nodeType":"ElementaryTypeName","src":"2711:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:9:11"},"scope":2996,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2599,"nodeType":"FunctionDefinition","src":"2773:86:11","nodes":[],"body":{"id":2598,"nodeType":"Block","src":"2827:32:11","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2592,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"2844:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"id":2594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"2849:2:11","subExpression":{"hexValue":"31","id":2593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2850:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}}],"id":2595,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2848:4:11","typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}},"src":"2844:8:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2591,"id":2597,"nodeType":"Return","src":"2837:15:11"}]},"implemented":true,"kind":"function","modifiers":[],"name":"neg","nameLocation":"2782:3:11","parameters":{"id":2588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2587,"mutability":"mutable","name":"x","nameLocation":"2793:1:11","nodeType":"VariableDeclaration","scope":2599,"src":"2786:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2586,"name":"int256","nodeType":"ElementaryTypeName","src":"2786:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2785:10:11"},"returnParameters":{"id":2591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2599,"src":"2819:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2589,"name":"int256","nodeType":"ElementaryTypeName","src":"2819:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2818:8:11"},"scope":2996,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2615,"nodeType":"FunctionDefinition","src":"2865:92:11","nodes":[],"body":{"id":2614,"nodeType":"Block","src":"2920:37:11","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2607,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"2941:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2606,"name":"Int","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"2937:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_int256_$","typeString":"function (uint256) pure returns (int256)"}},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2937:6:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"id":2610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"2947:2:11","subExpression":{"hexValue":"31","id":2609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}}],"id":2611,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2946:4:11","typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}},"src":"2937:13:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2605,"id":2613,"nodeType":"Return","src":"2930:20:11"}]},"implemented":true,"kind":"function","modifiers":[],"name":"neg","nameLocation":"2874:3:11","parameters":{"id":2602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2601,"mutability":"mutable","name":"x","nameLocation":"2886:1:11","nodeType":"VariableDeclaration","scope":2615,"src":"2878:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2600,"name":"uint256","nodeType":"ElementaryTypeName","src":"2878:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2877:11:11"},"returnParameters":{"id":2605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2604,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2615,"src":"2912:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2603,"name":"int256","nodeType":"ElementaryTypeName","src":"2912:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2911:8:11"},"scope":2996,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2633,"nodeType":"FunctionDefinition","src":"2963:106:11","nodes":[],"body":{"id":2632,"nodeType":"Block","src":"3030:39:11","nodes":[],"statements":[{"expression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2624,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"3048:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2625,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"3052:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3048:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2628,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"3060:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3048:13:11","trueExpression":{"id":2627,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"3056:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2630,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3047:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2623,"id":2631,"nodeType":"Return","src":"3040:22:11"}]},"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2972:3:11","parameters":{"id":2620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2617,"mutability":"mutable","name":"x","nameLocation":"2984:1:11","nodeType":"VariableDeclaration","scope":2633,"src":"2976:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2616,"name":"uint256","nodeType":"ElementaryTypeName","src":"2976:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2619,"mutability":"mutable","name":"y","nameLocation":"2995:1:11","nodeType":"VariableDeclaration","scope":2633,"src":"2987:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2618,"name":"uint256","nodeType":"ElementaryTypeName","src":"2987:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2975:22:11"},"returnParameters":{"id":2623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2633,"src":"3021:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2621,"name":"uint256","nodeType":"ElementaryTypeName","src":"3021:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3020:9:11"},"scope":2996,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2651,"nodeType":"FunctionDefinition","src":"3075:103:11","nodes":[],"body":{"id":2650,"nodeType":"Block","src":"3139:39:11","nodes":[],"statements":[{"expression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2642,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"3157:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2643,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"3161:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"3157:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2646,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"3169:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3157:13:11","trueExpression":{"id":2645,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"3165:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2648,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3156:15:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2641,"id":2649,"nodeType":"Return","src":"3149:22:11"}]},"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3084:3:11","parameters":{"id":2638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2635,"mutability":"mutable","name":"x","nameLocation":"3095:1:11","nodeType":"VariableDeclaration","scope":2651,"src":"3088:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2634,"name":"int256","nodeType":"ElementaryTypeName","src":"3088:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2637,"mutability":"mutable","name":"y","nameLocation":"3105:1:11","nodeType":"VariableDeclaration","scope":2651,"src":"3098:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2636,"name":"int256","nodeType":"ElementaryTypeName","src":"3098:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"3087:20:11"},"returnParameters":{"id":2641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2651,"src":"3131:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2639,"name":"int256","nodeType":"ElementaryTypeName","src":"3131:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"3130:8:11"},"scope":2996,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2669,"nodeType":"FunctionDefinition","src":"3184:106:11","nodes":[],"body":{"id":2668,"nodeType":"Block","src":"3251:39:11","nodes":[],"statements":[{"expression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2660,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"3269:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2661,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"3273:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3269:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2664,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"3281:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3269:13:11","trueExpression":{"id":2663,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"3277:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2666,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3268:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2659,"id":2667,"nodeType":"Return","src":"3261:22:11"}]},"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3193:3:11","parameters":{"id":2656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2653,"mutability":"mutable","name":"x","nameLocation":"3205:1:11","nodeType":"VariableDeclaration","scope":2669,"src":"3197:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2652,"name":"uint256","nodeType":"ElementaryTypeName","src":"3197:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2655,"mutability":"mutable","name":"y","nameLocation":"3216:1:11","nodeType":"VariableDeclaration","scope":2669,"src":"3208:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2654,"name":"uint256","nodeType":"ElementaryTypeName","src":"3208:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3196:22:11"},"returnParameters":{"id":2659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2669,"src":"3242:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2657,"name":"uint256","nodeType":"ElementaryTypeName","src":"3242:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3241:9:11"},"scope":2996,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2687,"nodeType":"FunctionDefinition","src":"3296:103:11","nodes":[],"body":{"id":2686,"nodeType":"Block","src":"3360:39:11","nodes":[],"statements":[{"expression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2678,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"3378:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2679,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"3382:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"3378:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2682,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"3390:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3378:13:11","trueExpression":{"id":2681,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"3386:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2684,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3377:15:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2677,"id":2685,"nodeType":"Return","src":"3370:22:11"}]},"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3305:3:11","parameters":{"id":2674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2671,"mutability":"mutable","name":"x","nameLocation":"3316:1:11","nodeType":"VariableDeclaration","scope":2687,"src":"3309:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2670,"name":"int256","nodeType":"ElementaryTypeName","src":"3309:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2673,"mutability":"mutable","name":"y","nameLocation":"3326:1:11","nodeType":"VariableDeclaration","scope":2687,"src":"3319:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2672,"name":"int256","nodeType":"ElementaryTypeName","src":"3319:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"3308:20:11"},"returnParameters":{"id":2677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2687,"src":"3352:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2675,"name":"int256","nodeType":"ElementaryTypeName","src":"3352:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"3351:8:11"},"scope":2996,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2713,"nodeType":"FunctionDefinition","src":"3589:137:11","nodes":[],"body":{"id":2712,"nodeType":"Block","src":"3644:82:11","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2695,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2689,"src":"3662:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":2700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3680:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2699,"name":"int256","nodeType":"ElementaryTypeName","src":"3680:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2698,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3675:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3675:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3688:3:11","memberName":"max","nodeType":"MemberAccess","src":"3675:16:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3667:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2696,"name":"uint256","nodeType":"ElementaryTypeName","src":"3667:7:11","typeDescriptions":{}}},"id":2703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3667:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3662:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2694,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3654:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3654:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2706,"nodeType":"ExpressionStatement","src":"3654:39:11"},{"expression":{"arguments":[{"id":2709,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2689,"src":"3717:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3710:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2707,"name":"int256","nodeType":"ElementaryTypeName","src":"3710:6:11","typeDescriptions":{}}},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3710:9:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2693,"id":2711,"nodeType":"Return","src":"3703:16:11"}]},"implemented":true,"kind":"function","modifiers":[],"name":"Int","nameLocation":"3598:3:11","parameters":{"id":2690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2689,"mutability":"mutable","name":"x","nameLocation":"3610:1:11","nodeType":"VariableDeclaration","scope":2713,"src":"3602:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2688,"name":"uint256","nodeType":"ElementaryTypeName","src":"3602:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3601:11:11"},"returnParameters":{"id":2693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2713,"src":"3636:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2691,"name":"int256","nodeType":"ElementaryTypeName","src":"3636:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"3635:8:11"},"scope":2996,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2744,"nodeType":"FunctionDefinition","src":"3732:155:11","nodes":[],"body":{"id":2743,"nodeType":"Block","src":"3789:98:11","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3812:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":2722,"name":"int128","nodeType":"ElementaryTypeName","src":"3812:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"}],"id":2721,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3807:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3807:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int128","typeString":"type(int128)"}},"id":2725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3820:3:11","memberName":"min","nodeType":"MemberAccess","src":"3807:16:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2726,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"3827:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"3807:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2728,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"3832:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3842:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":2730,"name":"int128","nodeType":"ElementaryTypeName","src":"3842:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"}],"id":2729,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3837:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3837:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int128","typeString":"type(int128)"}},"id":2733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3850:3:11","memberName":"max","nodeType":"MemberAccess","src":"3837:16:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"3832:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3807:46:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2720,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3799:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3799:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2737,"nodeType":"ExpressionStatement","src":"3799:55:11"},{"expression":{"arguments":[{"id":2740,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"3878:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3871:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":2738,"name":"int128","nodeType":"ElementaryTypeName","src":"3871:6:11","typeDescriptions":{}}},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:9:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"functionReturnParameters":2719,"id":2742,"nodeType":"Return","src":"3864:16:11"}]},"implemented":true,"kind":"function","modifiers":[],"name":"Int128","nameLocation":"3741:6:11","parameters":{"id":2716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2715,"mutability":"mutable","name":"x","nameLocation":"3755:1:11","nodeType":"VariableDeclaration","scope":2744,"src":"3748:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2714,"name":"int256","nodeType":"ElementaryTypeName","src":"3748:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"3747:10:11"},"returnParameters":{"id":2719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2718,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2744,"src":"3781:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":2717,"name":"int128","nodeType":"ElementaryTypeName","src":"3781:6:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"3780:8:11"},"scope":2996,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2758,"nodeType":"FunctionDefinition","src":"3893:96:11","nodes":[],"body":{"id":2757,"nodeType":"Block","src":"3951:38:11","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"id":2753,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"3979:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2752,"name":"Int","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"3975:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_int256_$","typeString":"function (uint256) pure returns (int256)"}},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3975:6:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2751,"name":"Int128","nodeType":"Identifier","overloadedDeclarations":[2744,2758],"referencedDeclaration":2744,"src":"3968:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_int128_$","typeString":"function (int256) pure returns (int128)"}},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3968:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"functionReturnParameters":2750,"id":2756,"nodeType":"Return","src":"3961:21:11"}]},"implemented":true,"kind":"function","modifiers":[],"name":"Int128","nameLocation":"3902:6:11","parameters":{"id":2747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2746,"mutability":"mutable","name":"x","nameLocation":"3917:1:11","nodeType":"VariableDeclaration","scope":2758,"src":"3909:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2745,"name":"uint256","nodeType":"ElementaryTypeName","src":"3909:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3908:11:11"},"returnParameters":{"id":2750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2758,"src":"3943:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":2748,"name":"int128","nodeType":"ElementaryTypeName","src":"3943:6:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"3942:8:11"},"scope":2996,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2777,"nodeType":"FunctionDefinition","src":"4181:115:11","nodes":[],"body":{"id":2776,"nodeType":"Block","src":"4237:59:11","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2766,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"4255:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":2767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4260:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4255:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2765,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4247:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4247:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2770,"nodeType":"ExpressionStatement","src":"4247:15:11"},{"expression":{"arguments":[{"id":2773,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"4287:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4279:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2771,"name":"uint256","nodeType":"ElementaryTypeName","src":"4279:7:11","typeDescriptions":{}}},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4279:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2764,"id":2775,"nodeType":"Return","src":"4272:17:11"}]},"implemented":true,"kind":"function","modifiers":[],"name":"Uint","nameLocation":"4190:4:11","parameters":{"id":2761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2760,"mutability":"mutable","name":"x","nameLocation":"4202:1:11","nodeType":"VariableDeclaration","scope":2777,"src":"4195:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2759,"name":"int256","nodeType":"ElementaryTypeName","src":"4195:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4194:10:11"},"returnParameters":{"id":2764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2777,"src":"4228:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2762,"name":"uint256","nodeType":"ElementaryTypeName","src":"4228:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4227:9:11"},"scope":2996,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2800,"nodeType":"FunctionDefinition","src":"4302:131:11","nodes":[],"body":{"id":2799,"nodeType":"Block","src":"4360:73:11","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2785,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"4378:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4388:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":2787,"name":"uint32","nodeType":"ElementaryTypeName","src":"4388:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":2786,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4383:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4383:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":2790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4396:3:11","memberName":"max","nodeType":"MemberAccess","src":"4383:16:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4378:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2784,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4370:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4370:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2793,"nodeType":"ExpressionStatement","src":"4370:30:11"},{"expression":{"arguments":[{"id":2796,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"4424:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4417:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":2794,"name":"uint32","nodeType":"ElementaryTypeName","src":"4417:6:11","typeDescriptions":{}}},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4417:9:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":2783,"id":2798,"nodeType":"Return","src":"4410:16:11"}]},"implemented":true,"kind":"function","modifiers":[],"name":"Uint32","nameLocation":"4311:6:11","parameters":{"id":2780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2779,"mutability":"mutable","name":"x","nameLocation":"4326:1:11","nodeType":"VariableDeclaration","scope":2800,"src":"4318:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2778,"name":"uint256","nodeType":"ElementaryTypeName","src":"4318:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4317:11:11"},"returnParameters":{"id":2783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2782,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2800,"src":"4352:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2781,"name":"uint32","nodeType":"ElementaryTypeName","src":"4352:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4351:8:11"},"scope":2996,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2823,"nodeType":"FunctionDefinition","src":"4439:131:11","nodes":[],"body":{"id":2822,"nodeType":"Block","src":"4497:73:11","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2808,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"4515:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4525:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":2810,"name":"uint64","nodeType":"ElementaryTypeName","src":"4525:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":2809,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4520:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4520:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":2813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4533:3:11","memberName":"max","nodeType":"MemberAccess","src":"4520:16:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"4515:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2807,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4507:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4507:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2816,"nodeType":"ExpressionStatement","src":"4507:30:11"},{"expression":{"arguments":[{"id":2819,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"4561:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4554:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":2817,"name":"uint64","nodeType":"ElementaryTypeName","src":"4554:6:11","typeDescriptions":{}}},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4554:9:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":2806,"id":2821,"nodeType":"Return","src":"4547:16:11"}]},"implemented":true,"kind":"function","modifiers":[],"name":"Uint64","nameLocation":"4448:6:11","parameters":{"id":2803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2802,"mutability":"mutable","name":"x","nameLocation":"4463:1:11","nodeType":"VariableDeclaration","scope":2823,"src":"4455:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2801,"name":"uint256","nodeType":"ElementaryTypeName","src":"4455:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4454:11:11"},"returnParameters":{"id":2806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2823,"src":"4489:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2804,"name":"uint64","nodeType":"ElementaryTypeName","src":"4489:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4488:8:11"},"scope":2996,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2846,"nodeType":"FunctionDefinition","src":"4576:135:11","nodes":[],"body":{"id":2845,"nodeType":"Block","src":"4636:75:11","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2831,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"4654:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4664:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":2833,"name":"uint112","nodeType":"ElementaryTypeName","src":"4664:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":2832,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4659:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4659:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":2836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4673:3:11","memberName":"max","nodeType":"MemberAccess","src":"4659:17:11","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"4654:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2830,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4646:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4646:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2839,"nodeType":"ExpressionStatement","src":"4646:31:11"},{"expression":{"arguments":[{"id":2842,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"4702:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4694:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":2840,"name":"uint112","nodeType":"ElementaryTypeName","src":"4694:7:11","typeDescriptions":{}}},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4694:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":2829,"id":2844,"nodeType":"Return","src":"4687:17:11"}]},"implemented":true,"kind":"function","modifiers":[],"name":"Uint112","nameLocation":"4585:7:11","parameters":{"id":2826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2825,"mutability":"mutable","name":"x","nameLocation":"4601:1:11","nodeType":"VariableDeclaration","scope":2846,"src":"4593:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2824,"name":"uint256","nodeType":"ElementaryTypeName","src":"4593:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4592:11:11"},"returnParameters":{"id":2829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2828,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2846,"src":"4627:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":2827,"name":"uint112","nodeType":"ElementaryTypeName","src":"4627:7:11","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"4626:9:11"},"scope":2996,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2869,"nodeType":"FunctionDefinition","src":"4717:131:11","nodes":[],"body":{"id":2868,"nodeType":"Block","src":"4775:73:11","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2854,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"4793:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4803:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":2856,"name":"uint96","nodeType":"ElementaryTypeName","src":"4803:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":2855,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4798:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4798:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":2859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4811:3:11","memberName":"max","nodeType":"MemberAccess","src":"4798:16:11","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"4793:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2853,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4785:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4785:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2862,"nodeType":"ExpressionStatement","src":"4785:30:11"},{"expression":{"arguments":[{"id":2865,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"4839:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4832:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":2863,"name":"uint96","nodeType":"ElementaryTypeName","src":"4832:6:11","typeDescriptions":{}}},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4832:9:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":2852,"id":2867,"nodeType":"Return","src":"4825:16:11"}]},"implemented":true,"kind":"function","modifiers":[],"name":"Uint96","nameLocation":"4726:6:11","parameters":{"id":2849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2848,"mutability":"mutable","name":"x","nameLocation":"4741:1:11","nodeType":"VariableDeclaration","scope":2869,"src":"4733:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2847,"name":"uint256","nodeType":"ElementaryTypeName","src":"4733:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4732:11:11"},"returnParameters":{"id":2852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2869,"src":"4767:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2850,"name":"uint96","nodeType":"ElementaryTypeName","src":"4767:6:11","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"4766:8:11"},"scope":2996,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2892,"nodeType":"FunctionDefinition","src":"4854:135:11","nodes":[],"body":{"id":2891,"nodeType":"Block","src":"4914:75:11","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2877,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"4932:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4942:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":2879,"name":"uint128","nodeType":"ElementaryTypeName","src":"4942:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":2878,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4937:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4937:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":2882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4951:3:11","memberName":"max","nodeType":"MemberAccess","src":"4937:17:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"4932:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2876,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4924:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4924:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2885,"nodeType":"ExpressionStatement","src":"4924:31:11"},{"expression":{"arguments":[{"id":2888,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"4980:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4972:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":2886,"name":"uint128","nodeType":"ElementaryTypeName","src":"4972:7:11","typeDescriptions":{}}},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4972:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":2875,"id":2890,"nodeType":"Return","src":"4965:17:11"}]},"implemented":true,"kind":"function","modifiers":[],"name":"Uint128","nameLocation":"4863:7:11","parameters":{"id":2872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2871,"mutability":"mutable","name":"x","nameLocation":"4879:1:11","nodeType":"VariableDeclaration","scope":2892,"src":"4871:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2870,"name":"uint256","nodeType":"ElementaryTypeName","src":"4871:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4870:11:11"},"returnParameters":{"id":2875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2892,"src":"4905:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2873,"name":"uint128","nodeType":"ElementaryTypeName","src":"4905:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"4904:9:11"},"scope":2996,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2915,"nodeType":"FunctionDefinition","src":"4995:135:11","nodes":[],"body":{"id":2914,"nodeType":"Block","src":"5055:75:11","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2900,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"5073:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5083:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":2902,"name":"uint192","nodeType":"ElementaryTypeName","src":"5083:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":2901,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5078:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5078:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":2905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5092:3:11","memberName":"max","nodeType":"MemberAccess","src":"5078:17:11","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5073:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2899,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5065:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5065:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2908,"nodeType":"ExpressionStatement","src":"5065:31:11"},{"expression":{"arguments":[{"id":2911,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"5121:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5113:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":2909,"name":"uint192","nodeType":"ElementaryTypeName","src":"5113:7:11","typeDescriptions":{}}},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5113:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":2898,"id":2913,"nodeType":"Return","src":"5106:17:11"}]},"implemented":true,"kind":"function","modifiers":[],"name":"Uint192","nameLocation":"5004:7:11","parameters":{"id":2895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2894,"mutability":"mutable","name":"x","nameLocation":"5020:1:11","nodeType":"VariableDeclaration","scope":2915,"src":"5012:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2893,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:11:11"},"returnParameters":{"id":2898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2915,"src":"5046:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":2896,"name":"uint192","nodeType":"ElementaryTypeName","src":"5046:7:11","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5045:9:11"},"scope":2996,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2945,"nodeType":"FunctionDefinition","src":"5136:164:11","nodes":[],"body":{"id":2944,"nodeType":"Block","src":"5220:80:11","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2927,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"5245:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2928,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"5248:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2929,"name":"eps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"5254:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5248:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2926,"name":"mulDown","nodeType":"Identifier","overloadedDeclarations":[2405,2426],"referencedDeclaration":2405,"src":"5237:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5237:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2932,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"5262:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5237:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2934,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"5267:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"id":2936,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"5280:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2937,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"5283:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2938,"name":"eps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"5289:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5283:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2935,"name":"mulDown","nodeType":"Identifier","overloadedDeclarations":[2405,2426],"referencedDeclaration":2405,"src":"5272:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5272:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5267:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5237:56:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2925,"id":2943,"nodeType":"Return","src":"5230:63:11"}]},"implemented":true,"kind":"function","modifiers":[],"name":"isAApproxB","nameLocation":"5145:10:11","parameters":{"id":2922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2917,"mutability":"mutable","name":"a","nameLocation":"5164:1:11","nodeType":"VariableDeclaration","scope":2945,"src":"5156:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2916,"name":"uint256","nodeType":"ElementaryTypeName","src":"5156:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2919,"mutability":"mutable","name":"b","nameLocation":"5175:1:11","nodeType":"VariableDeclaration","scope":2945,"src":"5167:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2918,"name":"uint256","nodeType":"ElementaryTypeName","src":"5167:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2921,"mutability":"mutable","name":"eps","nameLocation":"5186:3:11","nodeType":"VariableDeclaration","scope":2945,"src":"5178:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2920,"name":"uint256","nodeType":"ElementaryTypeName","src":"5178:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5155:35:11"},"returnParameters":{"id":2925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2924,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2945,"src":"5214:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2923,"name":"bool","nodeType":"ElementaryTypeName","src":"5214:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5213:6:11"},"scope":2996,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2970,"nodeType":"FunctionDefinition","src":"5306:151:11","nodes":[],"body":{"id":2969,"nodeType":"Block","src":"5397:60:11","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2956,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"5414:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2957,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"5419:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5414:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2959,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"5424:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"id":2961,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"5437:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2962,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"5440:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2963,"name":"eps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"5446:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5440:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2960,"name":"mulDown","nodeType":"Identifier","overloadedDeclarations":[2405,2426],"referencedDeclaration":2405,"src":"5429:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5429:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5424:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5414:36:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2955,"id":2968,"nodeType":"Return","src":"5407:43:11"}]},"implemented":true,"kind":"function","modifiers":[],"name":"isAGreaterApproxB","nameLocation":"5315:17:11","parameters":{"id":2952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2947,"mutability":"mutable","name":"a","nameLocation":"5341:1:11","nodeType":"VariableDeclaration","scope":2970,"src":"5333:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2946,"name":"uint256","nodeType":"ElementaryTypeName","src":"5333:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2949,"mutability":"mutable","name":"b","nameLocation":"5352:1:11","nodeType":"VariableDeclaration","scope":2970,"src":"5344:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2948,"name":"uint256","nodeType":"ElementaryTypeName","src":"5344:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2951,"mutability":"mutable","name":"eps","nameLocation":"5363:3:11","nodeType":"VariableDeclaration","scope":2970,"src":"5355:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2950,"name":"uint256","nodeType":"ElementaryTypeName","src":"5355:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5332:35:11"},"returnParameters":{"id":2955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2970,"src":"5391:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2953,"name":"bool","nodeType":"ElementaryTypeName","src":"5391:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5390:6:11"},"scope":2996,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2995,"nodeType":"FunctionDefinition","src":"5463:151:11","nodes":[],"body":{"id":2994,"nodeType":"Block","src":"5554:60:11","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2981,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"5571:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2982,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"5576:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5571:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2984,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"5581:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"arguments":[{"id":2986,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"5594:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2987,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"5597:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2988,"name":"eps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"5603:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5597:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2985,"name":"mulDown","nodeType":"Identifier","overloadedDeclarations":[2405,2426],"referencedDeclaration":2405,"src":"5586:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5586:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5581:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5571:36:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2980,"id":2993,"nodeType":"Return","src":"5564:43:11"}]},"implemented":true,"kind":"function","modifiers":[],"name":"isASmallerApproxB","nameLocation":"5472:17:11","parameters":{"id":2977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2972,"mutability":"mutable","name":"a","nameLocation":"5498:1:11","nodeType":"VariableDeclaration","scope":2995,"src":"5490:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2971,"name":"uint256","nodeType":"ElementaryTypeName","src":"5490:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2974,"mutability":"mutable","name":"b","nameLocation":"5509:1:11","nodeType":"VariableDeclaration","scope":2995,"src":"5501:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2973,"name":"uint256","nodeType":"ElementaryTypeName","src":"5501:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2976,"mutability":"mutable","name":"eps","nameLocation":"5520:3:11","nodeType":"VariableDeclaration","scope":2995,"src":"5512:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2975,"name":"uint256","nodeType":"ElementaryTypeName","src":"5512:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5489:35:11"},"returnParameters":{"id":2980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2979,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2995,"src":"5548:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2978,"name":"bool","nodeType":"ElementaryTypeName","src":"5548:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5547:6:11"},"scope":2996,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"PMath","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"linearizedBaseContracts":[2996],"name":"PMath","nameLocation":"791:5:11","scope":2997,"usedErrors":[],"usedEvents":[]}],"license":"GPL-3.0-or-later"}},"contracts/pendle/contracts/interfaces/IPExchangeRateOracle.sol":{"id":12,"ast":{"absolutePath":"contracts/pendle/contracts/interfaces/IPExchangeRateOracle.sol","id":3005,"exportedSymbols":{"IPExchangeRateOracle":[3004]},"nodeType":"SourceUnit","src":"32:124:12","nodes":[{"id":2998,"nodeType":"PragmaDirective","src":"32:23:12","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":3004,"nodeType":"ContractDefinition","src":"57:98:12","nodes":[{"id":3003,"nodeType":"FunctionDefinition","src":"94:59:12","nodes":[],"functionSelector":"e6aa216c","implemented":false,"kind":"function","modifiers":[],"name":"getExchangeRate","nameLocation":"103:15:12","parameters":{"id":2999,"nodeType":"ParameterList","parameters":[],"src":"118:2:12"},"returnParameters":{"id":3002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3003,"src":"144:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3000,"name":"uint256","nodeType":"ElementaryTypeName","src":"144:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"143:9:12"},"scope":3004,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IPExchangeRateOracle","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"linearizedBaseContracts":[3004],"name":"IPExchangeRateOracle","nameLocation":"67:20:12","scope":3005,"usedErrors":[],"usedEvents":[]}],"license":"MIT"}},"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol":{"id":13,"ast":{"absolutePath":"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol","id":3232,"exportedSymbols":{"AccessControlUpgradeable":[335],"AddressUpgradeable":[907],"BoringOwnableUpgradeable":[2334],"BoringOwnableUpgradeableData":[2213],"ContextUpgradeable":[949],"ERC165Upgradeable":[1222],"IAccessControlUpgradeable":[408],"IERC165Upgradeable":[1234],"IPExchangeRateOracle":[3004],"Initializable":[577],"MathUpgradeable":[2100],"PMath":[2996],"PendleExchangeRateOracle":[3231],"SignedMathUpgradeable":[2205],"StringsUpgradeable":[1178]},"nodeType":"SourceUnit","src":"32:2750:13","nodes":[{"id":3006,"nodeType":"PragmaDirective","src":"32:24:13","nodes":[],"literals":["solidity","^","0.8",".17"]},{"id":3007,"nodeType":"ImportDirective","src":"58:81:13","nodes":[],"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","nameLocation":"-1:-1:-1","scope":3232,"sourceUnit":336,"symbolAliases":[],"unitAlias":""},{"id":3008,"nodeType":"ImportDirective","src":"140:56:13","nodes":[],"absolutePath":"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol","file":"../core/libraries/BoringOwnableUpgradeable.sol","nameLocation":"-1:-1:-1","scope":3232,"sourceUnit":2335,"symbolAliases":[],"unitAlias":""},{"id":3009,"nodeType":"ImportDirective","src":"197:42:13","nodes":[],"absolutePath":"contracts/pendle/contracts/core/libraries/math/PMath.sol","file":"../core/libraries/math/PMath.sol","nameLocation":"-1:-1:-1","scope":3232,"sourceUnit":2997,"symbolAliases":[],"unitAlias":""},{"id":3010,"nodeType":"ImportDirective","src":"240:48:13","nodes":[],"absolutePath":"contracts/pendle/contracts/interfaces/IPExchangeRateOracle.sol","file":"../interfaces/IPExchangeRateOracle.sol","nameLocation":"-1:-1:-1","scope":3232,"sourceUnit":3005,"symbolAliases":[],"unitAlias":""},{"id":3231,"nodeType":"ContractDefinition","src":"290:2491:13","nodes":[{"id":3017,"nodeType":"UsingForDirective","src":"380:24:13","nodes":[],"global":false,"libraryName":{"id":3015,"name":"PMath","nameLocations":["386:5:13"],"nodeType":"IdentifierPath","referencedDeclaration":2996,"src":"386:5:13"},"typeName":{"id":3016,"name":"uint256","nodeType":"ElementaryTypeName","src":"396:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":3020,"nodeType":"UsingForDirective","src":"409:24:13","nodes":[],"global":false,"libraryName":{"id":3018,"name":"PMath","nameLocations":["415:5:13"],"nodeType":"IdentifierPath","referencedDeclaration":2996,"src":"415:5:13"},"typeName":{"id":3019,"name":"uint128","nodeType":"ElementaryTypeName","src":"425:7:13","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}},{"id":3023,"nodeType":"EnumDefinition","src":"439:76:13","nodes":[],"canonicalName":"PendleExchangeRateOracle.RateRejectReason","members":[{"id":3021,"name":"RATE_TOO_SMALL","nameLocation":"471:14:13","nodeType":"EnumValue","src":"471:14:13"},{"id":3022,"name":"RATE_TOO_LARGE","nameLocation":"495:14:13","nodeType":"EnumValue","src":"495:14:13"}],"name":"RateRejectReason","nameLocation":"444:16:13"},{"id":3032,"nodeType":"StructDefinition","src":"521:211:13","nodes":[],"canonicalName":"PendleExchangeRateOracle.ExchangeRateData","members":[{"constant":false,"id":3025,"mutability":"mutable","name":"rate","nameLocation":"563:4:13","nodeType":"VariableDeclaration","scope":3032,"src":"555:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3024,"name":"uint128","nodeType":"ElementaryTypeName","src":"555:7:13","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3027,"mutability":"mutable","name":"dataBlock","nameLocation":"584:9:13","nodeType":"VariableDeclaration","scope":3032,"src":"577:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3026,"name":"uint64","nodeType":"ElementaryTypeName","src":"577:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3029,"mutability":"mutable","name":"dataTimestamp","nameLocation":"656:13:13","nodeType":"VariableDeclaration","scope":3032,"src":"649:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3028,"name":"uint32","nodeType":"ElementaryTypeName","src":"649:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3031,"mutability":"mutable","name":"updatedAt","nameLocation":"716:9:13","nodeType":"VariableDeclaration","scope":3032,"src":"709:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3030,"name":"uint32","nodeType":"ElementaryTypeName","src":"709:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"name":"ExchangeRateData","nameLocation":"528:16:13","scope":3231,"visibility":"public"},{"id":3041,"nodeType":"ErrorDefinition","src":"738:78:13","nodes":[],"errorSelector":"068ffec6","name":"RateRejected","nameLocation":"744:12:13","parameters":{"id":3040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3034,"mutability":"mutable","name":"oldRate","nameLocation":"765:7:13","nodeType":"VariableDeclaration","scope":3041,"src":"757:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3033,"name":"uint256","nodeType":"ElementaryTypeName","src":"757:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3036,"mutability":"mutable","name":"newRate","nameLocation":"782:7:13","nodeType":"VariableDeclaration","scope":3041,"src":"774:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3035,"name":"uint256","nodeType":"ElementaryTypeName","src":"774:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3039,"mutability":"mutable","name":"reason","nameLocation":"808:6:13","nodeType":"VariableDeclaration","scope":3041,"src":"791:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RateRejectReason_$3023","typeString":"enum PendleExchangeRateOracle.RateRejectReason"},"typeName":{"id":3038,"nodeType":"UserDefinedTypeName","pathNode":{"id":3037,"name":"RateRejectReason","nameLocations":["791:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":3023,"src":"791:16:13"},"referencedDeclaration":3023,"src":"791:16:13","typeDescriptions":{"typeIdentifier":"t_enum$_RateRejectReason_$3023","typeString":"enum PendleExchangeRateOracle.RateRejectReason"}},"visibility":"internal"}],"src":"756:59:13"}},{"id":3046,"nodeType":"ErrorDefinition","src":"821:45:13","nodes":[],"errorSelector":"91b56cd4","name":"InvalidMetadata","nameLocation":"827:15:13","parameters":{"id":3045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3044,"mutability":"mutable","name":"data","nameLocation":"860:4:13","nodeType":"VariableDeclaration","scope":3046,"src":"843:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_memory_ptr","typeString":"struct PendleExchangeRateOracle.ExchangeRateData"},"typeName":{"id":3043,"nodeType":"UserDefinedTypeName","pathNode":{"id":3042,"name":"ExchangeRateData","nameLocations":["843:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":3032,"src":"843:16:13"},"referencedDeclaration":3032,"src":"843:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_storage_ptr","typeString":"struct PendleExchangeRateOracle.ExchangeRateData"}},"visibility":"internal"}],"src":"842:23:13"}},{"id":3051,"nodeType":"EventDefinition","src":"872:41:13","nodes":[],"anonymous":false,"eventSelector":"cfeda7da2baa74f493d45b784b32c511b6f8e67df21495044ecae70ce9918e23","name":"RateUpdated","nameLocation":"878:11:13","parameters":{"id":3050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3049,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"907:4:13","nodeType":"VariableDeclaration","scope":3051,"src":"890:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_memory_ptr","typeString":"struct PendleExchangeRateOracle.ExchangeRateData"},"typeName":{"id":3048,"nodeType":"UserDefinedTypeName","pathNode":{"id":3047,"name":"ExchangeRateData","nameLocations":["890:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":3032,"src":"890:16:13"},"referencedDeclaration":3032,"src":"890:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_storage_ptr","typeString":"struct PendleExchangeRateOracle.ExchangeRateData"}},"visibility":"internal"}],"src":"889:23:13"}},{"id":3054,"nodeType":"VariableDeclaration","src":"919:54:13","nodes":[],"constant":true,"functionSelector":"0ea9547e","mutability":"constant","name":"MIN_UPDATE_TIME_GAP","nameLocation":"943:19:13","scope":3231,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3052,"name":"uint256","nodeType":"ElementaryTypeName","src":"919:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3132","id":3053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"965:8:13","subdenomination":"hours","typeDescriptions":{"typeIdentifier":"t_rational_43200_by_1","typeString":"int_const 43200"},"value":"12"},"visibility":"public"},{"id":3056,"nodeType":"VariableDeclaration","src":"980:18:13","nodes":[],"constant":false,"functionSelector":"06fdde03","mutability":"mutable","name":"name","nameLocation":"994:4:13","scope":3231,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3055,"name":"string","nodeType":"ElementaryTypeName","src":"980:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"id":3059,"nodeType":"VariableDeclaration","src":"1004:28:13","nodes":[],"constant":false,"functionSelector":"73d4a13a","mutability":"mutable","name":"data","nameLocation":"1028:4:13","scope":3231,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_storage","typeString":"struct PendleExchangeRateOracle.ExchangeRateData"},"typeName":{"id":3058,"nodeType":"UserDefinedTypeName","pathNode":{"id":3057,"name":"ExchangeRateData","nameLocations":["1004:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":3032,"src":"1004:16:13"},"referencedDeclaration":3032,"src":"1004:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_storage_ptr","typeString":"struct PendleExchangeRateOracle.ExchangeRateData"}},"visibility":"public"},{"id":3061,"nodeType":"VariableDeclaration","src":"1038:36:13","nodes":[],"constant":false,"functionSelector":"d1bdee38","mutability":"immutable","name":"maxRateDiff","nameLocation":"1063:11:13","scope":3231,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3060,"name":"uint256","nodeType":"ElementaryTypeName","src":"1038:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"id":3082,"nodeType":"FunctionDefinition","src":"1081:165:13","nodes":[],"body":{"id":3081,"nodeType":"Block","src":"1148:98:13","nodes":[],"statements":[{"expression":{"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3070,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"1158:4:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3071,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"1165:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1158:12:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3073,"nodeType":"ExpressionStatement","src":"1158:12:13"},{"expression":{"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3074,"name":"maxRateDiff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"1180:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3075,"name":"_maxRateDiff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3065,"src":"1194:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1180:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3077,"nodeType":"ExpressionStatement","src":"1180:26:13"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3078,"name":"__BoringOwnable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"1217:20:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1217:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3080,"nodeType":"ExpressionStatement","src":"1217:22:13"}]},"implemented":true,"kind":"constructor","modifiers":[{"id":3068,"kind":"modifierInvocation","modifierName":{"id":3067,"name":"initializer","nameLocations":["1136:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":479,"src":"1136:11:13"},"nodeType":"ModifierInvocation","src":"1136:11:13"}],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":3066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3063,"mutability":"mutable","name":"_name","nameLocation":"1107:5:13","nodeType":"VariableDeclaration","scope":3082,"src":"1093:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3062,"name":"string","nodeType":"ElementaryTypeName","src":"1093:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3065,"mutability":"mutable","name":"_maxRateDiff","nameLocation":"1122:12:13","nodeType":"VariableDeclaration","scope":3082,"src":"1114:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3064,"name":"uint256","nodeType":"ElementaryTypeName","src":"1114:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:43:13"},"returnParameters":{"id":3069,"nodeType":"ParameterList","parameters":[],"src":"1148:0:13"},"scope":3231,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":3091,"nodeType":"FunctionDefinition","src":"1252:92:13","nodes":[],"body":{"id":3090,"nodeType":"Block","src":"1311:33:13","nodes":[],"statements":[{"expression":{"expression":{"id":3087,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"1328:4:13","typeDescriptions":{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_storage","typeString":"struct PendleExchangeRateOracle.ExchangeRateData storage ref"}},"id":3088,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1333:4:13","memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":3025,"src":"1328:9:13","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":3086,"id":3089,"nodeType":"Return","src":"1321:16:13"}]},"baseFunctions":[3003],"functionSelector":"e6aa216c","implemented":true,"kind":"function","modifiers":[],"name":"getExchangeRate","nameLocation":"1261:15:13","parameters":{"id":3083,"nodeType":"ParameterList","parameters":[],"src":"1276:2:13"},"returnParameters":{"id":3086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3091,"src":"1302:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3084,"name":"uint256","nodeType":"ElementaryTypeName","src":"1302:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1301:9:13"},"scope":3231,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":3121,"nodeType":"FunctionDefinition","src":"1350:360:13","nodes":[],"body":{"id":3120,"nodeType":"Block","src":"1448:262:13","nodes":[],"statements":[{"assignments":[3104],"declarations":[{"constant":false,"id":3104,"mutability":"mutable","name":"newData","nameLocation":"1482:7:13","nodeType":"VariableDeclaration","scope":3120,"src":"1458:31:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_memory_ptr","typeString":"struct PendleExchangeRateOracle.ExchangeRateData"},"typeName":{"id":3103,"nodeType":"UserDefinedTypeName","pathNode":{"id":3102,"name":"ExchangeRateData","nameLocations":["1458:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":3032,"src":"1458:16:13"},"referencedDeclaration":3032,"src":"1458:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_storage_ptr","typeString":"struct PendleExchangeRateOracle.ExchangeRateData"}},"visibility":"internal"}],"id":3115,"initialValue":{"arguments":[{"id":3106,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"1529:4:13","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"id":3107,"name":"dataBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"1558:9:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3108,"name":"dataTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"1596:13:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"arguments":[{"expression":{"id":3111,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1641:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1647:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"1641:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1634:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":3109,"name":"uint32","nodeType":"ElementaryTypeName","src":"1634:6:13","typeDescriptions":{}}},"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1634:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":3105,"name":"ExchangeRateData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"1492:16:13","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ExchangeRateData_$3032_storage_ptr_$","typeString":"type(struct PendleExchangeRateOracle.ExchangeRateData storage pointer)"}},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["1523:4:13","1547:9:13","1581:13:13","1623:9:13"],"names":["rate","dataBlock","dataTimestamp","updatedAt"],"nodeType":"FunctionCall","src":"1492:176:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_memory_ptr","typeString":"struct PendleExchangeRateOracle.ExchangeRateData memory"}},"nodeType":"VariableDeclarationStatement","src":"1458:210:13"},{"expression":{"arguments":[{"id":3117,"name":"newData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"1695:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_memory_ptr","typeString":"struct PendleExchangeRateOracle.ExchangeRateData memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_memory_ptr","typeString":"struct PendleExchangeRateOracle.ExchangeRateData memory"}],"id":3116,"name":"_setExchangeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"1678:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_ExchangeRateData_$3032_memory_ptr_$returns$__$","typeString":"function (struct PendleExchangeRateOracle.ExchangeRateData memory)"}},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1678:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3119,"nodeType":"ExpressionStatement","src":"1678:25:13"}]},"functionSelector":"d3af58fb","implemented":true,"kind":"function","modifiers":[{"id":3100,"kind":"modifierInvocation","modifierName":{"id":3099,"name":"onlyOwner","nameLocations":["1438:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":2329,"src":"1438:9:13"},"nodeType":"ModifierInvocation","src":"1438:9:13"}],"name":"setExchangeRate","nameLocation":"1359:15:13","parameters":{"id":3098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3093,"mutability":"mutable","name":"rate","nameLocation":"1383:4:13","nodeType":"VariableDeclaration","scope":3121,"src":"1375:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3092,"name":"uint128","nodeType":"ElementaryTypeName","src":"1375:7:13","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3095,"mutability":"mutable","name":"dataBlock","nameLocation":"1396:9:13","nodeType":"VariableDeclaration","scope":3121,"src":"1389:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3094,"name":"uint64","nodeType":"ElementaryTypeName","src":"1389:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3097,"mutability":"mutable","name":"dataTimestamp","nameLocation":"1414:13:13","nodeType":"VariableDeclaration","scope":3121,"src":"1407:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3096,"name":"uint32","nodeType":"ElementaryTypeName","src":"1407:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1374:54:13"},"returnParameters":{"id":3101,"nodeType":"ParameterList","parameters":[],"src":"1448:0:13"},"scope":3231,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":3153,"nodeType":"FunctionDefinition","src":"1716:283:13","nodes":[],"body":{"id":3152,"nodeType":"Block","src":"1784:215:13","nodes":[],"statements":[{"assignments":[3129],"declarations":[{"constant":false,"id":3129,"mutability":"mutable","name":"oldData","nameLocation":"1818:7:13","nodeType":"VariableDeclaration","scope":3152,"src":"1794:31:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_memory_ptr","typeString":"struct PendleExchangeRateOracle.ExchangeRateData"},"typeName":{"id":3128,"nodeType":"UserDefinedTypeName","pathNode":{"id":3127,"name":"ExchangeRateData","nameLocations":["1794:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":3032,"src":"1794:16:13"},"referencedDeclaration":3032,"src":"1794:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_storage_ptr","typeString":"struct PendleExchangeRateOracle.ExchangeRateData"}},"visibility":"internal"}],"id":3131,"initialValue":{"id":3130,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"1828:4:13","typeDescriptions":{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_storage","typeString":"struct PendleExchangeRateOracle.ExchangeRateData storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1794:38:13"},{"expression":{"arguments":[{"expression":{"id":3133,"name":"oldData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"1860:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_memory_ptr","typeString":"struct PendleExchangeRateOracle.ExchangeRateData memory"}},"id":3134,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1868:4:13","memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":3025,"src":"1860:12:13","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"expression":{"id":3135,"name":"newData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"1874:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_memory_ptr","typeString":"struct PendleExchangeRateOracle.ExchangeRateData memory"}},"id":3136,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1882:4:13","memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":3025,"src":"1874:12:13","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":3132,"name":"_validateNewRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"1843:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) view"}},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1843:44:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3138,"nodeType":"ExpressionStatement","src":"1843:44:13"},{"expression":{"arguments":[{"id":3140,"name":"oldData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"1915:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_memory_ptr","typeString":"struct PendleExchangeRateOracle.ExchangeRateData memory"}},{"id":3141,"name":"newData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"1924:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_memory_ptr","typeString":"struct PendleExchangeRateOracle.ExchangeRateData memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_memory_ptr","typeString":"struct PendleExchangeRateOracle.ExchangeRateData memory"},{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_memory_ptr","typeString":"struct PendleExchangeRateOracle.ExchangeRateData memory"}],"id":3139,"name":"_validateMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"1897:17:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_ExchangeRateData_$3032_memory_ptr_$_t_struct$_ExchangeRateData_$3032_memory_ptr_$returns$__$","typeString":"function (struct PendleExchangeRateOracle.ExchangeRateData memory,struct PendleExchangeRateOracle.ExchangeRateData memory) pure"}},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1897:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3143,"nodeType":"ExpressionStatement","src":"1897:35:13"},{"expression":{"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3144,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"1943:4:13","typeDescriptions":{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_storage","typeString":"struct PendleExchangeRateOracle.ExchangeRateData storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3145,"name":"newData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"1950:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_memory_ptr","typeString":"struct PendleExchangeRateOracle.ExchangeRateData memory"}},"src":"1943:14:13","typeDescriptions":{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_storage","typeString":"struct PendleExchangeRateOracle.ExchangeRateData storage ref"}},"id":3147,"nodeType":"ExpressionStatement","src":"1943:14:13"},{"eventCall":{"arguments":[{"id":3149,"name":"newData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"1984:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_memory_ptr","typeString":"struct PendleExchangeRateOracle.ExchangeRateData memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_memory_ptr","typeString":"struct PendleExchangeRateOracle.ExchangeRateData memory"}],"id":3148,"name":"RateUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"1972:11:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_struct$_ExchangeRateData_$3032_memory_ptr_$returns$__$","typeString":"function (struct PendleExchangeRateOracle.ExchangeRateData memory)"}},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1972:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3151,"nodeType":"EmitStatement","src":"1967:25:13"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_setExchangeRate","nameLocation":"1725:16:13","parameters":{"id":3125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3124,"mutability":"mutable","name":"newData","nameLocation":"1766:7:13","nodeType":"VariableDeclaration","scope":3153,"src":"1742:31:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_memory_ptr","typeString":"struct PendleExchangeRateOracle.ExchangeRateData"},"typeName":{"id":3123,"nodeType":"UserDefinedTypeName","pathNode":{"id":3122,"name":"ExchangeRateData","nameLocations":["1742:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":3032,"src":"1742:16:13"},"referencedDeclaration":3032,"src":"1742:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_storage_ptr","typeString":"struct PendleExchangeRateOracle.ExchangeRateData"}},"visibility":"internal"}],"src":"1741:33:13"},"returnParameters":{"id":3126,"nodeType":"ParameterList","parameters":[],"src":"1784:0:13"},"scope":3231,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":3195,"nodeType":"FunctionDefinition","src":"2005:385:13","nodes":[],"body":{"id":3194,"nodeType":"Block","src":"2079:311:13","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3160,"name":"oldRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"2093:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3161,"name":"newRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"2103:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2093:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3171,"nodeType":"IfStatement","src":"2089:118:13","trueBody":{"id":3170,"nodeType":"Block","src":"2112:95:13","statements":[{"errorCall":{"arguments":[{"id":3164,"name":"oldRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"2146:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3165,"name":"newRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"2155:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3166,"name":"RateRejectReason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"2164:16:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RateRejectReason_$3023_$","typeString":"type(enum PendleExchangeRateOracle.RateRejectReason)"}},"id":3167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2181:14:13","memberName":"RATE_TOO_SMALL","nodeType":"MemberAccess","referencedDeclaration":3021,"src":"2164:31:13","typeDescriptions":{"typeIdentifier":"t_enum$_RateRejectReason_$3023","typeString":"enum PendleExchangeRateOracle.RateRejectReason"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_RateRejectReason_$3023","typeString":"enum PendleExchangeRateOracle.RateRejectReason"}],"id":3163,"name":"RateRejected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"2133:12:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$_t_enum$_RateRejectReason_$3023_$returns$__$","typeString":"function (uint256,uint256,enum PendleExchangeRateOracle.RateRejectReason) pure"}},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2133:63:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3169,"nodeType":"RevertStatement","src":"2126:70:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3172,"name":"oldRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"2221:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2232:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2221:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3177,"name":"PMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"2253:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PMath_$2996_$","typeString":"type(library PMath)"}},"id":3178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2259:3:13","memberName":"ONE","nodeType":"MemberAccess","referencedDeclaration":2339,"src":"2253:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3179,"name":"maxRateDiff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"2265:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2253:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3175,"name":"oldRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"2237:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2245:7:13","memberName":"mulDown","nodeType":"MemberAccess","referencedDeclaration":2405,"src":"2237:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3182,"name":"newRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"2280:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2237:50:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2221:66:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3193,"nodeType":"IfStatement","src":"2217:167:13","trueBody":{"id":3192,"nodeType":"Block","src":"2289:95:13","statements":[{"errorCall":{"arguments":[{"id":3186,"name":"oldRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"2323:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3187,"name":"newRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"2332:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3188,"name":"RateRejectReason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"2341:16:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RateRejectReason_$3023_$","typeString":"type(enum PendleExchangeRateOracle.RateRejectReason)"}},"id":3189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2358:14:13","memberName":"RATE_TOO_LARGE","nodeType":"MemberAccess","referencedDeclaration":3022,"src":"2341:31:13","typeDescriptions":{"typeIdentifier":"t_enum$_RateRejectReason_$3023","typeString":"enum PendleExchangeRateOracle.RateRejectReason"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_RateRejectReason_$3023","typeString":"enum PendleExchangeRateOracle.RateRejectReason"}],"id":3185,"name":"RateRejected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"2310:12:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$_t_enum$_RateRejectReason_$3023_$returns$__$","typeString":"function (uint256,uint256,enum PendleExchangeRateOracle.RateRejectReason) pure"}},"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2310:63:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3191,"nodeType":"RevertStatement","src":"2303:70:13"}]}}]},"implemented":true,"kind":"function","modifiers":[],"name":"_validateNewRate","nameLocation":"2014:16:13","parameters":{"id":3158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3155,"mutability":"mutable","name":"oldRate","nameLocation":"2039:7:13","nodeType":"VariableDeclaration","scope":3195,"src":"2031:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3154,"name":"uint256","nodeType":"ElementaryTypeName","src":"2031:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3157,"mutability":"mutable","name":"newRate","nameLocation":"2056:7:13","nodeType":"VariableDeclaration","scope":3195,"src":"2048:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3156,"name":"uint256","nodeType":"ElementaryTypeName","src":"2048:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2030:34:13"},"returnParameters":{"id":3159,"nodeType":"ParameterList","parameters":[],"src":"2079:0:13"},"scope":3231,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":3230,"nodeType":"FunctionDefinition","src":"2396:383:13","nodes":[],"body":{"id":3229,"nodeType":"Block","src":"2503:276:13","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3204,"name":"oldData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"2530:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_memory_ptr","typeString":"struct PendleExchangeRateOracle.ExchangeRateData memory"}},"id":3205,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2538:9:13","memberName":"dataBlock","nodeType":"MemberAccess","referencedDeclaration":3027,"src":"2530:17:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":3206,"name":"newData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"2551:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_memory_ptr","typeString":"struct PendleExchangeRateOracle.ExchangeRateData memory"}},"id":3207,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2559:9:13","memberName":"dataBlock","nodeType":"MemberAccess","referencedDeclaration":3027,"src":"2551:17:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"2530:38:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3209,"name":"oldData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"2584:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_memory_ptr","typeString":"struct PendleExchangeRateOracle.ExchangeRateData memory"}},"id":3210,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2592:13:13","memberName":"dataTimestamp","nodeType":"MemberAccess","referencedDeclaration":3029,"src":"2584:21:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":3211,"name":"newData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"2609:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_memory_ptr","typeString":"struct PendleExchangeRateOracle.ExchangeRateData memory"}},"id":3212,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2617:13:13","memberName":"dataTimestamp","nodeType":"MemberAccess","referencedDeclaration":3029,"src":"2609:21:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2584:46:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2530:100:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3215,"name":"oldData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"2646:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_memory_ptr","typeString":"struct PendleExchangeRateOracle.ExchangeRateData memory"}},"id":3216,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2654:9:13","memberName":"updatedAt","nodeType":"MemberAccess","referencedDeclaration":3031,"src":"2646:17:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3217,"name":"MIN_UPDATE_TIME_GAP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"2666:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2646:39:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":3219,"name":"newData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"2689:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_memory_ptr","typeString":"struct PendleExchangeRateOracle.ExchangeRateData memory"}},"id":3220,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2697:9:13","memberName":"updatedAt","nodeType":"MemberAccess","referencedDeclaration":3031,"src":"2689:17:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2646:60:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2530:176:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3228,"nodeType":"IfStatement","src":"2513:260:13","trueBody":{"id":3227,"nodeType":"Block","src":"2717:56:13","statements":[{"errorCall":{"arguments":[{"id":3224,"name":"newData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"2754:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_memory_ptr","typeString":"struct PendleExchangeRateOracle.ExchangeRateData memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_memory_ptr","typeString":"struct PendleExchangeRateOracle.ExchangeRateData memory"}],"id":3223,"name":"InvalidMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"2738:15:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_struct$_ExchangeRateData_$3032_memory_ptr_$returns$__$","typeString":"function (struct PendleExchangeRateOracle.ExchangeRateData memory) pure"}},"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3226,"nodeType":"RevertStatement","src":"2731:31:13"}]}}]},"implemented":true,"kind":"function","modifiers":[],"name":"_validateMetadata","nameLocation":"2405:17:13","parameters":{"id":3202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3198,"mutability":"mutable","name":"oldData","nameLocation":"2447:7:13","nodeType":"VariableDeclaration","scope":3230,"src":"2423:31:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_memory_ptr","typeString":"struct PendleExchangeRateOracle.ExchangeRateData"},"typeName":{"id":3197,"nodeType":"UserDefinedTypeName","pathNode":{"id":3196,"name":"ExchangeRateData","nameLocations":["2423:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":3032,"src":"2423:16:13"},"referencedDeclaration":3032,"src":"2423:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_storage_ptr","typeString":"struct PendleExchangeRateOracle.ExchangeRateData"}},"visibility":"internal"},{"constant":false,"id":3201,"mutability":"mutable","name":"newData","nameLocation":"2480:7:13","nodeType":"VariableDeclaration","scope":3230,"src":"2456:31:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_memory_ptr","typeString":"struct PendleExchangeRateOracle.ExchangeRateData"},"typeName":{"id":3200,"nodeType":"UserDefinedTypeName","pathNode":{"id":3199,"name":"ExchangeRateData","nameLocations":["2456:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":3032,"src":"2456:16:13"},"referencedDeclaration":3032,"src":"2456:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_ExchangeRateData_$3032_storage_ptr","typeString":"struct PendleExchangeRateOracle.ExchangeRateData"}},"visibility":"internal"}],"src":"2422:66:13"},"returnParameters":{"id":3203,"nodeType":"ParameterList","parameters":[],"src":"2503:0:13"},"scope":3231,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[{"baseName":{"id":3011,"name":"BoringOwnableUpgradeable","nameLocations":["327:24:13"],"nodeType":"IdentifierPath","referencedDeclaration":2334,"src":"327:24:13"},"id":3012,"nodeType":"InheritanceSpecifier","src":"327:24:13"},{"baseName":{"id":3013,"name":"IPExchangeRateOracle","nameLocations":["353:20:13"],"nodeType":"IdentifierPath","referencedDeclaration":3004,"src":"353:20:13"},"id":3014,"nodeType":"InheritanceSpecifier","src":"353:20:13"}],"canonicalName":"PendleExchangeRateOracle","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"linearizedBaseContracts":[3231,3004,2334,577,2213],"name":"PendleExchangeRateOracle","nameLocation":"299:24:13","scope":3232,"usedErrors":[3041,3046],"usedEvents":[423,2223,3051]}],"license":"MIT"}}},"contracts":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"AccessControlUpgradeable":{"abi":[{"type":"function","name":"DEFAULT_ADMIN_ROLE","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"getRoleAdmin","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"grantRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"hasRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"renounceRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revokeRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false},{"type":"event","name":"RoleAdminChanged","inputs":[{"name":"role","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"previousAdminRole","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"newAdminRole","type":"bytes32","indexed":true,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"RoleGranted","inputs":[{"name":"role","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"account","type":"address","indexed":true,"internalType":"address"},{"name":"sender","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"RoleRevoked","inputs":[{"name":"role","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"account","type":"address","indexed":true,"internalType":"address"},{"name":"sender","type":"address","indexed":true,"internalType":"address"}],"anonymous":false}],"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xfeefb24d068524440e1ba885efdf105d91f83504af3c2d745ffacc4595396831\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3df5f6a75f86411cb20df54362ed4ec9b4c270720be20da7095f169932fa2709\",\"dweb:/ipfs/QmTThfuAwFYAvtHgZbmp6ZAbN2MVGSabAnhAbsB6JQxJCF\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","details":"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."},"RoleAdminChanged(bytes32,bytes32,bytes32)":{"details":"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"},"RoleGranted(bytes32,address,address)":{"details":"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."},"RoleRevoked(bytes32,address,address)":{"details":"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"}}},"storageLayout":{"storage":[{"astId":415,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":418,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":948,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":1221,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"},{"astId":39,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"_roles","offset":0,"slot":"101","type":"t_mapping(t_bytes32,t_struct(RoleData)34_storage)"},{"astId":334,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"__gap","offset":0,"slot":"102","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568","base":"t_uint256"},"t_array(t_uint256)50_storage":{"encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600","base":"t_uint256"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_struct(RoleData)34_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)34_storage"},"t_struct(RoleData)34_storage":{"encoding":"inplace","label":"struct AccessControlUpgradeable.RoleData","numberOfBytes":"64","members":[{"astId":31,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"members","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":33,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}]},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"evm":{"assembly":"","bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}}}},"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol":{"IAccessControlUpgradeable":{"abi":[{"type":"function","name":"getRoleAdmin","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"grantRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"hasRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"renounceRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revokeRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"RoleAdminChanged","inputs":[{"name":"role","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"previousAdminRole","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"newAdminRole","type":"bytes32","indexed":true,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"RoleGranted","inputs":[{"name":"role","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"account","type":"address","indexed":true,"internalType":"address"},{"name":"sender","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"RoleRevoked","inputs":[{"name":"role","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"account","type":"address","indexed":true,"internalType":"address"},{"name":"sender","type":"address","indexed":true,"internalType":"address"}],"anonymous":false}],"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":\"IAccessControlUpgradeable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","details":"External interface of AccessControl declared to support ERC165 detection.","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."}},"events":{"RoleAdminChanged(bytes32,bytes32,bytes32)":{"details":"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"},"RoleGranted(bytes32,address,address)":{"details":"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."},"RoleRevoked(bytes32,address,address)":{"details":"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"}}},"evm":{"assembly":"","bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false}],"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}}},"storageLayout":{"storage":[{"astId":415,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":418,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"evm":{"assembly":"","bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}}}}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","details":"Collection of functions related to the address type"},"evm":{"assembly":"    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202d3b56a55d1c8c609323ea14278fe6305d6840029e65b3f8fd0ffcafbb21590364736f6c63430008170033\n}\n","legacyAssembly":{".code":[{"begin":194,"end":9374,"name":"PUSH","source":3,"value":"80"},{"begin":194,"end":9374,"name":"DUP1","source":3},{"begin":194,"end":9374,"name":"PUSH","source":3,"value":"40"},{"begin":194,"end":9374,"name":"MSTORE","source":3},{"begin":194,"end":9374,"name":"CALLVALUE","source":3},{"begin":194,"end":9374,"name":"PUSH [tag]","source":3,"value":"1"},{"begin":194,"end":9374,"name":"JUMPI","source":3},{"begin":194,"end":9374,"name":"PUSH #[$]","source":3,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":194,"end":9374,"name":"SWAP1","source":3},{"begin":194,"end":9374,"name":"DUP2","source":3},{"begin":194,"end":9374,"name":"PUSH [$]","source":3,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":194,"end":9374,"name":"DUP3","source":3},{"begin":194,"end":9374,"name":"CODECOPY","source":3},{"begin":194,"end":9374,"name":"ADDRESS","source":3},{"begin":194,"end":9374,"name":"DUP2","source":3},{"begin":194,"end":9374,"name":"ASSIGNIMMUTABLE","source":3,"value":"library_deploy_address"},{"begin":194,"end":9374,"name":"RETURN","source":3},{"begin":194,"end":9374,"name":"tag","source":3,"value":"1"},{"begin":194,"end":9374,"name":"JUMPDEST","source":3},{"begin":194,"end":9374,"name":"PUSH","source":3,"value":"0"},{"begin":194,"end":9374,"name":"DUP1","source":3},{"begin":194,"end":9374,"name":"REVERT","source":3}],".data":{"0":{".auxdata":"a26469706673582212202d3b56a55d1c8c609323ea14278fe6305d6840029e65b3f8fd0ffcafbb21590364736f6c63430008170033",".code":[{"begin":194,"end":9374,"name":"PUSH","source":3,"value":"0"},{"begin":194,"end":9374,"name":"DUP1","source":3},{"begin":194,"end":9374,"name":"REVERT","source":3}]}},"sourceList":["@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol","@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol","@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol","@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol","contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol","contracts/pendle/contracts/core/libraries/math/PMath.sol","contracts/pendle/contracts/interfaces/IPExchangeRateOracle.sol","contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol","#utility.yul"]},"bytecode":{"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212202d3b56a55d1c8c609323ea14278fe6305d6840029e65b3f8fd0ffcafbb21590364736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D EXTCODESIZE JUMP 0xA5 0x5D SHR DUP13 PUSH1 0x93 0x23 0xEA EQ 0x27 DUP16 0xE6 ADDRESS 0x5D PUSH9 0x40029E65B3F8FD0FFC 0xAF 0xBB 0x21 MSIZE SUB PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"194:9180:3:-:0;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"600080fdfea26469706673582212202d3b56a55d1c8c609323ea14278fe6305d6840029e65b3f8fd0ffcafbb21590364736f6c63430008170033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D EXTCODESIZE JUMP 0xA5 0x5D SHR DUP13 PUSH1 0x93 0x23 0xEA EQ 0x27 DUP16 0xE6 ADDRESS 0x5D PUSH9 0x40029E65B3F8FD0FFC 0xAF 0xBB 0x21 MSIZE SUB PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"194:9180:3:-:0;;","linkReferences":{}},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"external":{},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}}}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false}],"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}}},"storageLayout":{"storage":[{"astId":415,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":418,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":948,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600","base":"t_uint256"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"evm":{"assembly":"","bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}}}}},"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":{"StringsUpgradeable":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":\"StringsUpgradeable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","details":"String operations."},"evm":{"assembly":"    /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":242:2845  library StringsUpgradeable {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":242:2845  library StringsUpgradeable {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220463abbb25120968f9870fd30860aa82325a6f59c86b9cc199af54ab70198995564736f6c63430008170033\n}\n","legacyAssembly":{".code":[{"begin":242,"end":2845,"name":"PUSH","source":5,"value":"80"},{"begin":242,"end":2845,"name":"DUP1","source":5},{"begin":242,"end":2845,"name":"PUSH","source":5,"value":"40"},{"begin":242,"end":2845,"name":"MSTORE","source":5},{"begin":242,"end":2845,"name":"CALLVALUE","source":5},{"begin":242,"end":2845,"name":"PUSH [tag]","source":5,"value":"1"},{"begin":242,"end":2845,"name":"JUMPI","source":5},{"begin":242,"end":2845,"name":"PUSH #[$]","source":5,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":242,"end":2845,"name":"SWAP1","source":5},{"begin":242,"end":2845,"name":"DUP2","source":5},{"begin":242,"end":2845,"name":"PUSH [$]","source":5,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":242,"end":2845,"name":"DUP3","source":5},{"begin":242,"end":2845,"name":"CODECOPY","source":5},{"begin":242,"end":2845,"name":"ADDRESS","source":5},{"begin":242,"end":2845,"name":"DUP2","source":5},{"begin":242,"end":2845,"name":"ASSIGNIMMUTABLE","source":5,"value":"library_deploy_address"},{"begin":242,"end":2845,"name":"RETURN","source":5},{"begin":242,"end":2845,"name":"tag","source":5,"value":"1"},{"begin":242,"end":2845,"name":"JUMPDEST","source":5},{"begin":242,"end":2845,"name":"PUSH","source":5,"value":"0"},{"begin":242,"end":2845,"name":"DUP1","source":5},{"begin":242,"end":2845,"name":"REVERT","source":5}],".data":{"0":{".auxdata":"a2646970667358221220463abbb25120968f9870fd30860aa82325a6f59c86b9cc199af54ab70198995564736f6c63430008170033",".code":[{"begin":242,"end":2845,"name":"PUSH","source":5,"value":"0"},{"begin":242,"end":2845,"name":"DUP1","source":5},{"begin":242,"end":2845,"name":"REVERT","source":5}]}},"sourceList":["@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol","@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol","@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol","@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol","contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol","contracts/pendle/contracts/core/libraries/math/PMath.sol","contracts/pendle/contracts/interfaces/IPExchangeRateOracle.sol","contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol","#utility.yul"]},"bytecode":{"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220463abbb25120968f9870fd30860aa82325a6f59c86b9cc199af54ab70198995564736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID GASPRICE 0xBB 0xB2 MLOAD KECCAK256 SWAP7 DUP16 SWAP9 PUSH17 0xFD30860AA82325A6F59C86B9CC199AF54A 0xB7 ADD SWAP9 SWAP10 SSTORE PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"242:2603:5:-:0;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"600080fdfea2646970667358221220463abbb25120968f9870fd30860aa82325a6f59c86b9cc199af54ab70198995564736f6c63430008170033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID GASPRICE 0xBB 0xB2 MLOAD KECCAK256 SWAP7 DUP16 SWAP9 PUSH17 0xFD30860AA82325A6F59C86B9CC199AF54A 0xB7 ADD SWAP9 SWAP10 SSTORE PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"242:2603:5:-:0;;","linkReferences":{}},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"external":{},"internal":{"equal(string memory,string memory)":"infinite","toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(int256)":"infinite","toString(uint256)":"infinite"}}}}},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ERC165Upgradeable":{"abi":[{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false}],"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}}},"storageLayout":{"storage":[{"astId":415,"contract":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":418,"contract":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1221,"contract":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600","base":"t_uint256"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"evm":{"assembly":"","bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}}}},"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol":{"IERC165Upgradeable":{"abi":[{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"}],"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":\"IERC165Upgradeable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}}},"evm":{"assembly":"","bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}}}},"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"MathUpgradeable":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":\"MathUpgradeable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","details":"Standard math utilities missing in the Solidity language."},"evm":{"assembly":"    /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":202:12795  library MathUpgradeable {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":202:12795  library MathUpgradeable {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122015273bd0aa9bb72f0d83005084f6b2615bd045a495043dee36328025f2a8009964736f6c63430008170033\n}\n","legacyAssembly":{".code":[{"begin":202,"end":12795,"name":"PUSH","source":8,"value":"80"},{"begin":202,"end":12795,"name":"DUP1","source":8},{"begin":202,"end":12795,"name":"PUSH","source":8,"value":"40"},{"begin":202,"end":12795,"name":"MSTORE","source":8},{"begin":202,"end":12795,"name":"CALLVALUE","source":8},{"begin":202,"end":12795,"name":"PUSH [tag]","source":8,"value":"1"},{"begin":202,"end":12795,"name":"JUMPI","source":8},{"begin":202,"end":12795,"name":"PUSH #[$]","source":8,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":202,"end":12795,"name":"SWAP1","source":8},{"begin":202,"end":12795,"name":"DUP2","source":8},{"begin":202,"end":12795,"name":"PUSH [$]","source":8,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":202,"end":12795,"name":"DUP3","source":8},{"begin":202,"end":12795,"name":"CODECOPY","source":8},{"begin":202,"end":12795,"name":"ADDRESS","source":8},{"begin":202,"end":12795,"name":"DUP2","source":8},{"begin":202,"end":12795,"name":"ASSIGNIMMUTABLE","source":8,"value":"library_deploy_address"},{"begin":202,"end":12795,"name":"RETURN","source":8},{"begin":202,"end":12795,"name":"tag","source":8,"value":"1"},{"begin":202,"end":12795,"name":"JUMPDEST","source":8},{"begin":202,"end":12795,"name":"PUSH","source":8,"value":"0"},{"begin":202,"end":12795,"name":"DUP1","source":8},{"begin":202,"end":12795,"name":"REVERT","source":8}],".data":{"0":{".auxdata":"a264697066735822122015273bd0aa9bb72f0d83005084f6b2615bd045a495043dee36328025f2a8009964736f6c63430008170033",".code":[{"begin":202,"end":12795,"name":"PUSH","source":8,"value":"0"},{"begin":202,"end":12795,"name":"DUP1","source":8},{"begin":202,"end":12795,"name":"REVERT","source":8}]}},"sourceList":["@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol","@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol","@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol","@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol","contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol","contracts/pendle/contracts/core/libraries/math/PMath.sol","contracts/pendle/contracts/interfaces/IPExchangeRateOracle.sol","contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol","#utility.yul"]},"bytecode":{"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122015273bd0aa9bb72f0d83005084f6b2615bd045a495043dee36328025f2a8009964736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0x27 EXTCODESIZE 0xD0 0xAA SWAP12 0xB7 0x2F 0xD DUP4 STOP POP DUP5 0xF6 0xB2 PUSH2 0x5BD0 GASLIMIT LOG4 SWAP6 DIV RETURNDATASIZE 0xEE CALLDATASIZE ORIGIN DUP1 0x25 CALLCODE 0xA8 STOP SWAP10 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"202:12593:8:-:0;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"600080fdfea264697066735822122015273bd0aa9bb72f0d83005084f6b2615bd045a495043dee36328025f2a8009964736f6c63430008170033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0x27 EXTCODESIZE 0xD0 0xAA SWAP12 0xB7 0x2F 0xD DUP4 STOP POP DUP5 0xF6 0xB2 PUSH2 0x5BD0 GASLIMIT LOG4 SWAP6 DIV RETURNDATASIZE 0xEE CALLDATASIZE ORIGIN DUP1 0x25 CALLCODE 0xA8 STOP SWAP10 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"202:12593:8:-:0;;","linkReferences":{}},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"external":{},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum MathUpgradeable.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum MathUpgradeable.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum MathUpgradeable.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum MathUpgradeable.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum MathUpgradeable.Rounding)":"infinite"}}}}},"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol":{"SignedMathUpgradeable":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":\"SignedMathUpgradeable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","details":"Standard signed math utilities missing in the Solidity language."},"evm":{"assembly":"    /* \"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":215:1273  library SignedMathUpgradeable {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":215:1273  library SignedMathUpgradeable {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220be790b9c39ec2a831e179c6aec16597427d7c65bffa94fd19d162fac584914e864736f6c63430008170033\n}\n","legacyAssembly":{".code":[{"begin":215,"end":1273,"name":"PUSH","source":9,"value":"80"},{"begin":215,"end":1273,"name":"DUP1","source":9},{"begin":215,"end":1273,"name":"PUSH","source":9,"value":"40"},{"begin":215,"end":1273,"name":"MSTORE","source":9},{"begin":215,"end":1273,"name":"CALLVALUE","source":9},{"begin":215,"end":1273,"name":"PUSH [tag]","source":9,"value":"1"},{"begin":215,"end":1273,"name":"JUMPI","source":9},{"begin":215,"end":1273,"name":"PUSH #[$]","source":9,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":215,"end":1273,"name":"SWAP1","source":9},{"begin":215,"end":1273,"name":"DUP2","source":9},{"begin":215,"end":1273,"name":"PUSH [$]","source":9,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":215,"end":1273,"name":"DUP3","source":9},{"begin":215,"end":1273,"name":"CODECOPY","source":9},{"begin":215,"end":1273,"name":"ADDRESS","source":9},{"begin":215,"end":1273,"name":"DUP2","source":9},{"begin":215,"end":1273,"name":"ASSIGNIMMUTABLE","source":9,"value":"library_deploy_address"},{"begin":215,"end":1273,"name":"RETURN","source":9},{"begin":215,"end":1273,"name":"tag","source":9,"value":"1"},{"begin":215,"end":1273,"name":"JUMPDEST","source":9},{"begin":215,"end":1273,"name":"PUSH","source":9,"value":"0"},{"begin":215,"end":1273,"name":"DUP1","source":9},{"begin":215,"end":1273,"name":"REVERT","source":9}],".data":{"0":{".auxdata":"a2646970667358221220be790b9c39ec2a831e179c6aec16597427d7c65bffa94fd19d162fac584914e864736f6c63430008170033",".code":[{"begin":215,"end":1273,"name":"PUSH","source":9,"value":"0"},{"begin":215,"end":1273,"name":"DUP1","source":9},{"begin":215,"end":1273,"name":"REVERT","source":9}]}},"sourceList":["@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol","@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol","@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol","@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol","contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol","contracts/pendle/contracts/core/libraries/math/PMath.sol","contracts/pendle/contracts/interfaces/IPExchangeRateOracle.sol","contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol","#utility.yul"]},"bytecode":{"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220be790b9c39ec2a831e179c6aec16597427d7c65bffa94fd19d162fac584914e864736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE PUSH26 0xB9C39EC2A831E179C6AEC16597427D7C65BFFA94FD19D162FAC PC 0x49 EQ 0xE8 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"215:1058:9:-:0;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"600080fdfea2646970667358221220be790b9c39ec2a831e179c6aec16597427d7c65bffa94fd19d162fac584914e864736f6c63430008170033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE PUSH26 0xB9C39EC2A831E179C6AEC16597427D7C65BFFA94FD19D162FAC PC 0x49 EQ 0xE8 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"215:1058:9:-:0;;","linkReferences":{}},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"external":{},"internal":{"abs(int256)":"infinite","average(int256,int256)":"infinite","max(int256,int256)":"infinite","min(int256,int256)":"infinite"}}}}},"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol":{"BoringOwnableUpgradeable":{"abi":[{"type":"function","name":"claimOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"pendingOwner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"transferOwnership","inputs":[{"name":"newOwner","type":"address","internalType":"address"},{"name":"direct","type":"bool","internalType":"bool"},{"name":"renounce","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false},{"type":"event","name":"OwnershipTransferred","inputs":[{"name":"previousOwner","type":"address","indexed":true,"internalType":"address"},{"name":"newOwner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false}],"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"direct\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"renounce\",\"type\":\"bool\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"transferOwnership(address,bool,bool)\":{\"params\":{\"direct\":\"True if `newOwner` should be set immediately. False if `newOwner` needs to use `claimOwnership`.\",\"newOwner\":\"Address of the new owner.\",\"renounce\":\"Allows the `newOwner` to be `address(0)` if `direct` and `renounce` is True. Has no effect otherwise.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimOwnership()\":{\"notice\":\"Needs to be called by `pendingOwner` to claim ownership.\"},\"transferOwnership(address,bool,bool)\":{\"notice\":\"Transfers ownership to `newOwner`. Either directly or claimable by the new pending owner. Can only be invoked by the current `owner`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol\":\"BoringOwnableUpgradeable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol\":{\"keccak256\":\"0xdf55f114fee105efe73ce2275946f50d1b1e47e199f7ea9abe4b6dc99125579a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e518b6abeea779b486defa8151958d354651e837032ccc35a218f9d94f649b72\",\"dweb:/ipfs/QmeGtZY7vf8JCaLc2vrFy7t6JSzFFW5VtwEvEH9Wv21w5n\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user","methods":{"claimOwnership()":{"notice":"Needs to be called by `pendingOwner` to claim ownership."},"transferOwnership(address,bool,bool)":{"notice":"Transfers ownership to `newOwner`. Either directly or claimable by the new pending owner. Can only be invoked by the current `owner`."}}},"devdoc":{"version":1,"kind":"dev","methods":{"transferOwnership(address,bool,bool)":{"params":{"direct":"True if `newOwner` should be set immediately. False if `newOwner` needs to use `claimOwnership`.","newOwner":"Address of the new owner.","renounce":"Allows the `newOwner` to be `address(0)` if `direct` and `renounce` is True. Has no effect otherwise."}}},"events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}}},"storageLayout":{"storage":[{"astId":2210,"contract":"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol:BoringOwnableUpgradeable","label":"owner","offset":0,"slot":"0","type":"t_address"},{"astId":2212,"contract":"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol:BoringOwnableUpgradeable","label":"pendingOwner","offset":0,"slot":"1","type":"t_address"},{"astId":415,"contract":"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol:BoringOwnableUpgradeable","label":"_initialized","offset":20,"slot":"1","type":"t_uint8"},{"astId":418,"contract":"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol:BoringOwnableUpgradeable","label":"_initializing","offset":21,"slot":"1","type":"t_bool"},{"astId":2333,"contract":"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol:BoringOwnableUpgradeable","label":"__gap","offset":0,"slot":"2","type":"t_array(t_uint256)48_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)48_storage":{"encoding":"inplace","label":"uint256[48]","numberOfBytes":"1536","base":"t_uint256"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"evm":{"assembly":"","bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"claimOwnership()":"4e71e0c8","owner()":"8da5cb5b","pendingOwner()":"e30c3978","transferOwnership(address,bool,bool)":"078dfbe7"}}},"BoringOwnableUpgradeableData":{"abi":[{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"pendingOwner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"}],"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol\":\"BoringOwnableUpgradeableData\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol\":{\"keccak256\":\"0xdf55f114fee105efe73ce2275946f50d1b1e47e199f7ea9abe4b6dc99125579a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e518b6abeea779b486defa8151958d354651e837032ccc35a218f9d94f649b72\",\"dweb:/ipfs/QmeGtZY7vf8JCaLc2vrFy7t6JSzFFW5VtwEvEH9Wv21w5n\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev"},"storageLayout":{"storage":[{"astId":2210,"contract":"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol:BoringOwnableUpgradeableData","label":"owner","offset":0,"slot":"0","type":"t_address"},{"astId":2212,"contract":"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol:BoringOwnableUpgradeableData","label":"pendingOwner","offset":0,"slot":"1","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"evm":{"assembly":"    /* \"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol\":147:247  contract BoringOwnableUpgradeableData {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol\":147:247  contract BoringOwnableUpgradeableData {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_1, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_1:\n      0x00\n      swap1\n      dup2\n      calldataload\n      0xe0\n      shr\n      swap1\n      dup2\n      0x8da5cb5b\n      eq\n      tag_3\n      jumpi\n      pop\n      0xe30c3978\n      eq\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_5:\n      jumpi(tag_9, callvalue)\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_9\n      jumpi\n      0x20\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol\":217:244  address public pendingOwner */\n      0x01\n        /* \"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol\":147:247  contract BoringOwnableUpgradeableData {... */\n      sload\n      and\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_9:\n      dup1\n      revert\n    tag_3:\n      swap1\n      pop\n      jumpi(tag_13, callvalue)\n      dup2\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_13\n      jumpi\n      0xffffffffffffffffffffffffffffffffffffffff\n      0x20\n      swap3\n      sload\n      and\n      dup2\n      mstore\n      return\n    tag_13:\n      pop\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122085d26dcbf4acb7d875c4c42d8731b3db8069ea9ec2f6f6ba963660e044bc711a64736f6c63430008170033\n}\n","legacyAssembly":{".code":[{"begin":147,"end":247,"name":"PUSH","source":10,"value":"80"},{"begin":147,"end":247,"name":"DUP1","source":10},{"begin":147,"end":247,"name":"PUSH","source":10,"value":"40"},{"begin":147,"end":247,"name":"MSTORE","source":10},{"begin":147,"end":247,"name":"CALLVALUE","source":10},{"begin":147,"end":247,"name":"PUSH [tag]","source":10,"value":"1"},{"begin":147,"end":247,"name":"JUMPI","source":10},{"begin":147,"end":247,"name":"PUSH #[$]","source":10,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":147,"end":247,"name":"SWAP1","source":10},{"begin":147,"end":247,"name":"DUP2","source":10},{"begin":147,"end":247,"name":"PUSH [$]","source":10,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":147,"end":247,"name":"DUP3","source":10},{"begin":147,"end":247,"name":"CODECOPY","source":10},{"begin":147,"end":247,"name":"RETURN","source":10},{"begin":147,"end":247,"name":"tag","source":10,"value":"1"},{"begin":147,"end":247,"name":"JUMPDEST","source":10},{"begin":147,"end":247,"name":"PUSH","source":10,"value":"0"},{"begin":147,"end":247,"name":"DUP1","source":10},{"begin":147,"end":247,"name":"REVERT","source":10}],".data":{"0":{".auxdata":"a264697066735822122085d26dcbf4acb7d875c4c42d8731b3db8069ea9ec2f6f6ba963660e044bc711a64736f6c63430008170033",".code":[{"begin":147,"end":247,"name":"PUSH","source":10,"value":"80"},{"begin":147,"end":247,"name":"DUP1","source":10},{"begin":147,"end":247,"name":"PUSH","source":10,"value":"40"},{"begin":147,"end":247,"name":"MSTORE","source":10},{"begin":147,"end":247,"name":"PUSH","source":10,"value":"4"},{"begin":147,"end":247,"name":"CALLDATASIZE","source":10},{"begin":147,"end":247,"name":"LT","source":10},{"begin":147,"end":247,"name":"ISZERO","source":10},{"begin":147,"end":247,"name":"PUSH [tag]","source":10,"value":"1"},{"begin":147,"end":247,"name":"JUMPI","source":10},{"begin":147,"end":247,"name":"PUSH","source":10,"value":"0"},{"begin":147,"end":247,"name":"DUP1","source":10},{"begin":147,"end":247,"name":"REVERT","source":10},{"begin":147,"end":247,"name":"tag","source":10,"value":"1"},{"begin":147,"end":247,"name":"JUMPDEST","source":10},{"begin":147,"end":247,"name":"PUSH","source":10,"value":"0"},{"begin":147,"end":247,"name":"SWAP1","source":10},{"begin":147,"end":247,"name":"DUP2","source":10},{"begin":147,"end":247,"name":"CALLDATALOAD","source":10},{"begin":147,"end":247,"name":"PUSH","source":10,"value":"E0"},{"begin":147,"end":247,"name":"SHR","source":10},{"begin":147,"end":247,"name":"SWAP1","source":10},{"begin":147,"end":247,"name":"DUP2","source":10},{"begin":147,"end":247,"name":"PUSH","source":10,"value":"8DA5CB5B"},{"begin":147,"end":247,"name":"EQ","source":10},{"begin":147,"end":247,"name":"PUSH [tag]","source":10,"value":"3"},{"begin":147,"end":247,"name":"JUMPI","source":10},{"begin":147,"end":247,"name":"POP","source":10},{"begin":147,"end":247,"name":"PUSH","source":10,"value":"E30C3978"},{"begin":147,"end":247,"name":"EQ","source":10},{"begin":147,"end":247,"name":"PUSH [tag]","source":10,"value":"5"},{"begin":147,"end":247,"name":"JUMPI","source":10},{"begin":147,"end":247,"name":"PUSH","source":10,"value":"0"},{"begin":147,"end":247,"name":"DUP1","source":10},{"begin":147,"end":247,"name":"REVERT","source":10},{"begin":147,"end":247,"name":"tag","source":10,"value":"5"},{"begin":147,"end":247,"name":"JUMPDEST","source":10},{"begin":147,"end":247,"name":"CALLVALUE","source":10},{"begin":147,"end":247,"name":"PUSH [tag]","source":10,"value":"9"},{"begin":147,"end":247,"name":"JUMPI","source":10},{"begin":147,"end":247,"name":"DUP1","source":10},{"begin":147,"end":247,"name":"PUSH","source":10,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC"},{"begin":147,"end":247,"name":"CALLDATASIZE","source":10},{"begin":147,"end":247,"name":"ADD","source":10},{"begin":147,"end":247,"name":"SLT","source":10},{"begin":147,"end":247,"name":"PUSH [tag]","source":10,"value":"9"},{"begin":147,"end":247,"name":"JUMPI","source":10},{"begin":147,"end":247,"name":"PUSH","source":10,"value":"20"},{"begin":147,"end":247,"name":"PUSH","source":10,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":217,"end":244,"name":"PUSH","source":10,"value":"1"},{"begin":147,"end":247,"name":"SLOAD","source":10},{"begin":147,"end":247,"name":"AND","source":10},{"begin":147,"end":247,"name":"PUSH","source":10,"value":"40"},{"begin":147,"end":247,"name":"MLOAD","source":10},{"begin":147,"end":247,"name":"SWAP1","source":10},{"begin":147,"end":247,"name":"DUP2","source":10},{"begin":147,"end":247,"name":"MSTORE","source":10},{"begin":147,"end":247,"name":"RETURN","source":10},{"begin":147,"end":247,"name":"tag","source":10,"value":"9"},{"begin":147,"end":247,"name":"JUMPDEST","source":10},{"begin":147,"end":247,"name":"DUP1","source":10},{"begin":147,"end":247,"name":"REVERT","source":10},{"begin":147,"end":247,"name":"tag","source":10,"value":"3"},{"begin":147,"end":247,"name":"JUMPDEST","source":10},{"begin":147,"end":247,"name":"SWAP1","source":10},{"begin":147,"end":247,"name":"POP","source":10},{"begin":147,"end":247,"name":"CALLVALUE","source":10},{"begin":147,"end":247,"name":"PUSH [tag]","source":10,"value":"13"},{"begin":147,"end":247,"name":"JUMPI","source":10},{"begin":147,"end":247,"name":"DUP2","source":10},{"begin":147,"end":247,"name":"PUSH","source":10,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC"},{"begin":147,"end":247,"name":"CALLDATASIZE","source":10},{"begin":147,"end":247,"name":"ADD","source":10},{"begin":147,"end":247,"name":"SLT","source":10},{"begin":147,"end":247,"name":"PUSH [tag]","source":10,"value":"13"},{"begin":147,"end":247,"name":"JUMPI","source":10},{"begin":147,"end":247,"name":"PUSH","source":10,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":147,"end":247,"name":"PUSH","source":10,"value":"20"},{"begin":147,"end":247,"name":"SWAP3","source":10},{"begin":147,"end":247,"name":"SLOAD","source":10},{"begin":147,"end":247,"name":"AND","source":10},{"begin":147,"end":247,"name":"DUP2","source":10},{"begin":147,"end":247,"name":"MSTORE","source":10},{"begin":147,"end":247,"name":"RETURN","source":10},{"begin":147,"end":247,"name":"tag","source":10,"value":"13"},{"begin":147,"end":247,"name":"JUMPDEST","source":10},{"begin":147,"end":247,"name":"POP","source":10},{"begin":147,"end":247,"name":"DUP1","source":10},{"begin":147,"end":247,"name":"REVERT","source":10}]}},"sourceList":["@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol","@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol","@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol","@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol","contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol","contracts/pendle/contracts/core/libraries/math/PMath.sol","contracts/pendle/contracts/interfaces/IPExchangeRateOracle.sol","contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol","#utility.yul"]},"bytecode":{"object":"608080604052346100165761010c908161001c8239f35b600080fdfe6080806040526004361015601257600080fd5b600090813560e01c9081638da5cb5b146086575063e30c397814603457600080fd5b34608357807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112608357602073ffffffffffffffffffffffffffffffffffffffff60015416604051908152f35b80fd5b90503460d257817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011260d25773ffffffffffffffffffffffffffffffffffffffff60209254168152f35b5080fdfea264697066735822122085d26dcbf4acb7d875c4c42d8731b3db8069ea9ec2f6f6ba963660e044bc711a64736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x10C SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x8DA5CB5B EQ PUSH1 0x86 JUMPI POP PUSH4 0xE30C3978 EQ PUSH1 0x34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x83 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH1 0x83 JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH1 0xD2 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH1 0xD2 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP3 SLOAD AND DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 0xD2 PUSH14 0xCBF4ACB7D875C4C42D8731B3DB80 PUSH10 0xEA9EC2F6F6BA963660E0 DIFFICULTY 0xBC PUSH18 0x1A64736F6C63430008170033000000000000 ","sourceMap":"147:100:10:-:0;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"6080806040526004361015601257600080fd5b600090813560e01c9081638da5cb5b146086575063e30c397814603457600080fd5b34608357807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112608357602073ffffffffffffffffffffffffffffffffffffffff60015416604051908152f35b80fd5b90503460d257817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011260d25773ffffffffffffffffffffffffffffffffffffffff60209254168152f35b5080fdfea264697066735822122085d26dcbf4acb7d875c4c42d8731b3db8069ea9ec2f6f6ba963660e044bc711a64736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x8DA5CB5B EQ PUSH1 0x86 JUMPI POP PUSH4 0xE30C3978 EQ PUSH1 0x34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x83 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH1 0x83 JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH1 0xD2 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH1 0xD2 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP3 SLOAD AND DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 0xD2 PUSH14 0xCBF4ACB7D875C4C42D8731B3DB80 PUSH10 0xEA9EC2F6F6BA963660E0 DIFFICULTY 0xBC PUSH18 0x1A64736F6C63430008170033000000000000 ","sourceMap":"147:100:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;217:27;147:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"methodIdentifiers":{"owner()":"8da5cb5b","pendingOwner()":"e30c3978"},"gasEstimates":{"creation":{"codeDepositCost":"53600","executionCost":"111","totalCost":"53711"},"external":{"owner()":"2261","pendingOwner()":"2286"},"internal":{}}}}},"contracts/pendle/contracts/core/libraries/math/PMath.sol":{"PMath":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/pendle/contracts/core/libraries/math/PMath.sol\":\"PMath\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/pendle/contracts/core/libraries/math/PMath.sol\":{\"keccak256\":\"0x22d2a1e684ea9fe01ad81fd316a721a9ed51f8d93b4889546f612541d2d0f6e8\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9c62803e588b7e313ee37ef5178c91ea65ae5ef68f9b91567f476a9fb30b05c0\",\"dweb:/ipfs/Qmck5DmhK4rJQNTotCRXn8JnD7Bg8b9P1SsKZAkh9P5XX2\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev"},"evm":{"assembly":"    /* \"contracts/pendle/contracts/core/libraries/math/PMath.sol\":783:5616  library PMath {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"contracts/pendle/contracts/core/libraries/math/PMath.sol\":783:5616  library PMath {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201fed4a20b049074e17f81b7fa0d766ea7370a3aea6ce75c6f585df2a4929bccd64736f6c63430008170033\n}\n","legacyAssembly":{".code":[{"begin":783,"end":5616,"name":"PUSH","source":11,"value":"80"},{"begin":783,"end":5616,"name":"DUP1","source":11},{"begin":783,"end":5616,"name":"PUSH","source":11,"value":"40"},{"begin":783,"end":5616,"name":"MSTORE","source":11},{"begin":783,"end":5616,"name":"CALLVALUE","source":11},{"begin":783,"end":5616,"name":"PUSH [tag]","source":11,"value":"1"},{"begin":783,"end":5616,"name":"JUMPI","source":11},{"begin":783,"end":5616,"name":"PUSH #[$]","source":11,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":783,"end":5616,"name":"SWAP1","source":11},{"begin":783,"end":5616,"name":"DUP2","source":11},{"begin":783,"end":5616,"name":"PUSH [$]","source":11,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":783,"end":5616,"name":"DUP3","source":11},{"begin":783,"end":5616,"name":"CODECOPY","source":11},{"begin":783,"end":5616,"name":"ADDRESS","source":11},{"begin":783,"end":5616,"name":"DUP2","source":11},{"begin":783,"end":5616,"name":"ASSIGNIMMUTABLE","source":11,"value":"library_deploy_address"},{"begin":783,"end":5616,"name":"RETURN","source":11},{"begin":783,"end":5616,"name":"tag","source":11,"value":"1"},{"begin":783,"end":5616,"name":"JUMPDEST","source":11},{"begin":783,"end":5616,"name":"PUSH","source":11,"value":"0"},{"begin":783,"end":5616,"name":"DUP1","source":11},{"begin":783,"end":5616,"name":"REVERT","source":11}],".data":{"0":{".auxdata":"a26469706673582212201fed4a20b049074e17f81b7fa0d766ea7370a3aea6ce75c6f585df2a4929bccd64736f6c63430008170033",".code":[{"begin":783,"end":5616,"name":"PUSH","source":11,"value":"0"},{"begin":783,"end":5616,"name":"DUP1","source":11},{"begin":783,"end":5616,"name":"REVERT","source":11}]}},"sourceList":["@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol","@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol","@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol","@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol","contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol","contracts/pendle/contracts/core/libraries/math/PMath.sol","contracts/pendle/contracts/interfaces/IPExchangeRateOracle.sol","contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol","#utility.yul"]},"bytecode":{"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212201fed4a20b049074e17f81b7fa0d766ea7370a3aea6ce75c6f585df2a4929bccd64736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xED 0x4A KECCAK256 0xB0 0x49 SMOD 0x4E OR 0xF8 SHL PUSH32 0xA0D766EA7370A3AEA6CE75C6F585DF2A4929BCCD64736F6C6343000817003300 ","sourceMap":"783:4833:11:-:0;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"600080fdfea26469706673582212201fed4a20b049074e17f81b7fa0d766ea7370a3aea6ce75c6f585df2a4929bccd64736f6c63430008170033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xED 0x4A KECCAK256 0xB0 0x49 SMOD 0x4E OR 0xF8 SHL PUSH32 0xA0D766EA7370A3AEA6CE75C6F585DF2A4929BCCD64736F6C6343000817003300 ","sourceMap":"783:4833:11:-:0;;","linkReferences":{}},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"external":{},"internal":{"Int(uint256)":"infinite","Int128(int256)":"infinite","Int128(uint256)":"infinite","Uint(int256)":"infinite","Uint112(uint256)":"infinite","Uint128(uint256)":"infinite","Uint192(uint256)":"infinite","Uint32(uint256)":"infinite","Uint64(uint256)":"infinite","Uint96(uint256)":"infinite","abs(int256)":"infinite","divDown(int256,int256)":"infinite","divDown(uint256,uint256)":"infinite","isAApproxB(uint256,uint256,uint256)":"infinite","isAGreaterApproxB(uint256,uint256,uint256)":"infinite","isASmallerApproxB(uint256,uint256,uint256)":"infinite","max(int256,int256)":"infinite","max(uint256,uint256)":"infinite","min(int256,int256)":"infinite","min(uint256,uint256)":"infinite","mulDown(int256,int256)":"infinite","mulDown(uint256,uint256)":"infinite","neg(int256)":"infinite","neg(uint256)":"infinite","rawDivUp(uint256,uint256)":"infinite","sqrt(uint256)":"infinite","square(uint256)":"infinite","squareDown(uint256)":"infinite","subMax0(uint256,uint256)":"infinite","subNoNeg(int256,int256)":"infinite"}}}}},"contracts/pendle/contracts/interfaces/IPExchangeRateOracle.sol":{"IPExchangeRateOracle":{"abi":[{"type":"function","name":"getExchangeRate","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"}],"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getExchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/pendle/contracts/interfaces/IPExchangeRateOracle.sol\":\"IPExchangeRateOracle\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/pendle/contracts/interfaces/IPExchangeRateOracle.sol\":{\"keccak256\":\"0x23c13d4a0103d93fee6b48aa72a89a94ad0d66ed3b7135b8485a494713bdf665\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58c92c79669c405498554a7a9dd471db2804bfcd4be6398ba186b6da47f84118\",\"dweb:/ipfs/QmRHhht1iwShds9exxzNWWUS9xELpxNC9jJfYVw43ZbAjC\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev"},"evm":{"assembly":"","bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getExchangeRate()":"e6aa216c"}}}},"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol":{"PendleExchangeRateOracle":{"abi":[{"type":"constructor","inputs":[{"name":"_name","type":"string","internalType":"string"},{"name":"_maxRateDiff","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"MIN_UPDATE_TIME_GAP","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"claimOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"data","inputs":[],"outputs":[{"name":"rate","type":"uint128","internalType":"uint128"},{"name":"dataBlock","type":"uint64","internalType":"uint64"},{"name":"dataTimestamp","type":"uint32","internalType":"uint32"},{"name":"updatedAt","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"getExchangeRate","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"maxRateDiff","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"pendingOwner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"setExchangeRate","inputs":[{"name":"rate","type":"uint128","internalType":"uint128"},{"name":"dataBlock","type":"uint64","internalType":"uint64"},{"name":"dataTimestamp","type":"uint32","internalType":"uint32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transferOwnership","inputs":[{"name":"newOwner","type":"address","internalType":"address"},{"name":"direct","type":"bool","internalType":"bool"},{"name":"renounce","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false},{"type":"event","name":"OwnershipTransferred","inputs":[{"name":"previousOwner","type":"address","indexed":true,"internalType":"address"},{"name":"newOwner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"RateUpdated","inputs":[{"name":"data","type":"tuple","indexed":false,"internalType":"struct PendleExchangeRateOracle.ExchangeRateData","components":[{"name":"rate","type":"uint128","internalType":"uint128"},{"name":"dataBlock","type":"uint64","internalType":"uint64"},{"name":"dataTimestamp","type":"uint32","internalType":"uint32"},{"name":"updatedAt","type":"uint32","internalType":"uint32"}]}],"anonymous":false},{"type":"error","name":"InvalidMetadata","inputs":[{"name":"data","type":"tuple","internalType":"struct PendleExchangeRateOracle.ExchangeRateData","components":[{"name":"rate","type":"uint128","internalType":"uint128"},{"name":"dataBlock","type":"uint64","internalType":"uint64"},{"name":"dataTimestamp","type":"uint32","internalType":"uint32"},{"name":"updatedAt","type":"uint32","internalType":"uint32"}]}]},{"type":"error","name":"RateRejected","inputs":[{"name":"oldRate","type":"uint256","internalType":"uint256"},{"name":"newRate","type":"uint256","internalType":"uint256"},{"name":"reason","type":"uint8","internalType":"enum PendleExchangeRateOracle.RateRejectReason"}]}],"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_maxRateDiff\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"dataBlock\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"dataTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"updatedAt\",\"type\":\"uint32\"}],\"internalType\":\"struct PendleExchangeRateOracle.ExchangeRateData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"InvalidMetadata\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"oldRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"},{\"internalType\":\"enum PendleExchangeRateOracle.RateRejectReason\",\"name\":\"reason\",\"type\":\"uint8\"}],\"name\":\"RateRejected\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"dataBlock\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"dataTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"updatedAt\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct PendleExchangeRateOracle.ExchangeRateData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"RateUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MIN_UPDATE_TIME_GAP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"dataBlock\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"dataTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"updatedAt\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxRateDiff\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"dataBlock\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"dataTimestamp\",\"type\":\"uint32\"}],\"name\":\"setExchangeRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"direct\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"renounce\",\"type\":\"bool\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"transferOwnership(address,bool,bool)\":{\"params\":{\"direct\":\"True if `newOwner` should be set immediately. False if `newOwner` needs to use `claimOwnership`.\",\"newOwner\":\"Address of the new owner.\",\"renounce\":\"Allows the `newOwner` to be `address(0)` if `direct` and `renounce` is True. Has no effect otherwise.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimOwnership()\":{\"notice\":\"Needs to be called by `pendingOwner` to claim ownership.\"},\"transferOwnership(address,bool,bool)\":{\"notice\":\"Transfers ownership to `newOwner`. Either directly or claimable by the new pending owner. Can only be invoked by the current `owner`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":\"PendleExchangeRateOracle\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xfeefb24d068524440e1ba885efdf105d91f83504af3c2d745ffacc4595396831\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3df5f6a75f86411cb20df54362ed4ec9b4c270720be20da7095f169932fa2709\",\"dweb:/ipfs/QmTThfuAwFYAvtHgZbmp6ZAbN2MVGSabAnhAbsB6JQxJCF\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol\":{\"keccak256\":\"0xdf55f114fee105efe73ce2275946f50d1b1e47e199f7ea9abe4b6dc99125579a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e518b6abeea779b486defa8151958d354651e837032ccc35a218f9d94f649b72\",\"dweb:/ipfs/QmeGtZY7vf8JCaLc2vrFy7t6JSzFFW5VtwEvEH9Wv21w5n\"]},\"contracts/pendle/contracts/core/libraries/math/PMath.sol\":{\"keccak256\":\"0x22d2a1e684ea9fe01ad81fd316a721a9ed51f8d93b4889546f612541d2d0f6e8\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9c62803e588b7e313ee37ef5178c91ea65ae5ef68f9b91567f476a9fb30b05c0\",\"dweb:/ipfs/Qmck5DmhK4rJQNTotCRXn8JnD7Bg8b9P1SsKZAkh9P5XX2\"]},\"contracts/pendle/contracts/interfaces/IPExchangeRateOracle.sol\":{\"keccak256\":\"0x23c13d4a0103d93fee6b48aa72a89a94ad0d66ed3b7135b8485a494713bdf665\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58c92c79669c405498554a7a9dd471db2804bfcd4be6398ba186b6da47f84118\",\"dweb:/ipfs/QmRHhht1iwShds9exxzNWWUS9xELpxNC9jJfYVw43ZbAjC\"]},\"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":{\"keccak256\":\"0xfc845385ff5e9c0bd06b83bcb422efd77f686e414ad97257e51ea76ee81db3b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3732f9d2851d2410a3daaf9d41cd64777f015e70d1918bac95bc637aee78002c\",\"dweb:/ipfs/QmQDJnf79MzEDa1enpXNDMsGmSQZvi79s66ZWu1cG6Zw88\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user","methods":{"claimOwnership()":{"notice":"Needs to be called by `pendingOwner` to claim ownership."},"transferOwnership(address,bool,bool)":{"notice":"Transfers ownership to `newOwner`. Either directly or claimable by the new pending owner. Can only be invoked by the current `owner`."}}},"devdoc":{"version":1,"kind":"dev","methods":{"transferOwnership(address,bool,bool)":{"params":{"direct":"True if `newOwner` should be set immediately. False if `newOwner` needs to use `claimOwnership`.","newOwner":"Address of the new owner.","renounce":"Allows the `newOwner` to be `address(0)` if `direct` and `renounce` is True. Has no effect otherwise."}}},"events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}}},"storageLayout":{"storage":[{"astId":2210,"contract":"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol:PendleExchangeRateOracle","label":"owner","offset":0,"slot":"0","type":"t_address"},{"astId":2212,"contract":"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol:PendleExchangeRateOracle","label":"pendingOwner","offset":0,"slot":"1","type":"t_address"},{"astId":415,"contract":"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol:PendleExchangeRateOracle","label":"_initialized","offset":20,"slot":"1","type":"t_uint8"},{"astId":418,"contract":"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol:PendleExchangeRateOracle","label":"_initializing","offset":21,"slot":"1","type":"t_bool"},{"astId":2333,"contract":"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol:PendleExchangeRateOracle","label":"__gap","offset":0,"slot":"2","type":"t_array(t_uint256)48_storage"},{"astId":3056,"contract":"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol:PendleExchangeRateOracle","label":"name","offset":0,"slot":"50","type":"t_string_storage"},{"astId":3059,"contract":"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol:PendleExchangeRateOracle","label":"data","offset":0,"slot":"51","type":"t_struct(ExchangeRateData)3032_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)48_storage":{"encoding":"inplace","label":"uint256[48]","numberOfBytes":"1536","base":"t_uint256"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(ExchangeRateData)3032_storage":{"encoding":"inplace","label":"struct PendleExchangeRateOracle.ExchangeRateData","numberOfBytes":"32","members":[{"astId":3025,"contract":"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol:PendleExchangeRateOracle","label":"rate","offset":0,"slot":"0","type":"t_uint128"},{"astId":3027,"contract":"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol:PendleExchangeRateOracle","label":"dataBlock","offset":16,"slot":"0","type":"t_uint64"},{"astId":3029,"contract":"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol:PendleExchangeRateOracle","label":"dataTimestamp","offset":24,"slot":"0","type":"t_uint32"},{"astId":3031,"contract":"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol:PendleExchangeRateOracle","label":"updatedAt","offset":28,"slot":"0","type":"t_uint32"}]},"t_uint128":{"encoding":"inplace","label":"uint128","numberOfBytes":"16"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"evm":{"assembly":"    /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n  0x40\n  0xa0\n  dup2\n  mstore\n  jumpi(tag_14, callvalue)\n  bytecodeSize\n  dup1\n  codesize\n  sub\n  dup1\n  tag_4\n  dup2\n  tag_1\n  jump\t// in\ntag_4:\n  swap3\n  dup4\n  codecopy\n  dup2\n  add\n  swap1\n  dup3\n  dup2\n  dup4\n  sub\n  slt\n  tag_14\n  jumpi\n  dup1\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n  swap1\n  dup2\n  dup2\n  gt\n  tag_14\n  jumpi\n  dup3\n  add\n  0x1f\n  swap2\n  dup5\n  dup4\n  dup4\n  add\n  slt\n  iszero\n  tag_14\n  jumpi\n  dup2\n  mload\n  swap4\n  dup2\n  dup6\n  gt\n  tag_27\n  jumpi\n  0x20\n  swap5\n  not(0x1f)\n  swap4\n  tag_13\n  dup7\n  dup4\n  add\n  dup7\n  and\n  dup9\n  add\n  tag_1\n  jump\t// in\ntag_13:\n  swap8\n  dup3\n  dup10\n  mstore\n  dup8\n  dup4\n  dup4\n  add\n  add\n  gt\n  tag_14\n  jumpi\n  swap1\n  dup7\n  swap3\n  swap2\n  0x00\ntag_16:\n  dup3\n  dup2\n  lt\n  tag_17\n  jumpi\n  pop\n  pop\n  dup3\n  0x00\n  swap2\n  dup10\n  add\n  add\n  mstore\n  add\n  mload\n  swap2\n  0x01\n  swap4\n  dup5\n  sload\n  swap7\n  0xff\n  dup9\n  0xa8\n  shr\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3301:3315  !_initializing */\n  iszero\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3347:3381  isTopLevelCall && _initialized < 1 */\n  swap8\n  dup9\n  dup1\n  swap10\n  tag_19\n  jumpi\n    /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\ntag_20:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3346:3454  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n  dup1\n  iszero\n  tag_21\n  jumpi\n    /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\ntag_22:\n  iszero\n  tag_23\n  jumpi\n  not(shl(0xa0, 0xff))\n  dup2\n  and\n  shl(0xa0, 0x01)\n  or\n  dup8\n  sstore\n  dup9\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3562:3627  if (isTopLevelCall) {... */\n  tag_25\n  jumpi\n    /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\ntag_26:\n  pop\n  dup1\n  mload\n  swap4\n  dup5\n  gt\n  tag_27\n  jumpi\n    /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":1158:1170  name = _name */\n  0x32\n    /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n  sload\n  swap3\n  dup7\n  dup5\n  dup2\n  shr\n  swap5\n  and\n  dup1\n  iszero\n  tag_29\n  jumpi\ntag_30:\n  dup9\n  dup6\n  lt\n  eq\n  tag_31\n  jumpi\n  dup4\n  dup4\n  dup7\n  swap6\n  gt\n  tag_33\n  jumpi\ntag_34:\n  pop\n  dup8\n  swap3\n  dup5\n  gt\n  0x01\n  eq\n  tag_35\n  jumpi\n  pop\n  0x00\n  swap3\n  tag_37\n  jumpi\ntag_38:\n  pop\n  pop\n  not(0x00)\n  0x03\n  dup4\n  swap1\n  shl\n  shr\n  not\n  and\n  swap1\n  dup4\n  shl\n  or\n    /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":1158:1170  name = _name */\n  0x32\n    /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n  sstore\ntag_39:\n    /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":1180:1206  maxRateDiff = _maxRateDiff */\n  0x80\n  mstore\n    /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n  dup1\n  sload\n  swap3\n  0xff\n  dup5\n  0xa8\n  shr\n  and\n  iszero\n  tag_40\n  jumpi\n  0x00\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol\":511:521  msg.sender */\n  caller\n    /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3647:3746  if (isTopLevelCall) {... */\n  tag_42\n  jumpi\n    /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\ntag_43:\n  dup4\n  mload\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n    /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":1180:1206  maxRateDiff = _maxRateDiff */\n  0x80\n    /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n  mload\n  dup2\n  assignImmutable(\"0x1f10dc17593fbfe373cdc6aa00b6274700e11b18d8b2ded0a685620960ab4bab\")\n  return\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3647:3746  if (isTopLevelCall) {... */\ntag_42:\n  not(shl(0xa8, 0xff))\n    /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n  swap1\n  swap3\n  and\n  dup3\n  sstore\n  dup3\n  mload\n  swap2\n  dup3\n  mstore\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n  0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n  swap2\n  log1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3647:3746  if (isTopLevelCall) {... */\n  codesize\n  dup1\n  dup1\n  jump(tag_43)\n    /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\ntag_40:\n  dup5\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  dup2\n  add\n  dup5\n  swap1\n  mstore\n  0x2b\n  0x24\n  dup3\n  add\n  mstore\n  0x496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069\n  0x44\n  dup3\n  add\n  mstore\n  shl(0xa8, 0x6e697469616c697a696e67)\n  0x64\n  dup3\n  add\n  mstore\n  0x84\n  swap1\n  revert\ntag_37:\n  add\n  mload\n  swap1\n  pop\n  codesize\n  dup1\n  jump(tag_38)\ntag_35:\n  dup7\n  swap5\n  swap3\n  swap2\n  swap3\n  and\n  swap2\n    /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":1158:1170  name = _name */\n  0x32\n  0x00\n    /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n  mstore\n  dup8\n  0x00\n  keccak256\n  swap3\n  0x00\ntag_44:\n  dup10\n  dup3\n  dup3\n  lt\n  tag_45\n  jumpi\n  pop\n  pop\n  dup5\n  gt\n  tag_47\n  jumpi\ntag_48:\n  pop\n  pop\n  pop\n  dup2\n  shl\n  add\n    /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":1158:1170  name = _name */\n  0x32\n    /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n  sstore\n  jump(tag_39)\ntag_47:\n  add\n  mload\n  not(0x00)\n  0xf8\n  dup5\n  0x03\n  shl\n  and\n  shr\n  not\n  and\n  swap1\n  sstore\n  codesize\n  dup1\n  dup1\n  jump(tag_48)\ntag_45:\n  dup4\n  dup6\n  add\n  mload\n  dup7\n  sstore\n  dup10\n  swap8\n  swap1\n  swap6\n  add\n  swap5\n  swap4\n  dup5\n  add\n  swap4\n  add\n  jump(tag_44)\ntag_33:\n  swap1\n  swap2\n  swap3\n  swap4\n  pop\n    /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":1158:1170  name = _name */\n  0x32\n  0x00\n    /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n  mstore\n  dup8\n  0x00\n  keccak256\n  dup5\n  dup1\n  dup8\n  add\n  0x05\n  shr\n  dup3\n  add\n  swap3\n  dup11\n  dup9\n  lt\n  tag_49\n  jumpi\ntag_50:\n  swap2\n  dup8\n  swap7\n  dup11\n  swap3\n  swap7\n  swap6\n  swap5\n  swap4\n  add\n  0x05\n  shr\n  add\n  swap2\ntag_51:\n  dup3\n  dup2\n  lt\n  tag_52\n  jumpi\n  pop\n  pop\n  jump(tag_34)\ntag_52:\n  0x00\n  dup2\n  sstore\n  dup8\n  swap7\n  pop\n  dup10\n  swap2\n  add\n  jump(tag_51)\ntag_49:\n  swap3\n  pop\n  dup2\n  swap3\n  jump(tag_50)\ntag_31:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x22)\n  revert(0x00, 0x24)\ntag_29:\n  swap4\n  0x7f\n  and\n  swap4\n  jump(tag_30)\ntag_27:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3562:3627  if (isTopLevelCall) {... */\ntag_25:\n  not(shl(0xa0, 0xffff))\n    /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n  and\n  shl(0xa0, 0x0101)\n  or\n  dup7\n  sstore\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3562:3627  if (isTopLevelCall) {... */\n  codesize\n  jump(tag_26)\n    /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\ntag_23:\n  dup10\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  dup2\n  add\n  dup10\n  swap1\n  mstore\n  0x2e\n  0x24\n  dup3\n  add\n  mstore\n  0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n  0x44\n  dup3\n  add\n  mstore\n  shl(0x92, 0x191e481a5b9a5d1a585b1a5e9959)\n  0x64\n  dup3\n  add\n  mstore\n  0x84\n  swap1\n  revert\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3346:3454  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\ntag_21:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3426:3430  this */\n  pop\n  address\n    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1732  account.code.length */\n  extcodesize\n    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1736  account.code.length > 0 */\n  iszero\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3387:3453  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n  dup1\n  iszero\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3346:3454  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n  tag_22\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3387:3453  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n  jumpi\n    /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n  pop\n  dup7\n  0xff\n  dup3\n  0xa0\n  shr\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3436:3453  _initialized == 1 */\n  eq\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3346:3454  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n  jump(tag_22)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3347:3381  isTopLevelCall && _initialized < 1 */\ntag_19:\n    /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n  pop\n  dup7\n  0xff\n  dup3\n  0xa0\n  shr\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3365:3381  _initialized < 1 */\n  lt\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3347:3381  isTopLevelCall && _initialized < 1 */\n  jump(tag_20)\n    /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\ntag_17:\n  dup2\n  dup2\n  add\n  dup6\n  add\n  mload\n  dup11\n  dup3\n  add\n  dup7\n  add\n  mstore\n  dup9\n  swap5\n  add\n  jump(tag_16)\ntag_14:\n  0x00\n  dup1\n  revert\ntag_1:\n  mload(0x40)\n  swap2\n  swap1\n  0x1f\n  add\n  not(0x1f)\n  and\n  dup3\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup4\n  dup3\n  lt\n  or\n  tag_27\n  jumpi\n  0x40\n  mstore\n  jump\t// out\nstop\n\nsub_0: assembly {\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      0x80\n      0x40\n      dup2\n      dup2\n      mstore\n      0x04\n      swap2\n      dup3\n      calldatasize\n      lt\n      iszero\n      tag_4\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_4:\n      0x00\n      swap3\n      dup4\n      calldataload\n      0xe0\n      shr\n      swap2\n      dup3\n      0x06fdde03\n      eq\n      tag_6\n      jumpi\n      pop\n      dup2\n      0x078dfbe7\n      eq\n      tag_8\n      jumpi\n      dup2\n      0x0ea9547e\n      eq\n      tag_10\n      jumpi\n      dup2\n      0x4e71e0c8\n      eq\n      tag_12\n      jumpi\n      dup2\n      0x73d4a13a\n      eq\n      tag_14\n      jumpi\n      dup2\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup2\n      0xd1bdee38\n      eq\n      tag_18\n      jumpi\n      dup2\n      0xd3af58fb\n      eq\n      tag_20\n      jumpi\n      pop\n      dup1\n      0xe30c3978\n      eq\n      tag_22\n      jumpi\n      0xe6aa216c\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      jumpi(tag_28, callvalue)\n      dup2\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_28\n      jumpi\n      0x20\n      swap1\n      0xffffffffffffffffffffffffffffffff\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":1328:1332  data */\n      0x33\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      sload\n      and\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_28:\n      pop\n      dup1\n      revert\n    tag_22:\n      pop\n      jumpi(tag_28, callvalue)\n      dup2\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_28\n      jumpi\n      0x20\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol\":217:244  address public pendingOwner */\n      0x01\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      sload\n      and\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_20:\n      swap2\n      swap1\n      pop\n      jumpi(tag_36, callvalue)\n      jumpi(tag_36, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x60))\n      dup2\n      calldataload\n      swap2\n      0xffffffffffffffffffffffffffffffff\n      dup1\n      dup5\n      and\n      dup1\n      swap5\n      sub\n      tag_38\n      jumpi\n      0x24\n      swap1\n      dup2\n      calldataload\n      swap1\n      0xffffffffffffffff\n      swap4\n      dup5\n      dup4\n      and\n      dup1\n      swap4\n      sub\n      tag_40\n      jumpi\n      calldataload(0x44)\n      swap5\n      0xffffffff\n      swap5\n      dup6\n      dup8\n      and\n      dup1\n      swap8\n      sub\n      tag_42\n      jumpi\n        /* \"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol\":1957:2021  require(msg.sender == owner, \"Ownable: caller is not the owner\") */\n      tag_44\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup12\n      sload\n      and\n        /* \"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol\":1965:1975  msg.sender */\n      caller\n        /* \"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol\":1965:1984  msg.sender == owner */\n      eq\n        /* \"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol\":1957:2021  require(msg.sender == owner, \"Ownable: caller is not the owner\") */\n      tag_2\n      jump\t// in\n    tag_44:\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      dup8\n      mload\n      swap9\n      tag_45\n      dup11\n      tag_1\n      jump\t// in\n    tag_45:\n      dup10\n      mstore\n      0x20\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":1492:1668  ExchangeRateData({... */\n      dup10\n      add\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      swap5\n      dup6\n      mstore\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":1492:1668  ExchangeRateData({... */\n      dup8\n      dup10\n      add\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      swap7\n      dup8\n      mstore\n      0x60\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":1492:1668  ExchangeRateData({... */\n      dup10\n      add\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":1641:1656  block.timestamp */\n      swap6\n      dup1\n      timestamp\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      and\n      dup8\n      mstore\n      dup9\n      mload\n      swap3\n      tag_46\n      dup5\n      tag_1\n      jump\t// in\n    tag_46:\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":1828:1832  data */\n      0x33\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      sload\n      swap1\n      dup11\n      dup13\n      dup9\n      dup1\n      dup6\n      and\n      swap2\n      dup3\n      dup10\n      mstore\n      0x60\n      0x20\n      dup11\n      add\n      swap5\n      dup7\n      dup9\n      0x80\n      shr\n      and\n      dup7\n      mstore\n      dup11\n      add\n      swap10\n      dup9\n      dup9\n      0xc0\n      shr\n      and\n      dup12\n      mstore\n      add\n      swap6\n      0xe0\n      shr\n      dup7\n      mstore\n      mload\n      and\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":2093:2110  oldRate > newRate */\n      swap1\n      dup2\n      dup2\n      gt\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":2089:2207  if (oldRate > newRate) {... */\n      tag_47\n      jumpi\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":2221:2233  oldRate != 0 */\n      dup1\n      iszero\n      dup1\n      iszero\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":2221:2287  oldRate != 0 && oldRate.mulDown(PMath.ONE + maxRateDiff) < newRate */\n      swap1\n      dup2\n      tag_49\n      jumpi\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n    tag_50:\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":2217:2384  if (oldRate != 0 && oldRate.mulDown(PMath.ONE + maxRateDiff) < newRate) {... */\n      pop\n      tag_51\n      jumpi\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      pop\n      pop\n      dup2\n      swap1\n      mload\n      and\n      swap1\n      dup9\n      mload\n      and\n      gt\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":2530:2568  oldData.dataBlock >= newData.dataBlock */\n      swap4\n      dup5\n      iszero\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":2530:2630  oldData.dataBlock >= newData.dataBlock ||... */\n      swap5\n      tag_53\n      jumpi\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n    tag_54:\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":2530:2706  oldData.dataBlock >= newData.dataBlock ||... */\n      pop\n      dup4\n      iszero\n      tag_55\n      jumpi\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n    tag_56:\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":2513:2773  if (... */\n      pop\n      pop\n      pop\n      tag_57\n      jumpi\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      pop\n      swap2\n      dup6\n      swap4\n      swap2\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      0xffffffff000000000000000000000000000000000000000000000000\n      0xffffffffffffffff00000000000000000000000000000000\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":1972:1992  RateUpdated(newData) */\n      tag_59\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      swap9\n      swap7\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":1972:1992  RateUpdated(newData) */\n      0xcfeda7da2baa74f493d45b784b32c511b6f8e67df21495044ecae70ce9918e23\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      swap11\n      mload\n      and\n      swap4\n      mload\n      0x80\n      shl\n      and\n      swap5\n      mload\n      0xc0\n      shl\n      and\n      swap3\n      mload\n      0xe0\n      shl\n      and\n      swap3\n      or\n      or\n      or\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":1828:1832  data */\n      0x33\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      sstore\n      mload\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":1972:1992  RateUpdated(newData) */\n      swap2\n      dup3\n      swap2\n      dup3\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      swap2\n      swap1\n      swap2\n      0x60\n      0x80\n      dup3\n      add\n      swap4\n      0xffffffffffffffffffffffffffffffff\n      dup2\n      mload\n      and\n      dup4\n      mstore\n      0xffffffffffffffff\n      0x20\n      dup3\n      add\n      mload\n      and\n      0x20\n      dup5\n      add\n      mstore\n      dup2\n      0x40\n      dup3\n      add\n      mload\n      swap2\n      0xffffffff\n      dup1\n      swap4\n      and\n      0x40\n      dup7\n      add\n      mstore\n      add\n      mload\n      and\n      swap2\n      add\n      mstore\n      jump\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":1972:1992  RateUpdated(newData) */\n    tag_59:\n      sub\n      swap1\n      log1\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      dup1\n      return\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":2513:2773  if (... */\n    tag_57:\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      dup7\n      swap1\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":2738:2762  InvalidMetadata(newData) */\n      tag_60\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      dup8\n      mload\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":2738:2762  InvalidMetadata(newData) */\n      swap3\n      dup4\n      swap3\n      0x91b56cd400000000000000000000000000000000000000000000000000000000\n      dup5\n      mstore\n      dup4\n      add\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      swap2\n      swap1\n      swap2\n      0x60\n      0x80\n      dup3\n      add\n      swap4\n      0xffffffffffffffffffffffffffffffff\n      dup2\n      mload\n      and\n      dup4\n      mstore\n      0xffffffffffffffff\n      0x20\n      dup3\n      add\n      mload\n      and\n      0x20\n      dup5\n      add\n      mstore\n      dup2\n      0x40\n      dup3\n      add\n      mload\n      swap2\n      0xffffffff\n      dup1\n      swap4\n      and\n      0x40\n      dup7\n      add\n      mstore\n      add\n      mload\n      and\n      swap2\n      add\n      mstore\n      jump\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":2738:2762  InvalidMetadata(newData) */\n    tag_60:\n      sub\n      swap1\n      revert\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":2530:2706  oldData.dataBlock >= newData.dataBlock ||... */\n    tag_55:\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      dup2\n      swap3\n      swap4\n      pop\n      mload\n      and\n        /* \"contracts/pendle/contracts/core/libraries/math/PMath.sol\":835:839  1e18 */\n      swap2\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":965:973  12 hours */\n      0xa8c0\n        /* \"contracts/pendle/contracts/core/libraries/math/PMath.sol\":835:839  1e18 */\n      dup4\n      add\n      dup1\n      swap4\n      gt\n      tag_61\n      jumpi\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      pop\n      dup6\n      mload\n      and\n      gt\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":2646:2706  oldData.updatedAt + MIN_UPDATE_TIME_GAP >= newData.updatedAt */\n      iszero\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":2530:2706  oldData.dataBlock >= newData.dataBlock ||... */\n      codesize\n      dup1\n      dup1\n      jump(tag_56)\n        /* \"contracts/pendle/contracts/core/libraries/math/PMath.sol\":835:839  1e18 */\n    tag_61:\n      dup11\n      0x11\n      dup6\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n      dup4\n      mstore\n      mstore\n      revert\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":2530:2630  oldData.dataBlock >= newData.dataBlock ||... */\n    tag_53:\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      dup3\n      swap2\n      swap5\n      pop\n      mload\n      and\n      dup2\n      dup10\n      mload\n      and\n      gt\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":2584:2630  oldData.dataTimestamp >= newData.dataTimestamp */\n      iszero\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":2530:2630  oldData.dataBlock >= newData.dataBlock ||... */\n      swap3\n      codesize\n      jump(tag_54)\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":2217:2384  if (oldRate != 0 && oldRate.mulDown(PMath.ONE + maxRateDiff) < newRate) {... */\n    tag_51:\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      0x64\n      swap2\n      dup8\n      dup16\n      swap3\n      dup12\n      swap4\n      mload\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":2310:2373  RateRejected(oldRate, newRate, RateRejectReason.RATE_TOO_LARGE) */\n      swap4\n      0x068ffec600000000000000000000000000000000000000000000000000000000\n      dup6\n      mstore\n      dup5\n      add\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      mstore\n      dup3\n      add\n      mstore\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":2341:2372  RateRejectReason.RATE_TOO_LARGE */\n      0x01\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      0x44\n      dup3\n      add\n      mstore\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":2310:2373  RateRejected(oldRate, newRate, RateRejectReason.RATE_TOO_LARGE) */\n      revert\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":2221:2287  oldRate != 0 && oldRate.mulDown(PMath.ONE + maxRateDiff) < newRate */\n    tag_49:\n        /* \"contracts/pendle/contracts/core/libraries/math/PMath.sol\":835:839  1e18 */\n      0x0de0b6b3a7640000\n      swap2\n      pop\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":2265:2276  maxRateDiff */\n      immutable(\"0x1f10dc17593fbfe373cdc6aa00b6274700e11b18d8b2ded0a685620960ab4bab\")\n        /* \"contracts/pendle/contracts/core/libraries/math/PMath.sol\":835:839  1e18 */\n      dup3\n      add\n      swap1\n      dup2\n      dup4\n      gt\n      tag_63\n      jumpi\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      dup2\n      dup5\n      mul\n      swap2\n      dup5\n      dup4\n      div\n      eq\n      or\n      iszero\n      tag_65\n      jumpi\n      div\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":2237:2287  oldRate.mulDown(PMath.ONE + maxRateDiff) < newRate */\n      dup3\n      gt\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":2221:2287  oldRate != 0 && oldRate.mulDown(PMath.ONE + maxRateDiff) < newRate */\n      codesize\n      jump(tag_50)\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n    tag_65:\n        /* \"contracts/pendle/contracts/core/libraries/math/PMath.sol\":835:839  1e18 */\n      pop\n      pop\n      pop\n      dup6\n      dup16\n      0x11\n      dup11\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n      dup4\n      mstore\n      mstore\n      revert\n    tag_63:\n      pop\n      pop\n      pop\n      pop\n      dup6\n      dup16\n      0x11\n      dup11\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n      dup4\n      mstore\n      mstore\n      revert\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":2089:2207  if (oldRate > newRate) {... */\n    tag_47:\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      dup16\n      0x64\n      swap3\n      dup16\n      dup12\n      swap4\n      dup11\n      swap2\n      mload\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":2133:2196  RateRejected(oldRate, newRate, RateRejectReason.RATE_TOO_SMALL) */\n      swap5\n      0x068ffec600000000000000000000000000000000000000000000000000000000\n      dup7\n      mstore\n      dup6\n      add\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      mstore\n      dup4\n      add\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":2133:2196  RateRejected(oldRate, newRate, RateRejectReason.RATE_TOO_SMALL) */\n      revert\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n    tag_42:\n      dup10\n      dup1\n      revert\n    tag_40:\n      dup8\n      dup1\n      revert\n    tag_38:\n      dup5\n      dup1\n      revert\n    tag_36:\n      dup3\n      dup1\n      revert\n    tag_18:\n      pop\n      pop\n      jumpi(tag_28, callvalue)\n      dup2\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_28\n      jumpi\n      0x20\n      swap1\n      mload\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":1038:1074  uint256 public immutable maxRateDiff */\n      immutable(\"0x1f10dc17593fbfe373cdc6aa00b6274700e11b18d8b2ded0a685620960ab4bab\")\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      dup2\n      mstore\n      return\n    tag_16:\n      pop\n      pop\n      jumpi(tag_28, callvalue)\n      dup2\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_28\n      jumpi\n      0xffffffffffffffffffffffffffffffffffffffff\n      0x20\n      swap3\n      sload\n      and\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_14:\n      pop\n      pop\n      jumpi(tag_28, callvalue)\n      dup2\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_28\n      jumpi\n      0x80\n      swap1\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":1004:1032  ExchangeRateData public data */\n      0x33\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      sload\n      dup2\n      mload\n      swap2\n      0xffffffffffffffffffffffffffffffff\n      dup3\n      and\n      dup4\n      mstore\n      0xffffffffffffffff\n      dup3\n      dup6\n      shr\n      and\n      0x20\n      dup5\n      add\n      mstore\n      0xffffffff\n      dup3\n      0xc0\n      shr\n      and\n      swap1\n      dup4\n      add\n      mstore\n      0xe0\n      shr\n      0x60\n      dup3\n      add\n      mstore\n      return\n    tag_12:\n      swap2\n      swap1\n      pop\n      jumpi(tag_36, callvalue)\n      dup3\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_36\n      jumpi\n        /* \"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol\":1592:1604  pendingOwner */\n      0x01\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap3\n      dup4\n      dup4\n      and\n        /* \"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol\":1641:1651  msg.sender */\n      swap2\n      dup3\n      caller\n        /* \"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol\":1641:1668  msg.sender == _pendingOwner */\n      sub\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      tag_83\n      jumpi\n      pop\n      pop\n      dup1\n      dup5\n      sload\n      swap4\n      dup5\n      and\n        /* \"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol\":1740:1782  OwnershipTransferred(owner, _pendingOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      dup7\n      dup1\n      log3\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      dup1\n      swap4\n      and\n      or\n      dup4\n      sstore\n      and\n        /* \"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol\":1592:1604  pendingOwner */\n      0x01\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      sstore\n      dup1\n      return\n    tag_83:\n      swap1\n      0x20\n      0x64\n      swap3\n      mload\n      swap2\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x20\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      revert\n    tag_10:\n      pop\n      pop\n      jumpi(tag_28, callvalue)\n      dup2\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_28\n      jumpi\n      0x20\n      swap1\n      mload\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":965:973  12 hours */\n      0xa8c0\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      dup2\n      mstore\n      return\n    tag_8:\n      swap1\n      pop\n      jumpi(tag_36, callvalue)\n      jumpi(tag_36, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x60))\n      dup1\n      calldataload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap3\n      dup4\n      dup4\n      and\n      dup1\n      swap4\n      sub\n      tag_38\n      jumpi\n      calldataload(0x24)\n      dup1\n      iszero\n      iszero\n      dup2\n      sub\n      tag_95\n      jumpi\n      calldataload(0x44)\n      swap1\n      dup2\n      iszero\n      iszero\n      dup3\n      sub\n      tag_97\n      jumpi\n        /* \"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol\":1957:2021  require(msg.sender == owner, \"Ownable: caller is not the owner\") */\n      tag_99\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      dup7\n      dup9\n      sload\n      and\n        /* \"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol\":1965:1975  msg.sender */\n      caller\n        /* \"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol\":1965:1984  msg.sender == owner */\n      eq\n        /* \"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol\":1957:2021  require(msg.sender == owner, \"Ownable: caller is not the owner\") */\n      tag_2\n      jump\t// in\n    tag_99:\n        /* \"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol\":1087:1440  if (direct) {... */\n      iszero\n      tag_100\n      jumpi\n        /* \"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol\":1143:1165  newOwner != address(0) */\n      dup4\n      iszero\n      swap1\n      dup2\n      iszero\n        /* \"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol\":1143:1177  newOwner != address(0) || renounce */\n      swap2\n      tag_102\n      jumpi\n        /* \"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol\":1087:1440  if (direct) {... */\n    tag_103:\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      pop\n      iszero\n      tag_104\n      jumpi\n      pop\n      pop\n      dup1\n      dup4\n      sload\n      swap3\n      dup4\n      and\n        /* \"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol\":1246:1283  OwnershipTransferred(owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      dup6\n      dup1\n      log3\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      dup1\n      swap3\n      and\n      or\n      dup3\n      sstore\n        /* \"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol\":1327:1352  pendingOwner = address(0) */\n      0x01\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      sload\n      and\n        /* \"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol\":1327:1352  pendingOwner = address(0) */\n      0x01\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      sstore\n      dup1\n      return\n    tag_104:\n      swap1\n      0x20\n      0x64\n      swap3\n      mload\n      swap2\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a207a65726f20616464726573730000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      revert\n        /* \"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol\":1143:1177  newOwner != address(0) || renounce */\n    tag_102:\n      swap1\n      pop\n      codesize\n      jump(tag_103)\n        /* \"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol\":1087:1440  if (direct) {... */\n    tag_100:\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n        /* \"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol\":1406:1429  pendingOwner = newOwner */\n      0x01\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      sload\n      and\n      or\n        /* \"contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol\":1406:1429  pendingOwner = newOwner */\n      0x01\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      sstore\n      dup1\n      return\n    tag_97:\n      dup7\n      dup1\n      revert\n    tag_95:\n      dup6\n      dup1\n      revert\n    tag_6:\n      swap1\n      swap3\n      swap2\n      pop\n      jumpi(tag_109, callvalue)\n      dup4\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_109\n      jumpi\n      dup4\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":980:998  string public name */\n      0x32\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      sload\n      0x01\n      swap6\n      dup2\n      0x01\n      shr\n      0x01\n      dup4\n      and\n      swap8\n      dup9\n      iszero\n      tag_111\n      jumpi\n    tag_112:\n      0x20\n      swap4\n      dup5\n      dup4\n      lt\n      dup11\n      eq\n      tag_113\n      jumpi\n      dup5\n      dup8\n      swap9\n      swap10\n      swap11\n      dup5\n      dup10\n      mstore\n      swap2\n      dup3\n      0x00\n      eq\n      tag_115\n      jumpi\n      pop\n      pop\n      0x01\n      eq\n      tag_117\n      jumpi\n    tag_118:\n      pop\n      pop\n      0x1f\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      swap6\n      dup7\n      swap3\n      sub\n      add\n      and\n      dup4\n      add\n      swap6\n      dup4\n      dup8\n      lt\n      0xffffffffffffffff\n      dup9\n      gt\n      or\n      tag_119\n      jumpi\n      pop\n      dup6\n      swap3\n      swap4\n      swap2\n      dup4\n      dup7\n      mstore\n      dup2\n      dup5\n      mstore\n      dup5\n      mload\n      swap2\n      dup3\n      dup2\n      dup7\n      add\n      mstore\n      dup2\n      swap6\n    tag_121:\n      dup4\n      dup8\n      lt\n      tag_122\n      jumpi\n      pop\n      pop\n      dup4\n      swap5\n      pop\n      dup6\n      dup3\n      0x1f\n      swap5\n      swap6\n      add\n      add\n      mstore\n      add\n      and\n      dup2\n      add\n      sub\n      add\n      swap1\n      return\n    tag_122:\n      dup7\n      dup2\n      add\n      dup3\n      add\n      mload\n      dup10\n      dup9\n      add\n      dup10\n      add\n      mstore\n      swap6\n      dup2\n      add\n      swap6\n      dup9\n      swap6\n      pop\n      jump(tag_121)\n    tag_119:\n      dup3\n      0x41\n      0x24\n      swap3\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n      dup4\n      mstore\n      mstore\n      revert\n    tag_117:\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":980:998  string public name */\n      0x32\n        /* \"contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol\":290:2781  contract PendleExchangeRateOracle is BoringOwnableUpgradeable, IPExchangeRateOracle {... */\n      dup6\n      mstore\n      dup5\n      swap3\n      pop\n      0x11df491316f14931039edfd4f8964c9a443b862f02d4c7611d18c2bc4e6ff697\n    tag_124:\n      dup3\n      dup5\n      lt\n      tag_125\n      jumpi\n      pop\n      pop\n      pop\n      dup4\n      add\n      dup2\n      add\n      codesize\n      dup1\n      jump(tag_118)\n    tag_125:\n      dup1\n      sload\n      dup9\n      dup6\n      add\n      dup7\n      add\n      mstore\n      dup8\n      swap7\n      pop\n      swap3\n      dup5\n      add\n      swap3\n      dup2\n      add\n      jump(tag_124)\n    tag_115:\n      swap2\n      pop\n      swap4\n      pop\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      swap2\n      pop\n      and\n      dup3\n      dup7\n      add\n      mstore\n      iszero\n      iszero\n      0x05\n      shl\n      dup5\n      add\n      add\n      codesize\n      dup1\n      jump(tag_118)\n    tag_113:\n      0x24\n      dup7\n      0x22\n      dup12\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n      dup4\n      mstore\n      mstore\n      revert\n    tag_111:\n      swap1\n      0x7f\n      and\n      swap1\n      jump(tag_112)\n    tag_109:\n      dup4\n      dup1\n      revert\n    tag_1:\n      0x80\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_127\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_127:\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_2:\n      iszero\n      tag_129\n      jumpi\n      jump\t// out\n    tag_129:\n      0x64\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x20\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      revert\n\n    auxdata: 0xa26469706673582212201bafdfd9d5c484257918ae9d869d80b459917cc4d9c1f486f5d93394bd7d426464736f6c63430008170033\n}\n","legacyAssembly":{".code":[{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"40"},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"A0"},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"CALLVALUE","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"14"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"PUSHSIZE","source":13},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"CODESIZE","source":13},{"begin":290,"end":2781,"name":"SUB","source":13},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"4"},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"1"},{"begin":290,"end":2781,"jumpType":"[in]","name":"JUMP","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"4"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"SWAP3","source":13},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"CODECOPY","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"SUB","source":13},{"begin":290,"end":2781,"name":"SLT","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"14"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"40"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"GT","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"14"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"1F"},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"DUP5","source":13},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"SLT","source":13},{"begin":290,"end":2781,"name":"ISZERO","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"14"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"SWAP4","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"DUP6","source":13},{"begin":290,"end":2781,"name":"GT","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"27"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"20"},{"begin":290,"end":2781,"name":"SWAP5","source":13},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1F"},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":290,"end":2781,"name":"SWAP4","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"13"},{"begin":290,"end":2781,"name":"DUP7","source":13},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"DUP7","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"DUP9","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"1"},{"begin":290,"end":2781,"jumpType":"[in]","name":"JUMP","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"13"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"SWAP8","source":13},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"DUP10","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"DUP8","source":13},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"GT","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"14"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"DUP7","source":13},{"begin":290,"end":2781,"name":"SWAP3","source":13},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"0"},{"begin":290,"end":2781,"name":"tag","source":13,"value":"16"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"LT","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"17"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"0"},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"DUP10","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"1"},{"begin":290,"end":2781,"name":"SWAP4","source":13},{"begin":290,"end":2781,"name":"DUP5","source":13},{"begin":290,"end":2781,"name":"SLOAD","source":13},{"begin":290,"end":2781,"name":"SWAP7","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FF"},{"begin":290,"end":2781,"name":"DUP9","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"A8"},{"begin":290,"end":2781,"name":"SHR","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":3301,"end":3315,"name":"ISZERO","source":2},{"begin":3347,"end":3381,"name":"SWAP8","source":2},{"begin":3347,"end":3381,"name":"DUP9","source":2},{"begin":3347,"end":3381,"name":"DUP1","source":2},{"begin":3347,"end":3381,"name":"SWAP10","source":2},{"begin":3347,"end":3381,"name":"PUSH [tag]","source":2,"value":"19"},{"begin":3347,"end":3381,"name":"JUMPI","source":2},{"begin":290,"end":2781,"name":"tag","source":13,"value":"20"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":3346,"end":3454,"name":"DUP1","source":2},{"begin":3346,"end":3454,"name":"ISZERO","source":2},{"begin":3346,"end":3454,"name":"PUSH [tag]","source":2,"value":"21"},{"begin":3346,"end":3454,"name":"JUMPI","source":2},{"begin":290,"end":2781,"name":"tag","source":13,"value":"22"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"ISZERO","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"23"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"FF"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":290,"end":2781,"name":"OR","source":13},{"begin":290,"end":2781,"name":"DUP8","source":13},{"begin":290,"end":2781,"name":"SSTORE","source":13},{"begin":290,"end":2781,"name":"DUP9","source":13},{"begin":3562,"end":3627,"name":"PUSH [tag]","source":2,"value":"25"},{"begin":3562,"end":3627,"name":"JUMPI","source":2},{"begin":290,"end":2781,"name":"tag","source":13,"value":"26"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"SWAP4","source":13},{"begin":290,"end":2781,"name":"DUP5","source":13},{"begin":290,"end":2781,"name":"GT","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"27"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":1158,"end":1170,"name":"PUSH","source":13,"value":"32"},{"begin":290,"end":2781,"name":"SLOAD","source":13},{"begin":290,"end":2781,"name":"SWAP3","source":13},{"begin":290,"end":2781,"name":"DUP7","source":13},{"begin":290,"end":2781,"name":"DUP5","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"SHR","source":13},{"begin":290,"end":2781,"name":"SWAP5","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"ISZERO","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"29"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"30"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"DUP9","source":13},{"begin":290,"end":2781,"name":"DUP6","source":13},{"begin":290,"end":2781,"name":"LT","source":13},{"begin":290,"end":2781,"name":"EQ","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"31"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"DUP7","source":13},{"begin":290,"end":2781,"name":"SWAP6","source":13},{"begin":290,"end":2781,"name":"GT","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"33"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"34"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"DUP8","source":13},{"begin":290,"end":2781,"name":"SWAP3","source":13},{"begin":290,"end":2781,"name":"DUP5","source":13},{"begin":290,"end":2781,"name":"GT","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"1"},{"begin":290,"end":2781,"name":"EQ","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"35"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"0"},{"begin":290,"end":2781,"name":"SWAP3","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"37"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"38"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"0"},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"3"},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"SHL","source":13},{"begin":290,"end":2781,"name":"SHR","source":13},{"begin":290,"end":2781,"name":"NOT","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"SHL","source":13},{"begin":290,"end":2781,"name":"OR","source":13},{"begin":1158,"end":1170,"name":"PUSH","source":13,"value":"32"},{"begin":290,"end":2781,"name":"SSTORE","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"39"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":1180,"end":1206,"name":"PUSH","source":13,"value":"80"},{"begin":1180,"end":1206,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"SLOAD","source":13},{"begin":290,"end":2781,"name":"SWAP3","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FF"},{"begin":290,"end":2781,"name":"DUP5","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"A8"},{"begin":290,"end":2781,"name":"SHR","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"ISZERO","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"40"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"0"},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"SLOAD","source":13},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":511,"end":521,"name":"CALLER","source":10},{"begin":290,"end":2781,"name":"OR","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"SSTORE","source":13},{"begin":3647,"end":3746,"name":"PUSH [tag]","source":2,"value":"42"},{"begin":3647,"end":3746,"name":"JUMPI","source":2},{"begin":290,"end":2781,"name":"tag","source":13,"value":"43"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"PUSH #[$]","source":13,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"PUSH [$]","source":13,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"CODECOPY","source":13},{"begin":1180,"end":1206,"name":"PUSH","source":13,"value":"80"},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"ASSIGNIMMUTABLE","source":13,"value":"3061"},{"begin":290,"end":2781,"name":"RETURN","source":13},{"begin":3647,"end":3746,"name":"tag","source":2,"value":"42"},{"begin":3647,"end":3746,"name":"JUMPDEST","source":2},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"FF"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A8"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"SWAP3","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"SSTORE","source":13},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":3721,"end":3735,"name":"PUSH","source":2,"value":"7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"},{"begin":3721,"end":3735,"name":"SWAP2","source":2},{"begin":3721,"end":3735,"name":"LOG1","source":2},{"begin":3647,"end":3746,"name":"CODESIZE","source":2},{"begin":3647,"end":3746,"name":"DUP1","source":2},{"begin":3647,"end":3746,"name":"DUP1","source":2},{"begin":3647,"end":3746,"name":"PUSH [tag]","source":2,"value":"43"},{"begin":3647,"end":3746,"name":"JUMP","source":2},{"begin":290,"end":2781,"name":"tag","source":13,"value":"40"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"DUP5","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"461BCD"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E5"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"4"},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"DUP5","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"2B"},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"24"},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"44"},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"6E697469616C697A696E67"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A8"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"64"},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"84"},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"REVERT","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"37"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":290,"end":2781,"name":"CODESIZE","source":13},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"38"},{"begin":290,"end":2781,"name":"JUMP","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"35"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"DUP7","source":13},{"begin":290,"end":2781,"name":"SWAP5","source":13},{"begin":290,"end":2781,"name":"SWAP3","source":13},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"SWAP3","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":1158,"end":1170,"name":"PUSH","source":13,"value":"32"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"0"},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"DUP8","source":13},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"0"},{"begin":290,"end":2781,"name":"KECCAK256","source":13},{"begin":290,"end":2781,"name":"SWAP3","source":13},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"0"},{"begin":290,"end":2781,"name":"tag","source":13,"value":"44"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"DUP10","source":13},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"LT","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"45"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"DUP5","source":13},{"begin":-1,"end":-1,"name":"GT","source":-1},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"47"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"48"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"SHL","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":1158,"end":1170,"name":"PUSH","source":13,"value":"32"},{"begin":290,"end":2781,"name":"SSTORE","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"39"},{"begin":290,"end":2781,"name":"JUMP","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"47"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"0"},{"begin":290,"end":2781,"name":"NOT","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"F8"},{"begin":290,"end":2781,"name":"DUP5","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"3"},{"begin":290,"end":2781,"name":"SHL","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"SHR","source":13},{"begin":290,"end":2781,"name":"NOT","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"SSTORE","source":13},{"begin":290,"end":2781,"name":"CODESIZE","source":13},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"48"},{"begin":290,"end":2781,"name":"JUMP","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"45"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"DUP6","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"DUP7","source":13},{"begin":290,"end":2781,"name":"SSTORE","source":13},{"begin":290,"end":2781,"name":"DUP10","source":13},{"begin":290,"end":2781,"name":"SWAP8","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"SWAP6","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"SWAP5","source":13},{"begin":290,"end":2781,"name":"SWAP4","source":13},{"begin":290,"end":2781,"name":"DUP5","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"SWAP4","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"44"},{"begin":290,"end":2781,"name":"JUMP","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"33"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"SWAP3","source":13},{"begin":290,"end":2781,"name":"SWAP4","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":1158,"end":1170,"name":"PUSH","source":13,"value":"32"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"0"},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"DUP8","source":13},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"0"},{"begin":290,"end":2781,"name":"KECCAK256","source":13},{"begin":290,"end":2781,"name":"DUP5","source":13},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"DUP8","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"5"},{"begin":290,"end":2781,"name":"SHR","source":13},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"SWAP3","source":13},{"begin":290,"end":2781,"name":"DUP11","source":13},{"begin":290,"end":2781,"name":"DUP9","source":13},{"begin":290,"end":2781,"name":"LT","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"49"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"50"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"DUP8","source":13},{"begin":290,"end":2781,"name":"SWAP7","source":13},{"begin":290,"end":2781,"name":"DUP11","source":13},{"begin":290,"end":2781,"name":"SWAP3","source":13},{"begin":290,"end":2781,"name":"SWAP7","source":13},{"begin":290,"end":2781,"name":"SWAP6","source":13},{"begin":290,"end":2781,"name":"SWAP5","source":13},{"begin":290,"end":2781,"name":"SWAP4","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"5"},{"begin":290,"end":2781,"name":"SHR","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"51"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"LT","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"52"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"34"},{"begin":290,"end":2781,"name":"JUMP","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"52"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"0"},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"SSTORE","source":13},{"begin":290,"end":2781,"name":"DUP8","source":13},{"begin":290,"end":2781,"name":"SWAP7","source":13},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":290,"end":2781,"name":"DUP10","source":13},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"51"},{"begin":290,"end":2781,"name":"JUMP","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"49"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"SWAP3","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"SWAP3","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"50"},{"begin":290,"end":2781,"name":"JUMP","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"31"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"4E487B71"},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"E0"},{"begin":290,"end":2781,"name":"SHL","source":13},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"0"},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"22"},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"4"},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"24"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"0"},{"begin":290,"end":2781,"name":"REVERT","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"29"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"SWAP4","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"7F"},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"SWAP4","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"30"},{"begin":290,"end":2781,"name":"JUMP","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"27"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"4E487B71"},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"E0"},{"begin":290,"end":2781,"name":"SHL","source":13},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"0"},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"41"},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"4"},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"24"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"0"},{"begin":290,"end":2781,"name":"REVERT","source":13},{"begin":3562,"end":3627,"name":"tag","source":2,"value":"25"},{"begin":3562,"end":3627,"name":"JUMPDEST","source":2},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"FFFF"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"101"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":290,"end":2781,"name":"OR","source":13},{"begin":290,"end":2781,"name":"DUP7","source":13},{"begin":290,"end":2781,"name":"SSTORE","source":13},{"begin":3562,"end":3627,"name":"CODESIZE","source":2},{"begin":3562,"end":3627,"name":"PUSH [tag]","source":2,"value":"26"},{"begin":3562,"end":3627,"name":"JUMP","source":2},{"begin":290,"end":2781,"name":"tag","source":13,"value":"23"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"DUP10","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"461BCD"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E5"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"4"},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"DUP10","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"2E"},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"24"},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"496E697469616C697A61626C653A20636F6E747261637420697320616C726561"},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"44"},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"191E481A5B9A5D1A585B1A5E9959"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"92"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"64"},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"84"},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"REVERT","source":13},{"begin":3346,"end":3454,"name":"tag","source":2,"value":"21"},{"begin":3346,"end":3454,"name":"JUMPDEST","source":2},{"begin":3426,"end":3430,"name":"POP","source":2},{"begin":3426,"end":3430,"name":"ADDRESS","source":2},{"begin":1713,"end":1732,"name":"EXTCODESIZE","source":3},{"begin":1713,"end":1736,"name":"ISZERO","source":3},{"begin":3387,"end":3453,"name":"DUP1","source":2},{"begin":3387,"end":3453,"name":"ISZERO","source":2},{"begin":3346,"end":3454,"name":"PUSH [tag]","source":2,"value":"22"},{"begin":3387,"end":3453,"name":"JUMPI","source":2},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"DUP7","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FF"},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"A0"},{"begin":290,"end":2781,"name":"SHR","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":3436,"end":3453,"name":"EQ","source":2},{"begin":3346,"end":3454,"name":"PUSH [tag]","source":2,"value":"22"},{"begin":3346,"end":3454,"name":"JUMP","source":2},{"begin":3347,"end":3381,"name":"tag","source":2,"value":"19"},{"begin":3347,"end":3381,"name":"JUMPDEST","source":2},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"DUP7","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FF"},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"A0"},{"begin":290,"end":2781,"name":"SHR","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":3365,"end":3381,"name":"LT","source":2},{"begin":3347,"end":3381,"name":"PUSH [tag]","source":2,"value":"20"},{"begin":3347,"end":3381,"name":"JUMP","source":2},{"begin":290,"end":2781,"name":"tag","source":13,"value":"17"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"DUP6","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"DUP11","source":13},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"DUP7","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"DUP9","source":13},{"begin":290,"end":2781,"name":"SWAP5","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"16"},{"begin":290,"end":2781,"name":"JUMP","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"14"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"0"},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"REVERT","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"1"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"40"},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"1F"},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1F"},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"40"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"GT","source":13},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"LT","source":13},{"begin":290,"end":2781,"name":"OR","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"27"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"40"},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"jumpType":"[out]","name":"JUMP","source":13}],".data":{"0":{".auxdata":"a26469706673582212201bafdfd9d5c484257918ae9d869d80b459917cc4d9c1f486f5d93394bd7d426464736f6c63430008170033",".code":[{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"80"},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"40"},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"4"},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"CALLDATASIZE","source":13},{"begin":290,"end":2781,"name":"LT","source":13},{"begin":290,"end":2781,"name":"ISZERO","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"4"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"0"},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"REVERT","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"4"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"0"},{"begin":290,"end":2781,"name":"SWAP3","source":13},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"CALLDATALOAD","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"E0"},{"begin":290,"end":2781,"name":"SHR","source":13},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"6FDDE03"},{"begin":290,"end":2781,"name":"EQ","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"6"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"78DFBE7"},{"begin":290,"end":2781,"name":"EQ","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"8"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"EA9547E"},{"begin":290,"end":2781,"name":"EQ","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"10"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"4E71E0C8"},{"begin":290,"end":2781,"name":"EQ","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"12"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"73D4A13A"},{"begin":290,"end":2781,"name":"EQ","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"14"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"8DA5CB5B"},{"begin":290,"end":2781,"name":"EQ","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"16"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"D1BDEE38"},{"begin":290,"end":2781,"name":"EQ","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"18"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"D3AF58FB"},{"begin":290,"end":2781,"name":"EQ","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"20"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"E30C3978"},{"begin":290,"end":2781,"name":"EQ","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"22"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"E6AA216C"},{"begin":290,"end":2781,"name":"EQ","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"24"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"0"},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"REVERT","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"24"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"CALLVALUE","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"28"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC"},{"begin":290,"end":2781,"name":"CALLDATASIZE","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"SLT","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"28"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"20"},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":1328,"end":1332,"name":"PUSH","source":13,"value":"33"},{"begin":290,"end":2781,"name":"SLOAD","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"RETURN","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"28"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"REVERT","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"22"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"CALLVALUE","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"28"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC"},{"begin":290,"end":2781,"name":"CALLDATASIZE","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"SLT","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"28"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"20"},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":217,"end":244,"name":"PUSH","source":10,"value":"1"},{"begin":290,"end":2781,"name":"SLOAD","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"RETURN","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"20"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"CALLVALUE","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"36"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"60"},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC"},{"begin":290,"end":2781,"name":"CALLDATASIZE","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"SLT","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"36"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"CALLDATALOAD","source":13},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"DUP5","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"SWAP5","source":13},{"begin":290,"end":2781,"name":"SUB","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"38"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"24"},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"CALLDATALOAD","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FFFFFFFFFFFFFFFF"},{"begin":290,"end":2781,"name":"SWAP4","source":13},{"begin":290,"end":2781,"name":"DUP5","source":13},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"SWAP4","source":13},{"begin":290,"end":2781,"name":"SUB","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"40"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"44"},{"begin":290,"end":2781,"name":"CALLDATALOAD","source":13},{"begin":290,"end":2781,"name":"SWAP5","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FFFFFFFF"},{"begin":290,"end":2781,"name":"SWAP5","source":13},{"begin":290,"end":2781,"name":"DUP6","source":13},{"begin":290,"end":2781,"name":"DUP8","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"SWAP8","source":13},{"begin":290,"end":2781,"name":"SUB","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"42"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":1957,"end":2021,"name":"PUSH [tag]","source":10,"value":"44"},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":290,"end":2781,"name":"DUP12","source":13},{"begin":290,"end":2781,"name":"SLOAD","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":1965,"end":1975,"name":"CALLER","source":10},{"begin":1965,"end":1984,"name":"EQ","source":10},{"begin":1957,"end":2021,"name":"PUSH [tag]","source":10,"value":"2"},{"begin":1957,"end":2021,"jumpType":"[in]","name":"JUMP","source":10},{"begin":1957,"end":2021,"name":"tag","source":10,"value":"44"},{"begin":1957,"end":2021,"name":"JUMPDEST","source":10},{"begin":290,"end":2781,"name":"DUP8","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"SWAP9","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"45"},{"begin":290,"end":2781,"name":"DUP11","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"1"},{"begin":290,"end":2781,"jumpType":"[in]","name":"JUMP","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"45"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"DUP10","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"20"},{"begin":1492,"end":1668,"name":"DUP10","source":13},{"begin":1492,"end":1668,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"SWAP5","source":13},{"begin":290,"end":2781,"name":"DUP6","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":1492,"end":1668,"name":"DUP8","source":13},{"begin":1492,"end":1668,"name":"DUP10","source":13},{"begin":1492,"end":1668,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"SWAP7","source":13},{"begin":290,"end":2781,"name":"DUP8","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"60"},{"begin":1492,"end":1668,"name":"DUP10","source":13},{"begin":1492,"end":1668,"name":"ADD","source":13},{"begin":1641,"end":1656,"name":"SWAP6","source":13},{"begin":1641,"end":1656,"name":"DUP1","source":13},{"begin":1641,"end":1656,"name":"TIMESTAMP","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"DUP8","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"DUP9","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"SWAP3","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"46"},{"begin":290,"end":2781,"name":"DUP5","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"1"},{"begin":290,"end":2781,"jumpType":"[in]","name":"JUMP","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"46"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":1828,"end":1832,"name":"PUSH","source":13,"value":"33"},{"begin":290,"end":2781,"name":"SLOAD","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"DUP11","source":13},{"begin":290,"end":2781,"name":"DUP13","source":13},{"begin":290,"end":2781,"name":"DUP9","source":13},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"DUP6","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"DUP10","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"60"},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"20"},{"begin":290,"end":2781,"name":"DUP11","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"SWAP5","source":13},{"begin":290,"end":2781,"name":"DUP7","source":13},{"begin":290,"end":2781,"name":"DUP9","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"80"},{"begin":290,"end":2781,"name":"SHR","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"DUP7","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"DUP11","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"SWAP10","source":13},{"begin":290,"end":2781,"name":"DUP9","source":13},{"begin":290,"end":2781,"name":"DUP9","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"C0"},{"begin":290,"end":2781,"name":"SHR","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"DUP12","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"SWAP6","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"E0"},{"begin":290,"end":2781,"name":"SHR","source":13},{"begin":290,"end":2781,"name":"DUP7","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":2093,"end":2110,"name":"SWAP1","source":13},{"begin":2093,"end":2110,"name":"DUP2","source":13},{"begin":2093,"end":2110,"name":"DUP2","source":13},{"begin":2093,"end":2110,"name":"GT","source":13},{"begin":2089,"end":2207,"name":"PUSH [tag]","source":13,"value":"47"},{"begin":2089,"end":2207,"name":"JUMPI","source":13},{"begin":2221,"end":2233,"name":"DUP1","source":13},{"begin":2221,"end":2233,"name":"ISZERO","source":13},{"begin":2221,"end":2233,"name":"DUP1","source":13},{"begin":2221,"end":2233,"name":"ISZERO","source":13},{"begin":2221,"end":2287,"name":"SWAP1","source":13},{"begin":2221,"end":2287,"name":"DUP2","source":13},{"begin":2221,"end":2287,"name":"PUSH [tag]","source":13,"value":"49"},{"begin":2221,"end":2287,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"50"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":2217,"end":2384,"name":"POP","source":13},{"begin":2217,"end":2384,"name":"PUSH [tag]","source":13,"value":"51"},{"begin":2217,"end":2384,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"DUP9","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":-1,"end":-1,"name":"GT","source":-1},{"begin":2530,"end":2568,"name":"SWAP4","source":13},{"begin":2530,"end":2568,"name":"DUP5","source":13},{"begin":2530,"end":2568,"name":"ISZERO","source":13},{"begin":2530,"end":2630,"name":"SWAP5","source":13},{"begin":2530,"end":2630,"name":"PUSH [tag]","source":13,"value":"53"},{"begin":2530,"end":2630,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"54"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":2530,"end":2706,"name":"POP","source":13},{"begin":2530,"end":2706,"name":"DUP4","source":13},{"begin":2530,"end":2706,"name":"ISZERO","source":13},{"begin":2530,"end":2706,"name":"PUSH [tag]","source":13,"value":"55"},{"begin":2530,"end":2706,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"56"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":2513,"end":2773,"name":"POP","source":13},{"begin":2513,"end":2773,"name":"POP","source":13},{"begin":2513,"end":2773,"name":"POP","source":13},{"begin":2513,"end":2773,"name":"PUSH [tag]","source":13,"value":"57"},{"begin":2513,"end":2773,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"DUP6","source":13},{"begin":290,"end":2781,"name":"SWAP4","source":13},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FFFFFFFF00000000000000000000000000000000000000000000000000000000"},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FFFFFFFF000000000000000000000000000000000000000000000000"},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FFFFFFFFFFFFFFFF00000000000000000000000000000000"},{"begin":1972,"end":1992,"name":"PUSH [tag]","source":13,"value":"59"},{"begin":290,"end":2781,"name":"SWAP9","source":13},{"begin":290,"end":2781,"name":"SWAP7","source":13},{"begin":1972,"end":1992,"name":"PUSH","source":13,"value":"CFEDA7DA2BAA74F493D45B784B32C511B6F8E67DF21495044ECAE70CE9918E23"},{"begin":290,"end":2781,"name":"SWAP11","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"SWAP4","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"80"},{"begin":290,"end":2781,"name":"SHL","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"SWAP5","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"C0"},{"begin":290,"end":2781,"name":"SHL","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"SWAP3","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"E0"},{"begin":290,"end":2781,"name":"SHL","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"SWAP3","source":13},{"begin":290,"end":2781,"name":"OR","source":13},{"begin":290,"end":2781,"name":"OR","source":13},{"begin":290,"end":2781,"name":"OR","source":13},{"begin":1828,"end":1832,"name":"PUSH","source":13,"value":"33"},{"begin":290,"end":2781,"name":"SSTORE","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":1972,"end":1992,"name":"SWAP2","source":13},{"begin":1972,"end":1992,"name":"DUP3","source":13},{"begin":1972,"end":1992,"name":"SWAP2","source":13},{"begin":1972,"end":1992,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"60"},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"80"},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"SWAP4","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FFFFFFFFFFFFFFFF"},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"20"},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"20"},{"begin":290,"end":2781,"name":"DUP5","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"40"},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FFFFFFFF"},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"SWAP4","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"40"},{"begin":290,"end":2781,"name":"DUP7","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"JUMP","source":13},{"begin":1972,"end":1992,"name":"tag","source":13,"value":"59"},{"begin":1972,"end":1992,"name":"JUMPDEST","source":13},{"begin":1972,"end":1992,"name":"SUB","source":13},{"begin":1972,"end":1992,"name":"SWAP1","source":13},{"begin":1972,"end":1992,"name":"LOG1","source":13},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"RETURN","source":13},{"begin":2513,"end":2773,"name":"tag","source":13,"value":"57"},{"begin":2513,"end":2773,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"DUP7","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":2738,"end":2762,"name":"PUSH [tag]","source":13,"value":"60"},{"begin":290,"end":2781,"name":"DUP8","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":2738,"end":2762,"name":"SWAP3","source":13},{"begin":2738,"end":2762,"name":"DUP4","source":13},{"begin":2738,"end":2762,"name":"SWAP3","source":13},{"begin":2738,"end":2762,"name":"PUSH","source":13,"value":"91B56CD400000000000000000000000000000000000000000000000000000000"},{"begin":2738,"end":2762,"name":"DUP5","source":13},{"begin":2738,"end":2762,"name":"MSTORE","source":13},{"begin":2738,"end":2762,"name":"DUP4","source":13},{"begin":2738,"end":2762,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"60"},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"80"},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"SWAP4","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FFFFFFFFFFFFFFFF"},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"20"},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"20"},{"begin":290,"end":2781,"name":"DUP5","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"40"},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FFFFFFFF"},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"SWAP4","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"40"},{"begin":290,"end":2781,"name":"DUP7","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"JUMP","source":13},{"begin":2738,"end":2762,"name":"tag","source":13,"value":"60"},{"begin":2738,"end":2762,"name":"JUMPDEST","source":13},{"begin":2738,"end":2762,"name":"SUB","source":13},{"begin":2738,"end":2762,"name":"SWAP1","source":13},{"begin":2738,"end":2762,"name":"REVERT","source":13},{"begin":2530,"end":2706,"name":"tag","source":13,"value":"55"},{"begin":2530,"end":2706,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"SWAP3","source":13},{"begin":290,"end":2781,"name":"SWAP4","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":835,"end":839,"name":"SWAP2","source":11},{"begin":965,"end":973,"name":"PUSH","source":13,"value":"A8C0"},{"begin":835,"end":839,"name":"DUP4","source":11},{"begin":835,"end":839,"name":"ADD","source":11},{"begin":835,"end":839,"name":"DUP1","source":11},{"begin":835,"end":839,"name":"SWAP4","source":11},{"begin":835,"end":839,"name":"GT","source":11},{"begin":835,"end":839,"name":"PUSH [tag]","source":11,"value":"61"},{"begin":835,"end":839,"name":"JUMPI","source":11},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"DUP6","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":-1,"end":-1,"name":"GT","source":-1},{"begin":2646,"end":2706,"name":"ISZERO","source":13},{"begin":2530,"end":2706,"name":"CODESIZE","source":13},{"begin":2530,"end":2706,"name":"DUP1","source":13},{"begin":2530,"end":2706,"name":"DUP1","source":13},{"begin":2530,"end":2706,"name":"PUSH [tag]","source":13,"value":"56"},{"begin":2530,"end":2706,"name":"JUMP","source":13},{"begin":835,"end":839,"name":"tag","source":11,"value":"61"},{"begin":835,"end":839,"name":"JUMPDEST","source":11},{"begin":835,"end":839,"name":"DUP11","source":11},{"begin":835,"end":839,"name":"PUSH","source":11,"value":"11"},{"begin":835,"end":839,"name":"DUP6","source":11},{"begin":835,"end":839,"name":"PUSH","source":11,"value":"4E487B7100000000000000000000000000000000000000000000000000000000"},{"begin":835,"end":839,"name":"DUP4","source":11},{"begin":835,"end":839,"name":"MSTORE","source":11},{"begin":835,"end":839,"name":"MSTORE","source":11},{"begin":835,"end":839,"name":"REVERT","source":11},{"begin":2530,"end":2630,"name":"tag","source":13,"value":"53"},{"begin":2530,"end":2630,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"SWAP5","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"DUP10","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":-1,"end":-1,"name":"GT","source":-1},{"begin":2584,"end":2630,"name":"ISZERO","source":13},{"begin":2530,"end":2630,"name":"SWAP3","source":13},{"begin":2530,"end":2630,"name":"CODESIZE","source":13},{"begin":2530,"end":2630,"name":"PUSH [tag]","source":13,"value":"54"},{"begin":2530,"end":2630,"name":"JUMP","source":13},{"begin":2217,"end":2384,"name":"tag","source":13,"value":"51"},{"begin":2217,"end":2384,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"64"},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"DUP8","source":13},{"begin":290,"end":2781,"name":"DUP16","source":13},{"begin":290,"end":2781,"name":"SWAP3","source":13},{"begin":290,"end":2781,"name":"DUP12","source":13},{"begin":290,"end":2781,"name":"SWAP4","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":2310,"end":2373,"name":"SWAP4","source":13},{"begin":2310,"end":2373,"name":"PUSH","source":13,"value":"68FFEC600000000000000000000000000000000000000000000000000000000"},{"begin":2310,"end":2373,"name":"DUP6","source":13},{"begin":2310,"end":2373,"name":"MSTORE","source":13},{"begin":2310,"end":2373,"name":"DUP5","source":13},{"begin":2310,"end":2373,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":2341,"end":2372,"name":"PUSH","source":13,"value":"1"},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"44"},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":2310,"end":2373,"name":"REVERT","source":13},{"begin":2221,"end":2287,"name":"tag","source":13,"value":"49"},{"begin":2221,"end":2287,"name":"JUMPDEST","source":13},{"begin":835,"end":839,"name":"PUSH","source":11,"value":"DE0B6B3A7640000"},{"begin":835,"end":839,"name":"SWAP2","source":11},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":2265,"end":2276,"name":"PUSHIMMUTABLE","source":13,"value":"3061"},{"begin":835,"end":839,"name":"DUP3","source":11},{"begin":835,"end":839,"name":"ADD","source":11},{"begin":835,"end":839,"name":"SWAP1","source":11},{"begin":835,"end":839,"name":"DUP2","source":11},{"begin":835,"end":839,"name":"DUP4","source":11},{"begin":835,"end":839,"name":"GT","source":11},{"begin":835,"end":839,"name":"PUSH [tag]","source":11,"value":"63"},{"begin":835,"end":839,"name":"JUMPI","source":11},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"DUP5","source":13},{"begin":290,"end":2781,"name":"MUL","source":13},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"DUP5","source":13},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"DIV","source":13},{"begin":290,"end":2781,"name":"EQ","source":13},{"begin":290,"end":2781,"name":"OR","source":13},{"begin":290,"end":2781,"name":"ISZERO","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"65"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"DIV","source":13},{"begin":2237,"end":2287,"name":"DUP3","source":13},{"begin":-1,"end":-1,"name":"GT","source":-1},{"begin":2221,"end":2287,"name":"CODESIZE","source":13},{"begin":2221,"end":2287,"name":"PUSH [tag]","source":13,"value":"50"},{"begin":2221,"end":2287,"name":"JUMP","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"65"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":835,"end":839,"name":"POP","source":11},{"begin":835,"end":839,"name":"POP","source":11},{"begin":835,"end":839,"name":"POP","source":11},{"begin":835,"end":839,"name":"DUP6","source":11},{"begin":835,"end":839,"name":"DUP16","source":11},{"begin":835,"end":839,"name":"PUSH","source":11,"value":"11"},{"begin":835,"end":839,"name":"DUP11","source":11},{"begin":835,"end":839,"name":"PUSH","source":11,"value":"4E487B7100000000000000000000000000000000000000000000000000000000"},{"begin":835,"end":839,"name":"DUP4","source":11},{"begin":835,"end":839,"name":"MSTORE","source":11},{"begin":835,"end":839,"name":"MSTORE","source":11},{"begin":835,"end":839,"name":"REVERT","source":11},{"begin":835,"end":839,"name":"tag","source":11,"value":"63"},{"begin":835,"end":839,"name":"JUMPDEST","source":11},{"begin":835,"end":839,"name":"POP","source":11},{"begin":835,"end":839,"name":"POP","source":11},{"begin":835,"end":839,"name":"POP","source":11},{"begin":835,"end":839,"name":"POP","source":11},{"begin":835,"end":839,"name":"DUP6","source":11},{"begin":835,"end":839,"name":"DUP16","source":11},{"begin":835,"end":839,"name":"PUSH","source":11,"value":"11"},{"begin":835,"end":839,"name":"DUP11","source":11},{"begin":835,"end":839,"name":"PUSH","source":11,"value":"4E487B7100000000000000000000000000000000000000000000000000000000"},{"begin":835,"end":839,"name":"DUP4","source":11},{"begin":835,"end":839,"name":"MSTORE","source":11},{"begin":835,"end":839,"name":"MSTORE","source":11},{"begin":835,"end":839,"name":"REVERT","source":11},{"begin":2089,"end":2207,"name":"tag","source":13,"value":"47"},{"begin":2089,"end":2207,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"DUP16","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"64"},{"begin":290,"end":2781,"name":"SWAP3","source":13},{"begin":290,"end":2781,"name":"DUP16","source":13},{"begin":290,"end":2781,"name":"DUP12","source":13},{"begin":290,"end":2781,"name":"SWAP4","source":13},{"begin":290,"end":2781,"name":"DUP11","source":13},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":2133,"end":2196,"name":"SWAP5","source":13},{"begin":2133,"end":2196,"name":"PUSH","source":13,"value":"68FFEC600000000000000000000000000000000000000000000000000000000"},{"begin":2133,"end":2196,"name":"DUP7","source":13},{"begin":2133,"end":2196,"name":"MSTORE","source":13},{"begin":2133,"end":2196,"name":"DUP6","source":13},{"begin":2133,"end":2196,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"44"},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":2133,"end":2196,"name":"REVERT","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"42"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"DUP10","source":13},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"REVERT","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"40"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"DUP8","source":13},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"REVERT","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"38"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"DUP5","source":13},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"REVERT","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"36"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"REVERT","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"18"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"CALLVALUE","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"28"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC"},{"begin":290,"end":2781,"name":"CALLDATASIZE","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"SLT","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"28"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"20"},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":1038,"end":1074,"name":"PUSHIMMUTABLE","source":13,"value":"3061"},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"RETURN","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"16"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"CALLVALUE","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"28"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC"},{"begin":290,"end":2781,"name":"CALLDATASIZE","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"SLT","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"28"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"20"},{"begin":290,"end":2781,"name":"SWAP3","source":13},{"begin":290,"end":2781,"name":"SLOAD","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"RETURN","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"14"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"CALLVALUE","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"28"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC"},{"begin":290,"end":2781,"name":"CALLDATASIZE","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"SLT","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"28"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"80"},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":1004,"end":1032,"name":"PUSH","source":13,"value":"33"},{"begin":290,"end":2781,"name":"SLOAD","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FFFFFFFFFFFFFFFF"},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"DUP6","source":13},{"begin":290,"end":2781,"name":"SHR","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"20"},{"begin":290,"end":2781,"name":"DUP5","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FFFFFFFF"},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"C0"},{"begin":290,"end":2781,"name":"SHR","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"E0"},{"begin":290,"end":2781,"name":"SHR","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"60"},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"RETURN","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"12"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"CALLVALUE","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"36"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC"},{"begin":290,"end":2781,"name":"CALLDATASIZE","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"SLT","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"36"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":1592,"end":1604,"name":"PUSH","source":10,"value":"1"},{"begin":290,"end":2781,"name":"SLOAD","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":290,"end":2781,"name":"SWAP3","source":13},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":1641,"end":1651,"name":"SWAP2","source":10},{"begin":1641,"end":1651,"name":"DUP3","source":10},{"begin":1641,"end":1651,"name":"CALLER","source":10},{"begin":1641,"end":1668,"name":"SUB","source":10},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"83"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"DUP5","source":13},{"begin":290,"end":2781,"name":"SLOAD","source":13},{"begin":290,"end":2781,"name":"SWAP4","source":13},{"begin":290,"end":2781,"name":"DUP5","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":1740,"end":1782,"name":"PUSH","source":10,"value":"8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"},{"begin":1740,"end":1782,"name":"DUP7","source":10},{"begin":1740,"end":1782,"name":"DUP1","source":10},{"begin":1740,"end":1782,"name":"LOG3","source":10},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"SWAP4","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"OR","source":13},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"SSTORE","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":1592,"end":1604,"name":"PUSH","source":10,"value":"1"},{"begin":290,"end":2781,"name":"SSTORE","source":13},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"RETURN","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"83"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"20"},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"64"},{"begin":290,"end":2781,"name":"SWAP3","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"8C379A000000000000000000000000000000000000000000000000000000000"},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"20"},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"24"},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"4F776E61626C653A2063616C6C657220213D2070656E64696E67206F776E6572"},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"44"},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"REVERT","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"10"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"CALLVALUE","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"28"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC"},{"begin":290,"end":2781,"name":"CALLDATASIZE","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"SLT","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"28"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"20"},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":965,"end":973,"name":"PUSH","source":13,"value":"A8C0"},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"RETURN","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"8"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"CALLVALUE","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"36"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"60"},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC"},{"begin":290,"end":2781,"name":"CALLDATASIZE","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"SLT","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"36"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"CALLDATALOAD","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":290,"end":2781,"name":"SWAP3","source":13},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"SWAP4","source":13},{"begin":290,"end":2781,"name":"SUB","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"38"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"24"},{"begin":290,"end":2781,"name":"CALLDATALOAD","source":13},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"ISZERO","source":13},{"begin":290,"end":2781,"name":"ISZERO","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"SUB","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"95"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"44"},{"begin":290,"end":2781,"name":"CALLDATALOAD","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"ISZERO","source":13},{"begin":290,"end":2781,"name":"ISZERO","source":13},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"SUB","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"97"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":1957,"end":2021,"name":"PUSH [tag]","source":10,"value":"99"},{"begin":290,"end":2781,"name":"DUP7","source":13},{"begin":290,"end":2781,"name":"DUP9","source":13},{"begin":290,"end":2781,"name":"SLOAD","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":1965,"end":1975,"name":"CALLER","source":10},{"begin":1965,"end":1984,"name":"EQ","source":10},{"begin":1957,"end":2021,"name":"PUSH [tag]","source":10,"value":"2"},{"begin":1957,"end":2021,"jumpType":"[in]","name":"JUMP","source":10},{"begin":1957,"end":2021,"name":"tag","source":10,"value":"99"},{"begin":1957,"end":2021,"name":"JUMPDEST","source":10},{"begin":1087,"end":1440,"name":"ISZERO","source":10},{"begin":1087,"end":1440,"name":"PUSH [tag]","source":10,"value":"100"},{"begin":1087,"end":1440,"name":"JUMPI","source":10},{"begin":1143,"end":1165,"name":"DUP4","source":10},{"begin":1143,"end":1165,"name":"ISZERO","source":10},{"begin":1143,"end":1165,"name":"SWAP1","source":10},{"begin":1143,"end":1165,"name":"DUP2","source":10},{"begin":1143,"end":1165,"name":"ISZERO","source":10},{"begin":1143,"end":1177,"name":"SWAP2","source":10},{"begin":1143,"end":1177,"name":"PUSH [tag]","source":10,"value":"102"},{"begin":1143,"end":1177,"name":"JUMPI","source":10},{"begin":1087,"end":1440,"name":"tag","source":10,"value":"103"},{"begin":1087,"end":1440,"name":"JUMPDEST","source":10},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"ISZERO","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"104"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"SLOAD","source":13},{"begin":290,"end":2781,"name":"SWAP3","source":13},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":1246,"end":1283,"name":"PUSH","source":10,"value":"8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"},{"begin":1246,"end":1283,"name":"DUP6","source":10},{"begin":1246,"end":1283,"name":"DUP1","source":10},{"begin":1246,"end":1283,"name":"LOG3","source":10},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"SWAP3","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"OR","source":13},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"SSTORE","source":13},{"begin":1327,"end":1352,"name":"PUSH","source":10,"value":"1"},{"begin":290,"end":2781,"name":"SLOAD","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":1327,"end":1352,"name":"PUSH","source":10,"value":"1"},{"begin":290,"end":2781,"name":"SSTORE","source":13},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"RETURN","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"104"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"20"},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"64"},{"begin":290,"end":2781,"name":"SWAP3","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"8C379A000000000000000000000000000000000000000000000000000000000"},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"15"},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"24"},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"4F776E61626C653A207A65726F20616464726573730000000000000000000000"},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"44"},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"REVERT","source":13},{"begin":1143,"end":1177,"name":"tag","source":10,"value":"102"},{"begin":1143,"end":1177,"name":"JUMPDEST","source":10},{"begin":1143,"end":1177,"name":"SWAP1","source":10},{"begin":1143,"end":1177,"name":"POP","source":10},{"begin":1143,"end":1177,"name":"CODESIZE","source":10},{"begin":1143,"end":1177,"name":"PUSH [tag]","source":10,"value":"103"},{"begin":1143,"end":1177,"name":"JUMP","source":10},{"begin":1087,"end":1440,"name":"tag","source":10,"value":"100"},{"begin":1087,"end":1440,"name":"JUMPDEST","source":10},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"},{"begin":1406,"end":1429,"name":"PUSH","source":10,"value":"1"},{"begin":290,"end":2781,"name":"SLOAD","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"OR","source":13},{"begin":1406,"end":1429,"name":"PUSH","source":10,"value":"1"},{"begin":290,"end":2781,"name":"SSTORE","source":13},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"RETURN","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"97"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"DUP7","source":13},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"REVERT","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"95"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"DUP6","source":13},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"REVERT","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"6"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"SWAP3","source":13},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"CALLVALUE","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"109"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC"},{"begin":290,"end":2781,"name":"CALLDATASIZE","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"SLT","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"109"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":980,"end":998,"name":"PUSH","source":13,"value":"32"},{"begin":290,"end":2781,"name":"SLOAD","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"1"},{"begin":290,"end":2781,"name":"SWAP6","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"1"},{"begin":290,"end":2781,"name":"SHR","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"1"},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"SWAP8","source":13},{"begin":290,"end":2781,"name":"DUP9","source":13},{"begin":290,"end":2781,"name":"ISZERO","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"111"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"112"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"20"},{"begin":290,"end":2781,"name":"SWAP4","source":13},{"begin":290,"end":2781,"name":"DUP5","source":13},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"LT","source":13},{"begin":290,"end":2781,"name":"DUP11","source":13},{"begin":290,"end":2781,"name":"EQ","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"113"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"DUP5","source":13},{"begin":290,"end":2781,"name":"DUP8","source":13},{"begin":290,"end":2781,"name":"SWAP9","source":13},{"begin":290,"end":2781,"name":"SWAP10","source":13},{"begin":290,"end":2781,"name":"SWAP11","source":13},{"begin":290,"end":2781,"name":"DUP5","source":13},{"begin":290,"end":2781,"name":"DUP10","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"0"},{"begin":290,"end":2781,"name":"EQ","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"115"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"1"},{"begin":290,"end":2781,"name":"EQ","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"117"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"118"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"1F"},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"},{"begin":290,"end":2781,"name":"SWAP6","source":13},{"begin":290,"end":2781,"name":"DUP7","source":13},{"begin":290,"end":2781,"name":"SWAP3","source":13},{"begin":290,"end":2781,"name":"SUB","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"SWAP6","source":13},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"DUP8","source":13},{"begin":290,"end":2781,"name":"LT","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FFFFFFFFFFFFFFFF"},{"begin":290,"end":2781,"name":"DUP9","source":13},{"begin":290,"end":2781,"name":"GT","source":13},{"begin":290,"end":2781,"name":"OR","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"119"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"DUP6","source":13},{"begin":290,"end":2781,"name":"SWAP3","source":13},{"begin":290,"end":2781,"name":"SWAP4","source":13},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"DUP7","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"DUP5","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"DUP5","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"DUP7","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"SWAP6","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"121"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"DUP8","source":13},{"begin":290,"end":2781,"name":"LT","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"122"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"SWAP5","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"DUP6","source":13},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"1F"},{"begin":290,"end":2781,"name":"SWAP5","source":13},{"begin":290,"end":2781,"name":"SWAP6","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"SUB","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"RETURN","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"122"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"DUP7","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"DUP10","source":13},{"begin":290,"end":2781,"name":"DUP9","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"DUP10","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"SWAP6","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"SWAP6","source":13},{"begin":290,"end":2781,"name":"DUP9","source":13},{"begin":290,"end":2781,"name":"SWAP6","source":13},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"121"},{"begin":290,"end":2781,"name":"JUMP","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"119"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"41"},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"24"},{"begin":290,"end":2781,"name":"SWAP3","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"4E487B7100000000000000000000000000000000000000000000000000000000"},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"REVERT","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"117"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":980,"end":998,"name":"PUSH","source":13,"value":"32"},{"begin":290,"end":2781,"name":"DUP6","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"DUP5","source":13},{"begin":290,"end":2781,"name":"SWAP3","source":13},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"11DF491316F14931039EDFD4F8964C9A443B862F02D4C7611D18C2BC4E6FF697"},{"begin":290,"end":2781,"name":"tag","source":13,"value":"124"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"DUP5","source":13},{"begin":290,"end":2781,"name":"LT","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"125"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"CODESIZE","source":13},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"118"},{"begin":290,"end":2781,"name":"JUMP","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"125"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"SLOAD","source":13},{"begin":290,"end":2781,"name":"DUP9","source":13},{"begin":290,"end":2781,"name":"DUP6","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"DUP7","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"DUP8","source":13},{"begin":290,"end":2781,"name":"SWAP7","source":13},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":290,"end":2781,"name":"SWAP3","source":13},{"begin":290,"end":2781,"name":"DUP5","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"SWAP3","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"124"},{"begin":290,"end":2781,"name":"JUMP","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"115"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"SWAP4","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"},{"begin":290,"end":2781,"name":"SWAP2","source":13},{"begin":290,"end":2781,"name":"POP","source":13},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"DUP7","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"ISZERO","source":13},{"begin":290,"end":2781,"name":"ISZERO","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"5"},{"begin":290,"end":2781,"name":"SHL","source":13},{"begin":290,"end":2781,"name":"DUP5","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"CODESIZE","source":13},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"118"},{"begin":290,"end":2781,"name":"JUMP","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"113"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"24"},{"begin":290,"end":2781,"name":"DUP7","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"22"},{"begin":290,"end":2781,"name":"DUP12","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"4E487B7100000000000000000000000000000000000000000000000000000000"},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"REVERT","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"111"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"7F"},{"begin":290,"end":2781,"name":"AND","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"112"},{"begin":290,"end":2781,"name":"JUMP","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"109"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"DUP4","source":13},{"begin":290,"end":2781,"name":"DUP1","source":13},{"begin":290,"end":2781,"name":"REVERT","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"1"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"80"},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"SWAP1","source":13},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"LT","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"FFFFFFFFFFFFFFFF"},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"GT","source":13},{"begin":290,"end":2781,"name":"OR","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"127"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"40"},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"jumpType":"[out]","name":"JUMP","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"127"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"4E487B7100000000000000000000000000000000000000000000000000000000"},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"0"},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"41"},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"4"},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"24"},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"0"},{"begin":290,"end":2781,"name":"REVERT","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"2"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"ISZERO","source":13},{"begin":290,"end":2781,"name":"PUSH [tag]","source":13,"value":"129"},{"begin":290,"end":2781,"name":"JUMPI","source":13},{"begin":290,"end":2781,"jumpType":"[out]","name":"JUMP","source":13},{"begin":290,"end":2781,"name":"tag","source":13,"value":"129"},{"begin":290,"end":2781,"name":"JUMPDEST","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"64"},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"40"},{"begin":290,"end":2781,"name":"MLOAD","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"8C379A000000000000000000000000000000000000000000000000000000000"},{"begin":290,"end":2781,"name":"DUP2","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"20"},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"4"},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"20"},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"24"},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"},{"begin":290,"end":2781,"name":"PUSH","source":13,"value":"44"},{"begin":290,"end":2781,"name":"DUP3","source":13},{"begin":290,"end":2781,"name":"ADD","source":13},{"begin":290,"end":2781,"name":"MSTORE","source":13},{"begin":290,"end":2781,"name":"REVERT","source":13}]}},"sourceList":["@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol","@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol","@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol","@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol","contracts/pendle/contracts/core/libraries/BoringOwnableUpgradeable.sol","contracts/pendle/contracts/core/libraries/math/PMath.sol","contracts/pendle/contracts/interfaces/IPExchangeRateOracle.sol","contracts/pendle/contracts/offchain-helpers/PendleExchangeRateOracle.sol","#utility.yul"]},"bytecode":{"functionDebugData":{"allocate_memory":{"entryPoint":980,"id":null,"parameterSlots":1,"returnSlots":1}},"object":"604060a0815234620003cf5762001047803803806200001e81620003d4565b9283398101908281830312620003cf5780516001600160401b0390818111620003cf578201601f91848383011215620003cf578151938185116200030657602094601f19936200007486830186168801620003d4565b97828952878383010111620003cf579086929160005b828110620003ba575050826000918901015201519160019384549660ff8860a81c161597888099620003aa575b80156200038f575b15620003345760ff60a01b198116600160a01b178755886200031c575b5080519384116200030657603254928684811c94168015620002fb575b88851014620002e55783838695116200028a575b508792841160011462000223575060009262000217575b5050600019600383901b1c191690831b176032555b60805280549260ff8460a81c1615620001bf57600080546001600160a01b0319163317905562000183575b8351610c4c9081620003fb823960805181818161049601526105b40152f35b60ff60a81b19909216825582519182527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249891a138808062000164565b845162461bcd60e51b815260048101849052602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b01519050388062000124565b869492919216916032600052876000209260005b8982821062000273575050841162000259575b505050811b0160325562000139565b015160001960f88460031b161c191690553880806200024a565b838501518655899790950194938401930162000237565b90919293506032600052876000208480870160051c8201928a8810620002db575b9187968a92969594930160051c01915b828110620002cb5750506200010d565b60008155879650899101620002bb565b92508192620002ab565b634e487b7160e01b600052602260045260246000fd5b93607f1693620000f9565b634e487b7160e01b600052604160045260246000fd5b61ffff60a01b191661010160a01b17865538620000dc565b895162461bcd60e51b815260048101899052602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b158015620000bf57508660ff8260a01c1614620000bf565b508660ff8260a01c1610620000b7565b8181018501518a82018601528894016200008a565b600080fd5b6040519190601f01601f191682016001600160401b03811183821017620003065760405256fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde031461097457508163078dfbe7146107e85781630ea9547e146107ad5781634e71e0c8146106a057816373d4a13a146106285781638da5cb5b146105d7578163d1bdee381461057e578163d3af58fb1461013657508063e30c3978146100e45763e6aa216c1461009357600080fd5b346100e057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e0576020906fffffffffffffffffffffffffffffffff603354169051908152f35b5080fd5b50346100e057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e05760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b9190503461057a5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261057a578135916fffffffffffffffffffffffffffffffff8084168094036105765760249081359067ffffffffffffffff93848316809303610572576044359463ffffffff9485871680970361056e576101d673ffffffffffffffffffffffffffffffffffffffff8b54163314610bb1565b8751986101e28a610b66565b8952602089019485528789019687526060890195804216875288519261020784610b66565b603354908a8c8880851691828952606060208a0194868860801c1686528a0199888860c01c168b52019560e01c865251169081811161053357801580159081610489575b5061044d5750508190511690885116119384159461043a575b5083156103ef575b50505061036c5750918593917fffffffff000000000000000000000000000000000000000000000000000000007bffffffff00000000000000000000000000000000000000000000000077ffffffffffffffff0000000000000000000000000000000061036698967fcfeda7da2baa74f493d45b784b32c511b6f8e67df21495044ecae70ce9918e239a5116935160801b16945160c01b16925160e01b16921717176033555191829182919091606060808201936fffffffffffffffffffffffffffffffff815116835267ffffffffffffffff60208201511660208401528160408201519163ffffffff8093166040860152015116910152565b0390a180f35b86906103eb87519283927f91b56cd40000000000000000000000000000000000000000000000000000000084528301919091606060808201936fffffffffffffffffffffffffffffffff815116835267ffffffffffffffff60208201511660208401528160408201519163ffffffff8093166040860152015116910152565b0390fd5b8192935051169161a8c083018093116104105750855116111538808061026c565b8a6011857f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8291945051168189511611159238610264565b606491878f928b9351937f068ffec600000000000000000000000000000000000000000000000000000000855284015282015260016044820152fd5b670de0b6b3a764000091507f000000000000000000000000000000000000000000000000000000000000000082019081831161050457818402918483041417156104d6570482113861024b565b505050858f60118a7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b50505050858f60118a7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8f6064928f8b938a9151947f068ffec60000000000000000000000000000000000000000000000000000000086528501528301526044820152fd5b8980fd5b8780fd5b8480fd5b8280fd5b5050346100e057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e057602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5050346100e057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e05773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b5050346100e057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e0576080906033548151916fffffffffffffffffffffffffffffffff8216835267ffffffffffffffff82851c16602084015263ffffffff8260c01c169083015260e01c6060820152f35b9190503461057a57827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261057a576001549073ffffffffffffffffffffffffffffffffffffffff92838316918233036107505750508084549384167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08680a37fffffffffffffffffffffffff00000000000000000000000000000000000000008093161783551660015580f35b90602060649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602060248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e65726044820152fd5b5050346100e057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e0576020905161a8c08152f35b90503461057a5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261057a5780359073ffffffffffffffffffffffffffffffffffffffff928383168093036105765760243580151581036109705760443590811515820361096c57610863868854163314610bb1565b1561093b57831590811591610933575b50156108d65750508083549283167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08580a37fffffffffffffffffffffffff00000000000000000000000000000000000000008092161782556001541660015580f35b90602060649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601560248201527f4f776e61626c653a207a65726f206164647265737300000000000000000000006044820152fd5b905038610873565b50505090507fffffffffffffffffffffffff0000000000000000000000000000000000000000600154161760015580f35b8680fd5b8580fd5b9092915034610b6257837ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610b6257836032546001958160011c60018316978815610b58575b6020938483108a14610b2c57848798999a8489529182600014610af1575050600114610a9d575b5050601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe095869203011683019583871067ffffffffffffffff881117610a71575085929391838652818452845191828186015281955b838710610a595750508394508582601f949501015201168101030190f35b86810182015189880189015295810195889550610a3b565b8260416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b603285528492507f11df491316f14931039edfd4f8964c9a443b862f02d4c7611d18c2bc4e6ff6975b828410610adb575050508301810138806109e4565b8054888501860152879650928401928101610ac6565b915093507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0091501682860152151560051b84010138806109e4565b60248660228b7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b90607f16906109bd565b8380fd5b6080810190811067ffffffffffffffff821117610b8257604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b15610bb857565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea26469706673582212201bafdfd9d5c484257918ae9d869d80b459917cc4d9c1f486f5d93394bd7d426464736f6c63430008170033","opcodes":"PUSH1 0x40 PUSH1 0xA0 DUP2 MSTORE CALLVALUE PUSH3 0x3CF JUMPI PUSH3 0x1047 DUP1 CODESIZE SUB DUP1 PUSH3 0x1E DUP2 PUSH3 0x3D4 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 DUP3 DUP2 DUP4 SUB SLT PUSH3 0x3CF JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP2 GT PUSH3 0x3CF JUMPI DUP3 ADD PUSH1 0x1F SWAP2 DUP5 DUP4 DUP4 ADD SLT ISZERO PUSH3 0x3CF JUMPI DUP2 MLOAD SWAP4 DUP2 DUP6 GT PUSH3 0x306 JUMPI PUSH1 0x20 SWAP5 PUSH1 0x1F NOT SWAP4 PUSH3 0x74 DUP7 DUP4 ADD DUP7 AND DUP9 ADD PUSH3 0x3D4 JUMP JUMPDEST SWAP8 DUP3 DUP10 MSTORE DUP8 DUP4 DUP4 ADD ADD GT PUSH3 0x3CF JUMPI SWAP1 DUP7 SWAP3 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH3 0x3BA JUMPI POP POP DUP3 PUSH1 0x0 SWAP2 DUP10 ADD ADD MSTORE ADD MLOAD SWAP2 PUSH1 0x1 SWAP4 DUP5 SLOAD SWAP7 PUSH1 0xFF DUP9 PUSH1 0xA8 SHR AND ISZERO SWAP8 DUP9 DUP1 SWAP10 PUSH3 0x3AA JUMPI JUMPDEST DUP1 ISZERO PUSH3 0x38F JUMPI JUMPDEST ISZERO PUSH3 0x334 JUMPI PUSH1 0xFF PUSH1 0xA0 SHL NOT DUP2 AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP8 SSTORE DUP9 PUSH3 0x31C JUMPI JUMPDEST POP DUP1 MLOAD SWAP4 DUP5 GT PUSH3 0x306 JUMPI PUSH1 0x32 SLOAD SWAP3 DUP7 DUP5 DUP2 SHR SWAP5 AND DUP1 ISZERO PUSH3 0x2FB JUMPI JUMPDEST DUP9 DUP6 LT EQ PUSH3 0x2E5 JUMPI DUP4 DUP4 DUP7 SWAP6 GT PUSH3 0x28A JUMPI JUMPDEST POP DUP8 SWAP3 DUP5 GT PUSH1 0x1 EQ PUSH3 0x223 JUMPI POP PUSH1 0x0 SWAP3 PUSH3 0x217 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP4 SHL OR PUSH1 0x32 SSTORE JUMPDEST PUSH1 0x80 MSTORE DUP1 SLOAD SWAP3 PUSH1 0xFF DUP5 PUSH1 0xA8 SHR AND ISZERO PUSH3 0x1BF JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH3 0x183 JUMPI JUMPDEST DUP4 MLOAD PUSH2 0xC4C SWAP1 DUP2 PUSH3 0x3FB DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x496 ADD MSTORE PUSH2 0x5B4 ADD MSTORE RETURN JUMPDEST PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP3 AND DUP3 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP2 LOG1 CODESIZE DUP1 DUP1 PUSH3 0x164 JUMP JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x124 JUMP JUMPDEST DUP7 SWAP5 SWAP3 SWAP2 SWAP3 AND SWAP2 PUSH1 0x32 PUSH1 0x0 MSTORE DUP8 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP10 DUP3 DUP3 LT PUSH3 0x273 JUMPI POP POP DUP5 GT PUSH3 0x259 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x32 SSTORE PUSH3 0x139 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x24A JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP10 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH3 0x237 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP PUSH1 0x32 PUSH1 0x0 MSTORE DUP8 PUSH1 0x0 KECCAK256 DUP5 DUP1 DUP8 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP11 DUP9 LT PUSH3 0x2DB JUMPI JUMPDEST SWAP2 DUP8 SWAP7 DUP11 SWAP3 SWAP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x2CB JUMPI POP POP PUSH3 0x10D JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP8 SWAP7 POP DUP10 SWAP2 ADD PUSH3 0x2BB JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x2AB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH3 0xF9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xFFFF PUSH1 0xA0 SHL NOT AND PUSH2 0x101 PUSH1 0xA0 SHL OR DUP7 SSTORE CODESIZE PUSH3 0xDC JUMP JUMPDEST DUP10 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xBF JUMPI POP DUP7 PUSH1 0xFF DUP3 PUSH1 0xA0 SHR AND EQ PUSH3 0xBF JUMP JUMPDEST POP DUP7 PUSH1 0xFF DUP3 PUSH1 0xA0 SHR AND LT PUSH3 0xB7 JUMP JUMPDEST DUP2 DUP2 ADD DUP6 ADD MLOAD DUP11 DUP3 ADD DUP7 ADD MSTORE DUP9 SWAP5 ADD PUSH3 0x8A JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x306 JUMPI PUSH1 0x40 MSTORE JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x6FDDE03 EQ PUSH2 0x974 JUMPI POP DUP2 PUSH4 0x78DFBE7 EQ PUSH2 0x7E8 JUMPI DUP2 PUSH4 0xEA9547E EQ PUSH2 0x7AD JUMPI DUP2 PUSH4 0x4E71E0C8 EQ PUSH2 0x6A0 JUMPI DUP2 PUSH4 0x73D4A13A EQ PUSH2 0x628 JUMPI DUP2 PUSH4 0x8DA5CB5B EQ PUSH2 0x5D7 JUMPI DUP2 PUSH4 0xD1BDEE38 EQ PUSH2 0x57E JUMPI DUP2 PUSH4 0xD3AF58FB EQ PUSH2 0x136 JUMPI POP DUP1 PUSH4 0xE30C3978 EQ PUSH2 0xE4 JUMPI PUSH4 0xE6AA216C EQ PUSH2 0x93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE0 JUMPI PUSH1 0x20 SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x33 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE0 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE0 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x57A JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x57A JUMPI DUP2 CALLDATALOAD SWAP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND DUP1 SWAP5 SUB PUSH2 0x576 JUMPI PUSH1 0x24 SWAP1 DUP2 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF SWAP4 DUP5 DUP4 AND DUP1 SWAP4 SUB PUSH2 0x572 JUMPI PUSH1 0x44 CALLDATALOAD SWAP5 PUSH4 0xFFFFFFFF SWAP5 DUP6 DUP8 AND DUP1 SWAP8 SUB PUSH2 0x56E JUMPI PUSH2 0x1D6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP12 SLOAD AND CALLER EQ PUSH2 0xBB1 JUMP JUMPDEST DUP8 MLOAD SWAP9 PUSH2 0x1E2 DUP11 PUSH2 0xB66 JUMP JUMPDEST DUP10 MSTORE PUSH1 0x20 DUP10 ADD SWAP5 DUP6 MSTORE DUP8 DUP10 ADD SWAP7 DUP8 MSTORE PUSH1 0x60 DUP10 ADD SWAP6 DUP1 TIMESTAMP AND DUP8 MSTORE DUP9 MLOAD SWAP3 PUSH2 0x207 DUP5 PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x33 SLOAD SWAP1 DUP11 DUP13 DUP9 DUP1 DUP6 AND SWAP2 DUP3 DUP10 MSTORE PUSH1 0x60 PUSH1 0x20 DUP11 ADD SWAP5 DUP7 DUP9 PUSH1 0x80 SHR AND DUP7 MSTORE DUP11 ADD SWAP10 DUP9 DUP9 PUSH1 0xC0 SHR AND DUP12 MSTORE ADD SWAP6 PUSH1 0xE0 SHR DUP7 MSTORE MLOAD AND SWAP1 DUP2 DUP2 GT PUSH2 0x533 JUMPI DUP1 ISZERO DUP1 ISZERO SWAP1 DUP2 PUSH2 0x489 JUMPI JUMPDEST POP PUSH2 0x44D JUMPI POP POP DUP2 SWAP1 MLOAD AND SWAP1 DUP9 MLOAD AND GT SWAP4 DUP5 ISZERO SWAP5 PUSH2 0x43A JUMPI JUMPDEST POP DUP4 ISZERO PUSH2 0x3EF JUMPI JUMPDEST POP POP POP PUSH2 0x36C JUMPI POP SWAP2 DUP6 SWAP4 SWAP2 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFF000000000000000000000000000000000000000000000000 PUSH24 0xFFFFFFFFFFFFFFFF00000000000000000000000000000000 PUSH2 0x366 SWAP9 SWAP7 PUSH32 0xCFEDA7DA2BAA74F493D45B784B32C511B6F8E67DF21495044ECAE70CE9918E23 SWAP11 MLOAD AND SWAP4 MLOAD PUSH1 0x80 SHL AND SWAP5 MLOAD PUSH1 0xC0 SHL AND SWAP3 MLOAD PUSH1 0xE0 SHL AND SWAP3 OR OR OR PUSH1 0x33 SSTORE MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 SWAP2 PUSH1 0x60 PUSH1 0x80 DUP3 ADD SWAP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 MLOAD AND DUP4 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x20 DUP5 ADD MSTORE DUP2 PUSH1 0x40 DUP3 ADD MLOAD SWAP2 PUSH4 0xFFFFFFFF DUP1 SWAP4 AND PUSH1 0x40 DUP7 ADD MSTORE ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG1 DUP1 RETURN JUMPDEST DUP7 SWAP1 PUSH2 0x3EB DUP8 MLOAD SWAP3 DUP4 SWAP3 PUSH32 0x91B56CD400000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP4 ADD SWAP2 SWAP1 SWAP2 PUSH1 0x60 PUSH1 0x80 DUP3 ADD SWAP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 MLOAD AND DUP4 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x20 DUP5 ADD MSTORE DUP2 PUSH1 0x40 DUP3 ADD MLOAD SWAP2 PUSH4 0xFFFFFFFF DUP1 SWAP4 AND PUSH1 0x40 DUP7 ADD MSTORE ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST DUP2 SWAP3 SWAP4 POP MLOAD AND SWAP2 PUSH2 0xA8C0 DUP4 ADD DUP1 SWAP4 GT PUSH2 0x410 JUMPI POP DUP6 MLOAD AND GT ISZERO CODESIZE DUP1 DUP1 PUSH2 0x26C JUMP JUMPDEST DUP11 PUSH1 0x11 DUP6 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST DUP3 SWAP2 SWAP5 POP MLOAD AND DUP2 DUP10 MLOAD AND GT ISZERO SWAP3 CODESIZE PUSH2 0x264 JUMP JUMPDEST PUSH1 0x64 SWAP2 DUP8 DUP16 SWAP3 DUP12 SWAP4 MLOAD SWAP4 PUSH32 0x68FFEC600000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP2 POP PUSH32 0x0 DUP3 ADD SWAP1 DUP2 DUP4 GT PUSH2 0x504 JUMPI DUP2 DUP5 MUL SWAP2 DUP5 DUP4 DIV EQ OR ISZERO PUSH2 0x4D6 JUMPI DIV DUP3 GT CODESIZE PUSH2 0x24B JUMP JUMPDEST POP POP POP DUP6 DUP16 PUSH1 0x11 DUP11 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST POP POP POP POP DUP6 DUP16 PUSH1 0x11 DUP11 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST DUP16 PUSH1 0x64 SWAP3 DUP16 DUP12 SWAP4 DUP11 SWAP2 MLOAD SWAP5 PUSH32 0x68FFEC600000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP6 ADD MSTORE DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0xE0 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE0 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0xE0 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE0 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP3 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0xE0 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE0 JUMPI PUSH1 0x80 SWAP1 PUSH1 0x33 SLOAD DUP2 MLOAD SWAP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP4 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP3 DUP6 SHR AND PUSH1 0x20 DUP5 ADD MSTORE PUSH4 0xFFFFFFFF DUP3 PUSH1 0xC0 SHR AND SWAP1 DUP4 ADD MSTORE PUSH1 0xE0 SHR PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x57A JUMPI DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x57A JUMPI PUSH1 0x1 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP4 AND SWAP2 DUP3 CALLER SUB PUSH2 0x750 JUMPI POP POP DUP1 DUP5 SLOAD SWAP4 DUP5 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP7 DUP1 LOG3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP1 SWAP4 AND OR DUP4 SSTORE AND PUSH1 0x1 SSTORE DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C657220213D2070656E64696E67206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0xE0 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE0 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH2 0xA8C0 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x57A JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x57A JUMPI DUP1 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP4 AND DUP1 SWAP4 SUB PUSH2 0x576 JUMPI PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x970 JUMPI PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x96C JUMPI PUSH2 0x863 DUP7 DUP9 SLOAD AND CALLER EQ PUSH2 0xBB1 JUMP JUMPDEST ISZERO PUSH2 0x93B JUMPI DUP4 ISZERO SWAP1 DUP2 ISZERO SWAP2 PUSH2 0x933 JUMPI JUMPDEST POP ISZERO PUSH2 0x8D6 JUMPI POP POP DUP1 DUP4 SLOAD SWAP3 DUP4 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP6 DUP1 LOG3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP1 SWAP3 AND OR DUP3 SSTORE PUSH1 0x1 SLOAD AND PUSH1 0x1 SSTORE DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A207A65726F20616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP CODESIZE PUSH2 0x873 JUMP JUMPDEST POP POP POP SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE DUP1 RETURN JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST SWAP1 SWAP3 SWAP2 POP CALLVALUE PUSH2 0xB62 JUMPI DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xB62 JUMPI DUP4 PUSH1 0x32 SLOAD PUSH1 0x1 SWAP6 DUP2 PUSH1 0x1 SHR PUSH1 0x1 DUP4 AND SWAP8 DUP9 ISZERO PUSH2 0xB58 JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP4 LT DUP11 EQ PUSH2 0xB2C JUMPI DUP5 DUP8 SWAP9 SWAP10 SWAP11 DUP5 DUP10 MSTORE SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0xAF1 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0xA9D JUMPI JUMPDEST POP POP PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP6 DUP7 SWAP3 SUB ADD AND DUP4 ADD SWAP6 DUP4 DUP8 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP9 GT OR PUSH2 0xA71 JUMPI POP DUP6 SWAP3 SWAP4 SWAP2 DUP4 DUP7 MSTORE DUP2 DUP5 MSTORE DUP5 MLOAD SWAP2 DUP3 DUP2 DUP7 ADD MSTORE DUP2 SWAP6 JUMPDEST DUP4 DUP8 LT PUSH2 0xA59 JUMPI POP POP DUP4 SWAP5 POP DUP6 DUP3 PUSH1 0x1F SWAP5 SWAP6 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST DUP7 DUP2 ADD DUP3 ADD MLOAD DUP10 DUP9 ADD DUP10 ADD MSTORE SWAP6 DUP2 ADD SWAP6 DUP9 SWAP6 POP PUSH2 0xA3B JUMP JUMPDEST DUP3 PUSH1 0x41 PUSH1 0x24 SWAP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST PUSH1 0x32 DUP6 MSTORE DUP5 SWAP3 POP PUSH32 0x11DF491316F14931039EDFD4F8964C9A443B862F02D4C7611D18C2BC4E6FF697 JUMPDEST DUP3 DUP5 LT PUSH2 0xADB JUMPI POP POP POP DUP4 ADD DUP2 ADD CODESIZE DUP1 PUSH2 0x9E4 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP6 ADD DUP7 ADD MSTORE DUP8 SWAP7 POP SWAP3 DUP5 ADD SWAP3 DUP2 ADD PUSH2 0xAC6 JUMP JUMPDEST SWAP2 POP SWAP4 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 SWAP2 POP AND DUP3 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD ADD CODESIZE DUP1 PUSH2 0x9E4 JUMP JUMPDEST PUSH1 0x24 DUP7 PUSH1 0x22 DUP12 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0x9BD JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB82 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0xBB8 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL 0xAF 0xDF 0xD9 0xD5 0xC4 DUP5 0x25 PUSH26 0x18AE9D869D80B459917CC4D9C1F486F5D93394BD7D426464736F PUSH13 0x63430008170033000000000000 ","sourceMap":"290:2491:13:-:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;290:2491:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;290:2491:13;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;290:2491:13;;;;;;;;;-1:-1:-1;290:2491:13;;;;;;;;;;;;;;;;;;3301:14:2;3347:34;;;;;;290:2491:13;3346:108:2;;;;290:2491:13;;;;-1:-1:-1;;;;290:2491:13;;-1:-1:-1;;;290:2491:13;;;;3562:65:2;;290:2491:13;;;;;;;;;1158:12;290:2491;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;290:2491:13;;;;-1:-1:-1;;;;290:2491:13;;;;;;;;;;;1158:12;290:2491;;1180:26;;290:2491;;;;;;;;;;;-1:-1:-1;290:2491:13;;-1:-1:-1;;;;;;290:2491:13;511:10:10;290:2491:13;;;3647:99:2;;290:2491:13;;;;;;;;;1180:26;290:2491;;;;;;;;;;;3647:99:2;-1:-1:-1;;;;290:2491:13;;;;;;;;;;3721:14:2;;;3647:99;;;;;290:2491:13;;;-1:-1:-1;;;290:2491:13;;;;;;;;;;;;;;;;;;-1:-1:-1;;;290:2491:13;;;;;;;;;;;-1:-1:-1;290:2491:13;;;;;;;;;;;;1158:12;-1:-1:-1;290:2491:13;;-1:-1:-1;290:2491:13;;-1:-1:-1;290:2491:13;;;;;;;;;;-1:-1:-1;290:2491:13;;;;;;;;;1158:12;290:2491;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1158:12;-1:-1:-1;290:2491:13;;-1:-1:-1;290:2491:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;290:2491:13;;;;-1:-1:-1;290:2491:13;;;;;;;;;;;;;;;;-1:-1:-1;290:2491:13;;;;;-1:-1:-1;290:2491:13;;;;;;;;;;;;-1:-1:-1;290:2491:13;;;;;-1:-1:-1;290:2491:13;3562:65:2;-1:-1:-1;;;;290:2491:13;-1:-1:-1;;;290:2491:13;;;3562:65:2;;;290:2491:13;;;-1:-1:-1;;;290:2491:13;;;;;;;;;;;;;;;;;;-1:-1:-1;;;290:2491:13;;;;;;;3346:108:2;3426:4;;1713:19:3;:23;3387:66:2;;3346:108;3387:66;290:2491:13;;;;;;;3436:17:2;3346:108;;3347:34;290:2491:13;;;;;;;3365:16:2;3347:34;;290:2491:13;;;;;;;;;;;;;;;;;;;-1:-1:-1;290:2491:13;;;;;;;;;-1:-1:-1;;290:2491:13;;;-1:-1:-1;;;;;290:2491:13;;;;;;;;;;:::o","linkReferences":{}},"deployedBytecode":{"functionDebugData":{"abi_encode_struct_ExchangeRateData":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":2918,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral":{"entryPoint":2993,"id":null,"parameterSlots":1,"returnSlots":0}},"object":"608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde031461097457508163078dfbe7146107e85781630ea9547e146107ad5781634e71e0c8146106a057816373d4a13a146106285781638da5cb5b146105d7578163d1bdee381461057e578163d3af58fb1461013657508063e30c3978146100e45763e6aa216c1461009357600080fd5b346100e057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e0576020906fffffffffffffffffffffffffffffffff603354169051908152f35b5080fd5b50346100e057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e05760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b9190503461057a5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261057a578135916fffffffffffffffffffffffffffffffff8084168094036105765760249081359067ffffffffffffffff93848316809303610572576044359463ffffffff9485871680970361056e576101d673ffffffffffffffffffffffffffffffffffffffff8b54163314610bb1565b8751986101e28a610b66565b8952602089019485528789019687526060890195804216875288519261020784610b66565b603354908a8c8880851691828952606060208a0194868860801c1686528a0199888860c01c168b52019560e01c865251169081811161053357801580159081610489575b5061044d5750508190511690885116119384159461043a575b5083156103ef575b50505061036c5750918593917fffffffff000000000000000000000000000000000000000000000000000000007bffffffff00000000000000000000000000000000000000000000000077ffffffffffffffff0000000000000000000000000000000061036698967fcfeda7da2baa74f493d45b784b32c511b6f8e67df21495044ecae70ce9918e239a5116935160801b16945160c01b16925160e01b16921717176033555191829182919091606060808201936fffffffffffffffffffffffffffffffff815116835267ffffffffffffffff60208201511660208401528160408201519163ffffffff8093166040860152015116910152565b0390a180f35b86906103eb87519283927f91b56cd40000000000000000000000000000000000000000000000000000000084528301919091606060808201936fffffffffffffffffffffffffffffffff815116835267ffffffffffffffff60208201511660208401528160408201519163ffffffff8093166040860152015116910152565b0390fd5b8192935051169161a8c083018093116104105750855116111538808061026c565b8a6011857f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8291945051168189511611159238610264565b606491878f928b9351937f068ffec600000000000000000000000000000000000000000000000000000000855284015282015260016044820152fd5b670de0b6b3a764000091507f000000000000000000000000000000000000000000000000000000000000000082019081831161050457818402918483041417156104d6570482113861024b565b505050858f60118a7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b50505050858f60118a7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8f6064928f8b938a9151947f068ffec60000000000000000000000000000000000000000000000000000000086528501528301526044820152fd5b8980fd5b8780fd5b8480fd5b8280fd5b5050346100e057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e057602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5050346100e057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e05773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b5050346100e057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e0576080906033548151916fffffffffffffffffffffffffffffffff8216835267ffffffffffffffff82851c16602084015263ffffffff8260c01c169083015260e01c6060820152f35b9190503461057a57827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261057a576001549073ffffffffffffffffffffffffffffffffffffffff92838316918233036107505750508084549384167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08680a37fffffffffffffffffffffffff00000000000000000000000000000000000000008093161783551660015580f35b90602060649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602060248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e65726044820152fd5b5050346100e057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e0576020905161a8c08152f35b90503461057a5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261057a5780359073ffffffffffffffffffffffffffffffffffffffff928383168093036105765760243580151581036109705760443590811515820361096c57610863868854163314610bb1565b1561093b57831590811591610933575b50156108d65750508083549283167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08580a37fffffffffffffffffffffffff00000000000000000000000000000000000000008092161782556001541660015580f35b90602060649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601560248201527f4f776e61626c653a207a65726f206164647265737300000000000000000000006044820152fd5b905038610873565b50505090507fffffffffffffffffffffffff0000000000000000000000000000000000000000600154161760015580f35b8680fd5b8580fd5b9092915034610b6257837ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610b6257836032546001958160011c60018316978815610b58575b6020938483108a14610b2c57848798999a8489529182600014610af1575050600114610a9d575b5050601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe095869203011683019583871067ffffffffffffffff881117610a71575085929391838652818452845191828186015281955b838710610a595750508394508582601f949501015201168101030190f35b86810182015189880189015295810195889550610a3b565b8260416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b603285528492507f11df491316f14931039edfd4f8964c9a443b862f02d4c7611d18c2bc4e6ff6975b828410610adb575050508301810138806109e4565b8054888501860152879650928401928101610ac6565b915093507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0091501682860152151560051b84010138806109e4565b60248660228b7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b90607f16906109bd565b8380fd5b6080810190811067ffffffffffffffff821117610b8257604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b15610bb857565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea26469706673582212201bafdfd9d5c484257918ae9d869d80b459917cc4d9c1f486f5d93394bd7d426464736f6c63430008170033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x6FDDE03 EQ PUSH2 0x974 JUMPI POP DUP2 PUSH4 0x78DFBE7 EQ PUSH2 0x7E8 JUMPI DUP2 PUSH4 0xEA9547E EQ PUSH2 0x7AD JUMPI DUP2 PUSH4 0x4E71E0C8 EQ PUSH2 0x6A0 JUMPI DUP2 PUSH4 0x73D4A13A EQ PUSH2 0x628 JUMPI DUP2 PUSH4 0x8DA5CB5B EQ PUSH2 0x5D7 JUMPI DUP2 PUSH4 0xD1BDEE38 EQ PUSH2 0x57E JUMPI DUP2 PUSH4 0xD3AF58FB EQ PUSH2 0x136 JUMPI POP DUP1 PUSH4 0xE30C3978 EQ PUSH2 0xE4 JUMPI PUSH4 0xE6AA216C EQ PUSH2 0x93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE0 JUMPI PUSH1 0x20 SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x33 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE0 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE0 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x57A JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x57A JUMPI DUP2 CALLDATALOAD SWAP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND DUP1 SWAP5 SUB PUSH2 0x576 JUMPI PUSH1 0x24 SWAP1 DUP2 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF SWAP4 DUP5 DUP4 AND DUP1 SWAP4 SUB PUSH2 0x572 JUMPI PUSH1 0x44 CALLDATALOAD SWAP5 PUSH4 0xFFFFFFFF SWAP5 DUP6 DUP8 AND DUP1 SWAP8 SUB PUSH2 0x56E JUMPI PUSH2 0x1D6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP12 SLOAD AND CALLER EQ PUSH2 0xBB1 JUMP JUMPDEST DUP8 MLOAD SWAP9 PUSH2 0x1E2 DUP11 PUSH2 0xB66 JUMP JUMPDEST DUP10 MSTORE PUSH1 0x20 DUP10 ADD SWAP5 DUP6 MSTORE DUP8 DUP10 ADD SWAP7 DUP8 MSTORE PUSH1 0x60 DUP10 ADD SWAP6 DUP1 TIMESTAMP AND DUP8 MSTORE DUP9 MLOAD SWAP3 PUSH2 0x207 DUP5 PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x33 SLOAD SWAP1 DUP11 DUP13 DUP9 DUP1 DUP6 AND SWAP2 DUP3 DUP10 MSTORE PUSH1 0x60 PUSH1 0x20 DUP11 ADD SWAP5 DUP7 DUP9 PUSH1 0x80 SHR AND DUP7 MSTORE DUP11 ADD SWAP10 DUP9 DUP9 PUSH1 0xC0 SHR AND DUP12 MSTORE ADD SWAP6 PUSH1 0xE0 SHR DUP7 MSTORE MLOAD AND SWAP1 DUP2 DUP2 GT PUSH2 0x533 JUMPI DUP1 ISZERO DUP1 ISZERO SWAP1 DUP2 PUSH2 0x489 JUMPI JUMPDEST POP PUSH2 0x44D JUMPI POP POP DUP2 SWAP1 MLOAD AND SWAP1 DUP9 MLOAD AND GT SWAP4 DUP5 ISZERO SWAP5 PUSH2 0x43A JUMPI JUMPDEST POP DUP4 ISZERO PUSH2 0x3EF JUMPI JUMPDEST POP POP POP PUSH2 0x36C JUMPI POP SWAP2 DUP6 SWAP4 SWAP2 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFF000000000000000000000000000000000000000000000000 PUSH24 0xFFFFFFFFFFFFFFFF00000000000000000000000000000000 PUSH2 0x366 SWAP9 SWAP7 PUSH32 0xCFEDA7DA2BAA74F493D45B784B32C511B6F8E67DF21495044ECAE70CE9918E23 SWAP11 MLOAD AND SWAP4 MLOAD PUSH1 0x80 SHL AND SWAP5 MLOAD PUSH1 0xC0 SHL AND SWAP3 MLOAD PUSH1 0xE0 SHL AND SWAP3 OR OR OR PUSH1 0x33 SSTORE MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 SWAP2 PUSH1 0x60 PUSH1 0x80 DUP3 ADD SWAP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 MLOAD AND DUP4 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x20 DUP5 ADD MSTORE DUP2 PUSH1 0x40 DUP3 ADD MLOAD SWAP2 PUSH4 0xFFFFFFFF DUP1 SWAP4 AND PUSH1 0x40 DUP7 ADD MSTORE ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG1 DUP1 RETURN JUMPDEST DUP7 SWAP1 PUSH2 0x3EB DUP8 MLOAD SWAP3 DUP4 SWAP3 PUSH32 0x91B56CD400000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP4 ADD SWAP2 SWAP1 SWAP2 PUSH1 0x60 PUSH1 0x80 DUP3 ADD SWAP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 MLOAD AND DUP4 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x20 DUP5 ADD MSTORE DUP2 PUSH1 0x40 DUP3 ADD MLOAD SWAP2 PUSH4 0xFFFFFFFF DUP1 SWAP4 AND PUSH1 0x40 DUP7 ADD MSTORE ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST DUP2 SWAP3 SWAP4 POP MLOAD AND SWAP2 PUSH2 0xA8C0 DUP4 ADD DUP1 SWAP4 GT PUSH2 0x410 JUMPI POP DUP6 MLOAD AND GT ISZERO CODESIZE DUP1 DUP1 PUSH2 0x26C JUMP JUMPDEST DUP11 PUSH1 0x11 DUP6 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST DUP3 SWAP2 SWAP5 POP MLOAD AND DUP2 DUP10 MLOAD AND GT ISZERO SWAP3 CODESIZE PUSH2 0x264 JUMP JUMPDEST PUSH1 0x64 SWAP2 DUP8 DUP16 SWAP3 DUP12 SWAP4 MLOAD SWAP4 PUSH32 0x68FFEC600000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP2 POP PUSH32 0x0 DUP3 ADD SWAP1 DUP2 DUP4 GT PUSH2 0x504 JUMPI DUP2 DUP5 MUL SWAP2 DUP5 DUP4 DIV EQ OR ISZERO PUSH2 0x4D6 JUMPI DIV DUP3 GT CODESIZE PUSH2 0x24B JUMP JUMPDEST POP POP POP DUP6 DUP16 PUSH1 0x11 DUP11 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST POP POP POP POP DUP6 DUP16 PUSH1 0x11 DUP11 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST DUP16 PUSH1 0x64 SWAP3 DUP16 DUP12 SWAP4 DUP11 SWAP2 MLOAD SWAP5 PUSH32 0x68FFEC600000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP6 ADD MSTORE DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0xE0 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE0 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0xE0 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE0 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP3 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0xE0 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE0 JUMPI PUSH1 0x80 SWAP1 PUSH1 0x33 SLOAD DUP2 MLOAD SWAP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP4 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP3 DUP6 SHR AND PUSH1 0x20 DUP5 ADD MSTORE PUSH4 0xFFFFFFFF DUP3 PUSH1 0xC0 SHR AND SWAP1 DUP4 ADD MSTORE PUSH1 0xE0 SHR PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x57A JUMPI DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x57A JUMPI PUSH1 0x1 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP4 AND SWAP2 DUP3 CALLER SUB PUSH2 0x750 JUMPI POP POP DUP1 DUP5 SLOAD SWAP4 DUP5 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP7 DUP1 LOG3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP1 SWAP4 AND OR DUP4 SSTORE AND PUSH1 0x1 SSTORE DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C657220213D2070656E64696E67206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0xE0 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE0 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH2 0xA8C0 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x57A JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x57A JUMPI DUP1 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP4 AND DUP1 SWAP4 SUB PUSH2 0x576 JUMPI PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x970 JUMPI PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x96C JUMPI PUSH2 0x863 DUP7 DUP9 SLOAD AND CALLER EQ PUSH2 0xBB1 JUMP JUMPDEST ISZERO PUSH2 0x93B JUMPI DUP4 ISZERO SWAP1 DUP2 ISZERO SWAP2 PUSH2 0x933 JUMPI JUMPDEST POP ISZERO PUSH2 0x8D6 JUMPI POP POP DUP1 DUP4 SLOAD SWAP3 DUP4 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP6 DUP1 LOG3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP1 SWAP3 AND OR DUP3 SSTORE PUSH1 0x1 SLOAD AND PUSH1 0x1 SSTORE DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A207A65726F20616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP CODESIZE PUSH2 0x873 JUMP JUMPDEST POP POP POP SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE DUP1 RETURN JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST SWAP1 SWAP3 SWAP2 POP CALLVALUE PUSH2 0xB62 JUMPI DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xB62 JUMPI DUP4 PUSH1 0x32 SLOAD PUSH1 0x1 SWAP6 DUP2 PUSH1 0x1 SHR PUSH1 0x1 DUP4 AND SWAP8 DUP9 ISZERO PUSH2 0xB58 JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP4 LT DUP11 EQ PUSH2 0xB2C JUMPI DUP5 DUP8 SWAP9 SWAP10 SWAP11 DUP5 DUP10 MSTORE SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0xAF1 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0xA9D JUMPI JUMPDEST POP POP PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP6 DUP7 SWAP3 SUB ADD AND DUP4 ADD SWAP6 DUP4 DUP8 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP9 GT OR PUSH2 0xA71 JUMPI POP DUP6 SWAP3 SWAP4 SWAP2 DUP4 DUP7 MSTORE DUP2 DUP5 MSTORE DUP5 MLOAD SWAP2 DUP3 DUP2 DUP7 ADD MSTORE DUP2 SWAP6 JUMPDEST DUP4 DUP8 LT PUSH2 0xA59 JUMPI POP POP DUP4 SWAP5 POP DUP6 DUP3 PUSH1 0x1F SWAP5 SWAP6 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST DUP7 DUP2 ADD DUP3 ADD MLOAD DUP10 DUP9 ADD DUP10 ADD MSTORE SWAP6 DUP2 ADD SWAP6 DUP9 SWAP6 POP PUSH2 0xA3B JUMP JUMPDEST DUP3 PUSH1 0x41 PUSH1 0x24 SWAP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST PUSH1 0x32 DUP6 MSTORE DUP5 SWAP3 POP PUSH32 0x11DF491316F14931039EDFD4F8964C9A443B862F02D4C7611D18C2BC4E6FF697 JUMPDEST DUP3 DUP5 LT PUSH2 0xADB JUMPI POP POP POP DUP4 ADD DUP2 ADD CODESIZE DUP1 PUSH2 0x9E4 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP6 ADD DUP7 ADD MSTORE DUP8 SWAP7 POP SWAP3 DUP5 ADD SWAP3 DUP2 ADD PUSH2 0xAC6 JUMP JUMPDEST SWAP2 POP SWAP4 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 SWAP2 POP AND DUP3 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD ADD CODESIZE DUP1 PUSH2 0x9E4 JUMP JUMPDEST PUSH1 0x24 DUP7 PUSH1 0x22 DUP12 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0x9BD JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB82 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0xBB8 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL 0xAF 0xDF 0xD9 0xD5 0xC4 DUP5 0x25 PUSH26 0x18AE9D869D80B459917CC4D9C1F486F5D93394BD7D426464736F PUSH13 0x63430008170033000000000000 ","sourceMap":"290:2491:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1328:4;290:2491;;;;;;;;;;;;;;;;;;;;;;;;;;;217:27:10;290:2491:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1957:64:10;290:2491:13;;;;1965:10:10;:19;1957:64;:::i;:::-;290:2491:13;;;;;;:::i;:::-;;;;1492:176;;290:2491;;;1492:176;;;290:2491;;;;1492:176;;1641:15;;;290:2491;;;;;;;;;:::i;:::-;1828:4;290:2491;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2093:17;;;;2089:118;;2221:12;;;;:66;;;;290:2491;2217:167;;;290:2491;;;;;;;;;;-1:-1:-1;2530:38:13;;;:100;;;290:2491;2530:176;;;;;290:2491;2513:260;;;;;290:2491;;;;;;;;1972:20;290:2491;;1972:20;290:2491;;;;;;;;;;;;;;;;;;;;;;1828:4;290:2491;;1972:20;;;;290:2491;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1972:20;;;;290:2491;;2513:260;290:2491;;2738:24;290:2491;;2738:24;;;;;;;;290:2491;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2738:24;;;;2530:176;290:2491;;;;;;835:4:11;965:8:13;835:4:11;;;;;;;290:2491:13;;;;-1:-1:-1;2646:60:13;2530:176;;;;;835:4:11;;;;;;;;;2530:100:13;290:2491;;;;;;;;;;-1:-1:-1;2584:46:13;2530:100;;;;2217:167;290:2491;;;;;;;;2310:63;;;;;;290:2491;;;;2341:31;290:2491;;;;2310:63;2221:66;835:4:11;;-1:-1:-1;2265:11:13;835:4:11;;;;;;;;290:2491:13;;;;;;;;;;;;;2237:50;-1:-1:-1;2221:66:13;;;290:2491;835:4:11;;;;;;;;;;;;;;;;;;;;;;;;;;2089:118:13;290:2491;;;;;;;;;2133:63;;;;;;290:2491;;;;;;;;2133:63;290:2491;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1038:36;290:2491;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1004:28;290:2491;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1592:12:10;290:2491:13;;;;;;;1641:10:10;;;:27;290:2491:13;;;;;;;;;;1740:42:10;;;;290:2491:13;;;;;;;;1592:12:10;290:2491:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;965:8;290:2491;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1957:64:10;290:2491:13;;;;1965:10:10;:19;1957:64;:::i;:::-;1087:353;;;1143:22;;;;;:34;;;1087:353;290:2491:13;;;;;;;;;;;;1246:37:10;;;;290:2491:13;;;;;;;1327:25:10;290:2491:13;;1327:25:10;290:2491:13;;;;;;;;;;;;;;;;;;;;;;;;;;;1143:34:10;;;;;;1087:353;290:2491:13;;;;;;1406:23:10;290:2491:13;;;1406:23:10;290:2491:13;;;;;;;;;;;;;;;;;;;;;;;;;;;980:18;290:2491;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;290:2491:13;;;;;;;;;;;;;980:18;290:2491;;;;-1:-1:-1;290:2491:13;;;;;;;-1:-1:-1;;;290:2491:13;;;;;;;;;;;;;;;;;;;-1:-1:-1;290:2491:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{},"immutableReferences":{"3061":[{"start":1174,"length":32},{"start":1460,"length":32}]}},"methodIdentifiers":{"MIN_UPDATE_TIME_GAP()":"0ea9547e","claimOwnership()":"4e71e0c8","data()":"73d4a13a","getExchangeRate()":"e6aa216c","maxRateDiff()":"d1bdee38","name()":"06fdde03","owner()":"8da5cb5b","pendingOwner()":"e30c3978","setExchangeRate(uint128,uint64,uint32)":"d3af58fb","transferOwnership(address,bool,bool)":"078dfbe7"},"gasEstimates":{"creation":{"codeDepositCost":"629600","executionCost":"infinite","totalCost":"infinite"},"external":{"MIN_UPDATE_TIME_GAP()":"215","claimOwnership()":"50217","data()":"2455","getExchangeRate()":"2476","maxRateDiff()":"infinite","name()":"infinite","owner()":"2390","pendingOwner()":"2459","setExchangeRate(uint128,uint64,uint32)":"infinite","transferOwnership(address,bool,bool)":"52484"},"internal":{"_setExchangeRate(struct PendleExchangeRateOracle.ExchangeRateData memory)":"infinite","_validateMetadata(struct PendleExchangeRateOracle.ExchangeRateData memory,struct PendleExchangeRateOracle.ExchangeRateData memory)":"infinite","_validateNewRate(uint256,uint256)":"infinite"}}}}}}}],"expires_at":18446744073709551615}