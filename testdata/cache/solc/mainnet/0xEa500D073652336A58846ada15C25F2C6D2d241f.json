{"data":[{"SourceCode":{"language":"Solidity","sources":{"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\n\nimport \"@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol\";\nimport \"@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol\";\nimport \"./IERC20TokenV06.sol\";\n\nlibrary LibERC20TokenV06 {\n    bytes private constant DECIMALS_CALL_DATA = hex\"313ce567\";\n\n    /// @dev Calls `IERC20TokenV06(token).approve()`.\n    ///      Reverts if the return data is invalid or the call reverts.\n    /// @param token The address of the token contract.\n    /// @param spender The address that receives an allowance.\n    /// @param allowance The allowance to set.\n    function compatApprove(\n        IERC20TokenV06 token,\n        address spender,\n        uint256 allowance\n    ) internal {\n        bytes memory callData = abi.encodeWithSelector(token.approve.selector, spender, allowance);\n        _callWithOptionalBooleanResult(address(token), callData);\n    }\n\n    /// @dev Calls `IERC20TokenV06(token).approve()` and sets the allowance to the\n    ///      maximum if the current approval is not already >= an amount.\n    ///      Reverts if the return data is invalid or the call reverts.\n    /// @param token The address of the token contract.\n    /// @param spender The address that receives an allowance.\n    /// @param amount The minimum allowance needed.\n    function approveIfBelow(\n        IERC20TokenV06 token,\n        address spender,\n        uint256 amount\n    ) internal {\n        if (token.allowance(address(this), spender) < amount) {\n            compatApprove(token, spender, uint256(-1));\n        }\n    }\n\n    /// @dev Calls `IERC20TokenV06(token).transfer()`.\n    ///      Reverts if the return data is invalid or the call reverts.\n    /// @param token The address of the token contract.\n    /// @param to The address that receives the tokens\n    /// @param amount Number of tokens to transfer.\n    function compatTransfer(\n        IERC20TokenV06 token,\n        address to,\n        uint256 amount\n    ) internal {\n        bytes memory callData = abi.encodeWithSelector(token.transfer.selector, to, amount);\n        _callWithOptionalBooleanResult(address(token), callData);\n    }\n\n    /// @dev Calls `IERC20TokenV06(token).transferFrom()`.\n    ///      Reverts if the return data is invalid or the call reverts.\n    /// @param token The address of the token contract.\n    /// @param from The owner of the tokens.\n    /// @param to The address that receives the tokens\n    /// @param amount Number of tokens to transfer.\n    function compatTransferFrom(\n        IERC20TokenV06 token,\n        address from,\n        address to,\n        uint256 amount\n    ) internal {\n        bytes memory callData = abi.encodeWithSelector(token.transferFrom.selector, from, to, amount);\n        _callWithOptionalBooleanResult(address(token), callData);\n    }\n\n    /// @dev Retrieves the number of decimals for a token.\n    ///      Returns `18` if the call reverts.\n    /// @param token The address of the token contract.\n    /// @return tokenDecimals The number of decimals places for the token.\n    function compatDecimals(IERC20TokenV06 token) internal view returns (uint8 tokenDecimals) {\n        tokenDecimals = 18;\n        (bool didSucceed, bytes memory resultData) = address(token).staticcall(DECIMALS_CALL_DATA);\n        if (didSucceed && resultData.length >= 32) {\n            tokenDecimals = uint8(LibBytesV06.readUint256(resultData, 0));\n        }\n    }\n\n    /// @dev Retrieves the allowance for a token, owner, and spender.\n    ///      Returns `0` if the call reverts.\n    /// @param token The address of the token contract.\n    /// @param owner The owner of the tokens.\n    /// @param spender The address the spender.\n    /// @return allowance_ The allowance for a token, owner, and spender.\n    function compatAllowance(\n        IERC20TokenV06 token,\n        address owner,\n        address spender\n    ) internal view returns (uint256 allowance_) {\n        (bool didSucceed, bytes memory resultData) = address(token).staticcall(\n            abi.encodeWithSelector(token.allowance.selector, owner, spender)\n        );\n        if (didSucceed && resultData.length >= 32) {\n            allowance_ = LibBytesV06.readUint256(resultData, 0);\n        }\n    }\n\n    /// @dev Retrieves the balance for a token owner.\n    ///      Returns `0` if the call reverts.\n    /// @param token The address of the token contract.\n    /// @param owner The owner of the tokens.\n    /// @return balance The token balance of an owner.\n    function compatBalanceOf(IERC20TokenV06 token, address owner) internal view returns (uint256 balance) {\n        (bool didSucceed, bytes memory resultData) = address(token).staticcall(\n            abi.encodeWithSelector(token.balanceOf.selector, owner)\n        );\n        if (didSucceed && resultData.length >= 32) {\n            balance = LibBytesV06.readUint256(resultData, 0);\n        }\n    }\n\n    /// @dev Executes a call on address `target` with calldata `callData`\n    ///      and asserts that either nothing was returned or a single boolean\n    ///      was returned equal to `true`.\n    /// @param target The call target.\n    /// @param callData The abi-encoded call data.\n    function _callWithOptionalBooleanResult(address target, bytes memory callData) private {\n        (bool didSucceed, bytes memory resultData) = target.call(callData);\n        // Revert if the call reverted.\n        if (!didSucceed) {\n            LibRichErrorsV06.rrevert(resultData);\n        }\n        // If we get back 0 returndata, this may be a non-standard ERC-20 that\n        // does not return a boolean. Check that it at least contains code.\n        if (resultData.length == 0) {\n            uint256 size;\n            assembly {\n                size := extcodesize(target)\n            }\n            require(size > 0, \"invalid token address, contains no code\");\n            return;\n        }\n        // If we get back at least 32 bytes, we know the target address\n        // contains code, and we assume it is a token that returned a boolean\n        // success value, which must be true.\n        if (resultData.length >= 32) {\n            uint256 result = LibBytesV06.readUint256(resultData, 0);\n            if (result == 1) {\n                return;\n            } else {\n                LibRichErrorsV06.rrevert(resultData);\n            }\n        }\n        // If 0 < returndatasize < 32, the target is a contract, but not a\n        // valid token.\n        LibRichErrorsV06.rrevert(resultData);\n    }\n}\n"},"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibSafeMathRichErrorsV06.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\n\nlibrary LibSafeMathRichErrorsV06 {\n    // bytes4(keccak256(\"Uint256BinOpError(uint8,uint256,uint256)\"))\n    bytes4 internal constant UINT256_BINOP_ERROR_SELECTOR = 0xe946c1bb;\n\n    // bytes4(keccak256(\"Uint256DowncastError(uint8,uint256)\"))\n    bytes4 internal constant UINT256_DOWNCAST_ERROR_SELECTOR = 0xc996af7b;\n\n    enum BinOpErrorCodes {\n        ADDITION_OVERFLOW,\n        MULTIPLICATION_OVERFLOW,\n        SUBTRACTION_UNDERFLOW,\n        DIVISION_BY_ZERO\n    }\n\n    enum DowncastErrorCodes {\n        VALUE_TOO_LARGE_TO_DOWNCAST_TO_UINT32,\n        VALUE_TOO_LARGE_TO_DOWNCAST_TO_UINT64,\n        VALUE_TOO_LARGE_TO_DOWNCAST_TO_UINT96,\n        VALUE_TOO_LARGE_TO_DOWNCAST_TO_UINT128\n    }\n\n    // solhint-disable func-name-mixedcase\n    function Uint256BinOpError(\n        BinOpErrorCodes errorCode,\n        uint256 a,\n        uint256 b\n    ) internal pure returns (bytes memory) {\n        return abi.encodeWithSelector(UINT256_BINOP_ERROR_SELECTOR, errorCode, a, b);\n    }\n\n    function Uint256DowncastError(DowncastErrorCodes errorCode, uint256 a) internal pure returns (bytes memory) {\n        return abi.encodeWithSelector(UINT256_DOWNCAST_ERROR_SELECTOR, errorCode, a);\n    }\n}\n"},"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\n\nlibrary LibRichErrorsV06 {\n    // bytes4(keccak256(\"Error(string)\"))\n    bytes4 internal constant STANDARD_ERROR_SELECTOR = 0x08c379a0;\n\n    // solhint-disable func-name-mixedcase\n    /// @dev ABI encode a standard, string revert error payload.\n    ///      This is the same payload that would be included by a `revert(string)`\n    ///      solidity statement. It has the function signature `Error(string)`.\n    /// @param message The error string.\n    /// @return The ABI encoded error.\n    function StandardError(string memory message) internal pure returns (bytes memory) {\n        return abi.encodeWithSelector(STANDARD_ERROR_SELECTOR, bytes(message));\n    }\n\n    // solhint-enable func-name-mixedcase\n\n    /// @dev Reverts an encoded rich revert reason `errorData`.\n    /// @param errorData ABI encoded error data.\n    function rrevert(bytes memory errorData) internal pure {\n        assembly {\n            revert(add(errorData, 0x20), mload(errorData))\n        }\n    }\n}\n"},"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibBytesRichErrorsV06.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\n\nlibrary LibBytesRichErrorsV06 {\n    enum InvalidByteOperationErrorCodes {\n        FromLessThanOrEqualsToRequired,\n        ToLessThanOrEqualsLengthRequired,\n        LengthGreaterThanZeroRequired,\n        LengthGreaterThanOrEqualsFourRequired,\n        LengthGreaterThanOrEqualsTwentyRequired,\n        LengthGreaterThanOrEqualsThirtyTwoRequired,\n        LengthGreaterThanOrEqualsNestedBytesLengthRequired,\n        DestinationLengthGreaterThanOrEqualSourceLengthRequired\n    }\n\n    // bytes4(keccak256(\"InvalidByteOperationError(uint8,uint256,uint256)\"))\n    bytes4 internal constant INVALID_BYTE_OPERATION_ERROR_SELECTOR = 0x28006595;\n\n    // solhint-disable func-name-mixedcase\n    function InvalidByteOperationError(\n        InvalidByteOperationErrorCodes errorCode,\n        uint256 offset,\n        uint256 required\n    ) internal pure returns (bytes memory) {\n        return abi.encodeWithSelector(INVALID_BYTE_OPERATION_ERROR_SELECTOR, errorCode, offset, required);\n    }\n}\n"},"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/IERC20TokenV06.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\n\ninterface IERC20TokenV06 {\n    // solhint-disable no-simple-event-func-name\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /// @dev send `value` token to `to` from `msg.sender`\n    /// @param to The address of the recipient\n    /// @param value The amount of token to be transferred\n    /// @return True if transfer was successful\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /// @dev send `value` token to `to` from `from` on the condition it is approved by `from`\n    /// @param from The address of the sender\n    /// @param to The address of the recipient\n    /// @param value The amount of token to be transferred\n    /// @return True if transfer was successful\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) external returns (bool);\n\n    /// @dev `msg.sender` approves `spender` to spend `value` tokens\n    /// @param spender The address of the account able to transfer the tokens\n    /// @param value The amount of wei to be approved for transfer\n    /// @return Always true if the call has enough gas to complete execution\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /// @dev Query total supply of token\n    /// @return Total supply of token\n    function totalSupply() external view returns (uint256);\n\n    /// @dev Get the balance of `owner`.\n    /// @param owner The address from which the balance will be retrieved\n    /// @return Balance of owner\n    function balanceOf(address owner) external view returns (uint256);\n\n    /// @dev Get the allowance for `spender` to spend from `owner`.\n    /// @param owner The address of the account owning tokens\n    /// @param spender The address of the account able to transfer the tokens\n    /// @return Amount of remaining tokens allowed to spent\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /// @dev Get the number of decimals this token has.\n    function decimals() external view returns (uint8);\n}\n"},"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibSafeMathV06.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\n\nimport \"./errors/LibRichErrorsV06.sol\";\nimport \"./errors/LibSafeMathRichErrorsV06.sol\";\n\nlibrary LibSafeMathV06 {\n    function safeMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        if (c / a != b) {\n            LibRichErrorsV06.rrevert(\n                LibSafeMathRichErrorsV06.Uint256BinOpError(\n                    LibSafeMathRichErrorsV06.BinOpErrorCodes.MULTIPLICATION_OVERFLOW,\n                    a,\n                    b\n                )\n            );\n        }\n        return c;\n    }\n\n    function safeDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            LibRichErrorsV06.rrevert(\n                LibSafeMathRichErrorsV06.Uint256BinOpError(\n                    LibSafeMathRichErrorsV06.BinOpErrorCodes.DIVISION_BY_ZERO,\n                    a,\n                    b\n                )\n            );\n        }\n        uint256 c = a / b;\n        return c;\n    }\n\n    function safeSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b > a) {\n            LibRichErrorsV06.rrevert(\n                LibSafeMathRichErrorsV06.Uint256BinOpError(\n                    LibSafeMathRichErrorsV06.BinOpErrorCodes.SUBTRACTION_UNDERFLOW,\n                    a,\n                    b\n                )\n            );\n        }\n        return a - b;\n    }\n\n    function safeAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        if (c < a) {\n            LibRichErrorsV06.rrevert(\n                LibSafeMathRichErrorsV06.Uint256BinOpError(\n                    LibSafeMathRichErrorsV06.BinOpErrorCodes.ADDITION_OVERFLOW,\n                    a,\n                    b\n                )\n            );\n        }\n        return c;\n    }\n\n    function max256(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    function min256(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    function safeMul128(uint128 a, uint128 b) internal pure returns (uint128) {\n        if (a == 0) {\n            return 0;\n        }\n        uint128 c = a * b;\n        if (c / a != b) {\n            LibRichErrorsV06.rrevert(\n                LibSafeMathRichErrorsV06.Uint256BinOpError(\n                    LibSafeMathRichErrorsV06.BinOpErrorCodes.MULTIPLICATION_OVERFLOW,\n                    a,\n                    b\n                )\n            );\n        }\n        return c;\n    }\n\n    function safeDiv128(uint128 a, uint128 b) internal pure returns (uint128) {\n        if (b == 0) {\n            LibRichErrorsV06.rrevert(\n                LibSafeMathRichErrorsV06.Uint256BinOpError(\n                    LibSafeMathRichErrorsV06.BinOpErrorCodes.DIVISION_BY_ZERO,\n                    a,\n                    b\n                )\n            );\n        }\n        uint128 c = a / b;\n        return c;\n    }\n\n    function safeSub128(uint128 a, uint128 b) internal pure returns (uint128) {\n        if (b > a) {\n            LibRichErrorsV06.rrevert(\n                LibSafeMathRichErrorsV06.Uint256BinOpError(\n                    LibSafeMathRichErrorsV06.BinOpErrorCodes.SUBTRACTION_UNDERFLOW,\n                    a,\n                    b\n                )\n            );\n        }\n        return a - b;\n    }\n\n    function safeAdd128(uint128 a, uint128 b) internal pure returns (uint128) {\n        uint128 c = a + b;\n        if (c < a) {\n            LibRichErrorsV06.rrevert(\n                LibSafeMathRichErrorsV06.Uint256BinOpError(\n                    LibSafeMathRichErrorsV06.BinOpErrorCodes.ADDITION_OVERFLOW,\n                    a,\n                    b\n                )\n            );\n        }\n        return c;\n    }\n\n    function max128(uint128 a, uint128 b) internal pure returns (uint128) {\n        return a >= b ? a : b;\n    }\n\n    function min128(uint128 a, uint128 b) internal pure returns (uint128) {\n        return a < b ? a : b;\n    }\n\n    function safeDowncastToUint128(uint256 a) internal pure returns (uint128) {\n        if (a > type(uint128).max) {\n            LibRichErrorsV06.rrevert(\n                LibSafeMathRichErrorsV06.Uint256DowncastError(\n                    LibSafeMathRichErrorsV06.DowncastErrorCodes.VALUE_TOO_LARGE_TO_DOWNCAST_TO_UINT128,\n                    a\n                )\n            );\n        }\n        return uint128(a);\n    }\n}\n"},"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\n\nimport \"./errors/LibBytesRichErrorsV06.sol\";\nimport \"./errors/LibRichErrorsV06.sol\";\n\nlibrary LibBytesV06 {\n    using LibBytesV06 for bytes;\n\n    /// @dev Gets the memory address for a byte array.\n    /// @param input Byte array to lookup.\n    /// @return memoryAddress Memory address of byte array. This\n    ///         points to the header of the byte array which contains\n    ///         the length.\n    function rawAddress(bytes memory input) internal pure returns (uint256 memoryAddress) {\n        assembly {\n            memoryAddress := input\n        }\n        return memoryAddress;\n    }\n\n    /// @dev Gets the memory address for the contents of a byte array.\n    /// @param input Byte array to lookup.\n    /// @return memoryAddress Memory address of the contents of the byte array.\n    function contentAddress(bytes memory input) internal pure returns (uint256 memoryAddress) {\n        assembly {\n            memoryAddress := add(input, 32)\n        }\n        return memoryAddress;\n    }\n\n    /// @dev Copies `length` bytes from memory location `source` to `dest`.\n    /// @param dest memory address to copy bytes to.\n    /// @param source memory address to copy bytes from.\n    /// @param length number of bytes to copy.\n    function memCopy(\n        uint256 dest,\n        uint256 source,\n        uint256 length\n    ) internal pure {\n        if (length < 32) {\n            // Handle a partial word by reading destination and masking\n            // off the bits we are interested in.\n            // This correctly handles overlap, zero lengths and source == dest\n            assembly {\n                let mask := sub(exp(256, sub(32, length)), 1)\n                let s := and(mload(source), not(mask))\n                let d := and(mload(dest), mask)\n                mstore(dest, or(s, d))\n            }\n        } else {\n            // Skip the O(length) loop when source == dest.\n            if (source == dest) {\n                return;\n            }\n\n            // For large copies we copy whole words at a time. The final\n            // word is aligned to the end of the range (instead of after the\n            // previous) to handle partial words. So a copy will look like this:\n            //\n            //  ####\n            //      ####\n            //          ####\n            //            ####\n            //\n            // We handle overlap in the source and destination range by\n            // changing the copying direction. This prevents us from\n            // overwriting parts of source that we still need to copy.\n            //\n            // This correctly handles source == dest\n            //\n            if (source > dest) {\n                assembly {\n                    // We subtract 32 from `sEnd` and `dEnd` because it\n                    // is easier to compare with in the loop, and these\n                    // are also the addresses we need for copying the\n                    // last bytes.\n                    length := sub(length, 32)\n                    let sEnd := add(source, length)\n                    let dEnd := add(dest, length)\n\n                    // Remember the last 32 bytes of source\n                    // This needs to be done here and not after the loop\n                    // because we may have overwritten the last bytes in\n                    // source already due to overlap.\n                    let last := mload(sEnd)\n\n                    // Copy whole words front to back\n                    // Note: the first check is always true,\n                    // this could have been a do-while loop.\n                    // solhint-disable-next-line no-empty-blocks\n                    for {\n\n                    } lt(source, sEnd) {\n\n                    } {\n                        mstore(dest, mload(source))\n                        source := add(source, 32)\n                        dest := add(dest, 32)\n                    }\n\n                    // Write the last 32 bytes\n                    mstore(dEnd, last)\n                }\n            } else {\n                assembly {\n                    // We subtract 32 from `sEnd` and `dEnd` because those\n                    // are the starting points when copying a word at the end.\n                    length := sub(length, 32)\n                    let sEnd := add(source, length)\n                    let dEnd := add(dest, length)\n\n                    // Remember the first 32 bytes of source\n                    // This needs to be done here and not after the loop\n                    // because we may have overwritten the first bytes in\n                    // source already due to overlap.\n                    let first := mload(source)\n\n                    // Copy whole words back to front\n                    // We use a signed comparisson here to allow dEnd to become\n                    // negative (happens when source and dest < 32). Valid\n                    // addresses in local memory will never be larger than\n                    // 2**255, so they can be safely re-interpreted as signed.\n                    // Note: the first check is always true,\n                    // this could have been a do-while loop.\n                    // solhint-disable-next-line no-empty-blocks\n                    for {\n\n                    } slt(dest, dEnd) {\n\n                    } {\n                        mstore(dEnd, mload(sEnd))\n                        sEnd := sub(sEnd, 32)\n                        dEnd := sub(dEnd, 32)\n                    }\n\n                    // Write the first 32 bytes\n                    mstore(dest, first)\n                }\n            }\n        }\n    }\n\n    /// @dev Returns a slices from a byte array.\n    /// @param b The byte array to take a slice from.\n    /// @param from The starting index for the slice (inclusive).\n    /// @param to The final index for the slice (exclusive).\n    /// @return result The slice containing bytes at indices [from, to)\n    function slice(\n        bytes memory b,\n        uint256 from,\n        uint256 to\n    ) internal pure returns (bytes memory result) {\n        // Ensure that the from and to positions are valid positions for a slice within\n        // the byte array that is being used.\n        if (from > to) {\n            LibRichErrorsV06.rrevert(\n                LibBytesRichErrorsV06.InvalidByteOperationError(\n                    LibBytesRichErrorsV06.InvalidByteOperationErrorCodes.FromLessThanOrEqualsToRequired,\n                    from,\n                    to\n                )\n            );\n        }\n        if (to > b.length) {\n            LibRichErrorsV06.rrevert(\n                LibBytesRichErrorsV06.InvalidByteOperationError(\n                    LibBytesRichErrorsV06.InvalidByteOperationErrorCodes.ToLessThanOrEqualsLengthRequired,\n                    to,\n                    b.length\n                )\n            );\n        }\n\n        // Create a new bytes structure and copy contents\n        result = new bytes(to - from);\n        memCopy(result.contentAddress(), b.contentAddress() + from, result.length);\n        return result;\n    }\n\n    /// @dev Returns a slice from a byte array without preserving the input.\n    ///      When `from == 0`, the original array will match the slice.\n    ///      In other cases its state will be corrupted.\n    /// @param b The byte array to take a slice from. Will be destroyed in the process.\n    /// @param from The starting index for the slice (inclusive).\n    /// @param to The final index for the slice (exclusive).\n    /// @return result The slice containing bytes at indices [from, to)\n    function sliceDestructive(\n        bytes memory b,\n        uint256 from,\n        uint256 to\n    ) internal pure returns (bytes memory result) {\n        // Ensure that the from and to positions are valid positions for a slice within\n        // the byte array that is being used.\n        if (from > to) {\n            LibRichErrorsV06.rrevert(\n                LibBytesRichErrorsV06.InvalidByteOperationError(\n                    LibBytesRichErrorsV06.InvalidByteOperationErrorCodes.FromLessThanOrEqualsToRequired,\n                    from,\n                    to\n                )\n            );\n        }\n        if (to > b.length) {\n            LibRichErrorsV06.rrevert(\n                LibBytesRichErrorsV06.InvalidByteOperationError(\n                    LibBytesRichErrorsV06.InvalidByteOperationErrorCodes.ToLessThanOrEqualsLengthRequired,\n                    to,\n                    b.length\n                )\n            );\n        }\n\n        // Create a new bytes structure around [from, to) in-place.\n        assembly {\n            result := add(b, from)\n            mstore(result, sub(to, from))\n        }\n        return result;\n    }\n\n    /// @dev Pops the last byte off of a byte array by modifying its length.\n    /// @param b Byte array that will be modified.\n    /// @return result The byte that was popped off.\n    function popLastByte(bytes memory b) internal pure returns (bytes1 result) {\n        if (b.length == 0) {\n            LibRichErrorsV06.rrevert(\n                LibBytesRichErrorsV06.InvalidByteOperationError(\n                    LibBytesRichErrorsV06.InvalidByteOperationErrorCodes.LengthGreaterThanZeroRequired,\n                    b.length,\n                    0\n                )\n            );\n        }\n\n        // Store last byte.\n        result = b[b.length - 1];\n\n        assembly {\n            // Decrement length of byte array.\n            let newLen := sub(mload(b), 1)\n            mstore(b, newLen)\n        }\n        return result;\n    }\n\n    /// @dev Tests equality of two byte arrays.\n    /// @param lhs First byte array to compare.\n    /// @param rhs Second byte array to compare.\n    /// @return equal True if arrays are the same. False otherwise.\n    function equals(bytes memory lhs, bytes memory rhs) internal pure returns (bool equal) {\n        // Keccak gas cost is 30 + numWords * 6. This is a cheap way to compare.\n        // We early exit on unequal lengths, but keccak would also correctly\n        // handle this.\n        return lhs.length == rhs.length && keccak256(lhs) == keccak256(rhs);\n    }\n\n    /// @dev Reads an address from a position in a byte array.\n    /// @param b Byte array containing an address.\n    /// @param index Index in byte array of address.\n    /// @return result address from byte array.\n    function readAddress(bytes memory b, uint256 index) internal pure returns (address result) {\n        if (b.length < index + 20) {\n            LibRichErrorsV06.rrevert(\n                LibBytesRichErrorsV06.InvalidByteOperationError(\n                    LibBytesRichErrorsV06.InvalidByteOperationErrorCodes.LengthGreaterThanOrEqualsTwentyRequired,\n                    b.length,\n                    index + 20 // 20 is length of address\n                )\n            );\n        }\n\n        // Add offset to index:\n        // 1. Arrays are prefixed by 32-byte length parameter (add 32 to index)\n        // 2. Account for size difference between address length and 32-byte storage word (subtract 12 from index)\n        index += 20;\n\n        // Read address from array memory\n        assembly {\n            // 1. Add index to address of bytes array\n            // 2. Load 32-byte word from memory\n            // 3. Apply 20-byte mask to obtain address\n            result := and(mload(add(b, index)), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n        return result;\n    }\n\n    /// @dev Writes an address into a specific position in a byte array.\n    /// @param b Byte array to insert address into.\n    /// @param index Index in byte array of address.\n    /// @param input Address to put into byte array.\n    function writeAddress(\n        bytes memory b,\n        uint256 index,\n        address input\n    ) internal pure {\n        if (b.length < index + 20) {\n            LibRichErrorsV06.rrevert(\n                LibBytesRichErrorsV06.InvalidByteOperationError(\n                    LibBytesRichErrorsV06.InvalidByteOperationErrorCodes.LengthGreaterThanOrEqualsTwentyRequired,\n                    b.length,\n                    index + 20 // 20 is length of address\n                )\n            );\n        }\n\n        // Add offset to index:\n        // 1. Arrays are prefixed by 32-byte length parameter (add 32 to index)\n        // 2. Account for size difference between address length and 32-byte storage word (subtract 12 from index)\n        index += 20;\n\n        // Store address into array memory\n        assembly {\n            // The address occupies 20 bytes and mstore stores 32 bytes.\n            // First fetch the 32-byte word where we'll be storing the address, then\n            // apply a mask so we have only the bytes in the word that the address will not occupy.\n            // Then combine these bytes with the address and store the 32 bytes back to memory with mstore.\n\n            // 1. Add index to address of bytes array\n            // 2. Load 32-byte word from memory\n            // 3. Apply 12-byte mask to obtain extra bytes occupying word of memory where we'll store the address\n            let neighbors := and(\n                mload(add(b, index)),\n                0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n            )\n\n            // Make sure input address is clean.\n            // (Solidity does not guarantee this)\n            input := and(input, 0xffffffffffffffffffffffffffffffffffffffff)\n\n            // Store the neighbors and address into memory\n            mstore(add(b, index), xor(input, neighbors))\n        }\n    }\n\n    /// @dev Reads a bytes32 value from a position in a byte array.\n    /// @param b Byte array containing a bytes32 value.\n    /// @param index Index in byte array of bytes32 value.\n    /// @return result bytes32 value from byte array.\n    function readBytes32(bytes memory b, uint256 index) internal pure returns (bytes32 result) {\n        if (b.length < index + 32) {\n            LibRichErrorsV06.rrevert(\n                LibBytesRichErrorsV06.InvalidByteOperationError(\n                    LibBytesRichErrorsV06.InvalidByteOperationErrorCodes.LengthGreaterThanOrEqualsThirtyTwoRequired,\n                    b.length,\n                    index + 32\n                )\n            );\n        }\n\n        // Arrays are prefixed by a 256 bit length parameter\n        index += 32;\n\n        // Read the bytes32 from array memory\n        assembly {\n            result := mload(add(b, index))\n        }\n        return result;\n    }\n\n    /// @dev Writes a bytes32 into a specific position in a byte array.\n    /// @param b Byte array to insert <input> into.\n    /// @param index Index in byte array of <input>.\n    /// @param input bytes32 to put into byte array.\n    function writeBytes32(\n        bytes memory b,\n        uint256 index,\n        bytes32 input\n    ) internal pure {\n        if (b.length < index + 32) {\n            LibRichErrorsV06.rrevert(\n                LibBytesRichErrorsV06.InvalidByteOperationError(\n                    LibBytesRichErrorsV06.InvalidByteOperationErrorCodes.LengthGreaterThanOrEqualsThirtyTwoRequired,\n                    b.length,\n                    index + 32\n                )\n            );\n        }\n\n        // Arrays are prefixed by a 256 bit length parameter\n        index += 32;\n\n        // Read the bytes32 from array memory\n        assembly {\n            mstore(add(b, index), input)\n        }\n    }\n\n    /// @dev Reads a uint256 value from a position in a byte array.\n    /// @param b Byte array containing a uint256 value.\n    /// @param index Index in byte array of uint256 value.\n    /// @return result uint256 value from byte array.\n    function readUint256(bytes memory b, uint256 index) internal pure returns (uint256 result) {\n        result = uint256(readBytes32(b, index));\n        return result;\n    }\n\n    /// @dev Writes a uint256 into a specific position in a byte array.\n    /// @param b Byte array to insert <input> into.\n    /// @param index Index in byte array of <input>.\n    /// @param input uint256 to put into byte array.\n    function writeUint256(\n        bytes memory b,\n        uint256 index,\n        uint256 input\n    ) internal pure {\n        writeBytes32(b, index, bytes32(input));\n    }\n\n    /// @dev Reads an unpadded bytes4 value from a position in a byte array.\n    /// @param b Byte array containing a bytes4 value.\n    /// @param index Index in byte array of bytes4 value.\n    /// @return result bytes4 value from byte array.\n    function readBytes4(bytes memory b, uint256 index) internal pure returns (bytes4 result) {\n        if (b.length < index + 4) {\n            LibRichErrorsV06.rrevert(\n                LibBytesRichErrorsV06.InvalidByteOperationError(\n                    LibBytesRichErrorsV06.InvalidByteOperationErrorCodes.LengthGreaterThanOrEqualsFourRequired,\n                    b.length,\n                    index + 4\n                )\n            );\n        }\n\n        // Arrays are prefixed by a 32 byte length field\n        index += 32;\n\n        // Read the bytes4 from array memory\n        assembly {\n            result := mload(add(b, index))\n            // Solidity does not require us to clean the trailing bytes.\n            // We do it anyway\n            result := and(result, 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000)\n        }\n        return result;\n    }\n\n    /// @dev Writes a new length to a byte array.\n    ///      Decreasing length will lead to removing the corresponding lower order bytes from the byte array.\n    ///      Increasing length may lead to appending adjacent in-memory bytes to the end of the byte array.\n    /// @param b Bytes array to write new length to.\n    /// @param length New length of byte array.\n    function writeLength(bytes memory b, uint256 length) internal pure {\n        assembly {\n            mstore(b, length)\n        }\n    }\n}\n"},"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/errors/LibTransformERC20RichErrors.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\n\nlibrary LibTransformERC20RichErrors {\n    // solhint-disable func-name-mixedcase,separate-by-one-line-in-contract\n\n    function InsufficientEthAttachedError(uint256 ethAttached, uint256 ethNeeded) internal pure returns (bytes memory) {\n        return\n            abi.encodeWithSelector(\n                bytes4(keccak256(\"InsufficientEthAttachedError(uint256,uint256)\")),\n                ethAttached,\n                ethNeeded\n            );\n    }\n\n    function IncompleteTransformERC20Error(\n        address outputToken,\n        uint256 outputTokenAmount,\n        uint256 minOutputTokenAmount\n    ) internal pure returns (bytes memory) {\n        return\n            abi.encodeWithSelector(\n                bytes4(keccak256(\"IncompleteTransformERC20Error(address,uint256,uint256)\")),\n                outputToken,\n                outputTokenAmount,\n                minOutputTokenAmount\n            );\n    }\n\n    function NegativeTransformERC20OutputError(address outputToken, uint256 outputTokenLostAmount)\n        internal\n        pure\n        returns (bytes memory)\n    {\n        return\n            abi.encodeWithSelector(\n                bytes4(keccak256(\"NegativeTransformERC20OutputError(address,uint256)\")),\n                outputToken,\n                outputTokenLostAmount\n            );\n    }\n\n    function TransformerFailedError(\n        address transformer,\n        bytes memory transformerData,\n        bytes memory resultData\n    ) internal pure returns (bytes memory) {\n        return\n            abi.encodeWithSelector(\n                bytes4(keccak256(\"TransformerFailedError(address,bytes,bytes)\")),\n                transformer,\n                transformerData,\n                resultData\n            );\n    }\n\n    // Common Transformer errors ///////////////////////////////////////////////\n\n    function OnlyCallableByDeployerError(address caller, address deployer) internal pure returns (bytes memory) {\n        return\n            abi.encodeWithSelector(bytes4(keccak256(\"OnlyCallableByDeployerError(address,address)\")), caller, deployer);\n    }\n\n    function InvalidExecutionContextError(address actualContext, address expectedContext)\n        internal\n        pure\n        returns (bytes memory)\n    {\n        return\n            abi.encodeWithSelector(\n                bytes4(keccak256(\"InvalidExecutionContextError(address,address)\")),\n                actualContext,\n                expectedContext\n            );\n    }\n\n    enum InvalidTransformDataErrorCode {\n        INVALID_TOKENS,\n        INVALID_ARRAY_LENGTH\n    }\n\n    function InvalidTransformDataError(InvalidTransformDataErrorCode errorCode, bytes memory transformData)\n        internal\n        pure\n        returns (bytes memory)\n    {\n        return\n            abi.encodeWithSelector(\n                bytes4(keccak256(\"InvalidTransformDataError(uint8,bytes)\")),\n                errorCode,\n                transformData\n            );\n    }\n\n    // FillQuoteTransformer errors /////////////////////////////////////////////\n\n    function IncompleteFillSellQuoteError(\n        address sellToken,\n        uint256 soldAmount,\n        uint256 sellAmount\n    ) internal pure returns (bytes memory) {\n        return\n            abi.encodeWithSelector(\n                bytes4(keccak256(\"IncompleteFillSellQuoteError(address,uint256,uint256)\")),\n                sellToken,\n                soldAmount,\n                sellAmount\n            );\n    }\n\n    function IncompleteFillBuyQuoteError(\n        address buyToken,\n        uint256 boughtAmount,\n        uint256 buyAmount\n    ) internal pure returns (bytes memory) {\n        return\n            abi.encodeWithSelector(\n                bytes4(keccak256(\"IncompleteFillBuyQuoteError(address,uint256,uint256)\")),\n                buyToken,\n                boughtAmount,\n                buyAmount\n            );\n    }\n\n    function InsufficientTakerTokenError(uint256 tokenBalance, uint256 tokensNeeded)\n        internal\n        pure\n        returns (bytes memory)\n    {\n        return\n            abi.encodeWithSelector(\n                bytes4(keccak256(\"InsufficientTakerTokenError(uint256,uint256)\")),\n                tokenBalance,\n                tokensNeeded\n            );\n    }\n\n    function InsufficientProtocolFeeError(uint256 ethBalance, uint256 ethNeeded) internal pure returns (bytes memory) {\n        return\n            abi.encodeWithSelector(\n                bytes4(keccak256(\"InsufficientProtocolFeeError(uint256,uint256)\")),\n                ethBalance,\n                ethNeeded\n            );\n    }\n\n    function InvalidERC20AssetDataError(bytes memory assetData) internal pure returns (bytes memory) {\n        return abi.encodeWithSelector(bytes4(keccak256(\"InvalidERC20AssetDataError(bytes)\")), assetData);\n    }\n\n    function InvalidTakerFeeTokenError(address token) internal pure returns (bytes memory) {\n        return abi.encodeWithSelector(bytes4(keccak256(\"InvalidTakerFeeTokenError(address)\")), token);\n    }\n}\n"},"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\npragma experimental ABIEncoderV2;\n\nimport \"@0x/contracts-erc20/contracts/src/v06/IERC20TokenV06.sol\";\nimport \"@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\";\n\nlibrary LibERC20Transformer {\n    using LibERC20TokenV06 for IERC20TokenV06;\n\n    /// @dev ETH pseudo-token address.\n    address internal constant ETH_TOKEN_ADDRESS = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\n    /// @dev ETH pseudo-token.\n    IERC20TokenV06 internal constant ETH_TOKEN = IERC20TokenV06(ETH_TOKEN_ADDRESS);\n    /// @dev Return value indicating success in `IERC20Transformer.transform()`.\n    ///      This is just `keccak256('TRANSFORMER_SUCCESS')`.\n    bytes4 internal constant TRANSFORMER_SUCCESS = 0x13c9929e;\n\n    /// @dev Transfer ERC20 tokens and ETH. Since it relies on `transfer` it may run out of gas when\n    /// the `recipient` is a smart contract wallet. See `unsafeTransformerTransfer` for smart contract\n    /// compatible transfer.\n    /// @param token An ERC20 or the ETH pseudo-token address (`ETH_TOKEN_ADDRESS`).\n    /// @param to The recipient.\n    /// @param amount The transfer amount.\n    function transformerTransfer(\n        IERC20TokenV06 token,\n        address payable to,\n        uint256 amount\n    ) internal {\n        if (isTokenETH(token)) {\n            to.transfer(amount);\n        } else {\n            token.compatTransfer(to, amount);\n        }\n    }\n\n    /// @dev Transfer ERC20 tokens and ETH. For ETH transfer. It's not safe from re-entrancy attacks and the\n    /// caller is responsible for gurading against a potential re-entrancy attack.\n    /// @param token An ERC20 or the ETH pseudo-token address (`ETH_TOKEN_ADDRESS`).\n    /// @param to The recipient.\n    /// @param amount The transfer amount.\n    function unsafeTransformerTransfer(\n        IERC20TokenV06 token,\n        address payable to,\n        uint256 amount\n    ) internal {\n        if (isTokenETH(token)) {\n            (bool sent, ) = to.call{value: amount}(\"\");\n            require(sent, \"LibERC20Transformer/FAILED_TO_SEND_ETHER\");\n        } else {\n            token.compatTransfer(to, amount);\n        }\n    }\n\n    /// @dev Check if a token is the ETH pseudo-token.\n    /// @param token The token to check.\n    /// @return isETH `true` if the token is the ETH pseudo-token.\n    function isTokenETH(IERC20TokenV06 token) internal pure returns (bool isETH) {\n        return address(token) == ETH_TOKEN_ADDRESS;\n    }\n\n    /// @dev Check the balance of an ERC20 token or ETH.\n    /// @param token An ERC20 or the ETH pseudo-token address (`ETH_TOKEN_ADDRESS`).\n    /// @param owner Holder of the tokens.\n    /// @return tokenBalance The balance of `owner`.\n    function getTokenBalanceOf(IERC20TokenV06 token, address owner) internal view returns (uint256 tokenBalance) {\n        if (isTokenETH(token)) {\n            return owner.balance;\n        }\n        return token.balanceOf(owner);\n    }\n\n    /// @dev RLP-encode a 32-bit or less account nonce.\n    /// @param nonce A positive integer in the range 0 <= nonce < 2^32.\n    /// @return rlpNonce The RLP encoding.\n    function rlpEncodeNonce(uint32 nonce) internal pure returns (bytes memory rlpNonce) {\n        // See https://github.com/ethereum/wiki/wiki/RLP for RLP encoding rules.\n        if (nonce == 0) {\n            rlpNonce = new bytes(1);\n            rlpNonce[0] = 0x80;\n        } else if (nonce < 0x80) {\n            rlpNonce = new bytes(1);\n            rlpNonce[0] = bytes1(uint8(nonce));\n        } else if (nonce <= 0xFF) {\n            rlpNonce = new bytes(2);\n            rlpNonce[0] = 0x81;\n            rlpNonce[1] = bytes1(uint8(nonce));\n        } else if (nonce <= 0xFFFF) {\n            rlpNonce = new bytes(3);\n            rlpNonce[0] = 0x82;\n            rlpNonce[1] = bytes1(uint8((nonce & 0xFF00) >> 8));\n            rlpNonce[2] = bytes1(uint8(nonce));\n        } else if (nonce <= 0xFFFFFF) {\n            rlpNonce = new bytes(4);\n            rlpNonce[0] = 0x83;\n            rlpNonce[1] = bytes1(uint8((nonce & 0xFF0000) >> 16));\n            rlpNonce[2] = bytes1(uint8((nonce & 0xFF00) >> 8));\n            rlpNonce[3] = bytes1(uint8(nonce));\n        } else {\n            rlpNonce = new bytes(5);\n            rlpNonce[0] = 0x84;\n            rlpNonce[1] = bytes1(uint8((nonce & 0xFF000000) >> 24));\n            rlpNonce[2] = bytes1(uint8((nonce & 0xFF0000) >> 16));\n            rlpNonce[3] = bytes1(uint8((nonce & 0xFF00) >> 8));\n            rlpNonce[4] = bytes1(uint8(nonce));\n        }\n    }\n\n    /// @dev Compute the expected deployment address by `deployer` at\n    ///      the nonce given by `deploymentNonce`.\n    /// @param deployer The address of the deployer.\n    /// @param deploymentNonce The nonce that the deployer had when deploying\n    ///        a contract.\n    /// @return deploymentAddress The deployment address.\n    function getDeployedAddress(address deployer, uint32 deploymentNonce)\n        internal\n        pure\n        returns (address payable deploymentAddress)\n    {\n        // The address of if a deployed contract is the lower 20 bytes of the\n        // hash of the RLP-encoded deployer's account address + account nonce.\n        // See: https://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\n        bytes memory rlpNonce = rlpEncodeNonce(deploymentNonce);\n        return\n            address(\n                uint160(\n                    uint256(\n                        keccak256(\n                            abi.encodePacked(\n                                bytes1(uint8(0xC0 + 21 + rlpNonce.length)),\n                                bytes1(uint8(0x80 + 20)),\n                                deployer,\n                                rlpNonce\n                            )\n                        )\n                    )\n                )\n            );\n    }\n}\n"},"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/IERC20Transformer.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\npragma experimental ABIEncoderV2;\n\nimport \"@0x/contracts-erc20/contracts/src/v06/IERC20TokenV06.sol\";\n\n/// @dev A transformation callback used in `TransformERC20.transformERC20()`.\ninterface IERC20Transformer {\n    /// @dev Context information to pass into `transform()` by `TransformERC20.transformERC20()`.\n    struct TransformContext {\n        // The caller of `TransformERC20.transformERC20()`.\n        address payable sender;\n        // The recipient address, which may be distinct from `sender` e.g. in\n        // meta-transactions.\n        address payable recipient;\n        // Arbitrary data to pass to the transformer.\n        bytes data;\n    }\n\n    /// @dev Called from `TransformERC20.transformERC20()`. This will be\n    ///      delegatecalled in the context of the FlashWallet instance being used.\n    /// @param context Context information.\n    /// @return success The success bytes (`LibERC20Transformer.TRANSFORMER_SUCCESS`).\n    function transform(TransformContext calldata context) external returns (bytes4 success);\n}\n"},"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\npragma experimental ABIEncoderV2;\n\nimport \"@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol\";\nimport \"@0x/contracts-utils/contracts/src/v06/LibSafeMathV06.sol\";\nimport \"@0x/contracts-erc20/contracts/src/v06/IERC20TokenV06.sol\";\nimport \"@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\";\nimport \"../errors/LibTransformERC20RichErrors.sol\";\nimport \"./Transformer.sol\";\nimport \"./LibERC20Transformer.sol\";\n\n/// @dev A transformer that transfers tokens to the taker.\ncontract PayTakerTransformer is Transformer {\n    // solhint-disable no-empty-blocks\n    using LibRichErrorsV06 for bytes;\n    using LibSafeMathV06 for uint256;\n    using LibERC20Transformer for IERC20TokenV06;\n\n    /// @dev Transform data to ABI-encode and pass into `transform()`.\n    struct TransformData {\n        // The tokens to transfer to the taker.\n        IERC20TokenV06[] tokens;\n        // Amount of each token in `tokens` to transfer to the taker.\n        // `uint(-1)` will transfer the entire balance.\n        uint256[] amounts;\n    }\n\n    /// @dev Maximum uint256 value.\n    uint256 private constant MAX_UINT256 = uint256(-1);\n\n    /// @dev Create this contract.\n    constructor() public Transformer() {}\n\n    /// @dev Forwards tokens to the taker.\n    /// @param context Context information.\n    /// @return success The success bytes (`LibERC20Transformer.TRANSFORMER_SUCCESS`).\n    function transform(TransformContext calldata context) external override returns (bytes4 success) {\n        TransformData memory data = abi.decode(context.data, (TransformData));\n\n        // Transfer tokens directly to the taker.\n        for (uint256 i = 0; i < data.tokens.length; ++i) {\n            // The `amounts` array can be shorter than the `tokens` array.\n            // Missing elements are treated as `uint256(-1)`.\n            uint256 amount = data.amounts.length > i ? data.amounts[i] : uint256(-1);\n            if (amount == MAX_UINT256) {\n                amount = data.tokens[i].getTokenBalanceOf(address(this));\n            }\n            if (amount != 0) {\n                data.tokens[i].unsafeTransformerTransfer(context.recipient, amount);\n            }\n        }\n        return LibERC20Transformer.TRANSFORMER_SUCCESS;\n    }\n}\n"},"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\npragma experimental ABIEncoderV2;\n\nimport \"@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol\";\nimport \"../errors/LibTransformERC20RichErrors.sol\";\nimport \"./IERC20Transformer.sol\";\n\n/// @dev Abstract base class for transformers.\nabstract contract Transformer is IERC20Transformer {\n    using LibRichErrorsV06 for bytes;\n\n    /// @dev The address of the deployer.\n    address public immutable deployer;\n    /// @dev The original address of this contract.\n    address internal immutable _implementation;\n\n    /// @dev Create this contract.\n    constructor() public {\n        deployer = msg.sender;\n        _implementation = address(this);\n    }\n\n    /// @dev Destruct this contract. Only callable by the deployer and will not\n    ///      succeed in the context of a delegatecall (from another contract).\n    /// @param ethRecipient The recipient of ETH held in this contract.\n    function die(address payable ethRecipient) external virtual {\n        // Only the deployer can call this.\n        if (msg.sender != deployer) {\n            LibTransformERC20RichErrors.OnlyCallableByDeployerError(msg.sender, deployer).rrevert();\n        }\n        // Must be executing our own context.\n        if (address(this) != _implementation) {\n            LibTransformERC20RichErrors.InvalidExecutionContextError(address(this), _implementation).rrevert();\n        }\n        selfdestruct(ethRecipient);\n    }\n}\n"}},"settings":{"remappings":["@0x/contracts-erc20=/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20","@0x/contracts-utils=/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils"],"optimizer":{"enabled":true,"runs":1000000,"details":{"yul":true,"deduplicate":true,"cse":true,"constantOptimizer":true}},"outputSelection":{"*":{"*":["evm.bytecode","evm.deployedBytecode","devdoc","userdoc","metadata","abi"]}},"evmVersion":"istanbul"}},"ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"ethRecipient\",\"type\":\"address\"}],\"name\":\"die\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IERC20Transformer.TransformContext\",\"name\":\"context\",\"type\":\"tuple\"}],\"name\":\"transform\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"success\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"PayTakerTransformer","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":1,"Runs":1000000,"ConstructorArguments":"0x","EVMVersion":"Default","Library":"","LicenseType":"Apache-2.0","Proxy":0,"SwarmSource":""},{"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/errors/LibTransformERC20RichErrors.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\n\nlibrary LibTransformERC20RichErrors {\n    // solhint-disable func-name-mixedcase,separate-by-one-line-in-contract\n\n    function InsufficientEthAttachedError(uint256 ethAttached, uint256 ethNeeded) internal pure returns (bytes memory) {\n        return\n            abi.encodeWithSelector(\n                bytes4(keccak256(\"InsufficientEthAttachedError(uint256,uint256)\")),\n                ethAttached,\n                ethNeeded\n            );\n    }\n\n    function IncompleteTransformERC20Error(\n        address outputToken,\n        uint256 outputTokenAmount,\n        uint256 minOutputTokenAmount\n    ) internal pure returns (bytes memory) {\n        return\n            abi.encodeWithSelector(\n                bytes4(keccak256(\"IncompleteTransformERC20Error(address,uint256,uint256)\")),\n                outputToken,\n                outputTokenAmount,\n                minOutputTokenAmount\n            );\n    }\n\n    function NegativeTransformERC20OutputError(address outputToken, uint256 outputTokenLostAmount)\n        internal\n        pure\n        returns (bytes memory)\n    {\n        return\n            abi.encodeWithSelector(\n                bytes4(keccak256(\"NegativeTransformERC20OutputError(address,uint256)\")),\n                outputToken,\n                outputTokenLostAmount\n            );\n    }\n\n    function TransformerFailedError(\n        address transformer,\n        bytes memory transformerData,\n        bytes memory resultData\n    ) internal pure returns (bytes memory) {\n        return\n            abi.encodeWithSelector(\n                bytes4(keccak256(\"TransformerFailedError(address,bytes,bytes)\")),\n                transformer,\n                transformerData,\n                resultData\n            );\n    }\n\n    // Common Transformer errors ///////////////////////////////////////////////\n\n    function OnlyCallableByDeployerError(address caller, address deployer) internal pure returns (bytes memory) {\n        return\n            abi.encodeWithSelector(bytes4(keccak256(\"OnlyCallableByDeployerError(address,address)\")), caller, deployer);\n    }\n\n    function InvalidExecutionContextError(address actualContext, address expectedContext)\n        internal\n        pure\n        returns (bytes memory)\n    {\n        return\n            abi.encodeWithSelector(\n                bytes4(keccak256(\"InvalidExecutionContextError(address,address)\")),\n                actualContext,\n                expectedContext\n            );\n    }\n\n    enum InvalidTransformDataErrorCode {\n        INVALID_TOKENS,\n        INVALID_ARRAY_LENGTH\n    }\n\n    function InvalidTransformDataError(InvalidTransformDataErrorCode errorCode, bytes memory transformData)\n        internal\n        pure\n        returns (bytes memory)\n    {\n        return\n            abi.encodeWithSelector(\n                bytes4(keccak256(\"InvalidTransformDataError(uint8,bytes)\")),\n                errorCode,\n                transformData\n            );\n    }\n\n    // FillQuoteTransformer errors /////////////////////////////////////////////\n\n    function IncompleteFillSellQuoteError(\n        address sellToken,\n        uint256 soldAmount,\n        uint256 sellAmount\n    ) internal pure returns (bytes memory) {\n        return\n            abi.encodeWithSelector(\n                bytes4(keccak256(\"IncompleteFillSellQuoteError(address,uint256,uint256)\")),\n                sellToken,\n                soldAmount,\n                sellAmount\n            );\n    }\n\n    function IncompleteFillBuyQuoteError(\n        address buyToken,\n        uint256 boughtAmount,\n        uint256 buyAmount\n    ) internal pure returns (bytes memory) {\n        return\n            abi.encodeWithSelector(\n                bytes4(keccak256(\"IncompleteFillBuyQuoteError(address,uint256,uint256)\")),\n                buyToken,\n                boughtAmount,\n                buyAmount\n            );\n    }\n\n    function InsufficientTakerTokenError(uint256 tokenBalance, uint256 tokensNeeded)\n        internal\n        pure\n        returns (bytes memory)\n    {\n        return\n            abi.encodeWithSelector(\n                bytes4(keccak256(\"InsufficientTakerTokenError(uint256,uint256)\")),\n                tokenBalance,\n                tokensNeeded\n            );\n    }\n\n    function InsufficientProtocolFeeError(uint256 ethBalance, uint256 ethNeeded) internal pure returns (bytes memory) {\n        return\n            abi.encodeWithSelector(\n                bytes4(keccak256(\"InsufficientProtocolFeeError(uint256,uint256)\")),\n                ethBalance,\n                ethNeeded\n            );\n    }\n\n    function InvalidERC20AssetDataError(bytes memory assetData) internal pure returns (bytes memory) {\n        return abi.encodeWithSelector(bytes4(keccak256(\"InvalidERC20AssetDataError(bytes)\")), assetData);\n    }\n\n    function InvalidTakerFeeTokenError(address token) internal pure returns (bytes memory) {\n        return abi.encodeWithSelector(bytes4(keccak256(\"InvalidTakerFeeTokenError(address)\")), token);\n    }\n}\n"},"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/IERC20Transformer.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\npragma experimental ABIEncoderV2;\n\nimport \"@0x/contracts-erc20/contracts/src/v06/IERC20TokenV06.sol\";\n\n/// @dev A transformation callback used in `TransformERC20.transformERC20()`.\ninterface IERC20Transformer {\n    /// @dev Context information to pass into `transform()` by `TransformERC20.transformERC20()`.\n    struct TransformContext {\n        // The caller of `TransformERC20.transformERC20()`.\n        address payable sender;\n        // The recipient address, which may be distinct from `sender` e.g. in\n        // meta-transactions.\n        address payable recipient;\n        // Arbitrary data to pass to the transformer.\n        bytes data;\n    }\n\n    /// @dev Called from `TransformERC20.transformERC20()`. This will be\n    ///      delegatecalled in the context of the FlashWallet instance being used.\n    /// @param context Context information.\n    /// @return success The success bytes (`LibERC20Transformer.TRANSFORMER_SUCCESS`).\n    function transform(TransformContext calldata context) external returns (bytes4 success);\n}\n"},"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\npragma experimental ABIEncoderV2;\n\nimport \"@0x/contracts-erc20/contracts/src/v06/IERC20TokenV06.sol\";\nimport \"@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\";\n\nlibrary LibERC20Transformer {\n    using LibERC20TokenV06 for IERC20TokenV06;\n\n    /// @dev ETH pseudo-token address.\n    address internal constant ETH_TOKEN_ADDRESS = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\n    /// @dev ETH pseudo-token.\n    IERC20TokenV06 internal constant ETH_TOKEN = IERC20TokenV06(ETH_TOKEN_ADDRESS);\n    /// @dev Return value indicating success in `IERC20Transformer.transform()`.\n    ///      This is just `keccak256('TRANSFORMER_SUCCESS')`.\n    bytes4 internal constant TRANSFORMER_SUCCESS = 0x13c9929e;\n\n    /// @dev Transfer ERC20 tokens and ETH. Since it relies on `transfer` it may run out of gas when\n    /// the `recipient` is a smart contract wallet. See `unsafeTransformerTransfer` for smart contract\n    /// compatible transfer.\n    /// @param token An ERC20 or the ETH pseudo-token address (`ETH_TOKEN_ADDRESS`).\n    /// @param to The recipient.\n    /// @param amount The transfer amount.\n    function transformerTransfer(\n        IERC20TokenV06 token,\n        address payable to,\n        uint256 amount\n    ) internal {\n        if (isTokenETH(token)) {\n            to.transfer(amount);\n        } else {\n            token.compatTransfer(to, amount);\n        }\n    }\n\n    /// @dev Transfer ERC20 tokens and ETH. For ETH transfer. It's not safe from re-entrancy attacks and the\n    /// caller is responsible for gurading against a potential re-entrancy attack.\n    /// @param token An ERC20 or the ETH pseudo-token address (`ETH_TOKEN_ADDRESS`).\n    /// @param to The recipient.\n    /// @param amount The transfer amount.\n    function unsafeTransformerTransfer(\n        IERC20TokenV06 token,\n        address payable to,\n        uint256 amount\n    ) internal {\n        if (isTokenETH(token)) {\n            (bool sent, ) = to.call{value: amount}(\"\");\n            require(sent, \"LibERC20Transformer/FAILED_TO_SEND_ETHER\");\n        } else {\n            token.compatTransfer(to, amount);\n        }\n    }\n\n    /// @dev Check if a token is the ETH pseudo-token.\n    /// @param token The token to check.\n    /// @return isETH `true` if the token is the ETH pseudo-token.\n    function isTokenETH(IERC20TokenV06 token) internal pure returns (bool isETH) {\n        return address(token) == ETH_TOKEN_ADDRESS;\n    }\n\n    /// @dev Check the balance of an ERC20 token or ETH.\n    /// @param token An ERC20 or the ETH pseudo-token address (`ETH_TOKEN_ADDRESS`).\n    /// @param owner Holder of the tokens.\n    /// @return tokenBalance The balance of `owner`.\n    function getTokenBalanceOf(IERC20TokenV06 token, address owner) internal view returns (uint256 tokenBalance) {\n        if (isTokenETH(token)) {\n            return owner.balance;\n        }\n        return token.balanceOf(owner);\n    }\n\n    /// @dev RLP-encode a 32-bit or less account nonce.\n    /// @param nonce A positive integer in the range 0 <= nonce < 2^32.\n    /// @return rlpNonce The RLP encoding.\n    function rlpEncodeNonce(uint32 nonce) internal pure returns (bytes memory rlpNonce) {\n        // See https://github.com/ethereum/wiki/wiki/RLP for RLP encoding rules.\n        if (nonce == 0) {\n            rlpNonce = new bytes(1);\n            rlpNonce[0] = 0x80;\n        } else if (nonce < 0x80) {\n            rlpNonce = new bytes(1);\n            rlpNonce[0] = bytes1(uint8(nonce));\n        } else if (nonce <= 0xFF) {\n            rlpNonce = new bytes(2);\n            rlpNonce[0] = 0x81;\n            rlpNonce[1] = bytes1(uint8(nonce));\n        } else if (nonce <= 0xFFFF) {\n            rlpNonce = new bytes(3);\n            rlpNonce[0] = 0x82;\n            rlpNonce[1] = bytes1(uint8((nonce & 0xFF00) >> 8));\n            rlpNonce[2] = bytes1(uint8(nonce));\n        } else if (nonce <= 0xFFFFFF) {\n            rlpNonce = new bytes(4);\n            rlpNonce[0] = 0x83;\n            rlpNonce[1] = bytes1(uint8((nonce & 0xFF0000) >> 16));\n            rlpNonce[2] = bytes1(uint8((nonce & 0xFF00) >> 8));\n            rlpNonce[3] = bytes1(uint8(nonce));\n        } else {\n            rlpNonce = new bytes(5);\n            rlpNonce[0] = 0x84;\n            rlpNonce[1] = bytes1(uint8((nonce & 0xFF000000) >> 24));\n            rlpNonce[2] = bytes1(uint8((nonce & 0xFF0000) >> 16));\n            rlpNonce[3] = bytes1(uint8((nonce & 0xFF00) >> 8));\n            rlpNonce[4] = bytes1(uint8(nonce));\n        }\n    }\n\n    /// @dev Compute the expected deployment address by `deployer` at\n    ///      the nonce given by `deploymentNonce`.\n    /// @param deployer The address of the deployer.\n    /// @param deploymentNonce The nonce that the deployer had when deploying\n    ///        a contract.\n    /// @return deploymentAddress The deployment address.\n    function getDeployedAddress(address deployer, uint32 deploymentNonce)\n        internal\n        pure\n        returns (address payable deploymentAddress)\n    {\n        // The address of if a deployed contract is the lower 20 bytes of the\n        // hash of the RLP-encoded deployer's account address + account nonce.\n        // See: https://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\n        bytes memory rlpNonce = rlpEncodeNonce(deploymentNonce);\n        return\n            address(\n                uint160(\n                    uint256(\n                        keccak256(\n                            abi.encodePacked(\n                                bytes1(uint8(0xC0 + 21 + rlpNonce.length)),\n                                bytes1(uint8(0x80 + 20)),\n                                deployer,\n                                rlpNonce\n                            )\n                        )\n                    )\n                )\n            );\n    }\n}\n"},"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\npragma experimental ABIEncoderV2;\n\nimport \"@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol\";\nimport \"@0x/contracts-utils/contracts/src/v06/LibSafeMathV06.sol\";\nimport \"@0x/contracts-erc20/contracts/src/v06/IERC20TokenV06.sol\";\nimport \"@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\";\nimport \"../errors/LibTransformERC20RichErrors.sol\";\nimport \"./Transformer.sol\";\nimport \"./LibERC20Transformer.sol\";\n\n/// @dev A transformer that transfers tokens to the taker.\ncontract PayTakerTransformer is Transformer {\n    // solhint-disable no-empty-blocks\n    using LibRichErrorsV06 for bytes;\n    using LibSafeMathV06 for uint256;\n    using LibERC20Transformer for IERC20TokenV06;\n\n    /// @dev Transform data to ABI-encode and pass into `transform()`.\n    struct TransformData {\n        // The tokens to transfer to the taker.\n        IERC20TokenV06[] tokens;\n        // Amount of each token in `tokens` to transfer to the taker.\n        // `uint(-1)` will transfer the entire balance.\n        uint256[] amounts;\n    }\n\n    /// @dev Maximum uint256 value.\n    uint256 private constant MAX_UINT256 = uint256(-1);\n\n    /// @dev Create this contract.\n    constructor() public Transformer() {}\n\n    /// @dev Forwards tokens to the taker.\n    /// @param context Context information.\n    /// @return success The success bytes (`LibERC20Transformer.TRANSFORMER_SUCCESS`).\n    function transform(TransformContext calldata context) external override returns (bytes4 success) {\n        TransformData memory data = abi.decode(context.data, (TransformData));\n\n        // Transfer tokens directly to the taker.\n        for (uint256 i = 0; i < data.tokens.length; ++i) {\n            // The `amounts` array can be shorter than the `tokens` array.\n            // Missing elements are treated as `uint256(-1)`.\n            uint256 amount = data.amounts.length > i ? data.amounts[i] : uint256(-1);\n            if (amount == MAX_UINT256) {\n                amount = data.tokens[i].getTokenBalanceOf(address(this));\n            }\n            if (amount != 0) {\n                data.tokens[i].unsafeTransformerTransfer(context.recipient, amount);\n            }\n        }\n        return LibERC20Transformer.TRANSFORMER_SUCCESS;\n    }\n}\n"},"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\npragma experimental ABIEncoderV2;\n\nimport \"@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol\";\nimport \"../errors/LibTransformERC20RichErrors.sol\";\nimport \"./IERC20Transformer.sol\";\n\n/// @dev Abstract base class for transformers.\nabstract contract Transformer is IERC20Transformer {\n    using LibRichErrorsV06 for bytes;\n\n    /// @dev The address of the deployer.\n    address public immutable deployer;\n    /// @dev The original address of this contract.\n    address internal immutable _implementation;\n\n    /// @dev Create this contract.\n    constructor() public {\n        deployer = msg.sender;\n        _implementation = address(this);\n    }\n\n    /// @dev Destruct this contract. Only callable by the deployer and will not\n    ///      succeed in the context of a delegatecall (from another contract).\n    /// @param ethRecipient The recipient of ETH held in this contract.\n    function die(address payable ethRecipient) external virtual {\n        // Only the deployer can call this.\n        if (msg.sender != deployer) {\n            LibTransformERC20RichErrors.OnlyCallableByDeployerError(msg.sender, deployer).rrevert();\n        }\n        // Must be executing our own context.\n        if (address(this) != _implementation) {\n            LibTransformERC20RichErrors.InvalidExecutionContextError(address(this), _implementation).rrevert();\n        }\n        selfdestruct(ethRecipient);\n    }\n}\n"},"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/IERC20TokenV06.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\n\ninterface IERC20TokenV06 {\n    // solhint-disable no-simple-event-func-name\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /// @dev send `value` token to `to` from `msg.sender`\n    /// @param to The address of the recipient\n    /// @param value The amount of token to be transferred\n    /// @return True if transfer was successful\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /// @dev send `value` token to `to` from `from` on the condition it is approved by `from`\n    /// @param from The address of the sender\n    /// @param to The address of the recipient\n    /// @param value The amount of token to be transferred\n    /// @return True if transfer was successful\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) external returns (bool);\n\n    /// @dev `msg.sender` approves `spender` to spend `value` tokens\n    /// @param spender The address of the account able to transfer the tokens\n    /// @param value The amount of wei to be approved for transfer\n    /// @return Always true if the call has enough gas to complete execution\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /// @dev Query total supply of token\n    /// @return Total supply of token\n    function totalSupply() external view returns (uint256);\n\n    /// @dev Get the balance of `owner`.\n    /// @param owner The address from which the balance will be retrieved\n    /// @return Balance of owner\n    function balanceOf(address owner) external view returns (uint256);\n\n    /// @dev Get the allowance for `spender` to spend from `owner`.\n    /// @param owner The address of the account owning tokens\n    /// @param spender The address of the account able to transfer the tokens\n    /// @return Amount of remaining tokens allowed to spent\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /// @dev Get the number of decimals this token has.\n    function decimals() external view returns (uint8);\n}\n"},"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\n\nimport \"@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol\";\nimport \"@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol\";\nimport \"./IERC20TokenV06.sol\";\n\nlibrary LibERC20TokenV06 {\n    bytes private constant DECIMALS_CALL_DATA = hex\"313ce567\";\n\n    /// @dev Calls `IERC20TokenV06(token).approve()`.\n    ///      Reverts if the return data is invalid or the call reverts.\n    /// @param token The address of the token contract.\n    /// @param spender The address that receives an allowance.\n    /// @param allowance The allowance to set.\n    function compatApprove(\n        IERC20TokenV06 token,\n        address spender,\n        uint256 allowance\n    ) internal {\n        bytes memory callData = abi.encodeWithSelector(token.approve.selector, spender, allowance);\n        _callWithOptionalBooleanResult(address(token), callData);\n    }\n\n    /// @dev Calls `IERC20TokenV06(token).approve()` and sets the allowance to the\n    ///      maximum if the current approval is not already >= an amount.\n    ///      Reverts if the return data is invalid or the call reverts.\n    /// @param token The address of the token contract.\n    /// @param spender The address that receives an allowance.\n    /// @param amount The minimum allowance needed.\n    function approveIfBelow(\n        IERC20TokenV06 token,\n        address spender,\n        uint256 amount\n    ) internal {\n        if (token.allowance(address(this), spender) < amount) {\n            compatApprove(token, spender, uint256(-1));\n        }\n    }\n\n    /// @dev Calls `IERC20TokenV06(token).transfer()`.\n    ///      Reverts if the return data is invalid or the call reverts.\n    /// @param token The address of the token contract.\n    /// @param to The address that receives the tokens\n    /// @param amount Number of tokens to transfer.\n    function compatTransfer(\n        IERC20TokenV06 token,\n        address to,\n        uint256 amount\n    ) internal {\n        bytes memory callData = abi.encodeWithSelector(token.transfer.selector, to, amount);\n        _callWithOptionalBooleanResult(address(token), callData);\n    }\n\n    /// @dev Calls `IERC20TokenV06(token).transferFrom()`.\n    ///      Reverts if the return data is invalid or the call reverts.\n    /// @param token The address of the token contract.\n    /// @param from The owner of the tokens.\n    /// @param to The address that receives the tokens\n    /// @param amount Number of tokens to transfer.\n    function compatTransferFrom(\n        IERC20TokenV06 token,\n        address from,\n        address to,\n        uint256 amount\n    ) internal {\n        bytes memory callData = abi.encodeWithSelector(token.transferFrom.selector, from, to, amount);\n        _callWithOptionalBooleanResult(address(token), callData);\n    }\n\n    /// @dev Retrieves the number of decimals for a token.\n    ///      Returns `18` if the call reverts.\n    /// @param token The address of the token contract.\n    /// @return tokenDecimals The number of decimals places for the token.\n    function compatDecimals(IERC20TokenV06 token) internal view returns (uint8 tokenDecimals) {\n        tokenDecimals = 18;\n        (bool didSucceed, bytes memory resultData) = address(token).staticcall(DECIMALS_CALL_DATA);\n        if (didSucceed && resultData.length >= 32) {\n            tokenDecimals = uint8(LibBytesV06.readUint256(resultData, 0));\n        }\n    }\n\n    /// @dev Retrieves the allowance for a token, owner, and spender.\n    ///      Returns `0` if the call reverts.\n    /// @param token The address of the token contract.\n    /// @param owner The owner of the tokens.\n    /// @param spender The address the spender.\n    /// @return allowance_ The allowance for a token, owner, and spender.\n    function compatAllowance(\n        IERC20TokenV06 token,\n        address owner,\n        address spender\n    ) internal view returns (uint256 allowance_) {\n        (bool didSucceed, bytes memory resultData) = address(token).staticcall(\n            abi.encodeWithSelector(token.allowance.selector, owner, spender)\n        );\n        if (didSucceed && resultData.length >= 32) {\n            allowance_ = LibBytesV06.readUint256(resultData, 0);\n        }\n    }\n\n    /// @dev Retrieves the balance for a token owner.\n    ///      Returns `0` if the call reverts.\n    /// @param token The address of the token contract.\n    /// @param owner The owner of the tokens.\n    /// @return balance The token balance of an owner.\n    function compatBalanceOf(IERC20TokenV06 token, address owner) internal view returns (uint256 balance) {\n        (bool didSucceed, bytes memory resultData) = address(token).staticcall(\n            abi.encodeWithSelector(token.balanceOf.selector, owner)\n        );\n        if (didSucceed && resultData.length >= 32) {\n            balance = LibBytesV06.readUint256(resultData, 0);\n        }\n    }\n\n    /// @dev Executes a call on address `target` with calldata `callData`\n    ///      and asserts that either nothing was returned or a single boolean\n    ///      was returned equal to `true`.\n    /// @param target The call target.\n    /// @param callData The abi-encoded call data.\n    function _callWithOptionalBooleanResult(address target, bytes memory callData) private {\n        (bool didSucceed, bytes memory resultData) = target.call(callData);\n        // Revert if the call reverted.\n        if (!didSucceed) {\n            LibRichErrorsV06.rrevert(resultData);\n        }\n        // If we get back 0 returndata, this may be a non-standard ERC-20 that\n        // does not return a boolean. Check that it at least contains code.\n        if (resultData.length == 0) {\n            uint256 size;\n            assembly {\n                size := extcodesize(target)\n            }\n            require(size > 0, \"invalid token address, contains no code\");\n            return;\n        }\n        // If we get back at least 32 bytes, we know the target address\n        // contains code, and we assume it is a token that returned a boolean\n        // success value, which must be true.\n        if (resultData.length >= 32) {\n            uint256 result = LibBytesV06.readUint256(resultData, 0);\n            if (result == 1) {\n                return;\n            } else {\n                LibRichErrorsV06.rrevert(resultData);\n            }\n        }\n        // If 0 < returndatasize < 32, the target is a contract, but not a\n        // valid token.\n        LibRichErrorsV06.rrevert(resultData);\n    }\n}\n"},"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\n\nimport \"./errors/LibBytesRichErrorsV06.sol\";\nimport \"./errors/LibRichErrorsV06.sol\";\n\nlibrary LibBytesV06 {\n    using LibBytesV06 for bytes;\n\n    /// @dev Gets the memory address for a byte array.\n    /// @param input Byte array to lookup.\n    /// @return memoryAddress Memory address of byte array. This\n    ///         points to the header of the byte array which contains\n    ///         the length.\n    function rawAddress(bytes memory input) internal pure returns (uint256 memoryAddress) {\n        assembly {\n            memoryAddress := input\n        }\n        return memoryAddress;\n    }\n\n    /// @dev Gets the memory address for the contents of a byte array.\n    /// @param input Byte array to lookup.\n    /// @return memoryAddress Memory address of the contents of the byte array.\n    function contentAddress(bytes memory input) internal pure returns (uint256 memoryAddress) {\n        assembly {\n            memoryAddress := add(input, 32)\n        }\n        return memoryAddress;\n    }\n\n    /// @dev Copies `length` bytes from memory location `source` to `dest`.\n    /// @param dest memory address to copy bytes to.\n    /// @param source memory address to copy bytes from.\n    /// @param length number of bytes to copy.\n    function memCopy(\n        uint256 dest,\n        uint256 source,\n        uint256 length\n    ) internal pure {\n        if (length < 32) {\n            // Handle a partial word by reading destination and masking\n            // off the bits we are interested in.\n            // This correctly handles overlap, zero lengths and source == dest\n            assembly {\n                let mask := sub(exp(256, sub(32, length)), 1)\n                let s := and(mload(source), not(mask))\n                let d := and(mload(dest), mask)\n                mstore(dest, or(s, d))\n            }\n        } else {\n            // Skip the O(length) loop when source == dest.\n            if (source == dest) {\n                return;\n            }\n\n            // For large copies we copy whole words at a time. The final\n            // word is aligned to the end of the range (instead of after the\n            // previous) to handle partial words. So a copy will look like this:\n            //\n            //  ####\n            //      ####\n            //          ####\n            //            ####\n            //\n            // We handle overlap in the source and destination range by\n            // changing the copying direction. This prevents us from\n            // overwriting parts of source that we still need to copy.\n            //\n            // This correctly handles source == dest\n            //\n            if (source > dest) {\n                assembly {\n                    // We subtract 32 from `sEnd` and `dEnd` because it\n                    // is easier to compare with in the loop, and these\n                    // are also the addresses we need for copying the\n                    // last bytes.\n                    length := sub(length, 32)\n                    let sEnd := add(source, length)\n                    let dEnd := add(dest, length)\n\n                    // Remember the last 32 bytes of source\n                    // This needs to be done here and not after the loop\n                    // because we may have overwritten the last bytes in\n                    // source already due to overlap.\n                    let last := mload(sEnd)\n\n                    // Copy whole words front to back\n                    // Note: the first check is always true,\n                    // this could have been a do-while loop.\n                    // solhint-disable-next-line no-empty-blocks\n                    for {\n\n                    } lt(source, sEnd) {\n\n                    } {\n                        mstore(dest, mload(source))\n                        source := add(source, 32)\n                        dest := add(dest, 32)\n                    }\n\n                    // Write the last 32 bytes\n                    mstore(dEnd, last)\n                }\n            } else {\n                assembly {\n                    // We subtract 32 from `sEnd` and `dEnd` because those\n                    // are the starting points when copying a word at the end.\n                    length := sub(length, 32)\n                    let sEnd := add(source, length)\n                    let dEnd := add(dest, length)\n\n                    // Remember the first 32 bytes of source\n                    // This needs to be done here and not after the loop\n                    // because we may have overwritten the first bytes in\n                    // source already due to overlap.\n                    let first := mload(source)\n\n                    // Copy whole words back to front\n                    // We use a signed comparisson here to allow dEnd to become\n                    // negative (happens when source and dest < 32). Valid\n                    // addresses in local memory will never be larger than\n                    // 2**255, so they can be safely re-interpreted as signed.\n                    // Note: the first check is always true,\n                    // this could have been a do-while loop.\n                    // solhint-disable-next-line no-empty-blocks\n                    for {\n\n                    } slt(dest, dEnd) {\n\n                    } {\n                        mstore(dEnd, mload(sEnd))\n                        sEnd := sub(sEnd, 32)\n                        dEnd := sub(dEnd, 32)\n                    }\n\n                    // Write the first 32 bytes\n                    mstore(dest, first)\n                }\n            }\n        }\n    }\n\n    /// @dev Returns a slices from a byte array.\n    /// @param b The byte array to take a slice from.\n    /// @param from The starting index for the slice (inclusive).\n    /// @param to The final index for the slice (exclusive).\n    /// @return result The slice containing bytes at indices [from, to)\n    function slice(\n        bytes memory b,\n        uint256 from,\n        uint256 to\n    ) internal pure returns (bytes memory result) {\n        // Ensure that the from and to positions are valid positions for a slice within\n        // the byte array that is being used.\n        if (from > to) {\n            LibRichErrorsV06.rrevert(\n                LibBytesRichErrorsV06.InvalidByteOperationError(\n                    LibBytesRichErrorsV06.InvalidByteOperationErrorCodes.FromLessThanOrEqualsToRequired,\n                    from,\n                    to\n                )\n            );\n        }\n        if (to > b.length) {\n            LibRichErrorsV06.rrevert(\n                LibBytesRichErrorsV06.InvalidByteOperationError(\n                    LibBytesRichErrorsV06.InvalidByteOperationErrorCodes.ToLessThanOrEqualsLengthRequired,\n                    to,\n                    b.length\n                )\n            );\n        }\n\n        // Create a new bytes structure and copy contents\n        result = new bytes(to - from);\n        memCopy(result.contentAddress(), b.contentAddress() + from, result.length);\n        return result;\n    }\n\n    /// @dev Returns a slice from a byte array without preserving the input.\n    ///      When `from == 0`, the original array will match the slice.\n    ///      In other cases its state will be corrupted.\n    /// @param b The byte array to take a slice from. Will be destroyed in the process.\n    /// @param from The starting index for the slice (inclusive).\n    /// @param to The final index for the slice (exclusive).\n    /// @return result The slice containing bytes at indices [from, to)\n    function sliceDestructive(\n        bytes memory b,\n        uint256 from,\n        uint256 to\n    ) internal pure returns (bytes memory result) {\n        // Ensure that the from and to positions are valid positions for a slice within\n        // the byte array that is being used.\n        if (from > to) {\n            LibRichErrorsV06.rrevert(\n                LibBytesRichErrorsV06.InvalidByteOperationError(\n                    LibBytesRichErrorsV06.InvalidByteOperationErrorCodes.FromLessThanOrEqualsToRequired,\n                    from,\n                    to\n                )\n            );\n        }\n        if (to > b.length) {\n            LibRichErrorsV06.rrevert(\n                LibBytesRichErrorsV06.InvalidByteOperationError(\n                    LibBytesRichErrorsV06.InvalidByteOperationErrorCodes.ToLessThanOrEqualsLengthRequired,\n                    to,\n                    b.length\n                )\n            );\n        }\n\n        // Create a new bytes structure around [from, to) in-place.\n        assembly {\n            result := add(b, from)\n            mstore(result, sub(to, from))\n        }\n        return result;\n    }\n\n    /// @dev Pops the last byte off of a byte array by modifying its length.\n    /// @param b Byte array that will be modified.\n    /// @return result The byte that was popped off.\n    function popLastByte(bytes memory b) internal pure returns (bytes1 result) {\n        if (b.length == 0) {\n            LibRichErrorsV06.rrevert(\n                LibBytesRichErrorsV06.InvalidByteOperationError(\n                    LibBytesRichErrorsV06.InvalidByteOperationErrorCodes.LengthGreaterThanZeroRequired,\n                    b.length,\n                    0\n                )\n            );\n        }\n\n        // Store last byte.\n        result = b[b.length - 1];\n\n        assembly {\n            // Decrement length of byte array.\n            let newLen := sub(mload(b), 1)\n            mstore(b, newLen)\n        }\n        return result;\n    }\n\n    /// @dev Tests equality of two byte arrays.\n    /// @param lhs First byte array to compare.\n    /// @param rhs Second byte array to compare.\n    /// @return equal True if arrays are the same. False otherwise.\n    function equals(bytes memory lhs, bytes memory rhs) internal pure returns (bool equal) {\n        // Keccak gas cost is 30 + numWords * 6. This is a cheap way to compare.\n        // We early exit on unequal lengths, but keccak would also correctly\n        // handle this.\n        return lhs.length == rhs.length && keccak256(lhs) == keccak256(rhs);\n    }\n\n    /// @dev Reads an address from a position in a byte array.\n    /// @param b Byte array containing an address.\n    /// @param index Index in byte array of address.\n    /// @return result address from byte array.\n    function readAddress(bytes memory b, uint256 index) internal pure returns (address result) {\n        if (b.length < index + 20) {\n            LibRichErrorsV06.rrevert(\n                LibBytesRichErrorsV06.InvalidByteOperationError(\n                    LibBytesRichErrorsV06.InvalidByteOperationErrorCodes.LengthGreaterThanOrEqualsTwentyRequired,\n                    b.length,\n                    index + 20 // 20 is length of address\n                )\n            );\n        }\n\n        // Add offset to index:\n        // 1. Arrays are prefixed by 32-byte length parameter (add 32 to index)\n        // 2. Account for size difference between address length and 32-byte storage word (subtract 12 from index)\n        index += 20;\n\n        // Read address from array memory\n        assembly {\n            // 1. Add index to address of bytes array\n            // 2. Load 32-byte word from memory\n            // 3. Apply 20-byte mask to obtain address\n            result := and(mload(add(b, index)), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n        return result;\n    }\n\n    /// @dev Writes an address into a specific position in a byte array.\n    /// @param b Byte array to insert address into.\n    /// @param index Index in byte array of address.\n    /// @param input Address to put into byte array.\n    function writeAddress(\n        bytes memory b,\n        uint256 index,\n        address input\n    ) internal pure {\n        if (b.length < index + 20) {\n            LibRichErrorsV06.rrevert(\n                LibBytesRichErrorsV06.InvalidByteOperationError(\n                    LibBytesRichErrorsV06.InvalidByteOperationErrorCodes.LengthGreaterThanOrEqualsTwentyRequired,\n                    b.length,\n                    index + 20 // 20 is length of address\n                )\n            );\n        }\n\n        // Add offset to index:\n        // 1. Arrays are prefixed by 32-byte length parameter (add 32 to index)\n        // 2. Account for size difference between address length and 32-byte storage word (subtract 12 from index)\n        index += 20;\n\n        // Store address into array memory\n        assembly {\n            // The address occupies 20 bytes and mstore stores 32 bytes.\n            // First fetch the 32-byte word where we'll be storing the address, then\n            // apply a mask so we have only the bytes in the word that the address will not occupy.\n            // Then combine these bytes with the address and store the 32 bytes back to memory with mstore.\n\n            // 1. Add index to address of bytes array\n            // 2. Load 32-byte word from memory\n            // 3. Apply 12-byte mask to obtain extra bytes occupying word of memory where we'll store the address\n            let neighbors := and(\n                mload(add(b, index)),\n                0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n            )\n\n            // Make sure input address is clean.\n            // (Solidity does not guarantee this)\n            input := and(input, 0xffffffffffffffffffffffffffffffffffffffff)\n\n            // Store the neighbors and address into memory\n            mstore(add(b, index), xor(input, neighbors))\n        }\n    }\n\n    /// @dev Reads a bytes32 value from a position in a byte array.\n    /// @param b Byte array containing a bytes32 value.\n    /// @param index Index in byte array of bytes32 value.\n    /// @return result bytes32 value from byte array.\n    function readBytes32(bytes memory b, uint256 index) internal pure returns (bytes32 result) {\n        if (b.length < index + 32) {\n            LibRichErrorsV06.rrevert(\n                LibBytesRichErrorsV06.InvalidByteOperationError(\n                    LibBytesRichErrorsV06.InvalidByteOperationErrorCodes.LengthGreaterThanOrEqualsThirtyTwoRequired,\n                    b.length,\n                    index + 32\n                )\n            );\n        }\n\n        // Arrays are prefixed by a 256 bit length parameter\n        index += 32;\n\n        // Read the bytes32 from array memory\n        assembly {\n            result := mload(add(b, index))\n        }\n        return result;\n    }\n\n    /// @dev Writes a bytes32 into a specific position in a byte array.\n    /// @param b Byte array to insert <input> into.\n    /// @param index Index in byte array of <input>.\n    /// @param input bytes32 to put into byte array.\n    function writeBytes32(\n        bytes memory b,\n        uint256 index,\n        bytes32 input\n    ) internal pure {\n        if (b.length < index + 32) {\n            LibRichErrorsV06.rrevert(\n                LibBytesRichErrorsV06.InvalidByteOperationError(\n                    LibBytesRichErrorsV06.InvalidByteOperationErrorCodes.LengthGreaterThanOrEqualsThirtyTwoRequired,\n                    b.length,\n                    index + 32\n                )\n            );\n        }\n\n        // Arrays are prefixed by a 256 bit length parameter\n        index += 32;\n\n        // Read the bytes32 from array memory\n        assembly {\n            mstore(add(b, index), input)\n        }\n    }\n\n    /// @dev Reads a uint256 value from a position in a byte array.\n    /// @param b Byte array containing a uint256 value.\n    /// @param index Index in byte array of uint256 value.\n    /// @return result uint256 value from byte array.\n    function readUint256(bytes memory b, uint256 index) internal pure returns (uint256 result) {\n        result = uint256(readBytes32(b, index));\n        return result;\n    }\n\n    /// @dev Writes a uint256 into a specific position in a byte array.\n    /// @param b Byte array to insert <input> into.\n    /// @param index Index in byte array of <input>.\n    /// @param input uint256 to put into byte array.\n    function writeUint256(\n        bytes memory b,\n        uint256 index,\n        uint256 input\n    ) internal pure {\n        writeBytes32(b, index, bytes32(input));\n    }\n\n    /// @dev Reads an unpadded bytes4 value from a position in a byte array.\n    /// @param b Byte array containing a bytes4 value.\n    /// @param index Index in byte array of bytes4 value.\n    /// @return result bytes4 value from byte array.\n    function readBytes4(bytes memory b, uint256 index) internal pure returns (bytes4 result) {\n        if (b.length < index + 4) {\n            LibRichErrorsV06.rrevert(\n                LibBytesRichErrorsV06.InvalidByteOperationError(\n                    LibBytesRichErrorsV06.InvalidByteOperationErrorCodes.LengthGreaterThanOrEqualsFourRequired,\n                    b.length,\n                    index + 4\n                )\n            );\n        }\n\n        // Arrays are prefixed by a 32 byte length field\n        index += 32;\n\n        // Read the bytes4 from array memory\n        assembly {\n            result := mload(add(b, index))\n            // Solidity does not require us to clean the trailing bytes.\n            // We do it anyway\n            result := and(result, 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000)\n        }\n        return result;\n    }\n\n    /// @dev Writes a new length to a byte array.\n    ///      Decreasing length will lead to removing the corresponding lower order bytes from the byte array.\n    ///      Increasing length may lead to appending adjacent in-memory bytes to the end of the byte array.\n    /// @param b Bytes array to write new length to.\n    /// @param length New length of byte array.\n    function writeLength(bytes memory b, uint256 length) internal pure {\n        assembly {\n            mstore(b, length)\n        }\n    }\n}\n"},"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibSafeMathV06.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\n\nimport \"./errors/LibRichErrorsV06.sol\";\nimport \"./errors/LibSafeMathRichErrorsV06.sol\";\n\nlibrary LibSafeMathV06 {\n    function safeMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        if (c / a != b) {\n            LibRichErrorsV06.rrevert(\n                LibSafeMathRichErrorsV06.Uint256BinOpError(\n                    LibSafeMathRichErrorsV06.BinOpErrorCodes.MULTIPLICATION_OVERFLOW,\n                    a,\n                    b\n                )\n            );\n        }\n        return c;\n    }\n\n    function safeDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            LibRichErrorsV06.rrevert(\n                LibSafeMathRichErrorsV06.Uint256BinOpError(\n                    LibSafeMathRichErrorsV06.BinOpErrorCodes.DIVISION_BY_ZERO,\n                    a,\n                    b\n                )\n            );\n        }\n        uint256 c = a / b;\n        return c;\n    }\n\n    function safeSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b > a) {\n            LibRichErrorsV06.rrevert(\n                LibSafeMathRichErrorsV06.Uint256BinOpError(\n                    LibSafeMathRichErrorsV06.BinOpErrorCodes.SUBTRACTION_UNDERFLOW,\n                    a,\n                    b\n                )\n            );\n        }\n        return a - b;\n    }\n\n    function safeAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        if (c < a) {\n            LibRichErrorsV06.rrevert(\n                LibSafeMathRichErrorsV06.Uint256BinOpError(\n                    LibSafeMathRichErrorsV06.BinOpErrorCodes.ADDITION_OVERFLOW,\n                    a,\n                    b\n                )\n            );\n        }\n        return c;\n    }\n\n    function max256(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    function min256(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    function safeMul128(uint128 a, uint128 b) internal pure returns (uint128) {\n        if (a == 0) {\n            return 0;\n        }\n        uint128 c = a * b;\n        if (c / a != b) {\n            LibRichErrorsV06.rrevert(\n                LibSafeMathRichErrorsV06.Uint256BinOpError(\n                    LibSafeMathRichErrorsV06.BinOpErrorCodes.MULTIPLICATION_OVERFLOW,\n                    a,\n                    b\n                )\n            );\n        }\n        return c;\n    }\n\n    function safeDiv128(uint128 a, uint128 b) internal pure returns (uint128) {\n        if (b == 0) {\n            LibRichErrorsV06.rrevert(\n                LibSafeMathRichErrorsV06.Uint256BinOpError(\n                    LibSafeMathRichErrorsV06.BinOpErrorCodes.DIVISION_BY_ZERO,\n                    a,\n                    b\n                )\n            );\n        }\n        uint128 c = a / b;\n        return c;\n    }\n\n    function safeSub128(uint128 a, uint128 b) internal pure returns (uint128) {\n        if (b > a) {\n            LibRichErrorsV06.rrevert(\n                LibSafeMathRichErrorsV06.Uint256BinOpError(\n                    LibSafeMathRichErrorsV06.BinOpErrorCodes.SUBTRACTION_UNDERFLOW,\n                    a,\n                    b\n                )\n            );\n        }\n        return a - b;\n    }\n\n    function safeAdd128(uint128 a, uint128 b) internal pure returns (uint128) {\n        uint128 c = a + b;\n        if (c < a) {\n            LibRichErrorsV06.rrevert(\n                LibSafeMathRichErrorsV06.Uint256BinOpError(\n                    LibSafeMathRichErrorsV06.BinOpErrorCodes.ADDITION_OVERFLOW,\n                    a,\n                    b\n                )\n            );\n        }\n        return c;\n    }\n\n    function max128(uint128 a, uint128 b) internal pure returns (uint128) {\n        return a >= b ? a : b;\n    }\n\n    function min128(uint128 a, uint128 b) internal pure returns (uint128) {\n        return a < b ? a : b;\n    }\n\n    function safeDowncastToUint128(uint256 a) internal pure returns (uint128) {\n        if (a > type(uint128).max) {\n            LibRichErrorsV06.rrevert(\n                LibSafeMathRichErrorsV06.Uint256DowncastError(\n                    LibSafeMathRichErrorsV06.DowncastErrorCodes.VALUE_TOO_LARGE_TO_DOWNCAST_TO_UINT128,\n                    a\n                )\n            );\n        }\n        return uint128(a);\n    }\n}\n"},"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibBytesRichErrorsV06.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\n\nlibrary LibBytesRichErrorsV06 {\n    enum InvalidByteOperationErrorCodes {\n        FromLessThanOrEqualsToRequired,\n        ToLessThanOrEqualsLengthRequired,\n        LengthGreaterThanZeroRequired,\n        LengthGreaterThanOrEqualsFourRequired,\n        LengthGreaterThanOrEqualsTwentyRequired,\n        LengthGreaterThanOrEqualsThirtyTwoRequired,\n        LengthGreaterThanOrEqualsNestedBytesLengthRequired,\n        DestinationLengthGreaterThanOrEqualSourceLengthRequired\n    }\n\n    // bytes4(keccak256(\"InvalidByteOperationError(uint8,uint256,uint256)\"))\n    bytes4 internal constant INVALID_BYTE_OPERATION_ERROR_SELECTOR = 0x28006595;\n\n    // solhint-disable func-name-mixedcase\n    function InvalidByteOperationError(\n        InvalidByteOperationErrorCodes errorCode,\n        uint256 offset,\n        uint256 required\n    ) internal pure returns (bytes memory) {\n        return abi.encodeWithSelector(INVALID_BYTE_OPERATION_ERROR_SELECTOR, errorCode, offset, required);\n    }\n}\n"},"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\n\nlibrary LibRichErrorsV06 {\n    // bytes4(keccak256(\"Error(string)\"))\n    bytes4 internal constant STANDARD_ERROR_SELECTOR = 0x08c379a0;\n\n    // solhint-disable func-name-mixedcase\n    /// @dev ABI encode a standard, string revert error payload.\n    ///      This is the same payload that would be included by a `revert(string)`\n    ///      solidity statement. It has the function signature `Error(string)`.\n    /// @param message The error string.\n    /// @return The ABI encoded error.\n    function StandardError(string memory message) internal pure returns (bytes memory) {\n        return abi.encodeWithSelector(STANDARD_ERROR_SELECTOR, bytes(message));\n    }\n\n    // solhint-enable func-name-mixedcase\n\n    /// @dev Reverts an encoded rich revert reason `errorData`.\n    /// @param errorData ABI encoded error data.\n    function rrevert(bytes memory errorData) internal pure {\n        assembly {\n            revert(add(errorData, 0x20), mload(errorData))\n        }\n    }\n}\n"},"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibSafeMathRichErrorsV06.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\n\nlibrary LibSafeMathRichErrorsV06 {\n    // bytes4(keccak256(\"Uint256BinOpError(uint8,uint256,uint256)\"))\n    bytes4 internal constant UINT256_BINOP_ERROR_SELECTOR = 0xe946c1bb;\n\n    // bytes4(keccak256(\"Uint256DowncastError(uint8,uint256)\"))\n    bytes4 internal constant UINT256_DOWNCAST_ERROR_SELECTOR = 0xc996af7b;\n\n    enum BinOpErrorCodes {\n        ADDITION_OVERFLOW,\n        MULTIPLICATION_OVERFLOW,\n        SUBTRACTION_UNDERFLOW,\n        DIVISION_BY_ZERO\n    }\n\n    enum DowncastErrorCodes {\n        VALUE_TOO_LARGE_TO_DOWNCAST_TO_UINT32,\n        VALUE_TOO_LARGE_TO_DOWNCAST_TO_UINT64,\n        VALUE_TOO_LARGE_TO_DOWNCAST_TO_UINT96,\n        VALUE_TOO_LARGE_TO_DOWNCAST_TO_UINT128\n    }\n\n    // solhint-disable func-name-mixedcase\n    function Uint256BinOpError(\n        BinOpErrorCodes errorCode,\n        uint256 a,\n        uint256 b\n    ) internal pure returns (bytes memory) {\n        return abi.encodeWithSelector(UINT256_BINOP_ERROR_SELECTOR, errorCode, a, b);\n    }\n\n    function Uint256DowncastError(DowncastErrorCodes errorCode, uint256 a) internal pure returns (bytes memory) {\n        return abi.encodeWithSelector(UINT256_DOWNCAST_ERROR_SELECTOR, errorCode, a);\n    }\n}\n"}},{"sources":{"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/errors/LibTransformERC20RichErrors.sol":{"id":0,"ast":{"absolutePath":"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/errors/LibTransformERC20RichErrors.sol","id":298,"exportedSymbols":{"LibTransformERC20RichErrors":[297]},"nodeType":"SourceUnit","src":"619:4981:0","nodes":[{"id":1,"nodeType":"PragmaDirective","src":"619:23:0","nodes":[],"literals":["solidity","^","0.6",".5"]},{"id":297,"nodeType":"ContractDefinition","src":"644:4955:0","nodes":[{"id":23,"nodeType":"FunctionDefinition","src":"763:327:0","nodes":[],"body":{"id":22,"nodeType":"Block","src":"878:212:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"496e73756666696369656e7445746841747461636865644572726f722875696e743235362c75696e7432353629","id":15,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"964:47:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_96660ab143a5c6a946233c268494b1026bfca53373c9715e0fe96b3c59c85044","typeString":"literal_string \"InsufficientEthAttachedError(uint256,uint256)\""},"value":"InsufficientEthAttachedError(uint256,uint256)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_96660ab143a5c6a946233c268494b1026bfca53373c9715e0fe96b3c59c85044","typeString":"literal_string \"InsufficientEthAttachedError(uint256,uint256)\""}],"id":14,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"954:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":16,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"954:58:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":13,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"947:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":12,"name":"bytes4","nodeType":"ElementaryTypeName","src":"947:6:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":17,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"947:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"argumentTypes":null,"id":18,"name":"ethAttached","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"1031:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":19,"name":"ethNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"1060:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":10,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"907:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":11,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","referencedDeclaration":null,"src":"907:22:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"907:176:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":9,"id":21,"nodeType":"Return","src":"888:195:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"InsufficientEthAttachedError","overrides":null,"parameters":{"id":6,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3,"mutability":"mutable","name":"ethAttached","nodeType":"VariableDeclaration","overrides":null,"scope":23,"src":"801:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2,"name":"uint256","nodeType":"ElementaryTypeName","src":"801:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":5,"mutability":"mutable","name":"ethNeeded","nodeType":"VariableDeclaration","overrides":null,"scope":23,"src":"822:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"800:40:0"},"returnParameters":{"id":9,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":23,"src":"864:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7,"name":"bytes","nodeType":"ElementaryTypeName","src":"864:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"863:14:0"},"scope":297,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":48,"nodeType":"FunctionDefinition","src":"1096:451:0","nodes":[],"body":{"id":47,"nodeType":"Block","src":"1280:267:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"496e636f6d706c6574655472616e73666f726d45524332304572726f7228616464726573732c75696e743235362c75696e7432353629","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:56:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_990174d2378c7614a3e4722867cea0a803c0cc16ef92c4f5466ed5bc1d3496da","typeString":"literal_string \"IncompleteTransformERC20Error(address,uint256,uint256)\""},"value":"IncompleteTransformERC20Error(address,uint256,uint256)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_990174d2378c7614a3e4722867cea0a803c0cc16ef92c4f5466ed5bc1d3496da","typeString":"literal_string \"IncompleteTransformERC20Error(address,uint256,uint256)\""}],"id":38,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1356:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1356:67:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":37,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1349:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":36,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1349:6:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":41,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1349:75:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"argumentTypes":null,"id":42,"name":"outputToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"1442:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":43,"name":"outputTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1471:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":44,"name":"minOutputTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1506:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":34,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1309:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":35,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1309:22:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":45,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1309:231:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":33,"id":46,"nodeType":"Return","src":"1290:250:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"IncompleteTransformERC20Error","overrides":null,"parameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25,"mutability":"mutable","name":"outputToken","nodeType":"VariableDeclaration","overrides":null,"scope":48,"src":"1144:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":24,"name":"address","nodeType":"ElementaryTypeName","src":"1144:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":27,"mutability":"mutable","name":"outputTokenAmount","nodeType":"VariableDeclaration","overrides":null,"scope":48,"src":"1173:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26,"name":"uint256","nodeType":"ElementaryTypeName","src":"1173:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":29,"mutability":"mutable","name":"minOutputTokenAmount","nodeType":"VariableDeclaration","overrides":null,"scope":48,"src":"1208:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28,"name":"uint256","nodeType":"ElementaryTypeName","src":"1208:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1134:108:0"},"returnParameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":48,"src":"1266:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":31,"name":"bytes","nodeType":"ElementaryTypeName","src":"1266:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"1265:14:0"},"scope":297,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":70,"nodeType":"FunctionDefinition","src":"1553:389:0","nodes":[],"body":{"id":69,"nodeType":"Block","src":"1713:229:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"4e656761746976655472616e73666f726d45524332304f75747075744572726f7228616464726573732c75696e7432353629","id":62,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1799:52:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_3ea25a3cae94e681748e39876b75ce362a9159c4618787bc1250e3d9f9c43910","typeString":"literal_string \"NegativeTransformERC20OutputError(address,uint256)\""},"value":"NegativeTransformERC20OutputError(address,uint256)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_3ea25a3cae94e681748e39876b75ce362a9159c4618787bc1250e3d9f9c43910","typeString":"literal_string \"NegativeTransformERC20OutputError(address,uint256)\""}],"id":61,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1789:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1789:63:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":60,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1782:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":59,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1782:6:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1782:71:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"argumentTypes":null,"id":65,"name":"outputToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":50,"src":"1871:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":66,"name":"outputTokenLostAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"1900:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":57,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1742:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":58,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1742:22:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":67,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1742:193:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":56,"id":68,"nodeType":"Return","src":"1723:212:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"NegativeTransformERC20OutputError","overrides":null,"parameters":{"id":53,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50,"mutability":"mutable","name":"outputToken","nodeType":"VariableDeclaration","overrides":null,"scope":70,"src":"1596:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":49,"name":"address","nodeType":"ElementaryTypeName","src":"1596:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":52,"mutability":"mutable","name":"outputTokenLostAmount","nodeType":"VariableDeclaration","overrides":null,"scope":70,"src":"1617:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":51,"name":"uint256","nodeType":"ElementaryTypeName","src":"1617:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1595:52:0"},"returnParameters":{"id":56,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":70,"src":"1695:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":54,"name":"bytes","nodeType":"ElementaryTypeName","src":"1695:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"1694:14:0"},"scope":297,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":95,"nodeType":"FunctionDefinition","src":"1948:419:0","nodes":[],"body":{"id":94,"nodeType":"Block","src":"2123:244:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"5472616e73666f726d65724661696c65644572726f7228616464726573732c62797465732c627974657329","id":86,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2209:45:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_f21e5cb42b911ca6b3898f8618760aa7d84fe5d43a7a5ad89aa791c66cafe413","typeString":"literal_string \"TransformerFailedError(address,bytes,bytes)\""},"value":"TransformerFailedError(address,bytes,bytes)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f21e5cb42b911ca6b3898f8618760aa7d84fe5d43a7a5ad89aa791c66cafe413","typeString":"literal_string \"TransformerFailedError(address,bytes,bytes)\""}],"id":85,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2199:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":87,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2199:56:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":84,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2192:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":83,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2192:6:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":88,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2192:64:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"argumentTypes":null,"id":89,"name":"transformer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"2274:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":90,"name":"transformerData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"2303:15:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":91,"name":"resultData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":76,"src":"2336:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":81,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2152:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":82,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2152:22:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":92,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2152:208:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":80,"id":93,"nodeType":"Return","src":"2133:227:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"TransformerFailedError","overrides":null,"parameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":72,"mutability":"mutable","name":"transformer","nodeType":"VariableDeclaration","overrides":null,"scope":95,"src":"1989:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":71,"name":"address","nodeType":"ElementaryTypeName","src":"1989:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":74,"mutability":"mutable","name":"transformerData","nodeType":"VariableDeclaration","overrides":null,"scope":95,"src":"2018:28:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":73,"name":"bytes","nodeType":"ElementaryTypeName","src":"2018:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":76,"mutability":"mutable","name":"resultData","nodeType":"VariableDeclaration","overrides":null,"scope":95,"src":"2056:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":75,"name":"bytes","nodeType":"ElementaryTypeName","src":"2056:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"1979:106:0"},"returnParameters":{"id":80,"nodeType":"ParameterList","parameters":[{"constant":false,"id":79,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":95,"src":"2109:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":78,"name":"bytes","nodeType":"ElementaryTypeName","src":"2109:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"2108:14:0"},"scope":297,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":117,"nodeType":"FunctionDefinition","src":"2455:251:0","nodes":[],"body":{"id":116,"nodeType":"Block","src":"2563:143:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"4f6e6c7943616c6c61626c6542794465706c6f7965724572726f7228616464726573732c6164647265737329","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2632:46:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_5cec653b364cca3880afa73ceff506d0651d11d26abbbe4a56460aa933b21b08","typeString":"literal_string \"OnlyCallableByDeployerError(address,address)\""},"value":"OnlyCallableByDeployerError(address,address)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_5cec653b364cca3880afa73ceff506d0651d11d26abbbe4a56460aa933b21b08","typeString":"literal_string \"OnlyCallableByDeployerError(address,address)\""}],"id":108,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2622:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2622:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2615:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":106,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2615:6:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2615:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"argumentTypes":null,"id":112,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"2682:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":113,"name":"deployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"2690:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":104,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2592:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2592:22:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2592:107:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":103,"id":115,"nodeType":"Return","src":"2573:126:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"OnlyCallableByDeployerError","overrides":null,"parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":97,"mutability":"mutable","name":"caller","nodeType":"VariableDeclaration","overrides":null,"scope":117,"src":"2492:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":96,"name":"address","nodeType":"ElementaryTypeName","src":"2492:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":99,"mutability":"mutable","name":"deployer","nodeType":"VariableDeclaration","overrides":null,"scope":117,"src":"2508:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":98,"name":"address","nodeType":"ElementaryTypeName","src":"2508:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2491:34:0"},"returnParameters":{"id":103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":117,"src":"2549:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":101,"name":"bytes","nodeType":"ElementaryTypeName","src":"2549:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"2548:14:0"},"scope":297,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":139,"nodeType":"FunctionDefinition","src":"2712:371:0","nodes":[],"body":{"id":138,"nodeType":"Block","src":"2863:220:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"496e76616c6964457865637574696f6e436f6e746578744572726f7228616464726573732c6164647265737329","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2949:47:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_b5cf2cd09307d6c717473134badbb9761c2c97d7565566c2a71eba6cd6fc514d","typeString":"literal_string \"InvalidExecutionContextError(address,address)\""},"value":"InvalidExecutionContextError(address,address)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_b5cf2cd09307d6c717473134badbb9761c2c97d7565566c2a71eba6cd6fc514d","typeString":"literal_string \"InvalidExecutionContextError(address,address)\""}],"id":130,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2939:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2939:58:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2932:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":128,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2932:6:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2932:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"argumentTypes":null,"id":134,"name":"actualContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"3016:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":135,"name":"expectedContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"3047:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":126,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2892:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2892:22:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2892:184:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":125,"id":137,"nodeType":"Return","src":"2873:203:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"InvalidExecutionContextError","overrides":null,"parameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":119,"mutability":"mutable","name":"actualContext","nodeType":"VariableDeclaration","overrides":null,"scope":139,"src":"2750:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":118,"name":"address","nodeType":"ElementaryTypeName","src":"2750:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":121,"mutability":"mutable","name":"expectedContext","nodeType":"VariableDeclaration","overrides":null,"scope":139,"src":"2773:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":120,"name":"address","nodeType":"ElementaryTypeName","src":"2773:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2749:48:0"},"returnParameters":{"id":125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":124,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":139,"src":"2845:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":123,"name":"bytes","nodeType":"ElementaryTypeName","src":"2845:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"2844:14:0"},"scope":297,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":142,"nodeType":"EnumDefinition","src":"3089:95:0","nodes":[],"canonicalName":"LibTransformERC20RichErrors.InvalidTransformDataErrorCode","members":[{"id":140,"name":"INVALID_TOKENS","nodeType":"EnumValue","src":"3134:14:0"},{"id":141,"name":"INVALID_ARRAY_LENGTH","nodeType":"EnumValue","src":"3158:20:0"}],"name":"InvalidTransformDataErrorCode"},{"id":164,"nodeType":"FunctionDefinition","src":"3190:376:0","nodes":[],"body":{"id":163,"nodeType":"Block","src":"3359:207:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"496e76616c69645472616e73666f726d446174614572726f722875696e74382c627974657329","id":156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3445:40:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_505ff6a4f24a0aa989a95ffe4c8d435d76fb30dea162a3e3022e749867722deb","typeString":"literal_string \"InvalidTransformDataError(uint8,bytes)\""},"value":"InvalidTransformDataError(uint8,bytes)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_505ff6a4f24a0aa989a95ffe4c8d435d76fb30dea162a3e3022e749867722deb","typeString":"literal_string \"InvalidTransformDataError(uint8,bytes)\""}],"id":155,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3435:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3435:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3428:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":153,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3428:6:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3428:59:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"argumentTypes":null,"id":159,"name":"errorCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"3505:9:0","typeDescriptions":{"typeIdentifier":"t_enum$_InvalidTransformDataErrorCode_$142","typeString":"enum LibTransformERC20RichErrors.InvalidTransformDataErrorCode"}},{"argumentTypes":null,"id":160,"name":"transformData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"3532:13:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_enum$_InvalidTransformDataErrorCode_$142","typeString":"enum LibTransformERC20RichErrors.InvalidTransformDataErrorCode"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":151,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3388:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3388:22:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3388:171:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":150,"id":162,"nodeType":"Return","src":"3369:190:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"InvalidTransformDataError","overrides":null,"parameters":{"id":147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"mutability":"mutable","name":"errorCode","nodeType":"VariableDeclaration","overrides":null,"scope":164,"src":"3225:39:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_InvalidTransformDataErrorCode_$142","typeString":"enum LibTransformERC20RichErrors.InvalidTransformDataErrorCode"},"typeName":{"contractScope":null,"id":143,"name":"InvalidTransformDataErrorCode","nodeType":"UserDefinedTypeName","referencedDeclaration":142,"src":"3225:29:0","typeDescriptions":{"typeIdentifier":"t_enum$_InvalidTransformDataErrorCode_$142","typeString":"enum LibTransformERC20RichErrors.InvalidTransformDataErrorCode"}},"value":null,"visibility":"internal"},{"constant":false,"id":146,"mutability":"mutable","name":"transformData","nodeType":"VariableDeclaration","overrides":null,"scope":164,"src":"3266:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":145,"name":"bytes","nodeType":"ElementaryTypeName","src":"3266:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"3224:69:0"},"returnParameters":{"id":150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":164,"src":"3341:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":148,"name":"bytes","nodeType":"ElementaryTypeName","src":"3341:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"3340:14:0"},"scope":297,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":189,"nodeType":"FunctionDefinition","src":"3654:411:0","nodes":[],"body":{"id":188,"nodeType":"Block","src":"3818:247:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"496e636f6d706c65746546696c6c53656c6c51756f74654572726f7228616464726573732c75696e743235362c75696e7432353629","id":180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3904:55:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_adc35ca636cd9f46b974d5bec4df8af095d0ae177ec6043620af588c03bdc616","typeString":"literal_string \"IncompleteFillSellQuoteError(address,uint256,uint256)\""},"value":"IncompleteFillSellQuoteError(address,uint256,uint256)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_adc35ca636cd9f46b974d5bec4df8af095d0ae177ec6043620af588c03bdc616","typeString":"literal_string \"IncompleteFillSellQuoteError(address,uint256,uint256)\""}],"id":179,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3894:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3894:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3887:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":177,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3887:6:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3887:74:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"argumentTypes":null,"id":183,"name":"sellToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":166,"src":"3979:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":184,"name":"soldAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"4006:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":185,"name":"sellAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"4034:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":175,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3847:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3847:22:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3847:211:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":174,"id":187,"nodeType":"Return","src":"3828:230:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"IncompleteFillSellQuoteError","overrides":null,"parameters":{"id":171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"sellToken","nodeType":"VariableDeclaration","overrides":null,"scope":189,"src":"3701:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":165,"name":"address","nodeType":"ElementaryTypeName","src":"3701:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":168,"mutability":"mutable","name":"soldAmount","nodeType":"VariableDeclaration","overrides":null,"scope":189,"src":"3728:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"3728:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":170,"mutability":"mutable","name":"sellAmount","nodeType":"VariableDeclaration","overrides":null,"scope":189,"src":"3756:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":169,"name":"uint256","nodeType":"ElementaryTypeName","src":"3756:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"3691:89:0"},"returnParameters":{"id":174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":173,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":189,"src":"3804:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":172,"name":"bytes","nodeType":"ElementaryTypeName","src":"3804:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"3803:14:0"},"scope":297,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":214,"nodeType":"FunctionDefinition","src":"4071:409:0","nodes":[],"body":{"id":213,"nodeType":"Block","src":"4234:246:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"496e636f6d706c65746546696c6c42757951756f74654572726f7228616464726573732c75696e743235362c75696e7432353629","id":205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4320:54:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_498df3ae522acadbf67e6aa5fde156a5b74336950cd271175e7336907df120e3","typeString":"literal_string \"IncompleteFillBuyQuoteError(address,uint256,uint256)\""},"value":"IncompleteFillBuyQuoteError(address,uint256,uint256)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_498df3ae522acadbf67e6aa5fde156a5b74336950cd271175e7336907df120e3","typeString":"literal_string \"IncompleteFillBuyQuoteError(address,uint256,uint256)\""}],"id":204,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4310:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4310:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4303:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":202,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4303:6:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4303:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"argumentTypes":null,"id":208,"name":"buyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"4394:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":209,"name":"boughtAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"4420:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":210,"name":"buyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"4450:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":200,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4263:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4263:22:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4263:210:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":199,"id":212,"nodeType":"Return","src":"4244:229:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"IncompleteFillBuyQuoteError","overrides":null,"parameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":191,"mutability":"mutable","name":"buyToken","nodeType":"VariableDeclaration","overrides":null,"scope":214,"src":"4117:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":190,"name":"address","nodeType":"ElementaryTypeName","src":"4117:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":193,"mutability":"mutable","name":"boughtAmount","nodeType":"VariableDeclaration","overrides":null,"scope":214,"src":"4143:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":192,"name":"uint256","nodeType":"ElementaryTypeName","src":"4143:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"buyAmount","nodeType":"VariableDeclaration","overrides":null,"scope":214,"src":"4173:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":194,"name":"uint256","nodeType":"ElementaryTypeName","src":"4173:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4107:89:0"},"returnParameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":214,"src":"4220:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":197,"name":"bytes","nodeType":"ElementaryTypeName","src":"4220:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"4219:14:0"},"scope":297,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":236,"nodeType":"FunctionDefinition","src":"4486:361:0","nodes":[],"body":{"id":235,"nodeType":"Block","src":"4632:215:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"496e73756666696369656e7454616b6572546f6b656e4572726f722875696e743235362c75696e7432353629","id":228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4718:46:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_b903dfcaccd2a9f3ef378c0ae41030aff5f40d42e2453b19748de6e3f92b4f9c","typeString":"literal_string \"InsufficientTakerTokenError(uint256,uint256)\""},"value":"InsufficientTakerTokenError(uint256,uint256)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_b903dfcaccd2a9f3ef378c0ae41030aff5f40d42e2453b19748de6e3f92b4f9c","typeString":"literal_string \"InsufficientTakerTokenError(uint256,uint256)\""}],"id":227,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4708:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4708:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4701:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":225,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4701:6:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4701:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"argumentTypes":null,"id":231,"name":"tokenBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"4784:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":232,"name":"tokensNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"4814:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":223,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4661:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4661:22:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4661:179:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":222,"id":234,"nodeType":"Return","src":"4642:198:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"InsufficientTakerTokenError","overrides":null,"parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":216,"mutability":"mutable","name":"tokenBalance","nodeType":"VariableDeclaration","overrides":null,"scope":236,"src":"4523:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":215,"name":"uint256","nodeType":"ElementaryTypeName","src":"4523:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":218,"mutability":"mutable","name":"tokensNeeded","nodeType":"VariableDeclaration","overrides":null,"scope":236,"src":"4545:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":217,"name":"uint256","nodeType":"ElementaryTypeName","src":"4545:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4522:44:0"},"returnParameters":{"id":222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":236,"src":"4614:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":220,"name":"bytes","nodeType":"ElementaryTypeName","src":"4614:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"4613:14:0"},"scope":297,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":258,"nodeType":"FunctionDefinition","src":"4853:325:0","nodes":[],"body":{"id":257,"nodeType":"Block","src":"4967:211:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"496e73756666696369656e7450726f746f636f6c4665654572726f722875696e743235362c75696e7432353629","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5053:47:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_c95e18ed2a3eee48f1dc28881288e2e9e9cd0245e3d87e98b8b26fc6b8f86810","typeString":"literal_string \"InsufficientProtocolFeeError(uint256,uint256)\""},"value":"InsufficientProtocolFeeError(uint256,uint256)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c95e18ed2a3eee48f1dc28881288e2e9e9cd0245e3d87e98b8b26fc6b8f86810","typeString":"literal_string \"InsufficientProtocolFeeError(uint256,uint256)\""}],"id":249,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5043:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5043:58:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5036:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":247,"name":"bytes4","nodeType":"ElementaryTypeName","src":"5036:6:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5036:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"argumentTypes":null,"id":253,"name":"ethBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"5120:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":254,"name":"ethNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"5148:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":245,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4996:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4996:22:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4996:175:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":244,"id":256,"nodeType":"Return","src":"4977:194:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"InsufficientProtocolFeeError","overrides":null,"parameters":{"id":241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":238,"mutability":"mutable","name":"ethBalance","nodeType":"VariableDeclaration","overrides":null,"scope":258,"src":"4891:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":237,"name":"uint256","nodeType":"ElementaryTypeName","src":"4891:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":240,"mutability":"mutable","name":"ethNeeded","nodeType":"VariableDeclaration","overrides":null,"scope":258,"src":"4911:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":239,"name":"uint256","nodeType":"ElementaryTypeName","src":"4911:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4890:39:0"},"returnParameters":{"id":244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":258,"src":"4953:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":242,"name":"bytes","nodeType":"ElementaryTypeName","src":"4953:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"4952:14:0"},"scope":297,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":277,"nodeType":"FunctionDefinition","src":"5184:210:0","nodes":[],"body":{"id":276,"nodeType":"Block","src":"5281:113:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"496e76616c696445524332304173736574446174614572726f7228627974657329","id":270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5338:35:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d5c74bd65faa471e6acf60d746e64dde586ed6584a1508d16ad144e11e679c93","typeString":"literal_string \"InvalidERC20AssetDataError(bytes)\""},"value":"InvalidERC20AssetDataError(bytes)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d5c74bd65faa471e6acf60d746e64dde586ed6584a1508d16ad144e11e679c93","typeString":"literal_string \"InvalidERC20AssetDataError(bytes)\""}],"id":269,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5328:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5328:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5321:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":267,"name":"bytes4","nodeType":"ElementaryTypeName","src":"5321:6:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5321:54:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"argumentTypes":null,"id":273,"name":"assetData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"5377:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":265,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5298:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5298:22:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5298:89:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":264,"id":275,"nodeType":"Return","src":"5291:96:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"InvalidERC20AssetDataError","overrides":null,"parameters":{"id":261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":260,"mutability":"mutable","name":"assetData","nodeType":"VariableDeclaration","overrides":null,"scope":277,"src":"5220:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":259,"name":"bytes","nodeType":"ElementaryTypeName","src":"5220:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"5219:24:0"},"returnParameters":{"id":264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":277,"src":"5267:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":262,"name":"bytes","nodeType":"ElementaryTypeName","src":"5267:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"5266:14:0"},"scope":297,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":296,"nodeType":"FunctionDefinition","src":"5400:197:0","nodes":[],"body":{"id":295,"nodeType":"Block","src":"5487:110:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"496e76616c696454616b6572466565546f6b656e4572726f72286164647265737329","id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5544:36:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_63eaf4852deaf84cd6f3cd3fff52e2b34d8a2bb082168d71294c15cd0dce2a81","typeString":"literal_string \"InvalidTakerFeeTokenError(address)\""},"value":"InvalidTakerFeeTokenError(address)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_63eaf4852deaf84cd6f3cd3fff52e2b34d8a2bb082168d71294c15cd0dce2a81","typeString":"literal_string \"InvalidTakerFeeTokenError(address)\""}],"id":288,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5534:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5534:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5527:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":286,"name":"bytes4","nodeType":"ElementaryTypeName","src":"5527:6:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5527:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"argumentTypes":null,"id":292,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"5584:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":284,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5504:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5504:22:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5504:86:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":283,"id":294,"nodeType":"Return","src":"5497:93:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"InvalidTakerFeeTokenError","overrides":null,"parameters":{"id":280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","overrides":null,"scope":296,"src":"5435:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":278,"name":"address","nodeType":"ElementaryTypeName","src":"5435:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"5434:15:0"},"returnParameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":296,"src":"5473:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":281,"name":"bytes","nodeType":"ElementaryTypeName","src":"5473:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"5472:14:0"},"scope":297,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[297],"name":"LibTransformERC20RichErrors","scope":298}],"license":"Apache-2.0"}},"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/IERC20Transformer.sol":{"id":1,"ast":{"absolutePath":"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/IERC20Transformer.sol","id":319,"exportedSymbols":{"IERC20Transformer":[318]},"nodeType":"SourceUnit","src":"619:1061:1","nodes":[{"id":299,"nodeType":"PragmaDirective","src":"619:23:1","nodes":[],"literals":["solidity","^","0.6",".5"]},{"id":300,"nodeType":"PragmaDirective","src":"643:33:1","nodes":[],"literals":["experimental","ABIEncoderV2"]},{"id":301,"nodeType":"ImportDirective","src":"678:66:1","nodes":[],"absolutePath":"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/IERC20TokenV06.sol","file":"@0x/contracts-erc20/contracts/src/v06/IERC20TokenV06.sol","scope":319,"sourceUnit":1072,"symbolAliases":[],"unitAlias":""},{"id":318,"nodeType":"ContractDefinition","src":"824:855:1","nodes":[{"id":309,"nodeType":"StructDefinition","src":"956:340:1","nodes":[],"canonicalName":"IERC20Transformer.TransformContext","members":[{"constant":false,"id":304,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","overrides":null,"scope":309,"src":"1050:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":303,"name":"address","nodeType":"ElementaryTypeName","src":"1050:15:1","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"value":null,"visibility":"internal"},{"constant":false,"id":306,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","overrides":null,"scope":309,"src":"1190:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":305,"name":"address","nodeType":"ElementaryTypeName","src":"1190:15:1","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"value":null,"visibility":"internal"},{"constant":false,"id":308,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":309,"src":"1279:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":307,"name":"bytes","nodeType":"ElementaryTypeName","src":"1279:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"name":"TransformContext","scope":318,"visibility":"public"},{"id":317,"nodeType":"FunctionDefinition","src":"1589:88:1","nodes":[],"documentation":{"id":310,"nodeType":"StructuredDocumentation","src":"1302:282:1","text":"@dev Called from `TransformERC20.transformERC20()`. This will be\n      delegatecalled in the context of the FlashWallet instance being used.\n @param context Context information.\n @return success The success bytes (`LibERC20Transformer.TRANSFORMER_SUCCESS`)."},"functionSelector":"832b24bb","implemented":false,"kind":"function","modifiers":[],"name":"transform","overrides":null,"parameters":{"id":313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"context","nodeType":"VariableDeclaration","overrides":null,"scope":317,"src":"1608:33:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_TransformContext_$309_calldata_ptr","typeString":"struct IERC20Transformer.TransformContext"},"typeName":{"contractScope":null,"id":311,"name":"TransformContext","nodeType":"UserDefinedTypeName","referencedDeclaration":309,"src":"1608:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_TransformContext_$309_storage_ptr","typeString":"struct IERC20Transformer.TransformContext"}},"value":null,"visibility":"internal"}],"src":"1607:35:1"},"returnParameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":315,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","overrides":null,"scope":317,"src":"1661:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":314,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1661:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":null,"visibility":"internal"}],"src":"1660:16:1"},"scope":318,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"746:78:1","text":"@dev A transformation callback used in `TransformERC20.transformERC20()`."},"fullyImplemented":false,"linearizedBaseContracts":[318],"name":"IERC20Transformer","scope":319}],"license":"Apache-2.0"}},"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol":{"id":2,"ast":{"absolutePath":"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol","id":774,"exportedSymbols":{"LibERC20Transformer":[773]},"nodeType":"SourceUnit","src":"619:5826:2","nodes":[{"id":320,"nodeType":"PragmaDirective","src":"619:23:2","nodes":[],"literals":["solidity","^","0.6",".5"]},{"id":321,"nodeType":"PragmaDirective","src":"643:33:2","nodes":[],"literals":["experimental","ABIEncoderV2"]},{"id":322,"nodeType":"ImportDirective","src":"678:66:2","nodes":[],"absolutePath":"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/IERC20TokenV06.sol","file":"@0x/contracts-erc20/contracts/src/v06/IERC20TokenV06.sol","scope":774,"sourceUnit":1072,"symbolAliases":[],"unitAlias":""},{"id":323,"nodeType":"ImportDirective","src":"745:68:2","nodes":[],"absolutePath":"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol","file":"@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol","scope":774,"sourceUnit":1423,"symbolAliases":[],"unitAlias":""},{"id":773,"nodeType":"ContractDefinition","src":"815:5629:2","nodes":[{"id":326,"nodeType":"UsingForDirective","src":"849:42:2","nodes":[],"libraryName":{"contractScope":null,"id":324,"name":"LibERC20TokenV06","nodeType":"UserDefinedTypeName","referencedDeclaration":1422,"src":"855:16:2","typeDescriptions":{"typeIdentifier":"t_contract$_LibERC20TokenV06_$1422","typeString":"library LibERC20TokenV06"}},"typeName":{"contractScope":null,"id":325,"name":"IERC20TokenV06","nodeType":"UserDefinedTypeName","referencedDeclaration":1071,"src":"876:14:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}}},{"id":330,"nodeType":"VariableDeclaration","src":"936:88:2","nodes":[],"constant":true,"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"897:34:2","text":"@dev ETH pseudo-token address."},"mutability":"constant","name":"ETH_TOKEN_ADDRESS","overrides":null,"scope":773,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":328,"name":"address","nodeType":"ElementaryTypeName","src":"936:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"argumentTypes":null,"hexValue":"307845656565654565656545654565654565456545656545454565656565456565656565656545456545","id":329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"982:42:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"value":"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"},"visibility":"internal"},{"id":336,"nodeType":"VariableDeclaration","src":"1061:78:2","nodes":[],"constant":true,"documentation":{"id":331,"nodeType":"StructuredDocumentation","src":"1030:26:2","text":"@dev ETH pseudo-token."},"mutability":"constant","name":"ETH_TOKEN","overrides":null,"scope":773,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"},"typeName":{"contractScope":null,"id":332,"name":"IERC20TokenV06","nodeType":"UserDefinedTypeName","referencedDeclaration":1071,"src":"1061:14:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}},"value":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":334,"name":"ETH_TOKEN_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"1121:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":333,"name":"IERC20TokenV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"1106:14:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20TokenV06_$1071_$","typeString":"type(contract IERC20TokenV06)"}},"id":335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1106:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}},"visibility":"internal"},{"id":340,"nodeType":"VariableDeclaration","src":"1288:57:2","nodes":[],"constant":true,"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"1145:138:2","text":"@dev Return value indicating success in `IERC20Transformer.transform()`.\n      This is just `keccak256('TRANSFORMER_SUCCESS')`."},"mutability":"constant","name":"TRANSFORMER_SUCCESS","overrides":null,"scope":773,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":338,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1288:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"argumentTypes":null,"hexValue":"30783133633939323965","id":339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1335:10:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_331977374_by_1","typeString":"int_const 331977374"},"value":"0x13c9929e"},"visibility":"internal"},{"id":370,"nodeType":"FunctionDefinition","src":"1746:272:2","nodes":[],"body":{"id":369,"nodeType":"Block","src":"1872:146:2","nodes":[],"statements":[{"condition":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":351,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"1897:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}],"id":350,"name":"isTokenETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"1886:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_contract$_IERC20TokenV06_$1071_$returns$_t_bool_$","typeString":"function (contract IERC20TokenV06) pure returns (bool)"}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1886:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":367,"nodeType":"Block","src":"1955:57:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":363,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"1990:2:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":364,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"1994:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":360,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"1969:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"compatTransfer","nodeType":"MemberAccess","referencedDeclaration":1172,"src":"1969:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20TokenV06_$1071_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20TokenV06_$1071_$","typeString":"function (contract IERC20TokenV06,address,uint256)"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1969:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":366,"nodeType":"ExpressionStatement","src":"1969:32:2"}]},"id":368,"nodeType":"IfStatement","src":"1882:130:2","trueBody":{"id":359,"nodeType":"Block","src":"1905:44:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":356,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"1931:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":353,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"1919:2:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1919:11:2","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1919:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":358,"nodeType":"ExpressionStatement","src":"1919:19:2"}]}}]},"documentation":{"id":341,"nodeType":"StructuredDocumentation","src":"1352:389:2","text":"@dev Transfer ERC20 tokens and ETH. Since it relies on `transfer` it may run out of gas when\n the `recipient` is a smart contract wallet. See `unsafeTransformerTransfer` for smart contract\n compatible transfer.\n @param token An ERC20 or the ETH pseudo-token address (`ETH_TOKEN_ADDRESS`).\n @param to The recipient.\n @param amount The transfer amount."},"implemented":true,"kind":"function","modifiers":[],"name":"transformerTransfer","overrides":null,"parameters":{"id":348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","overrides":null,"scope":370,"src":"1784:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"},"typeName":{"contractScope":null,"id":342,"name":"IERC20TokenV06","nodeType":"UserDefinedTypeName","referencedDeclaration":1071,"src":"1784:14:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}},"value":null,"visibility":"internal"},{"constant":false,"id":345,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":370,"src":"1814:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":344,"name":"address","nodeType":"ElementaryTypeName","src":"1814:15:2","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"value":null,"visibility":"internal"},{"constant":false,"id":347,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","overrides":null,"scope":370,"src":"1842:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":346,"name":"uint256","nodeType":"ElementaryTypeName","src":"1842:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1774:88:2"},"returnParameters":{"id":349,"nodeType":"ParameterList","parameters":[],"src":"1872:0:2"},"scope":773,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":408,"nodeType":"FunctionDefinition","src":"2377:372:2","nodes":[],"body":{"id":407,"nodeType":"Block","src":"2509:240:2","nodes":[],"statements":[{"condition":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":381,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"2534:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}],"id":380,"name":"isTokenETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"2523:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_contract$_IERC20TokenV06_$1071_$returns$_t_bool_$","typeString":"function (contract IERC20TokenV06) pure returns (bool)"}},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2523:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":405,"nodeType":"Block","src":"2686:57:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":401,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"2721:2:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":402,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":377,"src":"2725:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":398,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"2700:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"compatTransfer","nodeType":"MemberAccess","referencedDeclaration":1172,"src":"2700:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20TokenV06_$1071_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20TokenV06_$1071_$","typeString":"function (contract IERC20TokenV06,address,uint256)"}},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2700:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":404,"nodeType":"ExpressionStatement","src":"2700:32:2"}]},"id":406,"nodeType":"IfStatement","src":"2519:224:2","trueBody":{"id":397,"nodeType":"Block","src":"2542:138:2","statements":[{"assignments":[384,null],"declarations":[{"constant":false,"id":384,"mutability":"mutable","name":"sent","nodeType":"VariableDeclaration","overrides":null,"scope":397,"src":"2557:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":383,"name":"bool","nodeType":"ElementaryTypeName","src":"2557:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},null],"id":391,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"","id":389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2595:2:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":null,"id":385,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"2572:2:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2572:7:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"argumentTypes":null,"id":387,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":377,"src":"2587:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2572:22:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2572:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2556:42:2"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":393,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"2620:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4c696245524332305472616e73666f726d65722f4641494c45445f544f5f53454e445f4554484552","id":394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:42:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_452746a75002a7cc100229165a1c7d92381b171ca0bb4489c48a1abd728ba52b","typeString":"literal_string \"LibERC20Transformer/FAILED_TO_SEND_ETHER\""},"value":"LibERC20Transformer/FAILED_TO_SEND_ETHER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_452746a75002a7cc100229165a1c7d92381b171ca0bb4489c48a1abd728ba52b","typeString":"literal_string \"LibERC20Transformer/FAILED_TO_SEND_ETHER\""}],"id":392,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2612:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2612:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":396,"nodeType":"ExpressionStatement","src":"2612:57:2"}]}}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"2024:348:2","text":"@dev Transfer ERC20 tokens and ETH. For ETH transfer. It's not safe from re-entrancy attacks and the\n caller is responsible for gurading against a potential re-entrancy attack.\n @param token An ERC20 or the ETH pseudo-token address (`ETH_TOKEN_ADDRESS`).\n @param to The recipient.\n @param amount The transfer amount."},"implemented":true,"kind":"function","modifiers":[],"name":"unsafeTransformerTransfer","overrides":null,"parameters":{"id":378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","overrides":null,"scope":408,"src":"2421:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"},"typeName":{"contractScope":null,"id":372,"name":"IERC20TokenV06","nodeType":"UserDefinedTypeName","referencedDeclaration":1071,"src":"2421:14:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}},"value":null,"visibility":"internal"},{"constant":false,"id":375,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":408,"src":"2451:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":374,"name":"address","nodeType":"ElementaryTypeName","src":"2451:15:2","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"value":null,"visibility":"internal"},{"constant":false,"id":377,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","overrides":null,"scope":408,"src":"2479:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":376,"name":"uint256","nodeType":"ElementaryTypeName","src":"2479:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2411:88:2"},"returnParameters":{"id":379,"nodeType":"ParameterList","parameters":[],"src":"2509:0:2"},"scope":773,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":424,"nodeType":"FunctionDefinition","src":"2918:136:2","nodes":[],"body":{"id":423,"nodeType":"Block","src":"2995:59:2","nodes":[],"statements":[{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":418,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"3020:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}],"id":417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3012:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":416,"name":"address","nodeType":"ElementaryTypeName","src":"3012:7:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3012:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":420,"name":"ETH_TOKEN_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"3030:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3012:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":415,"id":422,"nodeType":"Return","src":"3005:42:2"}]},"documentation":{"id":409,"nodeType":"StructuredDocumentation","src":"2755:158:2","text":"@dev Check if a token is the ETH pseudo-token.\n @param token The token to check.\n @return isETH `true` if the token is the ETH pseudo-token."},"implemented":true,"kind":"function","modifiers":[],"name":"isTokenETH","overrides":null,"parameters":{"id":412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":411,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","overrides":null,"scope":424,"src":"2938:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"},"typeName":{"contractScope":null,"id":410,"name":"IERC20TokenV06","nodeType":"UserDefinedTypeName","referencedDeclaration":1071,"src":"2938:14:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}},"value":null,"visibility":"internal"}],"src":"2937:22:2"},"returnParameters":{"id":415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":414,"mutability":"mutable","name":"isETH","nodeType":"VariableDeclaration","overrides":null,"scope":424,"src":"2983:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":413,"name":"bool","nodeType":"ElementaryTypeName","src":"2983:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"2982:12:2"},"scope":773,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":448,"nodeType":"FunctionDefinition","src":"3298:232:2","nodes":[],"body":{"id":447,"nodeType":"Block","src":"3407:123:2","nodes":[],"statements":[{"condition":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":435,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"3432:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}],"id":434,"name":"isTokenETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"3421:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_contract$_IERC20TokenV06_$1071_$returns$_t_bool_$","typeString":"function (contract IERC20TokenV06) pure returns (bool)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3421:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":441,"nodeType":"IfStatement","src":"3417:68:2","trueBody":{"id":440,"nodeType":"Block","src":"3440:45:2","statements":[{"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":437,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"3461:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3461:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":433,"id":439,"nodeType":"Return","src":"3454:20:2"}]}},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":444,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"3517:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":442,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"3501:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1054,"src":"3501:15:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3501:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":433,"id":446,"nodeType":"Return","src":"3494:29:2"}]},"documentation":{"id":425,"nodeType":"StructuredDocumentation","src":"3060:233:2","text":"@dev Check the balance of an ERC20 token or ETH.\n @param token An ERC20 or the ETH pseudo-token address (`ETH_TOKEN_ADDRESS`).\n @param owner Holder of the tokens.\n @return tokenBalance The balance of `owner`."},"implemented":true,"kind":"function","modifiers":[],"name":"getTokenBalanceOf","overrides":null,"parameters":{"id":430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":427,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","overrides":null,"scope":448,"src":"3325:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"},"typeName":{"contractScope":null,"id":426,"name":"IERC20TokenV06","nodeType":"UserDefinedTypeName","referencedDeclaration":1071,"src":"3325:14:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}},"value":null,"visibility":"internal"},{"constant":false,"id":429,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","overrides":null,"scope":448,"src":"3347:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":428,"name":"address","nodeType":"ElementaryTypeName","src":"3347:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3324:37:2"},"returnParameters":{"id":433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":432,"mutability":"mutable","name":"tokenBalance","nodeType":"VariableDeclaration","overrides":null,"scope":448,"src":"3385:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":431,"name":"uint256","nodeType":"ElementaryTypeName","src":"3385:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"3384:22:2"},"scope":773,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":717,"nodeType":"FunctionDefinition","src":"3707:1391:2","nodes":[],"body":{"id":716,"nodeType":"Block","src":"3791:1307:2","nodes":[],"statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":456,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"3886:5:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3895:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3886:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":473,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"3988:5:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"hexValue":"30783830","id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3996:4:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"0x80"},"src":"3988:12:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":496,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"4108:5:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"hexValue":"30784646","id":497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4117:4:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"4108:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":525,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"4261:5:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"hexValue":"307846464646","id":526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4270:6:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xFFFF"},"src":"4261:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":571,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"4480:5:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"hexValue":"3078464646464646","id":572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4489:8:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_16777215_by_1","typeString":"int_const 16777215"},"value":"0xFFFFFF"},"src":"4480:17:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":710,"nodeType":"Block","src":"4764:328:2","statements":[{"expression":{"argumentTypes":null,"id":639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":634,"name":"rlpNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"4778:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"35","id":637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4799:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"}],"id":636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4789:9:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":635,"name":"bytes","nodeType":"ElementaryTypeName","src":"4793:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4789:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"4778:23:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":640,"nodeType":"ExpressionStatement","src":"4778:23:2"},{"expression":{"argumentTypes":null,"id":645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":641,"name":"rlpNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"4815:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":643,"indexExpression":{"argumentTypes":null,"hexValue":"30","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4824:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4815:11:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"30783834","id":644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4829:4:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_132_by_1","typeString":"int_const 132"},"value":"0x84"},"src":"4815:18:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":646,"nodeType":"ExpressionStatement","src":"4815:18:2"},{"expression":{"argumentTypes":null,"id":662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":647,"name":"rlpNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"4847:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":649,"indexExpression":{"argumentTypes":null,"hexValue":"31","id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4856:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4847:11:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":654,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"4875:5:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"argumentTypes":null,"hexValue":"30784646303030303030","id":655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4883:10:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_4278190080_by_1","typeString":"int_const 4278190080"},"value":"0xFF000000"},"src":"4875:18:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"id":657,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4874:20:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"argumentTypes":null,"hexValue":"3234","id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4898:2:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"src":"4874:26:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4868:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":652,"name":"uint8","nodeType":"ElementaryTypeName","src":"4868:5:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4868:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4861:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":650,"name":"bytes1","nodeType":"ElementaryTypeName","src":"4861:6:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4861:41:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"4847:55:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":663,"nodeType":"ExpressionStatement","src":"4847:55:2"},{"expression":{"argumentTypes":null,"id":679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":664,"name":"rlpNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"4916:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":666,"indexExpression":{"argumentTypes":null,"hexValue":"32","id":665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4925:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4916:11:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":671,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"4944:5:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"argumentTypes":null,"hexValue":"3078464630303030","id":672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4952:8:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_16711680_by_1","typeString":"int_const 16711680"},"value":"0xFF0000"},"src":"4944:16:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"id":674,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4943:18:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"argumentTypes":null,"hexValue":"3136","id":675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4965:2:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"4943:24:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4937:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":669,"name":"uint8","nodeType":"ElementaryTypeName","src":"4937:5:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4937:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4930:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":667,"name":"bytes1","nodeType":"ElementaryTypeName","src":"4930:6:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4930:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"4916:53:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":680,"nodeType":"ExpressionStatement","src":"4916:53:2"},{"expression":{"argumentTypes":null,"id":696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":681,"name":"rlpNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"4983:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":683,"indexExpression":{"argumentTypes":null,"hexValue":"33","id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4992:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4983:11:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":688,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"5011:5:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"argumentTypes":null,"hexValue":"307846463030","id":689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5019:6:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_65280_by_1","typeString":"int_const 65280"},"value":"0xFF00"},"src":"5011:14:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"id":691,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5010:16:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"argumentTypes":null,"hexValue":"38","id":692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5030:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"5010:21:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5004:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":686,"name":"uint8","nodeType":"ElementaryTypeName","src":"5004:5:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5004:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4997:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":684,"name":"bytes1","nodeType":"ElementaryTypeName","src":"4997:6:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4997:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"4983:50:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":697,"nodeType":"ExpressionStatement","src":"4983:50:2"},{"expression":{"argumentTypes":null,"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":698,"name":"rlpNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"5047:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":700,"indexExpression":{"argumentTypes":null,"hexValue":"34","id":699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5056:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5047:11:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":705,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"5074:5:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5068:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":703,"name":"uint8","nodeType":"ElementaryTypeName","src":"5068:5:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5068:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5061:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":701,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5061:6:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5061:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"5047:34:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":709,"nodeType":"ExpressionStatement","src":"5047:34:2"}]},"id":711,"nodeType":"IfStatement","src":"4476:616:2","trueBody":{"id":633,"nodeType":"Block","src":"4499:259:2","statements":[{"expression":{"argumentTypes":null,"id":579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":574,"name":"rlpNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"4513:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"34","id":577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4534:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}],"id":576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4524:9:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":575,"name":"bytes","nodeType":"ElementaryTypeName","src":"4528:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4524:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"4513:23:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":580,"nodeType":"ExpressionStatement","src":"4513:23:2"},{"expression":{"argumentTypes":null,"id":585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":581,"name":"rlpNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"4550:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":583,"indexExpression":{"argumentTypes":null,"hexValue":"30","id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4559:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4550:11:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"30783833","id":584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4564:4:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_131_by_1","typeString":"int_const 131"},"value":"0x83"},"src":"4550:18:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":586,"nodeType":"ExpressionStatement","src":"4550:18:2"},{"expression":{"argumentTypes":null,"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":587,"name":"rlpNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"4582:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":589,"indexExpression":{"argumentTypes":null,"hexValue":"31","id":588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4591:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4582:11:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":594,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"4610:5:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"argumentTypes":null,"hexValue":"3078464630303030","id":595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4618:8:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_16711680_by_1","typeString":"int_const 16711680"},"value":"0xFF0000"},"src":"4610:16:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"id":597,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4609:18:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"argumentTypes":null,"hexValue":"3136","id":598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4631:2:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"4609:24:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4603:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":592,"name":"uint8","nodeType":"ElementaryTypeName","src":"4603:5:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4603:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4596:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":590,"name":"bytes1","nodeType":"ElementaryTypeName","src":"4596:6:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4596:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"4582:53:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":603,"nodeType":"ExpressionStatement","src":"4582:53:2"},{"expression":{"argumentTypes":null,"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":604,"name":"rlpNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"4649:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":606,"indexExpression":{"argumentTypes":null,"hexValue":"32","id":605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4658:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4649:11:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":611,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"4677:5:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"argumentTypes":null,"hexValue":"307846463030","id":612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4685:6:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_65280_by_1","typeString":"int_const 65280"},"value":"0xFF00"},"src":"4677:14:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"id":614,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4676:16:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"argumentTypes":null,"hexValue":"38","id":615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4696:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"4676:21:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4670:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":609,"name":"uint8","nodeType":"ElementaryTypeName","src":"4670:5:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4670:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4663:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":607,"name":"bytes1","nodeType":"ElementaryTypeName","src":"4663:6:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4663:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"4649:50:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":620,"nodeType":"ExpressionStatement","src":"4649:50:2"},{"expression":{"argumentTypes":null,"id":631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":621,"name":"rlpNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"4713:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":623,"indexExpression":{"argumentTypes":null,"hexValue":"33","id":622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4722:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4713:11:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":628,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"4740:5:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4734:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":626,"name":"uint8","nodeType":"ElementaryTypeName","src":"4734:5:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4734:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4727:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":624,"name":"bytes1","nodeType":"ElementaryTypeName","src":"4727:6:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4727:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"4713:34:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":632,"nodeType":"ExpressionStatement","src":"4713:34:2"}]}},"id":712,"nodeType":"IfStatement","src":"4257:835:2","trueBody":{"id":570,"nodeType":"Block","src":"4278:192:2","statements":[{"expression":{"argumentTypes":null,"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":528,"name":"rlpNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"4292:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"33","id":531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4313:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}],"id":530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4303:9:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":529,"name":"bytes","nodeType":"ElementaryTypeName","src":"4307:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4303:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"4292:23:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":534,"nodeType":"ExpressionStatement","src":"4292:23:2"},{"expression":{"argumentTypes":null,"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":535,"name":"rlpNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"4329:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":537,"indexExpression":{"argumentTypes":null,"hexValue":"30","id":536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4338:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4329:11:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"30783832","id":538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4343:4:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_130_by_1","typeString":"int_const 130"},"value":"0x82"},"src":"4329:18:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":540,"nodeType":"ExpressionStatement","src":"4329:18:2"},{"expression":{"argumentTypes":null,"id":556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":541,"name":"rlpNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"4361:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":543,"indexExpression":{"argumentTypes":null,"hexValue":"31","id":542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4370:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4361:11:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":548,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"4389:5:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"argumentTypes":null,"hexValue":"307846463030","id":549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4397:6:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_65280_by_1","typeString":"int_const 65280"},"value":"0xFF00"},"src":"4389:14:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"id":551,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4388:16:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"argumentTypes":null,"hexValue":"38","id":552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4408:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"4388:21:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4382:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":546,"name":"uint8","nodeType":"ElementaryTypeName","src":"4382:5:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4382:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4375:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":544,"name":"bytes1","nodeType":"ElementaryTypeName","src":"4375:6:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4375:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"4361:50:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":557,"nodeType":"ExpressionStatement","src":"4361:50:2"},{"expression":{"argumentTypes":null,"id":568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":558,"name":"rlpNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"4425:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":560,"indexExpression":{"argumentTypes":null,"hexValue":"32","id":559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4434:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4425:11:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":565,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"4452:5:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4446:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":563,"name":"uint8","nodeType":"ElementaryTypeName","src":"4446:5:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4446:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4439:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":561,"name":"bytes1","nodeType":"ElementaryTypeName","src":"4439:6:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4439:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"4425:34:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":569,"nodeType":"ExpressionStatement","src":"4425:34:2"}]}},"id":713,"nodeType":"IfStatement","src":"4104:988:2","trueBody":{"id":524,"nodeType":"Block","src":"4123:128:2","statements":[{"expression":{"argumentTypes":null,"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":499,"name":"rlpNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"4137:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"32","id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4158:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4148:9:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":500,"name":"bytes","nodeType":"ElementaryTypeName","src":"4152:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4148:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"4137:23:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":505,"nodeType":"ExpressionStatement","src":"4137:23:2"},{"expression":{"argumentTypes":null,"id":510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":506,"name":"rlpNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"4174:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":508,"indexExpression":{"argumentTypes":null,"hexValue":"30","id":507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4183:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4174:11:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"30783831","id":509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4188:4:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_129_by_1","typeString":"int_const 129"},"value":"0x81"},"src":"4174:18:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":511,"nodeType":"ExpressionStatement","src":"4174:18:2"},{"expression":{"argumentTypes":null,"id":522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":512,"name":"rlpNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"4206:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":514,"indexExpression":{"argumentTypes":null,"hexValue":"31","id":513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4215:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4206:11:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":519,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"4233:5:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4227:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":517,"name":"uint8","nodeType":"ElementaryTypeName","src":"4227:5:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4227:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4220:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":515,"name":"bytes1","nodeType":"ElementaryTypeName","src":"4220:6:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4220:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"4206:34:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":523,"nodeType":"ExpressionStatement","src":"4206:34:2"}]}},"id":714,"nodeType":"IfStatement","src":"3984:1108:2","trueBody":{"id":495,"nodeType":"Block","src":"4002:96:2","statements":[{"expression":{"argumentTypes":null,"id":481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":476,"name":"rlpNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"4016:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"31","id":479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4037:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4027:9:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":477,"name":"bytes","nodeType":"ElementaryTypeName","src":"4031:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4027:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"4016:23:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":482,"nodeType":"ExpressionStatement","src":"4016:23:2"},{"expression":{"argumentTypes":null,"id":493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":483,"name":"rlpNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"4053:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":485,"indexExpression":{"argumentTypes":null,"hexValue":"30","id":484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4062:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4053:11:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":490,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"4080:5:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4074:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":488,"name":"uint8","nodeType":"ElementaryTypeName","src":"4074:5:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4074:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4067:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":486,"name":"bytes1","nodeType":"ElementaryTypeName","src":"4067:6:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4067:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"4053:34:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":494,"nodeType":"ExpressionStatement","src":"4053:34:2"}]}},"id":715,"nodeType":"IfStatement","src":"3882:1210:2","trueBody":{"id":472,"nodeType":"Block","src":"3898:80:2","statements":[{"expression":{"argumentTypes":null,"id":464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":459,"name":"rlpNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"3912:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"31","id":462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3933:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3923:9:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":460,"name":"bytes","nodeType":"ElementaryTypeName","src":"3927:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3923:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"3912:23:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":465,"nodeType":"ExpressionStatement","src":"3912:23:2"},{"expression":{"argumentTypes":null,"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":466,"name":"rlpNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"3949:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":468,"indexExpression":{"argumentTypes":null,"hexValue":"30","id":467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3958:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3949:11:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"30783830","id":469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3963:4:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"0x80"},"src":"3949:18:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":471,"nodeType":"ExpressionStatement","src":"3949:18:2"}]}}]},"documentation":{"id":449,"nodeType":"StructuredDocumentation","src":"3536:166:2","text":"@dev RLP-encode a 32-bit or less account nonce.\n @param nonce A positive integer in the range 0 <= nonce < 2^32.\n @return rlpNonce The RLP encoding."},"implemented":true,"kind":"function","modifiers":[],"name":"rlpEncodeNonce","overrides":null,"parameters":{"id":452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":451,"mutability":"mutable","name":"nonce","nodeType":"VariableDeclaration","overrides":null,"scope":717,"src":"3731:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":450,"name":"uint32","nodeType":"ElementaryTypeName","src":"3731:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":null,"visibility":"internal"}],"src":"3730:14:2"},"returnParameters":{"id":455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":454,"mutability":"mutable","name":"rlpNonce","nodeType":"VariableDeclaration","overrides":null,"scope":717,"src":"3768:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":453,"name":"bytes","nodeType":"ElementaryTypeName","src":"3768:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"3767:23:2"},"scope":773,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":772,"nodeType":"FunctionDefinition","src":"5441:1001:2","nodes":[],"body":{"id":771,"nodeType":"Block","src":"5597:845:2","nodes":[],"statements":[{"assignments":[728],"declarations":[{"constant":false,"id":728,"mutability":"mutable","name":"rlpNonce","nodeType":"VariableDeclaration","overrides":null,"scope":771,"src":"5881:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":727,"name":"bytes","nodeType":"ElementaryTypeName","src":"5881:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"id":732,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":730,"name":"deploymentNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"5920:15:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":729,"name":"rlpEncodeNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"5905:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint32_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint32) pure returns (bytes memory)"}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5905:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5881:55:2"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_213_by_1","typeString":"int_const 213"},"id":748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"30784330","id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6154:4:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"0xC0"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"hexValue":"3231","id":747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6161:2:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"6154:9:2","typeDescriptions":{"typeIdentifier":"t_rational_213_by_1","typeString":"int_const 213"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":749,"name":"rlpNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"6166:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6166:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6154:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6148:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":744,"name":"uint8","nodeType":"ElementaryTypeName","src":"6148:5:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6148:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6141:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":742,"name":"bytes1","nodeType":"ElementaryTypeName","src":"6141:6:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6141:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_148_by_1","typeString":"int_const 148"},"id":760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"30783830","id":758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6230:4:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"0x80"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"hexValue":"3230","id":759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6237:2:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"6230:9:2","typeDescriptions":{"typeIdentifier":"t_rational_148_by_1","typeString":"int_const 148"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_148_by_1","typeString":"int_const 148"}],"id":757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6224:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":756,"name":"uint8","nodeType":"ElementaryTypeName","src":"6224:5:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6224:16:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6217:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":754,"name":"bytes1","nodeType":"ElementaryTypeName","src":"6217:6:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6217:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},{"argumentTypes":null,"id":763,"name":"deployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"6275:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":764,"name":"rlpNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"6317:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"},{"typeIdentifier":"t_bytes1","typeString":"bytes1"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":740,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6091:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6091:16:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6091:264:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":739,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6052:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6052:329:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6019:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":737,"name":"uint256","nodeType":"ElementaryTypeName","src":"6019:7:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6019:384:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5990:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":735,"name":"uint160","nodeType":"ElementaryTypeName","src":"5990:7:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5990:431:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5965:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":733,"name":"address","nodeType":"ElementaryTypeName","src":"5965:7:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5965:470:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"functionReturnParameters":726,"id":770,"nodeType":"Return","src":"5946:489:2"}]},"documentation":{"id":718,"nodeType":"StructuredDocumentation","src":"5104:332:2","text":"@dev Compute the expected deployment address by `deployer` at\n      the nonce given by `deploymentNonce`.\n @param deployer The address of the deployer.\n @param deploymentNonce The nonce that the deployer had when deploying\n        a contract.\n @return deploymentAddress The deployment address."},"implemented":true,"kind":"function","modifiers":[],"name":"getDeployedAddress","overrides":null,"parameters":{"id":723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":720,"mutability":"mutable","name":"deployer","nodeType":"VariableDeclaration","overrides":null,"scope":772,"src":"5469:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":719,"name":"address","nodeType":"ElementaryTypeName","src":"5469:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":722,"mutability":"mutable","name":"deploymentNonce","nodeType":"VariableDeclaration","overrides":null,"scope":772,"src":"5487:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":721,"name":"uint32","nodeType":"ElementaryTypeName","src":"5487:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":null,"visibility":"internal"}],"src":"5468:42:2"},"returnParameters":{"id":726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":725,"mutability":"mutable","name":"deploymentAddress","nodeType":"VariableDeclaration","overrides":null,"scope":772,"src":"5558:33:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"5558:15:2","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"value":null,"visibility":"internal"}],"src":"5557:35:2"},"scope":773,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[773],"name":"LibERC20Transformer","scope":774}],"license":"Apache-2.0"}},"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol":{"id":3,"ast":{"absolutePath":"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol","id":908,"exportedSymbols":{"PayTakerTransformer":[907]},"nodeType":"SourceUnit","src":"619:2258:3","nodes":[{"id":775,"nodeType":"PragmaDirective","src":"619:23:3","nodes":[],"literals":["solidity","^","0.6",".5"]},{"id":776,"nodeType":"PragmaDirective","src":"643:33:3","nodes":[],"literals":["experimental","ABIEncoderV2"]},{"id":777,"nodeType":"ImportDirective","src":"678:75:3","nodes":[],"absolutePath":"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol","file":"@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol","scope":908,"sourceUnit":2413,"symbolAliases":[],"unitAlias":""},{"id":778,"nodeType":"ImportDirective","src":"754:66:3","nodes":[],"absolutePath":"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibSafeMathV06.sol","file":"@0x/contracts-utils/contracts/src/v06/LibSafeMathV06.sol","scope":908,"sourceUnit":2346,"symbolAliases":[],"unitAlias":""},{"id":779,"nodeType":"ImportDirective","src":"821:66:3","nodes":[],"absolutePath":"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/IERC20TokenV06.sol","file":"@0x/contracts-erc20/contracts/src/v06/IERC20TokenV06.sol","scope":908,"sourceUnit":1072,"symbolAliases":[],"unitAlias":""},{"id":780,"nodeType":"ImportDirective","src":"888:68:3","nodes":[],"absolutePath":"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol","file":"@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol","scope":908,"sourceUnit":1423,"symbolAliases":[],"unitAlias":""},{"id":781,"nodeType":"ImportDirective","src":"957:51:3","nodes":[],"absolutePath":"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/errors/LibTransformERC20RichErrors.sol","file":"../errors/LibTransformERC20RichErrors.sol","scope":908,"sourceUnit":298,"symbolAliases":[],"unitAlias":""},{"id":782,"nodeType":"ImportDirective","src":"1009:27:3","nodes":[],"absolutePath":"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol","file":"./Transformer.sol","scope":908,"sourceUnit":991,"symbolAliases":[],"unitAlias":""},{"id":783,"nodeType":"ImportDirective","src":"1037:35:3","nodes":[],"absolutePath":"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol","file":"./LibERC20Transformer.sol","scope":908,"sourceUnit":774,"symbolAliases":[],"unitAlias":""},{"id":907,"nodeType":"ContractDefinition","src":"1133:1743:3","nodes":[{"id":789,"nodeType":"UsingForDirective","src":"1222:33:3","nodes":[],"libraryName":{"contractScope":null,"id":787,"name":"LibRichErrorsV06","nodeType":"UserDefinedTypeName","referencedDeclaration":2412,"src":"1228:16:3","typeDescriptions":{"typeIdentifier":"t_contract$_LibRichErrorsV06_$2412","typeString":"library LibRichErrorsV06"}},"typeName":{"id":788,"name":"bytes","nodeType":"ElementaryTypeName","src":"1249:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},{"id":792,"nodeType":"UsingForDirective","src":"1260:33:3","nodes":[],"libraryName":{"contractScope":null,"id":790,"name":"LibSafeMathV06","nodeType":"UserDefinedTypeName","referencedDeclaration":2345,"src":"1266:14:3","typeDescriptions":{"typeIdentifier":"t_contract$_LibSafeMathV06_$2345","typeString":"library LibSafeMathV06"}},"typeName":{"id":791,"name":"uint256","nodeType":"ElementaryTypeName","src":"1285:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":795,"nodeType":"UsingForDirective","src":"1298:45:3","nodes":[],"libraryName":{"contractScope":null,"id":793,"name":"LibERC20Transformer","nodeType":"UserDefinedTypeName","referencedDeclaration":773,"src":"1304:19:3","typeDescriptions":{"typeIdentifier":"t_contract$_LibERC20Transformer_$773","typeString":"library LibERC20Transformer"}},"typeName":{"contractScope":null,"id":794,"name":"IERC20TokenV06","nodeType":"UserDefinedTypeName","referencedDeclaration":1071,"src":"1328:14:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}}},{"id":802,"nodeType":"StructDefinition","src":"1420:262:3","nodes":[],"canonicalName":"PayTakerTransformer.TransformData","members":[{"constant":false,"id":798,"mutability":"mutable","name":"tokens","nodeType":"VariableDeclaration","overrides":null,"scope":802,"src":"1499:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20TokenV06_$1071_$dyn_storage_ptr","typeString":"contract IERC20TokenV06[]"},"typeName":{"baseType":{"contractScope":null,"id":796,"name":"IERC20TokenV06","nodeType":"UserDefinedTypeName","referencedDeclaration":1071,"src":"1499:14:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}},"id":797,"length":null,"nodeType":"ArrayTypeName","src":"1499:16:3","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20TokenV06_$1071_$dyn_storage_ptr","typeString":"contract IERC20TokenV06[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":801,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","overrides":null,"scope":802,"src":"1658:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":799,"name":"uint256","nodeType":"ElementaryTypeName","src":"1658:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":800,"length":null,"nodeType":"ArrayTypeName","src":"1658:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"name":"TransformData","scope":907,"visibility":"public"},{"id":810,"nodeType":"VariableDeclaration","src":"1724:50:3","nodes":[],"constant":true,"documentation":{"id":803,"nodeType":"StructuredDocumentation","src":"1688:31:3","text":"@dev Maximum uint256 value."},"mutability":"constant","name":"MAX_UINT256","overrides":null,"scope":907,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":804,"name":"uint256","nodeType":"ElementaryTypeName","src":"1724:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1771:2:3","subExpression":{"argumentTypes":null,"hexValue":"31","id":807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1772:1:3","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}],"id":806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1763:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":805,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:3","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1763:11:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"id":817,"nodeType":"FunctionDefinition","src":"1816:37:3","nodes":[],"body":{"id":816,"nodeType":"Block","src":"1851:2:3","nodes":[],"statements":[]},"documentation":{"id":811,"nodeType":"StructuredDocumentation","src":"1781:30:3","text":"@dev Create this contract."},"implemented":true,"kind":"constructor","modifiers":[{"arguments":[],"id":814,"modifierName":{"argumentTypes":null,"id":813,"name":"Transformer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"1837:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Transformer_$990_$","typeString":"type(contract Transformer)"}},"nodeType":"ModifierInvocation","src":"1837:13:3"}],"name":"","overrides":null,"parameters":{"id":812,"nodeType":"ParameterList","parameters":[],"src":"1827:2:3"},"returnParameters":{"id":815,"nodeType":"ParameterList","parameters":[],"src":"1851:0:3"},"scope":907,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":906,"nodeType":"FunctionDefinition","src":"2033:841:3","nodes":[],"body":{"id":905,"nodeType":"Block","src":"2130:744:3","nodes":[],"statements":[{"assignments":[827],"declarations":[{"constant":false,"id":827,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":905,"src":"2140:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TransformData_$802_memory_ptr","typeString":"struct PayTakerTransformer.TransformData"},"typeName":{"contractScope":null,"id":826,"name":"TransformData","nodeType":"UserDefinedTypeName","referencedDeclaration":802,"src":"2140:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_TransformData_$802_storage_ptr","typeString":"struct PayTakerTransformer.TransformData"}},"value":null,"visibility":"internal"}],"id":835,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":830,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"2179:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_TransformContext_$309_calldata_ptr","typeString":"struct IERC20Transformer.TransformContext calldata"}},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","referencedDeclaration":308,"src":"2179:12:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"argumentTypes":null,"components":[{"argumentTypes":null,"id":832,"name":"TransformData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"2194:13:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_TransformData_$802_storage_ptr_$","typeString":"type(struct PayTakerTransformer.TransformData storage pointer)"}}],"id":833,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2193:15:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_TransformData_$802_storage_ptr_$","typeString":"type(struct PayTakerTransformer.TransformData storage pointer)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_type$_t_struct$_TransformData_$802_storage_ptr_$","typeString":"type(struct PayTakerTransformer.TransformData storage pointer)"}],"expression":{"argumentTypes":null,"id":828,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2168:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2168:10:3","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2168:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TransformData_$802_memory_ptr","typeString":"struct PayTakerTransformer.TransformData memory"}},"nodeType":"VariableDeclarationStatement","src":"2140:69:3"},{"body":{"id":900,"nodeType":"Block","src":"2319:493:3","statements":[{"assignments":[849],"declarations":[{"constant":false,"id":849,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","overrides":null,"scope":900,"src":"2470:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":848,"name":"uint256","nodeType":"ElementaryTypeName","src":"2470:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":865,"initialValue":{"argumentTypes":null,"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":850,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"2487:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_TransformData_$802_memory_ptr","typeString":"struct PayTakerTransformer.TransformData memory"}},"id":851,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amounts","nodeType":"MemberAccess","referencedDeclaration":801,"src":"2487:12:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2487:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"id":853,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"2509:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2487:23:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"2539:2:3","subExpression":{"argumentTypes":null,"hexValue":"31","id":861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2540:1:3","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}],"id":860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2531:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":859,"name":"uint256","nodeType":"ElementaryTypeName","src":"2531:7:3","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2531:11:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2487:55:3","trueExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":855,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"2513:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_TransformData_$802_memory_ptr","typeString":"struct PayTakerTransformer.TransformData memory"}},"id":856,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amounts","nodeType":"MemberAccess","referencedDeclaration":801,"src":"2513:12:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":858,"indexExpression":{"argumentTypes":null,"id":857,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"2526:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2513:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2470:72:3"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":866,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"2560:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":867,"name":"MAX_UINT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"2570:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2560:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":883,"nodeType":"IfStatement","src":"2556:116:3","trueBody":{"id":882,"nodeType":"Block","src":"2583:89:3","statements":[{"expression":{"argumentTypes":null,"id":880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":869,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"2601:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":877,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2651:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_PayTakerTransformer_$907","typeString":"contract PayTakerTransformer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PayTakerTransformer_$907","typeString":"contract PayTakerTransformer"}],"id":876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2643:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":875,"name":"address","nodeType":"ElementaryTypeName","src":"2643:7:3","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2643:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":870,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"2610:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_TransformData_$802_memory_ptr","typeString":"struct PayTakerTransformer.TransformData memory"}},"id":871,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokens","nodeType":"MemberAccess","referencedDeclaration":798,"src":"2610:11:3","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20TokenV06_$1071_$dyn_memory_ptr","typeString":"contract IERC20TokenV06[] memory"}},"id":873,"indexExpression":{"argumentTypes":null,"id":872,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"2622:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2610:14:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getTokenBalanceOf","nodeType":"MemberAccess","referencedDeclaration":448,"src":"2610:32:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_contract$_IERC20TokenV06_$1071_$_t_address_$returns$_t_uint256_$bound_to$_t_contract$_IERC20TokenV06_$1071_$","typeString":"function (contract IERC20TokenV06,address) view returns (uint256)"}},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2610:47:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2601:56:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":881,"nodeType":"ExpressionStatement","src":"2601:56:3"}]}},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":884,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"2689:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2699:1:3","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2689:11:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":899,"nodeType":"IfStatement","src":"2685:117:3","trueBody":{"id":898,"nodeType":"Block","src":"2702:100:3","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":893,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"2761:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_TransformContext_$309_calldata_ptr","typeString":"struct IERC20Transformer.TransformContext calldata"}},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":306,"src":"2761:17:3","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":895,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"2780:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":887,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"2720:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_TransformData_$802_memory_ptr","typeString":"struct PayTakerTransformer.TransformData memory"}},"id":890,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokens","nodeType":"MemberAccess","referencedDeclaration":798,"src":"2720:11:3","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20TokenV06_$1071_$dyn_memory_ptr","typeString":"contract IERC20TokenV06[] memory"}},"id":891,"indexExpression":{"argumentTypes":null,"id":889,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"2732:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2720:14:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"unsafeTransformerTransfer","nodeType":"MemberAccess","referencedDeclaration":408,"src":"2720:40:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20TokenV06_$1071_$_t_address_payable_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20TokenV06_$1071_$","typeString":"function (contract IERC20TokenV06,address payable,uint256)"}},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2720:67:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":897,"nodeType":"ExpressionStatement","src":"2720:67:3"}]}}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":840,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"2290:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":841,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"2294:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_TransformData_$802_memory_ptr","typeString":"struct PayTakerTransformer.TransformData memory"}},"id":842,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokens","nodeType":"MemberAccess","referencedDeclaration":798,"src":"2294:11:3","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20TokenV06_$1071_$dyn_memory_ptr","typeString":"contract IERC20TokenV06[] memory"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2294:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2290:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":901,"initializationExpression":{"assignments":[837],"declarations":[{"constant":false,"id":837,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","overrides":null,"scope":901,"src":"2275:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":836,"name":"uint256","nodeType":"ElementaryTypeName","src":"2275:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":839,"initialValue":{"argumentTypes":null,"hexValue":"30","id":838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2287:1:3","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2275:13:3"},"loopExpression":{"expression":{"argumentTypes":null,"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2314:3:3","subExpression":{"argumentTypes":null,"id":845,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"2316:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":847,"nodeType":"ExpressionStatement","src":"2314:3:3"},"nodeType":"ForStatement","src":"2270:542:3"},{"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":902,"name":"LibERC20Transformer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"2828:19:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibERC20Transformer_$773_$","typeString":"type(library LibERC20Transformer)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"TRANSFORMER_SUCCESS","nodeType":"MemberAccess","referencedDeclaration":340,"src":"2828:39:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":825,"id":904,"nodeType":"Return","src":"2821:46:3"}]},"baseFunctions":[317],"documentation":{"id":818,"nodeType":"StructuredDocumentation","src":"1859:169:3","text":"@dev Forwards tokens to the taker.\n @param context Context information.\n @return success The success bytes (`LibERC20Transformer.TRANSFORMER_SUCCESS`)."},"functionSelector":"832b24bb","implemented":true,"kind":"function","modifiers":[],"name":"transform","overrides":{"id":822,"nodeType":"OverrideSpecifier","overrides":[],"src":"2096:8:3"},"parameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":820,"mutability":"mutable","name":"context","nodeType":"VariableDeclaration","overrides":null,"scope":906,"src":"2052:33:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_TransformContext_$309_calldata_ptr","typeString":"struct IERC20Transformer.TransformContext"},"typeName":{"contractScope":null,"id":819,"name":"TransformContext","nodeType":"UserDefinedTypeName","referencedDeclaration":309,"src":"2052:16:3","typeDescriptions":{"typeIdentifier":"t_struct$_TransformContext_$309_storage_ptr","typeString":"struct IERC20Transformer.TransformContext"}},"value":null,"visibility":"internal"}],"src":"2051:35:3"},"returnParameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","overrides":null,"scope":906,"src":"2114:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":823,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2114:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":null,"visibility":"internal"}],"src":"2113:16:3"},"scope":907,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":785,"name":"Transformer","nodeType":"UserDefinedTypeName","referencedDeclaration":990,"src":"1165:11:3","typeDescriptions":{"typeIdentifier":"t_contract$_Transformer_$990","typeString":"contract Transformer"}},"id":786,"nodeType":"InheritanceSpecifier","src":"1165:11:3"}],"contractDependencies":[318,990],"contractKind":"contract","documentation":{"id":784,"nodeType":"StructuredDocumentation","src":"1074:59:3","text":"@dev A transformer that transfers tokens to the taker."},"fullyImplemented":true,"linearizedBaseContracts":[907,990,318],"name":"PayTakerTransformer","scope":908}],"license":"Apache-2.0"}},"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol":{"id":4,"ast":{"absolutePath":"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol","id":991,"exportedSymbols":{"Transformer":[990]},"nodeType":"SourceUnit","src":"619:1434:4","nodes":[{"id":909,"nodeType":"PragmaDirective","src":"619:23:4","nodes":[],"literals":["solidity","^","0.6",".5"]},{"id":910,"nodeType":"PragmaDirective","src":"643:33:4","nodes":[],"literals":["experimental","ABIEncoderV2"]},{"id":911,"nodeType":"ImportDirective","src":"678:75:4","nodes":[],"absolutePath":"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol","file":"@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol","scope":991,"sourceUnit":2413,"symbolAliases":[],"unitAlias":""},{"id":912,"nodeType":"ImportDirective","src":"754:51:4","nodes":[],"absolutePath":"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/errors/LibTransformERC20RichErrors.sol","file":"../errors/LibTransformERC20RichErrors.sol","scope":991,"sourceUnit":298,"symbolAliases":[],"unitAlias":""},{"id":913,"nodeType":"ImportDirective","src":"806:33:4","nodes":[],"absolutePath":"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/IERC20Transformer.sol","file":"./IERC20Transformer.sol","scope":991,"sourceUnit":319,"symbolAliases":[],"unitAlias":""},{"id":990,"nodeType":"ContractDefinition","src":"888:1164:4","nodes":[{"id":919,"nodeType":"UsingForDirective","src":"945:33:4","nodes":[],"libraryName":{"contractScope":null,"id":917,"name":"LibRichErrorsV06","nodeType":"UserDefinedTypeName","referencedDeclaration":2412,"src":"951:16:4","typeDescriptions":{"typeIdentifier":"t_contract$_LibRichErrorsV06_$2412","typeString":"library LibRichErrorsV06"}},"typeName":{"id":918,"name":"bytes","nodeType":"ElementaryTypeName","src":"972:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},{"id":922,"nodeType":"VariableDeclaration","src":"1026:33:4","nodes":[],"constant":false,"documentation":{"id":920,"nodeType":"StructuredDocumentation","src":"984:37:4","text":"@dev The address of the deployer."},"functionSelector":"d5f39488","mutability":"immutable","name":"deployer","overrides":null,"scope":990,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":921,"name":"address","nodeType":"ElementaryTypeName","src":"1026:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"public"},{"id":925,"nodeType":"VariableDeclaration","src":"1117:42:4","nodes":[],"constant":false,"documentation":{"id":923,"nodeType":"StructuredDocumentation","src":"1065:47:4","text":"@dev The original address of this contract."},"mutability":"immutable","name":"_implementation","overrides":null,"scope":990,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":924,"name":"address","nodeType":"ElementaryTypeName","src":"1117:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"id":942,"nodeType":"FunctionDefinition","src":"1201:100:4","nodes":[],"body":{"id":941,"nodeType":"Block","src":"1222:79:4","nodes":[],"statements":[{"expression":{"argumentTypes":null,"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":929,"name":"deployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"1232:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":930,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1243:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1243:10:4","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"1232:21:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":933,"nodeType":"ExpressionStatement","src":"1232:21:4"},{"expression":{"argumentTypes":null,"id":939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":934,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"1263:15:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":937,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1289:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_Transformer_$990","typeString":"contract Transformer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Transformer_$990","typeString":"contract Transformer"}],"id":936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1281:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":935,"name":"address","nodeType":"ElementaryTypeName","src":"1281:7:4","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1281:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1263:31:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":940,"nodeType":"ExpressionStatement","src":"1263:31:4"}]},"documentation":{"id":926,"nodeType":"StructuredDocumentation","src":"1166:30:4","text":"@dev Create this contract."},"implemented":true,"kind":"constructor","modifiers":[],"name":"","overrides":null,"parameters":{"id":927,"nodeType":"ParameterList","parameters":[],"src":"1212:2:4"},"returnParameters":{"id":928,"nodeType":"ParameterList","parameters":[],"src":"1222:0:4"},"scope":990,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":989,"nodeType":"FunctionDefinition","src":"1538:512:4","nodes":[],"body":{"id":988,"nodeType":"Block","src":"1598:452:4","nodes":[],"statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":948,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1656:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1656:10:4","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":950,"name":"deployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"1670:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1656:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":963,"nodeType":"IfStatement","src":"1652:140:4","trueBody":{"id":962,"nodeType":"Block","src":"1680:112:4","statements":[{"expression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":955,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1750:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1750:10:4","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":957,"name":"deployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"1762:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":952,"name":"LibTransformERC20RichErrors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"1694:27:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibTransformERC20RichErrors_$297_$","typeString":"type(library LibTransformERC20RichErrors)"}},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"OnlyCallableByDeployerError","nodeType":"MemberAccess","referencedDeclaration":117,"src":"1694:55:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,address) pure returns (bytes memory)"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1694:77:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rrevert","nodeType":"MemberAccess","referencedDeclaration":2411,"src":"1694:85:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$bound_to$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) pure"}},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1694:87:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":961,"nodeType":"ExpressionStatement","src":"1694:87:4"}]}},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":966,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1859:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_Transformer_$990","typeString":"contract Transformer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Transformer_$990","typeString":"contract Transformer"}],"id":965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1851:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"1851:7:4","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1851:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":968,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"1868:15:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1851:32:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":983,"nodeType":"IfStatement","src":"1847:161:4","trueBody":{"id":982,"nodeType":"Block","src":"1885:123:4","statements":[{"expression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":975,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1964:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_Transformer_$990","typeString":"contract Transformer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Transformer_$990","typeString":"contract Transformer"}],"id":974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1956:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":973,"name":"address","nodeType":"ElementaryTypeName","src":"1956:7:4","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1956:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":977,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"1971:15:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":970,"name":"LibTransformERC20RichErrors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"1899:27:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibTransformERC20RichErrors_$297_$","typeString":"type(library LibTransformERC20RichErrors)"}},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidExecutionContextError","nodeType":"MemberAccess","referencedDeclaration":139,"src":"1899:56:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,address) pure returns (bytes memory)"}},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1899:88:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rrevert","nodeType":"MemberAccess","referencedDeclaration":2411,"src":"1899:96:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$bound_to$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) pure"}},"id":980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1899:98:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":981,"nodeType":"ExpressionStatement","src":"1899:98:4"}]}},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":985,"name":"ethRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"2030:12:4","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":984,"name":"selfdestruct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-21,"src":"2017:12:4","typeDescriptions":{"typeIdentifier":"t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$","typeString":"function (address payable)"}},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2017:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":987,"nodeType":"ExpressionStatement","src":"2017:26:4"}]},"documentation":{"id":943,"nodeType":"StructuredDocumentation","src":"1307:226:4","text":"@dev Destruct this contract. Only callable by the deployer and will not\n      succeed in the context of a delegatecall (from another contract).\n @param ethRecipient The recipient of ETH held in this contract."},"functionSelector":"c9353cb5","implemented":true,"kind":"function","modifiers":[],"name":"die","overrides":null,"parameters":{"id":946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":945,"mutability":"mutable","name":"ethRecipient","nodeType":"VariableDeclaration","overrides":null,"scope":989,"src":"1551:28:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":944,"name":"address","nodeType":"ElementaryTypeName","src":"1551:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"value":null,"visibility":"internal"}],"src":"1550:30:4"},"returnParameters":{"id":947,"nodeType":"ParameterList","parameters":[],"src":"1598:0:4"},"scope":990,"stateMutability":"nonpayable","virtual":true,"visibility":"external"}],"abstract":true,"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":915,"name":"IERC20Transformer","nodeType":"UserDefinedTypeName","referencedDeclaration":318,"src":"921:17:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Transformer_$318","typeString":"contract IERC20Transformer"}},"id":916,"nodeType":"InheritanceSpecifier","src":"921:17:4"}],"contractDependencies":[318],"contractKind":"contract","documentation":{"id":914,"nodeType":"StructuredDocumentation","src":"841:47:4","text":"@dev Abstract base class for transformers."},"fullyImplemented":false,"linearizedBaseContracts":[990,318],"name":"Transformer","scope":991}],"license":"Apache-2.0"}},"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/IERC20TokenV06.sol":{"id":5,"ast":{"absolutePath":"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/IERC20TokenV06.sol","id":1072,"exportedSymbols":{"IERC20TokenV06":[1071]},"nodeType":"SourceUnit","src":"619:2167:5","nodes":[{"id":992,"nodeType":"PragmaDirective","src":"619:23:5","nodes":[],"literals":["solidity","^","0.6",".5"]},{"id":1071,"nodeType":"ContractDefinition","src":"644:2141:5","nodes":[{"id":1000,"nodeType":"EventDefinition","src":"724:72:5","nodes":[],"anonymous":false,"documentation":null,"name":"Transfer","parameters":{"id":999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":994,"indexed":true,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","overrides":null,"scope":1000,"src":"739:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":993,"name":"address","nodeType":"ElementaryTypeName","src":"739:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":996,"indexed":true,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":1000,"src":"761:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":995,"name":"address","nodeType":"ElementaryTypeName","src":"761:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":998,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":1000,"src":"781:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":997,"name":"uint256","nodeType":"ElementaryTypeName","src":"781:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"738:57:5"}},{"id":1008,"nodeType":"EventDefinition","src":"802:78:5","nodes":[],"anonymous":false,"documentation":null,"name":"Approval","parameters":{"id":1007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1002,"indexed":true,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","overrides":null,"scope":1008,"src":"817:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1001,"name":"address","nodeType":"ElementaryTypeName","src":"817:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1004,"indexed":true,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","overrides":null,"scope":1008,"src":"840:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1003,"name":"address","nodeType":"ElementaryTypeName","src":"840:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1006,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":1008,"src":"865:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1005,"name":"uint256","nodeType":"ElementaryTypeName","src":"865:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"816:63:5"}},{"id":1018,"nodeType":"FunctionDefinition","src":"1098:69:5","nodes":[],"documentation":{"id":1009,"nodeType":"StructuredDocumentation","src":"886:207:5","text":"@dev send `value` token to `to` from `msg.sender`\n @param to The address of the recipient\n @param value The amount of token to be transferred\n @return True if transfer was successful"},"functionSelector":"a9059cbb","implemented":false,"kind":"function","modifiers":[],"name":"transfer","overrides":null,"parameters":{"id":1014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1011,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":1018,"src":"1116:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1010,"name":"address","nodeType":"ElementaryTypeName","src":"1116:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1013,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":1018,"src":"1128:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1012,"name":"uint256","nodeType":"ElementaryTypeName","src":"1128:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1115:27:5"},"returnParameters":{"id":1017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1016,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":1018,"src":"1161:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1015,"name":"bool","nodeType":"ElementaryTypeName","src":"1161:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1160:6:5"},"scope":1071,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1030,"nodeType":"FunctionDefinition","src":"1467:117:5","nodes":[],"documentation":{"id":1019,"nodeType":"StructuredDocumentation","src":"1173:289:5","text":"@dev send `value` token to `to` from `from` on the condition it is approved by `from`\n @param from The address of the sender\n @param to The address of the recipient\n @param value The amount of token to be transferred\n @return True if transfer was successful"},"functionSelector":"23b872dd","implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","overrides":null,"parameters":{"id":1026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","overrides":null,"scope":1030,"src":"1498:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1020,"name":"address","nodeType":"ElementaryTypeName","src":"1498:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1023,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":1030,"src":"1520:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1022,"name":"address","nodeType":"ElementaryTypeName","src":"1520:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1025,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":1030,"src":"1540:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1024,"name":"uint256","nodeType":"ElementaryTypeName","src":"1540:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1488:71:5"},"returnParameters":{"id":1029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1028,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":1030,"src":"1578:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1027,"name":"bool","nodeType":"ElementaryTypeName","src":"1578:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1577:6:5"},"scope":1071,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1040,"nodeType":"FunctionDefinition","src":"1881:73:5","nodes":[],"documentation":{"id":1031,"nodeType":"StructuredDocumentation","src":"1590:286:5","text":"@dev `msg.sender` approves `spender` to spend `value` tokens\n @param spender The address of the account able to transfer the tokens\n @param value The amount of wei to be approved for transfer\n @return Always true if the call has enough gas to complete execution"},"functionSelector":"095ea7b3","implemented":false,"kind":"function","modifiers":[],"name":"approve","overrides":null,"parameters":{"id":1036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1033,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","overrides":null,"scope":1040,"src":"1898:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1032,"name":"address","nodeType":"ElementaryTypeName","src":"1898:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1035,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":1040,"src":"1915:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1034,"name":"uint256","nodeType":"ElementaryTypeName","src":"1915:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1897:32:5"},"returnParameters":{"id":1039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1038,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":1040,"src":"1948:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1037,"name":"bool","nodeType":"ElementaryTypeName","src":"1948:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1947:6:5"},"scope":1071,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1046,"nodeType":"FunctionDefinition","src":"2039:55:5","nodes":[],"documentation":{"id":1041,"nodeType":"StructuredDocumentation","src":"1960:74:5","text":"@dev Query total supply of token\n @return Total supply of token"},"functionSelector":"18160ddd","implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","overrides":null,"parameters":{"id":1042,"nodeType":"ParameterList","parameters":[],"src":"2059:2:5"},"returnParameters":{"id":1045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1044,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":1046,"src":"2085:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1043,"name":"uint256","nodeType":"ElementaryTypeName","src":"2085:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2084:9:5"},"scope":1071,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1054,"nodeType":"FunctionDefinition","src":"2248:66:5","nodes":[],"documentation":{"id":1047,"nodeType":"StructuredDocumentation","src":"2100:143:5","text":"@dev Get the balance of `owner`.\n @param owner The address from which the balance will be retrieved\n @return Balance of owner"},"functionSelector":"70a08231","implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","overrides":null,"parameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","overrides":null,"scope":1054,"src":"2267:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1048,"name":"address","nodeType":"ElementaryTypeName","src":"2267:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2266:15:5"},"returnParameters":{"id":1053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1052,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":1054,"src":"2305:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1051,"name":"uint256","nodeType":"ElementaryTypeName","src":"2305:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2304:9:5"},"scope":1071,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1064,"nodeType":"FunctionDefinition","src":"2588:83:5","nodes":[],"documentation":{"id":1055,"nodeType":"StructuredDocumentation","src":"2320:263:5","text":"@dev Get the allowance for `spender` to spend from `owner`.\n @param owner The address of the account owning tokens\n @param spender The address of the account able to transfer the tokens\n @return Amount of remaining tokens allowed to spent"},"functionSelector":"dd62ed3e","implemented":false,"kind":"function","modifiers":[],"name":"allowance","overrides":null,"parameters":{"id":1060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1057,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","overrides":null,"scope":1064,"src":"2607:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1056,"name":"address","nodeType":"ElementaryTypeName","src":"2607:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1059,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","overrides":null,"scope":1064,"src":"2622:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1058,"name":"address","nodeType":"ElementaryTypeName","src":"2622:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2606:32:5"},"returnParameters":{"id":1063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1062,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":1064,"src":"2662:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1061,"name":"uint256","nodeType":"ElementaryTypeName","src":"2662:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2661:9:5"},"scope":1071,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1070,"nodeType":"FunctionDefinition","src":"2733:50:5","nodes":[],"documentation":{"id":1065,"nodeType":"StructuredDocumentation","src":"2677:51:5","text":"@dev Get the number of decimals this token has."},"functionSelector":"313ce567","implemented":false,"kind":"function","modifiers":[],"name":"decimals","overrides":null,"parameters":{"id":1066,"nodeType":"ParameterList","parameters":[],"src":"2750:2:5"},"returnParameters":{"id":1069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1068,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":1070,"src":"2776:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1067,"name":"uint8","nodeType":"ElementaryTypeName","src":"2776:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"internal"}],"src":"2775:7:5"},"scope":1071,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":null,"fullyImplemented":false,"linearizedBaseContracts":[1071],"name":"IERC20TokenV06","scope":1072}],"license":"Apache-2.0"}},"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol":{"id":6,"ast":{"absolutePath":"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol","id":1423,"exportedSymbols":{"LibERC20TokenV06":[1422]},"nodeType":"SourceUnit","src":"619:6434:6","nodes":[{"id":1073,"nodeType":"PragmaDirective","src":"619:23:6","nodes":[],"literals":["solidity","^","0.6",".5"]},{"id":1074,"nodeType":"ImportDirective","src":"644:75:6","nodes":[],"absolutePath":"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol","file":"@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol","scope":1423,"sourceUnit":2413,"symbolAliases":[],"unitAlias":""},{"id":1075,"nodeType":"ImportDirective","src":"720:63:6","nodes":[],"absolutePath":"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol","file":"@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol","scope":1423,"sourceUnit":1941,"symbolAliases":[],"unitAlias":""},{"id":1076,"nodeType":"ImportDirective","src":"784:30:6","nodes":[],"absolutePath":"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/IERC20TokenV06.sol","file":"./IERC20TokenV06.sol","scope":1423,"sourceUnit":1072,"symbolAliases":[],"unitAlias":""},{"id":1422,"nodeType":"ContractDefinition","src":"816:6236:6","nodes":[{"id":1079,"nodeType":"VariableDeclaration","src":"847:57:6","nodes":[],"constant":true,"mutability":"constant","name":"DECIMALS_CALL_DATA","overrides":null,"scope":1422,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1077,"name":"bytes","nodeType":"ElementaryTypeName","src":"847:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":{"argumentTypes":null,"hexValue":"313ce567","id":1078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"891:13:6","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_c2321a96868bd27ed3510591a661013c874b9ec7a6c405adc47166ad88cd5643","typeString":"literal_string (contains invalid UTF-8 sequence at position 2)"},"value":null},"visibility":"private"},{"id":1109,"nodeType":"FunctionDefinition","src":"1203:293:6","nodes":[],"body":{"id":1108,"nodeType":"Block","src":"1323:173:6","nodes":[],"statements":[{"assignments":[1090],"declarations":[{"constant":false,"id":1090,"mutability":"mutable","name":"callData","nodeType":"VariableDeclaration","overrides":null,"scope":1108,"src":"1333:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1089,"name":"bytes","nodeType":"ElementaryTypeName","src":"1333:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"id":1099,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1093,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"1380:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1040,"src":"1380:13:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1380:22:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"argumentTypes":null,"id":1096,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"1404:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1097,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"1413:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1091,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1357:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1357:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1357:66:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1333:90:6"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1103,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"1472:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}],"id":1102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1464:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1101,"name":"address","nodeType":"ElementaryTypeName","src":"1464:7:6","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1464:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1105,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"1480:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1100,"name":"_callWithOptionalBooleanResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"1433:30:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:56:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1107,"nodeType":"ExpressionStatement","src":"1433:56:6"}]},"documentation":{"id":1080,"nodeType":"StructuredDocumentation","src":"911:287:6","text":"@dev Calls `IERC20TokenV06(token).approve()`.\n      Reverts if the return data is invalid or the call reverts.\n @param token The address of the token contract.\n @param spender The address that receives an allowance.\n @param allowance The allowance to set."},"implemented":true,"kind":"function","modifiers":[],"name":"compatApprove","overrides":null,"parameters":{"id":1087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1082,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","overrides":null,"scope":1109,"src":"1235:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"},"typeName":{"contractScope":null,"id":1081,"name":"IERC20TokenV06","nodeType":"UserDefinedTypeName","referencedDeclaration":1071,"src":"1235:14:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}},"value":null,"visibility":"internal"},{"constant":false,"id":1084,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","overrides":null,"scope":1109,"src":"1265:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1083,"name":"address","nodeType":"ElementaryTypeName","src":"1265:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1086,"mutability":"mutable","name":"allowance","nodeType":"VariableDeclaration","overrides":null,"scope":1109,"src":"1290:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1085,"name":"uint256","nodeType":"ElementaryTypeName","src":"1290:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1225:88:6"},"returnParameters":{"id":1088,"nodeType":"ParameterList","parameters":[],"src":"1323:0:6"},"scope":1422,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":1142,"nodeType":"FunctionDefinition","src":"1902:255:6","nodes":[],"body":{"id":1141,"nodeType":"Block","src":"2020:137:6","nodes":[],"statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1123,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2058:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_LibERC20TokenV06_$1422","typeString":"library LibERC20TokenV06"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LibERC20TokenV06_$1422","typeString":"library LibERC20TokenV06"}],"id":1122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2050:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1121,"name":"address","nodeType":"ElementaryTypeName","src":"2050:7:6","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2050:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1125,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"2065:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1119,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"2034:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1064,"src":"2034:15:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2034:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"id":1127,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"2076:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2034:48:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1140,"nodeType":"IfStatement","src":"2030:121:6","trueBody":{"id":1139,"nodeType":"Block","src":"2084:67:6","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1130,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"2112:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}},{"argumentTypes":null,"id":1131,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"2119:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"2136:2:6","subExpression":{"argumentTypes":null,"hexValue":"31","id":1134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2137:1:6","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}],"id":1133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2128:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1132,"name":"uint256","nodeType":"ElementaryTypeName","src":"2128:7:6","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2128:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1129,"name":"compatApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"2098:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20TokenV06_$1071_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20TokenV06,address,uint256)"}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2098:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1138,"nodeType":"ExpressionStatement","src":"2098:42:6"}]}}]},"documentation":{"id":1110,"nodeType":"StructuredDocumentation","src":"1502:395:6","text":"@dev Calls `IERC20TokenV06(token).approve()` and sets the allowance to the\n      maximum if the current approval is not already >= an amount.\n      Reverts if the return data is invalid or the call reverts.\n @param token The address of the token contract.\n @param spender The address that receives an allowance.\n @param amount The minimum allowance needed."},"implemented":true,"kind":"function","modifiers":[],"name":"approveIfBelow","overrides":null,"parameters":{"id":1117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1112,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","overrides":null,"scope":1142,"src":"1935:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"},"typeName":{"contractScope":null,"id":1111,"name":"IERC20TokenV06","nodeType":"UserDefinedTypeName","referencedDeclaration":1071,"src":"1935:14:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}},"value":null,"visibility":"internal"},{"constant":false,"id":1114,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","overrides":null,"scope":1142,"src":"1965:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1113,"name":"address","nodeType":"ElementaryTypeName","src":"1965:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1116,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","overrides":null,"scope":1142,"src":"1990:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1115,"name":"uint256","nodeType":"ElementaryTypeName","src":"1990:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1925:85:6"},"returnParameters":{"id":1118,"nodeType":"ParameterList","parameters":[],"src":"2020:0:6"},"scope":1422,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":1172,"nodeType":"FunctionDefinition","src":"2453:279:6","nodes":[],"body":{"id":1171,"nodeType":"Block","src":"2566:166:6","nodes":[],"statements":[{"assignments":[1153],"declarations":[{"constant":false,"id":1153,"mutability":"mutable","name":"callData","nodeType":"VariableDeclaration","overrides":null,"scope":1171,"src":"2576:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1152,"name":"bytes","nodeType":"ElementaryTypeName","src":"2576:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"id":1162,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1156,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"2623:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1018,"src":"2623:14:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2623:23:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"argumentTypes":null,"id":1159,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"2648:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1160,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"2652:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1154,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2600:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2600:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2600:59:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2576:83:6"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1166,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"2708:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}],"id":1165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2700:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1164,"name":"address","nodeType":"ElementaryTypeName","src":"2700:7:6","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2700:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1168,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"2716:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1163,"name":"_callWithOptionalBooleanResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"2669:30:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2669:56:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1170,"nodeType":"ExpressionStatement","src":"2669:56:6"}]},"documentation":{"id":1143,"nodeType":"StructuredDocumentation","src":"2163:285:6","text":"@dev Calls `IERC20TokenV06(token).transfer()`.\n      Reverts if the return data is invalid or the call reverts.\n @param token The address of the token contract.\n @param to The address that receives the tokens\n @param amount Number of tokens to transfer."},"implemented":true,"kind":"function","modifiers":[],"name":"compatTransfer","overrides":null,"parameters":{"id":1150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1145,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","overrides":null,"scope":1172,"src":"2486:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"},"typeName":{"contractScope":null,"id":1144,"name":"IERC20TokenV06","nodeType":"UserDefinedTypeName","referencedDeclaration":1071,"src":"2486:14:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}},"value":null,"visibility":"internal"},{"constant":false,"id":1147,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":1172,"src":"2516:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1146,"name":"address","nodeType":"ElementaryTypeName","src":"2516:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1149,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","overrides":null,"scope":1172,"src":"2536:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1148,"name":"uint256","nodeType":"ElementaryTypeName","src":"2536:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2476:80:6"},"returnParameters":{"id":1151,"nodeType":"ParameterList","parameters":[],"src":"2566:0:6"},"scope":1422,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":1205,"nodeType":"FunctionDefinition","src":"3077:315:6","nodes":[],"body":{"id":1204,"nodeType":"Block","src":"3216:176:6","nodes":[],"statements":[{"assignments":[1185],"declarations":[{"constant":false,"id":1185,"mutability":"mutable","name":"callData","nodeType":"VariableDeclaration","overrides":null,"scope":1204,"src":"3226:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1184,"name":"bytes","nodeType":"ElementaryTypeName","src":"3226:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"id":1195,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1188,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"3273:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1030,"src":"3273:18:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3273:27:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"argumentTypes":null,"id":1191,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"3302:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1192,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"3308:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1193,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"3312:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1186,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3250:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3250:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3250:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3226:93:6"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1199,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"3368:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}],"id":1198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3360:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1197,"name":"address","nodeType":"ElementaryTypeName","src":"3360:7:6","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3360:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1201,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"3376:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1196,"name":"_callWithOptionalBooleanResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"3329:30:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3329:56:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1203,"nodeType":"ExpressionStatement","src":"3329:56:6"}]},"documentation":{"id":1173,"nodeType":"StructuredDocumentation","src":"2738:334:6","text":"@dev Calls `IERC20TokenV06(token).transferFrom()`.\n      Reverts if the return data is invalid or the call reverts.\n @param token The address of the token contract.\n @param from The owner of the tokens.\n @param to The address that receives the tokens\n @param amount Number of tokens to transfer."},"implemented":true,"kind":"function","modifiers":[],"name":"compatTransferFrom","overrides":null,"parameters":{"id":1182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1175,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","overrides":null,"scope":1205,"src":"3114:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"},"typeName":{"contractScope":null,"id":1174,"name":"IERC20TokenV06","nodeType":"UserDefinedTypeName","referencedDeclaration":1071,"src":"3114:14:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}},"value":null,"visibility":"internal"},{"constant":false,"id":1177,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","overrides":null,"scope":1205,"src":"3144:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1176,"name":"address","nodeType":"ElementaryTypeName","src":"3144:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1179,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":1205,"src":"3166:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1178,"name":"address","nodeType":"ElementaryTypeName","src":"3166:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1181,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","overrides":null,"scope":1205,"src":"3186:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1180,"name":"uint256","nodeType":"ElementaryTypeName","src":"3186:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"3104:102:6"},"returnParameters":{"id":1183,"nodeType":"ParameterList","parameters":[],"src":"3216:0:6"},"scope":1422,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":1249,"nodeType":"FunctionDefinition","src":"3635:363:6","nodes":[],"body":{"id":1248,"nodeType":"Block","src":"3725:273:6","nodes":[],"statements":[{"expression":{"argumentTypes":null,"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1213,"name":"tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"3735:13:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"3138","id":1214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3751:2:6","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"3735:18:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1216,"nodeType":"ExpressionStatement","src":"3735:18:6"},{"assignments":[1218,1220],"declarations":[{"constant":false,"id":1218,"mutability":"mutable","name":"didSucceed","nodeType":"VariableDeclaration","overrides":null,"scope":1248,"src":"3764:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1217,"name":"bool","nodeType":"ElementaryTypeName","src":"3764:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":1220,"mutability":"mutable","name":"resultData","nodeType":"VariableDeclaration","overrides":null,"scope":1248,"src":"3781:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1219,"name":"bytes","nodeType":"ElementaryTypeName","src":"3781:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"id":1228,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1226,"name":"DECIMALS_CALL_DATA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"3834:18:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1223,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"3816:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}],"id":1222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3808:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1221,"name":"address","nodeType":"ElementaryTypeName","src":"3808:7:6","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3808:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3808:25:6","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3808:45:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3763:90:6"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1229,"name":"didSucceed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"3867:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1230,"name":"resultData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"3881:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3881:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"hexValue":"3332","id":1232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3902:2:6","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3881:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3867:37:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1247,"nodeType":"IfStatement","src":"3863:129:6","trueBody":{"id":1246,"nodeType":"Block","src":"3906:86:6","statements":[{"expression":{"argumentTypes":null,"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1235,"name":"tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"3920:13:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1240,"name":"resultData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"3966:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"hexValue":"30","id":1241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3978:1:6","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"argumentTypes":null,"id":1238,"name":"LibBytesV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"3942:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibBytesV06_$1940_$","typeString":"type(library LibBytesV06)"}},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readUint256","nodeType":"MemberAccess","referencedDeclaration":1867,"src":"3942:23:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bytes memory,uint256) pure returns (uint256)"}},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3942:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3936:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1236,"name":"uint8","nodeType":"ElementaryTypeName","src":"3936:5:6","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3936:45:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3920:61:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1245,"nodeType":"ExpressionStatement","src":"3920:61:6"}]}}]},"documentation":{"id":1206,"nodeType":"StructuredDocumentation","src":"3398:232:6","text":"@dev Retrieves the number of decimals for a token.\n      Returns `18` if the call reverts.\n @param token The address of the token contract.\n @return tokenDecimals The number of decimals places for the token."},"implemented":true,"kind":"function","modifiers":[],"name":"compatDecimals","overrides":null,"parameters":{"id":1209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1208,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","overrides":null,"scope":1249,"src":"3659:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"},"typeName":{"contractScope":null,"id":1207,"name":"IERC20TokenV06","nodeType":"UserDefinedTypeName","referencedDeclaration":1071,"src":"3659:14:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}},"value":null,"visibility":"internal"}],"src":"3658:22:6"},"returnParameters":{"id":1212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1211,"mutability":"mutable","name":"tokenDecimals","nodeType":"VariableDeclaration","overrides":null,"scope":1249,"src":"3704:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1210,"name":"uint8","nodeType":"ElementaryTypeName","src":"3704:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"internal"}],"src":"3703:21:6"},"scope":1422,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":1297,"nodeType":"FunctionDefinition","src":"4344:455:6","nodes":[],"body":{"id":1296,"nodeType":"Block","src":"4496:303:6","nodes":[],"statements":[{"assignments":[1262,1264],"declarations":[{"constant":false,"id":1262,"mutability":"mutable","name":"didSucceed","nodeType":"VariableDeclaration","overrides":null,"scope":1296,"src":"4507:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1261,"name":"bool","nodeType":"ElementaryTypeName","src":"4507:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":1264,"mutability":"mutable","name":"resultData","nodeType":"VariableDeclaration","overrides":null,"scope":1296,"src":"4524:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1263,"name":"bytes","nodeType":"ElementaryTypeName","src":"4524:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"id":1279,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1272,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"4613:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1064,"src":"4613:15:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4613:24:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"argumentTypes":null,"id":1275,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"4639:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1276,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"4646:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1270,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4590:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4590:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4590:64:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1267,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"4559:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}],"id":1266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4551:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1265,"name":"address","nodeType":"ElementaryTypeName","src":"4551:7:6","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4551:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4551:25:6","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4551:113:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4506:158:6"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1280,"name":"didSucceed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"4678:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1281,"name":"resultData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"4692:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4692:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"hexValue":"3332","id":1283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4713:2:6","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4692:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4678:37:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1295,"nodeType":"IfStatement","src":"4674:119:6","trueBody":{"id":1294,"nodeType":"Block","src":"4717:76:6","statements":[{"expression":{"argumentTypes":null,"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1286,"name":"allowance_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"4731:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1289,"name":"resultData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"4768:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"hexValue":"30","id":1290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4780:1:6","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"argumentTypes":null,"id":1287,"name":"LibBytesV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"4744:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibBytesV06_$1940_$","typeString":"type(library LibBytesV06)"}},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readUint256","nodeType":"MemberAccess","referencedDeclaration":1867,"src":"4744:23:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bytes memory,uint256) pure returns (uint256)"}},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4744:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4731:51:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1293,"nodeType":"ExpressionStatement","src":"4731:51:6"}]}}]},"documentation":{"id":1250,"nodeType":"StructuredDocumentation","src":"4004:335:6","text":"@dev Retrieves the allowance for a token, owner, and spender.\n      Returns `0` if the call reverts.\n @param token The address of the token contract.\n @param owner The owner of the tokens.\n @param spender The address the spender.\n @return allowance_ The allowance for a token, owner, and spender."},"implemented":true,"kind":"function","modifiers":[],"name":"compatAllowance","overrides":null,"parameters":{"id":1257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1252,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","overrides":null,"scope":1297,"src":"4378:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"},"typeName":{"contractScope":null,"id":1251,"name":"IERC20TokenV06","nodeType":"UserDefinedTypeName","referencedDeclaration":1071,"src":"4378:14:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}},"value":null,"visibility":"internal"},{"constant":false,"id":1254,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","overrides":null,"scope":1297,"src":"4408:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1253,"name":"address","nodeType":"ElementaryTypeName","src":"4408:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1256,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","overrides":null,"scope":1297,"src":"4431:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1255,"name":"address","nodeType":"ElementaryTypeName","src":"4431:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"4368:84:6"},"returnParameters":{"id":1260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1259,"mutability":"mutable","name":"allowance_","nodeType":"VariableDeclaration","overrides":null,"scope":1297,"src":"4476:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1258,"name":"uint256","nodeType":"ElementaryTypeName","src":"4476:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4475:20:6"},"scope":1422,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":1342,"nodeType":"FunctionDefinition","src":"5062:393:6","nodes":[],"body":{"id":1341,"nodeType":"Block","src":"5164:291:6","nodes":[],"statements":[{"assignments":[1308,1310],"declarations":[{"constant":false,"id":1308,"mutability":"mutable","name":"didSucceed","nodeType":"VariableDeclaration","overrides":null,"scope":1341,"src":"5175:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1307,"name":"bool","nodeType":"ElementaryTypeName","src":"5175:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":1310,"mutability":"mutable","name":"resultData","nodeType":"VariableDeclaration","overrides":null,"scope":1341,"src":"5192:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1309,"name":"bytes","nodeType":"ElementaryTypeName","src":"5192:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"id":1324,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1318,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"5281:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1054,"src":"5281:15:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5281:24:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"argumentTypes":null,"id":1321,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"5307:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1316,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5258:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5258:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5258:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1313,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"5227:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}],"id":1312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5219:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1311,"name":"address","nodeType":"ElementaryTypeName","src":"5219:7:6","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5219:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5219:25:6","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5219:104:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5174:149:6"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1325,"name":"didSucceed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"5337:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1326,"name":"resultData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"5351:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5351:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"hexValue":"3332","id":1328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5372:2:6","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"5351:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5337:37:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1340,"nodeType":"IfStatement","src":"5333:116:6","trueBody":{"id":1339,"nodeType":"Block","src":"5376:73:6","statements":[{"expression":{"argumentTypes":null,"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1331,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"5390:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1334,"name":"resultData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"5424:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"hexValue":"30","id":1335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5436:1:6","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"argumentTypes":null,"id":1332,"name":"LibBytesV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"5400:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibBytesV06_$1940_$","typeString":"type(library LibBytesV06)"}},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readUint256","nodeType":"MemberAccess","referencedDeclaration":1867,"src":"5400:23:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bytes memory,uint256) pure returns (uint256)"}},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5400:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5390:48:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1338,"nodeType":"ExpressionStatement","src":"5390:48:6"}]}}]},"documentation":{"id":1298,"nodeType":"StructuredDocumentation","src":"4805:252:6","text":"@dev Retrieves the balance for a token owner.\n      Returns `0` if the call reverts.\n @param token The address of the token contract.\n @param owner The owner of the tokens.\n @return balance The token balance of an owner."},"implemented":true,"kind":"function","modifiers":[],"name":"compatBalanceOf","overrides":null,"parameters":{"id":1303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1300,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","overrides":null,"scope":1342,"src":"5087:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"},"typeName":{"contractScope":null,"id":1299,"name":"IERC20TokenV06","nodeType":"UserDefinedTypeName","referencedDeclaration":1071,"src":"5087:14:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20TokenV06_$1071","typeString":"contract IERC20TokenV06"}},"value":null,"visibility":"internal"},{"constant":false,"id":1302,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","overrides":null,"scope":1342,"src":"5109:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1301,"name":"address","nodeType":"ElementaryTypeName","src":"5109:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"5086:37:6"},"returnParameters":{"id":1306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1305,"mutability":"mutable","name":"balance","nodeType":"VariableDeclaration","overrides":null,"scope":1342,"src":"5147:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1304,"name":"uint256","nodeType":"ElementaryTypeName","src":"5147:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"5146:17:6"},"scope":1422,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":1421,"nodeType":"FunctionDefinition","src":"5746:1304:6","nodes":[],"body":{"id":1420,"nodeType":"Block","src":"5833:1217:6","nodes":[],"statements":[{"assignments":[1351,1353],"declarations":[{"constant":false,"id":1351,"mutability":"mutable","name":"didSucceed","nodeType":"VariableDeclaration","overrides":null,"scope":1420,"src":"5844:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1350,"name":"bool","nodeType":"ElementaryTypeName","src":"5844:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":1353,"mutability":"mutable","name":"resultData","nodeType":"VariableDeclaration","overrides":null,"scope":1420,"src":"5861:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1352,"name":"bytes","nodeType":"ElementaryTypeName","src":"5861:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"id":1358,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1356,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"5900:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":1354,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"5888:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5888:11:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5888:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5843:66:6"},{"condition":{"argumentTypes":null,"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5963:11:6","subExpression":{"argumentTypes":null,"id":1359,"name":"didSucceed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"5964:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1368,"nodeType":"IfStatement","src":"5959:78:6","trueBody":{"id":1367,"nodeType":"Block","src":"5976:61:6","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1364,"name":"resultData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"6015:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":1361,"name":"LibRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"5990:16:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibRichErrorsV06_$2412_$","typeString":"type(library LibRichErrorsV06)"}},"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rrevert","nodeType":"MemberAccess","referencedDeclaration":2411,"src":"5990:24:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5990:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1366,"nodeType":"ExpressionStatement","src":"5990:36:6"}]}},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1369,"name":"resultData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"6205:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6205:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6226:1:6","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6205:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1386,"nodeType":"IfStatement","src":"6201:240:6","trueBody":{"id":1385,"nodeType":"Block","src":"6229:212:6","statements":[{"assignments":[1374],"declarations":[{"constant":false,"id":1374,"mutability":"mutable","name":"size","nodeType":"VariableDeclaration","overrides":null,"scope":1385,"src":"6243:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1373,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1375,"initialValue":null,"nodeType":"VariableDeclarationStatement","src":"6243:12:6"},{"AST":{"nodeType":"YulBlock","src":"6278:59:6","statements":[{"nodeType":"YulAssignment","src":"6296:27:6","value":{"arguments":[{"name":"target","nodeType":"YulIdentifier","src":"6316:6:6"}],"functionName":{"name":"extcodesize","nodeType":"YulIdentifier","src":"6304:11:6"},"nodeType":"YulFunctionCall","src":"6304:19:6"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6296:4:6"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1374,"isOffset":false,"isSlot":false,"src":"6296:4:6","valueSize":1},{"declaration":1345,"isOffset":false,"isSlot":false,"src":"6316:6:6","valueSize":1}],"id":1376,"nodeType":"InlineAssembly","src":"6269:68:6"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1378,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"6358:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6365:1:6","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6358:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"696e76616c696420746f6b656e20616464726573732c20636f6e7461696e73206e6f20636f6465","id":1381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6368:41:6","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_6fa1b6d86d33816958814cbebc50b37900e17f8b6ad350a6aa041f41dd5ed10d","typeString":"literal_string \"invalid token address, contains no code\""},"value":"invalid token address, contains no code"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6fa1b6d86d33816958814cbebc50b37900e17f8b6ad350a6aa041f41dd5ed10d","typeString":"literal_string \"invalid token address, contains no code\""}],"id":1377,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6350:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6350:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1383,"nodeType":"ExpressionStatement","src":"6350:60:6"},{"expression":null,"functionReturnParameters":1349,"id":1384,"nodeType":"Return","src":"6424:7:6"}]}},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1387,"name":"resultData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"6650:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6650:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"hexValue":"3332","id":1389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6671:2:6","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"6650:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1413,"nodeType":"IfStatement","src":"6646:253:6","trueBody":{"id":1412,"nodeType":"Block","src":"6675:224:6","statements":[{"assignments":[1392],"declarations":[{"constant":false,"id":1392,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","overrides":null,"scope":1412,"src":"6689:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1391,"name":"uint256","nodeType":"ElementaryTypeName","src":"6689:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1398,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1395,"name":"resultData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"6730:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"hexValue":"30","id":1396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6742:1:6","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"argumentTypes":null,"id":1393,"name":"LibBytesV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"6706:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibBytesV06_$1940_$","typeString":"type(library LibBytesV06)"}},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readUint256","nodeType":"MemberAccess","referencedDeclaration":1867,"src":"6706:23:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bytes memory,uint256) pure returns (uint256)"}},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6706:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6689:55:6"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1399,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"6762:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"31","id":1400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6772:1:6","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6762:11:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1410,"nodeType":"Block","src":"6820:69:6","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1407,"name":"resultData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"6863:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":1404,"name":"LibRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"6838:16:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibRichErrorsV06_$2412_$","typeString":"type(library LibRichErrorsV06)"}},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rrevert","nodeType":"MemberAccess","referencedDeclaration":2411,"src":"6838:24:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6838:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1409,"nodeType":"ExpressionStatement","src":"6838:36:6"}]},"id":1411,"nodeType":"IfStatement","src":"6758:131:6","trueBody":{"id":1403,"nodeType":"Block","src":"6775:39:6","statements":[{"expression":null,"functionReturnParameters":1349,"id":1402,"nodeType":"Return","src":"6793:7:6"}]}}]}},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1417,"name":"resultData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"7032:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":1414,"name":"LibRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"7007:16:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibRichErrorsV06_$2412_$","typeString":"type(library LibRichErrorsV06)"}},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rrevert","nodeType":"MemberAccess","referencedDeclaration":2411,"src":"7007:24:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7007:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1419,"nodeType":"ExpressionStatement","src":"7007:36:6"}]},"documentation":{"id":1343,"nodeType":"StructuredDocumentation","src":"5461:280:6","text":"@dev Executes a call on address `target` with calldata `callData`\n      and asserts that either nothing was returned or a single boolean\n      was returned equal to `true`.\n @param target The call target.\n @param callData The abi-encoded call data."},"implemented":true,"kind":"function","modifiers":[],"name":"_callWithOptionalBooleanResult","overrides":null,"parameters":{"id":1348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1345,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","overrides":null,"scope":1421,"src":"5786:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1344,"name":"address","nodeType":"ElementaryTypeName","src":"5786:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1347,"mutability":"mutable","name":"callData","nodeType":"VariableDeclaration","overrides":null,"scope":1421,"src":"5802:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1346,"name":"bytes","nodeType":"ElementaryTypeName","src":"5802:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"5785:39:6"},"returnParameters":{"id":1349,"nodeType":"ParameterList","parameters":[],"src":"5833:0:6"},"scope":1422,"stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[1422],"name":"LibERC20TokenV06","scope":1423}],"license":"Apache-2.0"}},"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol":{"id":7,"ast":{"absolutePath":"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol","id":1941,"exportedSymbols":{"LibBytesV06":[1940]},"nodeType":"SourceUnit","src":"619:17816:7","nodes":[{"id":1424,"nodeType":"PragmaDirective","src":"619:23:7","nodes":[],"literals":["solidity","^","0.6",".5"]},{"id":1425,"nodeType":"ImportDirective","src":"644:44:7","nodes":[],"absolutePath":"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibBytesRichErrorsV06.sol","file":"./errors/LibBytesRichErrorsV06.sol","scope":1941,"sourceUnit":2381,"symbolAliases":[],"unitAlias":""},{"id":1426,"nodeType":"ImportDirective","src":"689:39:7","nodes":[],"absolutePath":"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol","file":"./errors/LibRichErrorsV06.sol","scope":1941,"sourceUnit":2413,"symbolAliases":[],"unitAlias":""},{"id":1940,"nodeType":"ContractDefinition","src":"730:17704:7","nodes":[{"id":1429,"nodeType":"UsingForDirective","src":"756:28:7","nodes":[],"libraryName":{"contractScope":null,"id":1427,"name":"LibBytesV06","nodeType":"UserDefinedTypeName","referencedDeclaration":1940,"src":"762:11:7","typeDescriptions":{"typeIdentifier":"t_contract$_LibBytesV06_$1940","typeString":"library LibBytesV06"}},"typeName":{"id":1428,"name":"bytes","nodeType":"ElementaryTypeName","src":"778:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},{"id":1441,"nodeType":"FunctionDefinition","src":"1051:187:7","nodes":[],"body":{"id":1440,"nodeType":"Block","src":"1137:101:7","nodes":[],"statements":[{"AST":{"nodeType":"YulBlock","src":"1156:46:7","statements":[{"nodeType":"YulAssignment","src":"1170:22:7","value":{"name":"input","nodeType":"YulIdentifier","src":"1187:5:7"},"variableNames":[{"name":"memoryAddress","nodeType":"YulIdentifier","src":"1170:13:7"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1432,"isOffset":false,"isSlot":false,"src":"1187:5:7","valueSize":1},{"declaration":1435,"isOffset":false,"isSlot":false,"src":"1170:13:7","valueSize":1}],"id":1437,"nodeType":"InlineAssembly","src":"1147:55:7"},{"expression":{"argumentTypes":null,"id":1438,"name":"memoryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"1218:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1436,"id":1439,"nodeType":"Return","src":"1211:20:7"}]},"documentation":{"id":1430,"nodeType":"StructuredDocumentation","src":"790:256:7","text":"@dev Gets the memory address for a byte array.\n @param input Byte array to lookup.\n @return memoryAddress Memory address of byte array. This\n         points to the header of the byte array which contains\n         the length."},"implemented":true,"kind":"function","modifiers":[],"name":"rawAddress","overrides":null,"parameters":{"id":1433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1432,"mutability":"mutable","name":"input","nodeType":"VariableDeclaration","overrides":null,"scope":1441,"src":"1071:18:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1431,"name":"bytes","nodeType":"ElementaryTypeName","src":"1071:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"1070:20:7"},"returnParameters":{"id":1436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1435,"mutability":"mutable","name":"memoryAddress","nodeType":"VariableDeclaration","overrides":null,"scope":1441,"src":"1114:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1434,"name":"uint256","nodeType":"ElementaryTypeName","src":"1114:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1113:23:7"},"scope":1940,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1453,"nodeType":"FunctionDefinition","src":"1438:200:7","nodes":[],"body":{"id":1452,"nodeType":"Block","src":"1528:110:7","nodes":[],"statements":[{"AST":{"nodeType":"YulBlock","src":"1547:55:7","statements":[{"nodeType":"YulAssignment","src":"1561:31:7","value":{"arguments":[{"name":"input","nodeType":"YulIdentifier","src":"1582:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"1589:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1578:3:7"},"nodeType":"YulFunctionCall","src":"1578:14:7"},"variableNames":[{"name":"memoryAddress","nodeType":"YulIdentifier","src":"1561:13:7"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1444,"isOffset":false,"isSlot":false,"src":"1582:5:7","valueSize":1},{"declaration":1447,"isOffset":false,"isSlot":false,"src":"1561:13:7","valueSize":1}],"id":1449,"nodeType":"InlineAssembly","src":"1538:64:7"},{"expression":{"argumentTypes":null,"id":1450,"name":"memoryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"1618:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1448,"id":1451,"nodeType":"Return","src":"1611:20:7"}]},"documentation":{"id":1442,"nodeType":"StructuredDocumentation","src":"1244:189:7","text":"@dev Gets the memory address for the contents of a byte array.\n @param input Byte array to lookup.\n @return memoryAddress Memory address of the contents of the byte array."},"implemented":true,"kind":"function","modifiers":[],"name":"contentAddress","overrides":null,"parameters":{"id":1445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1444,"mutability":"mutable","name":"input","nodeType":"VariableDeclaration","overrides":null,"scope":1453,"src":"1462:18:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1443,"name":"bytes","nodeType":"ElementaryTypeName","src":"1462:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"1461:20:7"},"returnParameters":{"id":1448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1447,"mutability":"mutable","name":"memoryAddress","nodeType":"VariableDeclaration","overrides":null,"scope":1453,"src":"1505:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1446,"name":"uint256","nodeType":"ElementaryTypeName","src":"1505:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1504:23:7"},"scope":1940,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1485,"nodeType":"FunctionDefinition","src":"1877:4365:7","nodes":[],"body":{"id":1484,"nodeType":"Block","src":"1984:4258:7","nodes":[],"statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1463,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"1998:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"hexValue":"3332","id":1464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:2:7","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"1998:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1482,"nodeType":"Block","src":"2470:3766:7","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1468,"name":"source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"2548:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":1469,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"2558:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2548:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1473,"nodeType":"IfStatement","src":"2544:59:7","trueBody":{"id":1472,"nodeType":"Block","src":"2564:39:7","statements":[{"expression":null,"functionReturnParameters":1462,"id":1471,"nodeType":"Return","src":"2582:7:7"}]}},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1474,"name":"source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"3283:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"id":1475,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"3292:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3283:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1480,"nodeType":"Block","src":"4658:1568:7","statements":[{"AST":{"nodeType":"YulBlock","src":"4685:1527:7","statements":[{"nodeType":"YulAssignment","src":"4861:25:7","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4875:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"4883:2:7","type":"","value":"32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4871:3:7"},"nodeType":"YulFunctionCall","src":"4871:15:7"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4861:6:7"}]},{"nodeType":"YulVariableDeclaration","src":"4907:31:7","value":{"arguments":[{"name":"source","nodeType":"YulIdentifier","src":"4923:6:7"},{"name":"length","nodeType":"YulIdentifier","src":"4931:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4919:3:7"},"nodeType":"YulFunctionCall","src":"4919:19:7"},"variables":[{"name":"sEnd","nodeType":"YulTypedName","src":"4911:4:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4959:29:7","value":{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"4975:4:7"},{"name":"length","nodeType":"YulIdentifier","src":"4981:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4971:3:7"},"nodeType":"YulFunctionCall","src":"4971:17:7"},"variables":[{"name":"dEnd","nodeType":"YulTypedName","src":"4963:4:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5272:26:7","value":{"arguments":[{"name":"source","nodeType":"YulIdentifier","src":"5291:6:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5285:5:7"},"nodeType":"YulFunctionCall","src":"5285:13:7"},"variables":[{"name":"first","nodeType":"YulTypedName","src":"5276:5:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"5940:165:7","statements":[{"expression":{"arguments":[{"name":"dEnd","nodeType":"YulIdentifier","src":"5973:4:7"},{"arguments":[{"name":"sEnd","nodeType":"YulIdentifier","src":"5985:4:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5979:5:7"},"nodeType":"YulFunctionCall","src":"5979:11:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5966:6:7"},"nodeType":"YulFunctionCall","src":"5966:25:7"},"nodeType":"YulExpressionStatement","src":"5966:25:7"},{"nodeType":"YulAssignment","src":"6016:21:7","value":{"arguments":[{"name":"sEnd","nodeType":"YulIdentifier","src":"6028:4:7"},{"kind":"number","nodeType":"YulLiteral","src":"6034:2:7","type":"","value":"32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6024:3:7"},"nodeType":"YulFunctionCall","src":"6024:13:7"},"variableNames":[{"name":"sEnd","nodeType":"YulIdentifier","src":"6016:4:7"}]},{"nodeType":"YulAssignment","src":"6062:21:7","value":{"arguments":[{"name":"dEnd","nodeType":"YulIdentifier","src":"6074:4:7"},{"kind":"number","nodeType":"YulLiteral","src":"6080:2:7","type":"","value":"32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6070:3:7"},"nodeType":"YulFunctionCall","src":"6070:13:7"},"variableNames":[{"name":"dEnd","nodeType":"YulIdentifier","src":"6062:4:7"}]}]},"condition":{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"5903:4:7"},{"name":"dEnd","nodeType":"YulIdentifier","src":"5909:4:7"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5899:3:7"},"nodeType":"YulFunctionCall","src":"5899:15:7"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5915:24:7","statements":[]},"pre":{"nodeType":"YulBlock","src":"5874:24:7","statements":[]},"src":"5870:235:7"},{"expression":{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"6182:4:7"},{"name":"first","nodeType":"YulIdentifier","src":"6188:5:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6175:6:7"},"nodeType":"YulFunctionCall","src":"6175:19:7"},"nodeType":"YulExpressionStatement","src":"6175:19:7"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1456,"isOffset":false,"isSlot":false,"src":"4975:4:7","valueSize":1},{"declaration":1456,"isOffset":false,"isSlot":false,"src":"5903:4:7","valueSize":1},{"declaration":1456,"isOffset":false,"isSlot":false,"src":"6182:4:7","valueSize":1},{"declaration":1460,"isOffset":false,"isSlot":false,"src":"4861:6:7","valueSize":1},{"declaration":1460,"isOffset":false,"isSlot":false,"src":"4875:6:7","valueSize":1},{"declaration":1460,"isOffset":false,"isSlot":false,"src":"4931:6:7","valueSize":1},{"declaration":1460,"isOffset":false,"isSlot":false,"src":"4981:6:7","valueSize":1},{"declaration":1458,"isOffset":false,"isSlot":false,"src":"4923:6:7","valueSize":1},{"declaration":1458,"isOffset":false,"isSlot":false,"src":"5291:6:7","valueSize":1}],"id":1479,"nodeType":"InlineAssembly","src":"4676:1536:7"}]},"id":1481,"nodeType":"IfStatement","src":"3279:2947:7","trueBody":{"id":1478,"nodeType":"Block","src":"3298:1354:7","statements":[{"AST":{"nodeType":"YulBlock","src":"3325:1313:7","statements":[{"nodeType":"YulAssignment","src":"3596:25:7","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3610:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"3618:2:7","type":"","value":"32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3606:3:7"},"nodeType":"YulFunctionCall","src":"3606:15:7"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3596:6:7"}]},{"nodeType":"YulVariableDeclaration","src":"3642:31:7","value":{"arguments":[{"name":"source","nodeType":"YulIdentifier","src":"3658:6:7"},{"name":"length","nodeType":"YulIdentifier","src":"3666:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3654:3:7"},"nodeType":"YulFunctionCall","src":"3654:19:7"},"variables":[{"name":"sEnd","nodeType":"YulTypedName","src":"3646:4:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3694:29:7","value":{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"3710:4:7"},{"name":"length","nodeType":"YulIdentifier","src":"3716:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3706:3:7"},"nodeType":"YulFunctionCall","src":"3706:17:7"},"variables":[{"name":"dEnd","nodeType":"YulTypedName","src":"3698:4:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4005:23:7","value":{"arguments":[{"name":"sEnd","nodeType":"YulIdentifier","src":"4023:4:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4017:5:7"},"nodeType":"YulFunctionCall","src":"4017:11:7"},"variables":[{"name":"last","nodeType":"YulTypedName","src":"4009:4:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"4362:171:7","statements":[{"expression":{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"4395:4:7"},{"arguments":[{"name":"source","nodeType":"YulIdentifier","src":"4407:6:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4401:5:7"},"nodeType":"YulFunctionCall","src":"4401:13:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4388:6:7"},"nodeType":"YulFunctionCall","src":"4388:27:7"},"nodeType":"YulExpressionStatement","src":"4388:27:7"},{"nodeType":"YulAssignment","src":"4440:25:7","value":{"arguments":[{"name":"source","nodeType":"YulIdentifier","src":"4454:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"4462:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4450:3:7"},"nodeType":"YulFunctionCall","src":"4450:15:7"},"variableNames":[{"name":"source","nodeType":"YulIdentifier","src":"4440:6:7"}]},{"nodeType":"YulAssignment","src":"4490:21:7","value":{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"4502:4:7"},{"kind":"number","nodeType":"YulLiteral","src":"4508:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4498:3:7"},"nodeType":"YulFunctionCall","src":"4498:13:7"},"variableNames":[{"name":"dest","nodeType":"YulIdentifier","src":"4490:4:7"}]}]},"condition":{"arguments":[{"name":"source","nodeType":"YulIdentifier","src":"4323:6:7"},{"name":"sEnd","nodeType":"YulIdentifier","src":"4331:4:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4320:2:7"},"nodeType":"YulFunctionCall","src":"4320:16:7"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4337:24:7","statements":[]},"pre":{"nodeType":"YulBlock","src":"4295:24:7","statements":[]},"src":"4291:242:7"},{"expression":{"arguments":[{"name":"dEnd","nodeType":"YulIdentifier","src":"4609:4:7"},{"name":"last","nodeType":"YulIdentifier","src":"4615:4:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4602:6:7"},"nodeType":"YulFunctionCall","src":"4602:18:7"},"nodeType":"YulExpressionStatement","src":"4602:18:7"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1456,"isOffset":false,"isSlot":false,"src":"3710:4:7","valueSize":1},{"declaration":1456,"isOffset":false,"isSlot":false,"src":"4395:4:7","valueSize":1},{"declaration":1456,"isOffset":false,"isSlot":false,"src":"4490:4:7","valueSize":1},{"declaration":1456,"isOffset":false,"isSlot":false,"src":"4502:4:7","valueSize":1},{"declaration":1460,"isOffset":false,"isSlot":false,"src":"3596:6:7","valueSize":1},{"declaration":1460,"isOffset":false,"isSlot":false,"src":"3610:6:7","valueSize":1},{"declaration":1460,"isOffset":false,"isSlot":false,"src":"3666:6:7","valueSize":1},{"declaration":1460,"isOffset":false,"isSlot":false,"src":"3716:6:7","valueSize":1},{"declaration":1458,"isOffset":false,"isSlot":false,"src":"3658:6:7","valueSize":1},{"declaration":1458,"isOffset":false,"isSlot":false,"src":"4323:6:7","valueSize":1},{"declaration":1458,"isOffset":false,"isSlot":false,"src":"4407:6:7","valueSize":1},{"declaration":1458,"isOffset":false,"isSlot":false,"src":"4440:6:7","valueSize":1},{"declaration":1458,"isOffset":false,"isSlot":false,"src":"4454:6:7","valueSize":1}],"id":1477,"nodeType":"InlineAssembly","src":"3316:1322:7"}]}}]},"id":1483,"nodeType":"IfStatement","src":"1994:4242:7","trueBody":{"id":1467,"nodeType":"Block","src":"2011:453:7","statements":[{"AST":{"nodeType":"YulBlock","src":"2235:219:7","statements":[{"nodeType":"YulVariableDeclaration","src":"2253:45:7","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2273:3:7","type":"","value":"256"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2282:2:7","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"2286:6:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2278:3:7"},"nodeType":"YulFunctionCall","src":"2278:15:7"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"2269:3:7"},"nodeType":"YulFunctionCall","src":"2269:25:7"},{"kind":"number","nodeType":"YulLiteral","src":"2296:1:7","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2265:3:7"},"nodeType":"YulFunctionCall","src":"2265:33:7"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"2257:4:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2315:38:7","value":{"arguments":[{"arguments":[{"name":"source","nodeType":"YulIdentifier","src":"2334:6:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2328:5:7"},"nodeType":"YulFunctionCall","src":"2328:13:7"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"2347:4:7"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2343:3:7"},"nodeType":"YulFunctionCall","src":"2343:9:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2324:3:7"},"nodeType":"YulFunctionCall","src":"2324:29:7"},"variables":[{"name":"s","nodeType":"YulTypedName","src":"2319:1:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2370:31:7","value":{"arguments":[{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"2389:4:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2383:5:7"},"nodeType":"YulFunctionCall","src":"2383:11:7"},{"name":"mask","nodeType":"YulIdentifier","src":"2396:4:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2379:3:7"},"nodeType":"YulFunctionCall","src":"2379:22:7"},"variables":[{"name":"d","nodeType":"YulTypedName","src":"2374:1:7","type":""}]},{"expression":{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"2425:4:7"},{"arguments":[{"name":"s","nodeType":"YulIdentifier","src":"2434:1:7"},{"name":"d","nodeType":"YulIdentifier","src":"2437:1:7"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2431:2:7"},"nodeType":"YulFunctionCall","src":"2431:8:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2418:6:7"},"nodeType":"YulFunctionCall","src":"2418:22:7"},"nodeType":"YulExpressionStatement","src":"2418:22:7"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1456,"isOffset":false,"isSlot":false,"src":"2389:4:7","valueSize":1},{"declaration":1456,"isOffset":false,"isSlot":false,"src":"2425:4:7","valueSize":1},{"declaration":1460,"isOffset":false,"isSlot":false,"src":"2286:6:7","valueSize":1},{"declaration":1458,"isOffset":false,"isSlot":false,"src":"2334:6:7","valueSize":1}],"id":1466,"nodeType":"InlineAssembly","src":"2226:228:7"}]}}]},"documentation":{"id":1454,"nodeType":"StructuredDocumentation","src":"1644:228:7","text":"@dev Copies `length` bytes from memory location `source` to `dest`.\n @param dest memory address to copy bytes to.\n @param source memory address to copy bytes from.\n @param length number of bytes to copy."},"implemented":true,"kind":"function","modifiers":[],"name":"memCopy","overrides":null,"parameters":{"id":1461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1456,"mutability":"mutable","name":"dest","nodeType":"VariableDeclaration","overrides":null,"scope":1485,"src":"1903:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1455,"name":"uint256","nodeType":"ElementaryTypeName","src":"1903:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1458,"mutability":"mutable","name":"source","nodeType":"VariableDeclaration","overrides":null,"scope":1485,"src":"1925:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1457,"name":"uint256","nodeType":"ElementaryTypeName","src":"1925:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1460,"mutability":"mutable","name":"length","nodeType":"VariableDeclaration","overrides":null,"scope":1485,"src":"1949:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1459,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1893:76:7"},"returnParameters":{"id":1462,"nodeType":"ParameterList","parameters":[],"src":"1984:0:7"},"scope":1940,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1560,"nodeType":"FunctionDefinition","src":"6550:1137:7","nodes":[],"body":{"id":1559,"nodeType":"Block","src":"6681:1006:7","nodes":[],"statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1497,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"6829:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"id":1498,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"6836:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6829:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1514,"nodeType":"IfStatement","src":"6825:316:7","trueBody":{"id":1513,"nodeType":"Block","src":"6840:301:7","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1505,"name":"LibBytesRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"6965:21:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibBytesRichErrorsV06_$2380_$","typeString":"type(library LibBytesRichErrorsV06)"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidByteOperationErrorCodes","nodeType":"MemberAccess","referencedDeclaration":2356,"src":"6965:52:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_InvalidByteOperationErrorCodes_$2356_$","typeString":"type(enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes)"}},"id":1507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"FromLessThanOrEqualsToRequired","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6965:83:7","typeDescriptions":{"typeIdentifier":"t_enum$_InvalidByteOperationErrorCodes_$2356","typeString":"enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes"}},{"argumentTypes":null,"id":1508,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"7070:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1509,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"7096:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_InvalidByteOperationErrorCodes_$2356","typeString":"enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1503,"name":"LibBytesRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"6896:21:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibBytesRichErrorsV06_$2380_$","typeString":"type(library LibBytesRichErrorsV06)"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidByteOperationError","nodeType":"MemberAccess","referencedDeclaration":2379,"src":"6896:47:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_InvalidByteOperationErrorCodes_$2356_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes,uint256,uint256) pure returns (bytes memory)"}},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6896:220:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":1500,"name":"LibRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"6854:16:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibRichErrorsV06_$2412_$","typeString":"type(library LibRichErrorsV06)"}},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rrevert","nodeType":"MemberAccess","referencedDeclaration":2411,"src":"6854:24:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6854:276:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1512,"nodeType":"ExpressionStatement","src":"6854:276:7"}]}},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1515,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"7154:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1516,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"7159:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7159:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7154:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1534,"nodeType":"IfStatement","src":"7150:326:7","trueBody":{"id":1533,"nodeType":"Block","src":"7169:307:7","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1524,"name":"LibBytesRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"7294:21:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibBytesRichErrorsV06_$2380_$","typeString":"type(library LibBytesRichErrorsV06)"}},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidByteOperationErrorCodes","nodeType":"MemberAccess","referencedDeclaration":2356,"src":"7294:52:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_InvalidByteOperationErrorCodes_$2356_$","typeString":"type(enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes)"}},"id":1526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"ToLessThanOrEqualsLengthRequired","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7294:85:7","typeDescriptions":{"typeIdentifier":"t_enum$_InvalidByteOperationErrorCodes_$2356","typeString":"enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes"}},{"argumentTypes":null,"id":1527,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"7401:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1528,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"7425:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7425:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_InvalidByteOperationErrorCodes_$2356","typeString":"enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1522,"name":"LibBytesRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"7225:21:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibBytesRichErrorsV06_$2380_$","typeString":"type(library LibBytesRichErrorsV06)"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidByteOperationError","nodeType":"MemberAccess","referencedDeclaration":2379,"src":"7225:47:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_InvalidByteOperationErrorCodes_$2356_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes,uint256,uint256) pure returns (bytes memory)"}},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7225:226:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":1519,"name":"LibRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"7183:16:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibRichErrorsV06_$2412_$","typeString":"type(library LibRichErrorsV06)"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rrevert","nodeType":"MemberAccess","referencedDeclaration":2411,"src":"7183:24:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7183:282:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1532,"nodeType":"ExpressionStatement","src":"7183:282:7"}]}},{"expression":{"argumentTypes":null,"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1535,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"7544:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1538,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"7563:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"id":1539,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"7568:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7563:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7553:9:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1536,"name":"bytes","nodeType":"ElementaryTypeName","src":"7557:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7553:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"7544:29:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1543,"nodeType":"ExpressionStatement","src":"7544:29:7"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"id":1545,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"7591:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"contentAddress","nodeType":"MemberAccess","referencedDeclaration":1453,"src":"7591:21:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) pure returns (uint256)"}},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7591:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"id":1548,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"7616:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"contentAddress","nodeType":"MemberAccess","referencedDeclaration":1453,"src":"7616:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) pure returns (uint256)"}},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7616:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"id":1551,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"7637:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7616:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1553,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"7643:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7643:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1544,"name":"memCopy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"7583:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256) pure"}},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7583:74:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1556,"nodeType":"ExpressionStatement","src":"7583:74:7"},{"expression":{"argumentTypes":null,"id":1557,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"7674:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1496,"id":1558,"nodeType":"Return","src":"7667:13:7"}]},"documentation":{"id":1486,"nodeType":"StructuredDocumentation","src":"6248:297:7","text":"@dev Returns a slices from a byte array.\n @param b The byte array to take a slice from.\n @param from The starting index for the slice (inclusive).\n @param to The final index for the slice (exclusive).\n @return result The slice containing bytes at indices [from, to)"},"implemented":true,"kind":"function","modifiers":[],"name":"slice","overrides":null,"parameters":{"id":1493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1488,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":1560,"src":"6574:14:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1487,"name":"bytes","nodeType":"ElementaryTypeName","src":"6574:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":1490,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","overrides":null,"scope":1560,"src":"6598:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1489,"name":"uint256","nodeType":"ElementaryTypeName","src":"6598:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1492,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":1560,"src":"6620:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1491,"name":"uint256","nodeType":"ElementaryTypeName","src":"6620:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6564:72:7"},"returnParameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1495,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","overrides":null,"scope":1560,"src":"6660:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1494,"name":"bytes","nodeType":"ElementaryTypeName","src":"6660:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"6659:21:7"},"scope":1940,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1614,"nodeType":"FunctionDefinition","src":"8186:1141:7","nodes":[],"body":{"id":1613,"nodeType":"Block","src":"8328:999:7","nodes":[],"statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1572,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"8476:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"id":1573,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"8483:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8476:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1589,"nodeType":"IfStatement","src":"8472:316:7","trueBody":{"id":1588,"nodeType":"Block","src":"8487:301:7","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1580,"name":"LibBytesRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"8612:21:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibBytesRichErrorsV06_$2380_$","typeString":"type(library LibBytesRichErrorsV06)"}},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidByteOperationErrorCodes","nodeType":"MemberAccess","referencedDeclaration":2356,"src":"8612:52:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_InvalidByteOperationErrorCodes_$2356_$","typeString":"type(enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes)"}},"id":1582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"FromLessThanOrEqualsToRequired","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8612:83:7","typeDescriptions":{"typeIdentifier":"t_enum$_InvalidByteOperationErrorCodes_$2356","typeString":"enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes"}},{"argumentTypes":null,"id":1583,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"8717:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1584,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"8743:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_InvalidByteOperationErrorCodes_$2356","typeString":"enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1578,"name":"LibBytesRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"8543:21:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibBytesRichErrorsV06_$2380_$","typeString":"type(library LibBytesRichErrorsV06)"}},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidByteOperationError","nodeType":"MemberAccess","referencedDeclaration":2379,"src":"8543:47:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_InvalidByteOperationErrorCodes_$2356_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes,uint256,uint256) pure returns (bytes memory)"}},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8543:220:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":1575,"name":"LibRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"8501:16:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibRichErrorsV06_$2412_$","typeString":"type(library LibRichErrorsV06)"}},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rrevert","nodeType":"MemberAccess","referencedDeclaration":2411,"src":"8501:24:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8501:276:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1587,"nodeType":"ExpressionStatement","src":"8501:276:7"}]}},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1590,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"8801:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1591,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"8806:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8806:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8801:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1609,"nodeType":"IfStatement","src":"8797:326:7","trueBody":{"id":1608,"nodeType":"Block","src":"8816:307:7","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1599,"name":"LibBytesRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"8941:21:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibBytesRichErrorsV06_$2380_$","typeString":"type(library LibBytesRichErrorsV06)"}},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidByteOperationErrorCodes","nodeType":"MemberAccess","referencedDeclaration":2356,"src":"8941:52:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_InvalidByteOperationErrorCodes_$2356_$","typeString":"type(enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes)"}},"id":1601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"ToLessThanOrEqualsLengthRequired","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8941:85:7","typeDescriptions":{"typeIdentifier":"t_enum$_InvalidByteOperationErrorCodes_$2356","typeString":"enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes"}},{"argumentTypes":null,"id":1602,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"9048:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1603,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"9072:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9072:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_InvalidByteOperationErrorCodes_$2356","typeString":"enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1597,"name":"LibBytesRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"8872:21:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibBytesRichErrorsV06_$2380_$","typeString":"type(library LibBytesRichErrorsV06)"}},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidByteOperationError","nodeType":"MemberAccess","referencedDeclaration":2379,"src":"8872:47:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_InvalidByteOperationErrorCodes_$2356_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes,uint256,uint256) pure returns (bytes memory)"}},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8872:226:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":1594,"name":"LibRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"8830:16:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibRichErrorsV06_$2412_$","typeString":"type(library LibRichErrorsV06)"}},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rrevert","nodeType":"MemberAccess","referencedDeclaration":2411,"src":"8830:24:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8830:282:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1607,"nodeType":"ExpressionStatement","src":"8830:282:7"}]}},{"AST":{"nodeType":"YulBlock","src":"9210:88:7","statements":[{"nodeType":"YulAssignment","src":"9224:22:7","value":{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"9238:1:7"},{"name":"from","nodeType":"YulIdentifier","src":"9241:4:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9234:3:7"},"nodeType":"YulFunctionCall","src":"9234:12:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"9224:6:7"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"9266:6:7"},{"arguments":[{"name":"to","nodeType":"YulIdentifier","src":"9278:2:7"},{"name":"from","nodeType":"YulIdentifier","src":"9282:4:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9274:3:7"},"nodeType":"YulFunctionCall","src":"9274:13:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9259:6:7"},"nodeType":"YulFunctionCall","src":"9259:29:7"},"nodeType":"YulExpressionStatement","src":"9259:29:7"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1563,"isOffset":false,"isSlot":false,"src":"9238:1:7","valueSize":1},{"declaration":1565,"isOffset":false,"isSlot":false,"src":"9241:4:7","valueSize":1},{"declaration":1565,"isOffset":false,"isSlot":false,"src":"9282:4:7","valueSize":1},{"declaration":1570,"isOffset":false,"isSlot":false,"src":"9224:6:7","valueSize":1},{"declaration":1570,"isOffset":false,"isSlot":false,"src":"9266:6:7","valueSize":1},{"declaration":1567,"isOffset":false,"isSlot":false,"src":"9278:2:7","valueSize":1}],"id":1610,"nodeType":"InlineAssembly","src":"9201:97:7"},{"expression":{"argumentTypes":null,"id":1611,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"9314:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1571,"id":1612,"nodeType":"Return","src":"9307:13:7"}]},"documentation":{"id":1561,"nodeType":"StructuredDocumentation","src":"7693:488:7","text":"@dev Returns a slice from a byte array without preserving the input.\n      When `from == 0`, the original array will match the slice.\n      In other cases its state will be corrupted.\n @param b The byte array to take a slice from. Will be destroyed in the process.\n @param from The starting index for the slice (inclusive).\n @param to The final index for the slice (exclusive).\n @return result The slice containing bytes at indices [from, to)"},"implemented":true,"kind":"function","modifiers":[],"name":"sliceDestructive","overrides":null,"parameters":{"id":1568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1563,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":1614,"src":"8221:14:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1562,"name":"bytes","nodeType":"ElementaryTypeName","src":"8221:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":1565,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","overrides":null,"scope":1614,"src":"8245:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1564,"name":"uint256","nodeType":"ElementaryTypeName","src":"8245:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1567,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":1614,"src":"8267:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1566,"name":"uint256","nodeType":"ElementaryTypeName","src":"8267:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"8211:72:7"},"returnParameters":{"id":1571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1570,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","overrides":null,"scope":1614,"src":"8307:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1569,"name":"bytes","nodeType":"ElementaryTypeName","src":"8307:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"8306:21:7"},"scope":1940,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1655,"nodeType":"FunctionDefinition","src":"9514:649:7","nodes":[],"body":{"id":1654,"nodeType":"Block","src":"9589:574:7","nodes":[],"statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1622,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"9603:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9603:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9615:1:7","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9603:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1641,"nodeType":"IfStatement","src":"9599:322:7","trueBody":{"id":1640,"nodeType":"Block","src":"9618:303:7","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1631,"name":"LibBytesRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"9743:21:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibBytesRichErrorsV06_$2380_$","typeString":"type(library LibBytesRichErrorsV06)"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidByteOperationErrorCodes","nodeType":"MemberAccess","referencedDeclaration":2356,"src":"9743:52:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_InvalidByteOperationErrorCodes_$2356_$","typeString":"type(enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes)"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LengthGreaterThanZeroRequired","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9743:82:7","typeDescriptions":{"typeIdentifier":"t_enum$_InvalidByteOperationErrorCodes_$2356","typeString":"enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1634,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"9847:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9847:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"30","id":1636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9877:1:7","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_InvalidByteOperationErrorCodes_$2356","typeString":"enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"argumentTypes":null,"id":1629,"name":"LibBytesRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"9674:21:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibBytesRichErrorsV06_$2380_$","typeString":"type(library LibBytesRichErrorsV06)"}},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidByteOperationError","nodeType":"MemberAccess","referencedDeclaration":2379,"src":"9674:47:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_InvalidByteOperationErrorCodes_$2356_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes,uint256,uint256) pure returns (bytes memory)"}},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9674:222:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":1626,"name":"LibRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"9632:16:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibRichErrorsV06_$2412_$","typeString":"type(library LibRichErrorsV06)"}},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rrevert","nodeType":"MemberAccess","referencedDeclaration":2411,"src":"9632:24:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9632:278:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1639,"nodeType":"ExpressionStatement","src":"9632:278:7"}]}},{"expression":{"argumentTypes":null,"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1642,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"9959:6:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1643,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"9968:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1648,"indexExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1644,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"9970:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9970:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"hexValue":"31","id":1646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9981:1:7","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9970:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9968:15:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9959:24:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1650,"nodeType":"ExpressionStatement","src":"9959:24:7"},{"AST":{"nodeType":"YulBlock","src":"10003:131:7","statements":[{"nodeType":"YulVariableDeclaration","src":"10064:30:7","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"10088:1:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10082:5:7"},"nodeType":"YulFunctionCall","src":"10082:8:7"},{"kind":"number","nodeType":"YulLiteral","src":"10092:1:7","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10078:3:7"},"nodeType":"YulFunctionCall","src":"10078:16:7"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"10068:6:7","type":""}]},{"expression":{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"10114:1:7"},{"name":"newLen","nodeType":"YulIdentifier","src":"10117:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10107:6:7"},"nodeType":"YulFunctionCall","src":"10107:17:7"},"nodeType":"YulExpressionStatement","src":"10107:17:7"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1617,"isOffset":false,"isSlot":false,"src":"10088:1:7","valueSize":1},{"declaration":1617,"isOffset":false,"isSlot":false,"src":"10114:1:7","valueSize":1}],"id":1651,"nodeType":"InlineAssembly","src":"9994:140:7"},{"expression":{"argumentTypes":null,"id":1652,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"10150:6:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"functionReturnParameters":1621,"id":1653,"nodeType":"Return","src":"10143:13:7"}]},"documentation":{"id":1615,"nodeType":"StructuredDocumentation","src":"9333:176:7","text":"@dev Pops the last byte off of a byte array by modifying its length.\n @param b Byte array that will be modified.\n @return result The byte that was popped off."},"implemented":true,"kind":"function","modifiers":[],"name":"popLastByte","overrides":null,"parameters":{"id":1618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1617,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":1655,"src":"9535:14:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1616,"name":"bytes","nodeType":"ElementaryTypeName","src":"9535:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"9534:16:7"},"returnParameters":{"id":1621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1620,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","overrides":null,"scope":1655,"src":"9574:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":1619,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9574:6:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"value":null,"visibility":"internal"}],"src":"9573:15:7"},"scope":1940,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1680,"nodeType":"FunctionDefinition","src":"10382:353:7","nodes":[],"body":{"id":1679,"nodeType":"Block","src":"10469:266:7","nodes":[],"statements":[{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1665,"name":"lhs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"10668:3:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"10668:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1667,"name":"rhs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"10682:3:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"10682:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10668:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1671,"name":"lhs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"10706:3:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1670,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10696:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10696:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1674,"name":"rhs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"10724:3:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1673,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10714:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10714:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10696:32:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10668:60:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1664,"id":1678,"nodeType":"Return","src":"10661:67:7"}]},"documentation":{"id":1656,"nodeType":"StructuredDocumentation","src":"10169:208:7","text":"@dev Tests equality of two byte arrays.\n @param lhs First byte array to compare.\n @param rhs Second byte array to compare.\n @return equal True if arrays are the same. False otherwise."},"implemented":true,"kind":"function","modifiers":[],"name":"equals","overrides":null,"parameters":{"id":1661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1658,"mutability":"mutable","name":"lhs","nodeType":"VariableDeclaration","overrides":null,"scope":1680,"src":"10398:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1657,"name":"bytes","nodeType":"ElementaryTypeName","src":"10398:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":1660,"mutability":"mutable","name":"rhs","nodeType":"VariableDeclaration","overrides":null,"scope":1680,"src":"10416:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1659,"name":"bytes","nodeType":"ElementaryTypeName","src":"10416:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"10397:36:7"},"returnParameters":{"id":1664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1663,"mutability":"mutable","name":"equal","nodeType":"VariableDeclaration","overrides":null,"scope":1680,"src":"10457:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1662,"name":"bool","nodeType":"ElementaryTypeName","src":"10457:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"10456:12:7"},"scope":1940,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1722,"nodeType":"FunctionDefinition","src":"10956:1076:7","nodes":[],"body":{"id":1721,"nodeType":"Block","src":"11047:985:7","nodes":[],"statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1690,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"11061:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"11061:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1692,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"11072:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"hexValue":"3230","id":1693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11080:2:7","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"11072:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11061:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1713,"nodeType":"IfStatement","src":"11057:376:7","trueBody":{"id":1712,"nodeType":"Block","src":"11084:349:7","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1701,"name":"LibBytesRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"11209:21:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibBytesRichErrorsV06_$2380_$","typeString":"type(library LibBytesRichErrorsV06)"}},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidByteOperationErrorCodes","nodeType":"MemberAccess","referencedDeclaration":2356,"src":"11209:52:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_InvalidByteOperationErrorCodes_$2356_$","typeString":"type(enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes)"}},"id":1703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LengthGreaterThanOrEqualsTwentyRequired","nodeType":"MemberAccess","referencedDeclaration":null,"src":"11209:92:7","typeDescriptions":{"typeIdentifier":"t_enum$_InvalidByteOperationErrorCodes_$2356","typeString":"enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1704,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"11323:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"11323:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1706,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"11353:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"hexValue":"3230","id":1707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11361:2:7","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"11353:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_InvalidByteOperationErrorCodes_$2356","typeString":"enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1699,"name":"LibBytesRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"11140:21:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibBytesRichErrorsV06_$2380_$","typeString":"type(library LibBytesRichErrorsV06)"}},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidByteOperationError","nodeType":"MemberAccess","referencedDeclaration":2379,"src":"11140:47:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_InvalidByteOperationErrorCodes_$2356_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes,uint256,uint256) pure returns (bytes memory)"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11140:268:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":1696,"name":"LibRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"11098:16:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibRichErrorsV06_$2412_$","typeString":"type(library LibRichErrorsV06)"}},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rrevert","nodeType":"MemberAccess","referencedDeclaration":2411,"src":"11098:24:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11098:324:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1711,"nodeType":"ExpressionStatement","src":"11098:324:7"}]}},{"expression":{"argumentTypes":null,"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1714,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"11670:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"argumentTypes":null,"hexValue":"3230","id":1715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11679:2:7","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"11670:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1717,"nodeType":"ExpressionStatement","src":"11670:11:7"},{"AST":{"nodeType":"YulBlock","src":"11743:260:7","statements":[{"nodeType":"YulAssignment","src":"11914:79:7","value":{"arguments":[{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"11938:1:7"},{"name":"index","nodeType":"YulIdentifier","src":"11941:5:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11934:3:7"},"nodeType":"YulFunctionCall","src":"11934:13:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11928:5:7"},"nodeType":"YulFunctionCall","src":"11928:20:7"},{"kind":"number","nodeType":"YulLiteral","src":"11950:42:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11924:3:7"},"nodeType":"YulFunctionCall","src":"11924:69:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11914:6:7"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1683,"isOffset":false,"isSlot":false,"src":"11938:1:7","valueSize":1},{"declaration":1685,"isOffset":false,"isSlot":false,"src":"11941:5:7","valueSize":1},{"declaration":1688,"isOffset":false,"isSlot":false,"src":"11914:6:7","valueSize":1}],"id":1718,"nodeType":"InlineAssembly","src":"11734:269:7"},{"expression":{"argumentTypes":null,"id":1719,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"12019:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1689,"id":1720,"nodeType":"Return","src":"12012:13:7"}]},"documentation":{"id":1681,"nodeType":"StructuredDocumentation","src":"10741:210:7","text":"@dev Reads an address from a position in a byte array.\n @param b Byte array containing an address.\n @param index Index in byte array of address.\n @return result address from byte array."},"implemented":true,"kind":"function","modifiers":[],"name":"readAddress","overrides":null,"parameters":{"id":1686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1683,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":1722,"src":"10977:14:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1682,"name":"bytes","nodeType":"ElementaryTypeName","src":"10977:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":1685,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","overrides":null,"scope":1722,"src":"10993:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1684,"name":"uint256","nodeType":"ElementaryTypeName","src":"10993:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"10976:31:7"},"returnParameters":{"id":1689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1688,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","overrides":null,"scope":1722,"src":"11031:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1687,"name":"address","nodeType":"ElementaryTypeName","src":"11031:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"11030:16:7"},"scope":1940,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1762,"nodeType":"FunctionDefinition","src":"12269:1871:7","nodes":[],"body":{"id":1761,"nodeType":"Block","src":"12381:1759:7","nodes":[],"statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1732,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"12395:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"12395:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1734,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"12406:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"hexValue":"3230","id":1735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12414:2:7","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"12406:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12395:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1755,"nodeType":"IfStatement","src":"12391:376:7","trueBody":{"id":1754,"nodeType":"Block","src":"12418:349:7","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1743,"name":"LibBytesRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"12543:21:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibBytesRichErrorsV06_$2380_$","typeString":"type(library LibBytesRichErrorsV06)"}},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidByteOperationErrorCodes","nodeType":"MemberAccess","referencedDeclaration":2356,"src":"12543:52:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_InvalidByteOperationErrorCodes_$2356_$","typeString":"type(enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes)"}},"id":1745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LengthGreaterThanOrEqualsTwentyRequired","nodeType":"MemberAccess","referencedDeclaration":null,"src":"12543:92:7","typeDescriptions":{"typeIdentifier":"t_enum$_InvalidByteOperationErrorCodes_$2356","typeString":"enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1746,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"12657:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"12657:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1748,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"12687:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"hexValue":"3230","id":1749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12695:2:7","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"12687:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_InvalidByteOperationErrorCodes_$2356","typeString":"enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1741,"name":"LibBytesRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"12474:21:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibBytesRichErrorsV06_$2380_$","typeString":"type(library LibBytesRichErrorsV06)"}},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidByteOperationError","nodeType":"MemberAccess","referencedDeclaration":2379,"src":"12474:47:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_InvalidByteOperationErrorCodes_$2356_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes,uint256,uint256) pure returns (bytes memory)"}},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12474:268:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":1738,"name":"LibRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"12432:16:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibRichErrorsV06_$2412_$","typeString":"type(library LibRichErrorsV06)"}},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rrevert","nodeType":"MemberAccess","referencedDeclaration":2411,"src":"12432:24:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12432:324:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1753,"nodeType":"ExpressionStatement","src":"12432:324:7"}]}},{"expression":{"argumentTypes":null,"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1756,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"13004:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"argumentTypes":null,"hexValue":"3230","id":1757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13013:2:7","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"13004:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1759,"nodeType":"ExpressionStatement","src":"13004:11:7"},{"AST":{"nodeType":"YulBlock","src":"13078:1056:7","statements":[{"nodeType":"YulVariableDeclaration","src":"13675:156:7","value":{"arguments":[{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"13723:1:7"},{"name":"index","nodeType":"YulIdentifier","src":"13726:5:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13719:3:7"},"nodeType":"YulFunctionCall","src":"13719:13:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13713:5:7"},"nodeType":"YulFunctionCall","src":"13713:20:7"},{"kind":"number","nodeType":"YulLiteral","src":"13751:66:7","type":"","value":"0xffffffffffffffffffffffff0000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13692:3:7"},"nodeType":"YulFunctionCall","src":"13692:139:7"},"variables":[{"name":"neighbors","nodeType":"YulTypedName","src":"13679:9:7","type":""}]},{"nodeType":"YulAssignment","src":"13944:63:7","value":{"arguments":[{"name":"input","nodeType":"YulIdentifier","src":"13957:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"13964:42:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13953:3:7"},"nodeType":"YulFunctionCall","src":"13953:54:7"},"variableNames":[{"name":"input","nodeType":"YulIdentifier","src":"13944:5:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"14091:1:7"},{"name":"index","nodeType":"YulIdentifier","src":"14094:5:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14087:3:7"},"nodeType":"YulFunctionCall","src":"14087:13:7"},{"arguments":[{"name":"input","nodeType":"YulIdentifier","src":"14106:5:7"},{"name":"neighbors","nodeType":"YulIdentifier","src":"14113:9:7"}],"functionName":{"name":"xor","nodeType":"YulIdentifier","src":"14102:3:7"},"nodeType":"YulFunctionCall","src":"14102:21:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14080:6:7"},"nodeType":"YulFunctionCall","src":"14080:44:7"},"nodeType":"YulExpressionStatement","src":"14080:44:7"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1725,"isOffset":false,"isSlot":false,"src":"13723:1:7","valueSize":1},{"declaration":1725,"isOffset":false,"isSlot":false,"src":"14091:1:7","valueSize":1},{"declaration":1727,"isOffset":false,"isSlot":false,"src":"13726:5:7","valueSize":1},{"declaration":1727,"isOffset":false,"isSlot":false,"src":"14094:5:7","valueSize":1},{"declaration":1729,"isOffset":false,"isSlot":false,"src":"13944:5:7","valueSize":1},{"declaration":1729,"isOffset":false,"isSlot":false,"src":"13957:5:7","valueSize":1},{"declaration":1729,"isOffset":false,"isSlot":false,"src":"14106:5:7","valueSize":1}],"id":1760,"nodeType":"InlineAssembly","src":"13069:1065:7"}]},"documentation":{"id":1723,"nodeType":"StructuredDocumentation","src":"12038:226:7","text":"@dev Writes an address into a specific position in a byte array.\n @param b Byte array to insert address into.\n @param index Index in byte array of address.\n @param input Address to put into byte array."},"implemented":true,"kind":"function","modifiers":[],"name":"writeAddress","overrides":null,"parameters":{"id":1730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1725,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":1762,"src":"12300:14:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1724,"name":"bytes","nodeType":"ElementaryTypeName","src":"12300:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":1727,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","overrides":null,"scope":1762,"src":"12324:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1726,"name":"uint256","nodeType":"ElementaryTypeName","src":"12324:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1729,"mutability":"mutable","name":"input","nodeType":"VariableDeclaration","overrides":null,"scope":1762,"src":"12347:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1728,"name":"address","nodeType":"ElementaryTypeName","src":"12347:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"12290:76:7"},"returnParameters":{"id":1731,"nodeType":"ParameterList","parameters":[],"src":"12381:0:7"},"scope":1940,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1804,"nodeType":"FunctionDefinition","src":"14383:684:7","nodes":[],"body":{"id":1803,"nodeType":"Block","src":"14474:593:7","nodes":[],"statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1772,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"14488:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14488:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1774,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"14499:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"hexValue":"3332","id":1775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14507:2:7","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14499:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14488:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1795,"nodeType":"IfStatement","src":"14484:352:7","trueBody":{"id":1794,"nodeType":"Block","src":"14511:325:7","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1783,"name":"LibBytesRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"14636:21:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibBytesRichErrorsV06_$2380_$","typeString":"type(library LibBytesRichErrorsV06)"}},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidByteOperationErrorCodes","nodeType":"MemberAccess","referencedDeclaration":2356,"src":"14636:52:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_InvalidByteOperationErrorCodes_$2356_$","typeString":"type(enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes)"}},"id":1785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LengthGreaterThanOrEqualsThirtyTwoRequired","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14636:95:7","typeDescriptions":{"typeIdentifier":"t_enum$_InvalidByteOperationErrorCodes_$2356","typeString":"enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1786,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"14753:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14753:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1788,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"14783:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"hexValue":"3332","id":1789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14791:2:7","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14783:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_InvalidByteOperationErrorCodes_$2356","typeString":"enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1781,"name":"LibBytesRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"14567:21:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibBytesRichErrorsV06_$2380_$","typeString":"type(library LibBytesRichErrorsV06)"}},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidByteOperationError","nodeType":"MemberAccess","referencedDeclaration":2379,"src":"14567:47:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_InvalidByteOperationErrorCodes_$2356_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes,uint256,uint256) pure returns (bytes memory)"}},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14567:244:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":1778,"name":"LibRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"14525:16:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibRichErrorsV06_$2412_$","typeString":"type(library LibRichErrorsV06)"}},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rrevert","nodeType":"MemberAccess","referencedDeclaration":2411,"src":"14525:24:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14525:300:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1793,"nodeType":"ExpressionStatement","src":"14525:300:7"}]}},{"expression":{"argumentTypes":null,"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1796,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"14907:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"argumentTypes":null,"hexValue":"3332","id":1797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14916:2:7","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14907:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1799,"nodeType":"ExpressionStatement","src":"14907:11:7"},{"AST":{"nodeType":"YulBlock","src":"14984:54:7","statements":[{"nodeType":"YulAssignment","src":"14998:30:7","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"15018:1:7"},{"name":"index","nodeType":"YulIdentifier","src":"15021:5:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15014:3:7"},"nodeType":"YulFunctionCall","src":"15014:13:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15008:5:7"},"nodeType":"YulFunctionCall","src":"15008:20:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"14998:6:7"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1765,"isOffset":false,"isSlot":false,"src":"15018:1:7","valueSize":1},{"declaration":1767,"isOffset":false,"isSlot":false,"src":"15021:5:7","valueSize":1},{"declaration":1770,"isOffset":false,"isSlot":false,"src":"14998:6:7","valueSize":1}],"id":1800,"nodeType":"InlineAssembly","src":"14975:63:7"},{"expression":{"argumentTypes":null,"id":1801,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"15054:6:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1771,"id":1802,"nodeType":"Return","src":"15047:13:7"}]},"documentation":{"id":1763,"nodeType":"StructuredDocumentation","src":"14146:232:7","text":"@dev Reads a bytes32 value from a position in a byte array.\n @param b Byte array containing a bytes32 value.\n @param index Index in byte array of bytes32 value.\n @return result bytes32 value from byte array."},"implemented":true,"kind":"function","modifiers":[],"name":"readBytes32","overrides":null,"parameters":{"id":1768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1765,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":1804,"src":"14404:14:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1764,"name":"bytes","nodeType":"ElementaryTypeName","src":"14404:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":1767,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","overrides":null,"scope":1804,"src":"14420:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1766,"name":"uint256","nodeType":"ElementaryTypeName","src":"14420:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"14403:31:7"},"returnParameters":{"id":1771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1770,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","overrides":null,"scope":1804,"src":"14458:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1769,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14458:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"14457:16:7"},"scope":1940,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1844,"nodeType":"FunctionDefinition","src":"15303:680:7","nodes":[],"body":{"id":1843,"nodeType":"Block","src":"15415:568:7","nodes":[],"statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1814,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"15429:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"15429:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1816,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"15440:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"hexValue":"3332","id":1817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15448:2:7","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"15440:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15429:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1837,"nodeType":"IfStatement","src":"15425:352:7","trueBody":{"id":1836,"nodeType":"Block","src":"15452:325:7","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1825,"name":"LibBytesRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"15577:21:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibBytesRichErrorsV06_$2380_$","typeString":"type(library LibBytesRichErrorsV06)"}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidByteOperationErrorCodes","nodeType":"MemberAccess","referencedDeclaration":2356,"src":"15577:52:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_InvalidByteOperationErrorCodes_$2356_$","typeString":"type(enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes)"}},"id":1827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LengthGreaterThanOrEqualsThirtyTwoRequired","nodeType":"MemberAccess","referencedDeclaration":null,"src":"15577:95:7","typeDescriptions":{"typeIdentifier":"t_enum$_InvalidByteOperationErrorCodes_$2356","typeString":"enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1828,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"15694:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"15694:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1830,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"15724:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"hexValue":"3332","id":1831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15732:2:7","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"15724:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_InvalidByteOperationErrorCodes_$2356","typeString":"enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1823,"name":"LibBytesRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"15508:21:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibBytesRichErrorsV06_$2380_$","typeString":"type(library LibBytesRichErrorsV06)"}},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidByteOperationError","nodeType":"MemberAccess","referencedDeclaration":2379,"src":"15508:47:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_InvalidByteOperationErrorCodes_$2356_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes,uint256,uint256) pure returns (bytes memory)"}},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15508:244:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":1820,"name":"LibRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"15466:16:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibRichErrorsV06_$2412_$","typeString":"type(library LibRichErrorsV06)"}},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rrevert","nodeType":"MemberAccess","referencedDeclaration":2411,"src":"15466:24:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15466:300:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1835,"nodeType":"ExpressionStatement","src":"15466:300:7"}]}},{"expression":{"argumentTypes":null,"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1838,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"15848:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"argumentTypes":null,"hexValue":"3332","id":1839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15857:2:7","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"15848:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1841,"nodeType":"ExpressionStatement","src":"15848:11:7"},{"AST":{"nodeType":"YulBlock","src":"15925:52:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"15950:1:7"},{"name":"index","nodeType":"YulIdentifier","src":"15953:5:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15946:3:7"},"nodeType":"YulFunctionCall","src":"15946:13:7"},{"name":"input","nodeType":"YulIdentifier","src":"15961:5:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15939:6:7"},"nodeType":"YulFunctionCall","src":"15939:28:7"},"nodeType":"YulExpressionStatement","src":"15939:28:7"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1807,"isOffset":false,"isSlot":false,"src":"15950:1:7","valueSize":1},{"declaration":1809,"isOffset":false,"isSlot":false,"src":"15953:5:7","valueSize":1},{"declaration":1811,"isOffset":false,"isSlot":false,"src":"15961:5:7","valueSize":1}],"id":1842,"nodeType":"InlineAssembly","src":"15916:61:7"}]},"documentation":{"id":1805,"nodeType":"StructuredDocumentation","src":"15073:225:7","text":"@dev Writes a bytes32 into a specific position in a byte array.\n @param b Byte array to insert <input> into.\n @param index Index in byte array of <input>.\n @param input bytes32 to put into byte array."},"implemented":true,"kind":"function","modifiers":[],"name":"writeBytes32","overrides":null,"parameters":{"id":1812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1807,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":1844,"src":"15334:14:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1806,"name":"bytes","nodeType":"ElementaryTypeName","src":"15334:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":1809,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","overrides":null,"scope":1844,"src":"15358:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1808,"name":"uint256","nodeType":"ElementaryTypeName","src":"15358:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1811,"mutability":"mutable","name":"input","nodeType":"VariableDeclaration","overrides":null,"scope":1844,"src":"15381:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1810,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15381:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"15324:76:7"},"returnParameters":{"id":1813,"nodeType":"ParameterList","parameters":[],"src":"15415:0:7"},"scope":1940,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1867,"nodeType":"FunctionDefinition","src":"16226:170:7","nodes":[],"body":{"id":1866,"nodeType":"Block","src":"16317:79:7","nodes":[],"statements":[{"expression":{"argumentTypes":null,"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1854,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"16327:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1858,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"16356:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":1859,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"16359:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1857,"name":"readBytes32","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"16344:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16344:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16336:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1855,"name":"uint256","nodeType":"ElementaryTypeName","src":"16336:7:7","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16336:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16327:39:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1863,"nodeType":"ExpressionStatement","src":"16327:39:7"},{"expression":{"argumentTypes":null,"id":1864,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"16383:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1853,"id":1865,"nodeType":"Return","src":"16376:13:7"}]},"documentation":{"id":1845,"nodeType":"StructuredDocumentation","src":"15989:232:7","text":"@dev Reads a uint256 value from a position in a byte array.\n @param b Byte array containing a uint256 value.\n @param index Index in byte array of uint256 value.\n @return result uint256 value from byte array."},"implemented":true,"kind":"function","modifiers":[],"name":"readUint256","overrides":null,"parameters":{"id":1850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1847,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":1867,"src":"16247:14:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1846,"name":"bytes","nodeType":"ElementaryTypeName","src":"16247:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":1849,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","overrides":null,"scope":1867,"src":"16263:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1848,"name":"uint256","nodeType":"ElementaryTypeName","src":"16263:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"16246:31:7"},"returnParameters":{"id":1853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1852,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","overrides":null,"scope":1867,"src":"16301:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1851,"name":"uint256","nodeType":"ElementaryTypeName","src":"16301:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"16300:16:7"},"scope":1940,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1887,"nodeType":"FunctionDefinition","src":"16632:167:7","nodes":[],"body":{"id":1886,"nodeType":"Block","src":"16744:55:7","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1878,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"16767:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":1879,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"16770:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1882,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"16785:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16777:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1880,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16777:7:7","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16777:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1877,"name":"writeBytes32","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"16754:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (bytes memory,uint256,bytes32) pure"}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16754:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1885,"nodeType":"ExpressionStatement","src":"16754:38:7"}]},"documentation":{"id":1868,"nodeType":"StructuredDocumentation","src":"16402:225:7","text":"@dev Writes a uint256 into a specific position in a byte array.\n @param b Byte array to insert <input> into.\n @param index Index in byte array of <input>.\n @param input uint256 to put into byte array."},"implemented":true,"kind":"function","modifiers":[],"name":"writeUint256","overrides":null,"parameters":{"id":1875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1870,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":1887,"src":"16663:14:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1869,"name":"bytes","nodeType":"ElementaryTypeName","src":"16663:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":1872,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","overrides":null,"scope":1887,"src":"16687:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1871,"name":"uint256","nodeType":"ElementaryTypeName","src":"16687:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1874,"mutability":"mutable","name":"input","nodeType":"VariableDeclaration","overrides":null,"scope":1887,"src":"16710:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1873,"name":"uint256","nodeType":"ElementaryTypeName","src":"16710:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"16653:76:7"},"returnParameters":{"id":1876,"nodeType":"ParameterList","parameters":[],"src":"16744:0:7"},"scope":1940,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1929,"nodeType":"FunctionDefinition","src":"17048:876:7","nodes":[],"body":{"id":1928,"nodeType":"Block","src":"17137:787:7","nodes":[],"statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1897,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"17151:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"17151:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1899,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"17162:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"hexValue":"34","id":1900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17170:1:7","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"17162:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17151:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1920,"nodeType":"IfStatement","src":"17147:345:7","trueBody":{"id":1919,"nodeType":"Block","src":"17173:319:7","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1908,"name":"LibBytesRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"17298:21:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibBytesRichErrorsV06_$2380_$","typeString":"type(library LibBytesRichErrorsV06)"}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidByteOperationErrorCodes","nodeType":"MemberAccess","referencedDeclaration":2356,"src":"17298:52:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_InvalidByteOperationErrorCodes_$2356_$","typeString":"type(enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes)"}},"id":1910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LengthGreaterThanOrEqualsFourRequired","nodeType":"MemberAccess","referencedDeclaration":null,"src":"17298:90:7","typeDescriptions":{"typeIdentifier":"t_enum$_InvalidByteOperationErrorCodes_$2356","typeString":"enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1911,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"17410:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"17410:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1913,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"17440:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"hexValue":"34","id":1914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17448:1:7","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"17440:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_InvalidByteOperationErrorCodes_$2356","typeString":"enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1906,"name":"LibBytesRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"17229:21:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibBytesRichErrorsV06_$2380_$","typeString":"type(library LibBytesRichErrorsV06)"}},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidByteOperationError","nodeType":"MemberAccess","referencedDeclaration":2379,"src":"17229:47:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_InvalidByteOperationErrorCodes_$2356_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes,uint256,uint256) pure returns (bytes memory)"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17229:238:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":1903,"name":"LibRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"17187:16:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibRichErrorsV06_$2412_$","typeString":"type(library LibRichErrorsV06)"}},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rrevert","nodeType":"MemberAccess","referencedDeclaration":2411,"src":"17187:24:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17187:294:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1918,"nodeType":"ExpressionStatement","src":"17187:294:7"}]}},{"expression":{"argumentTypes":null,"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1921,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"17559:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"argumentTypes":null,"hexValue":"3332","id":1922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17568:2:7","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"17559:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1924,"nodeType":"ExpressionStatement","src":"17559:11:7"},{"AST":{"nodeType":"YulBlock","src":"17635:260:7","statements":[{"nodeType":"YulAssignment","src":"17649:30:7","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"17669:1:7"},{"name":"index","nodeType":"YulIdentifier","src":"17672:5:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17665:3:7"},"nodeType":"YulFunctionCall","src":"17665:13:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17659:5:7"},"nodeType":"YulFunctionCall","src":"17659:20:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"17649:6:7"}]},{"nodeType":"YulAssignment","src":"17796:89:7","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17810:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"17818:66:7","type":"","value":"0xFFFFFFFF00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17806:3:7"},"nodeType":"YulFunctionCall","src":"17806:79:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"17796:6:7"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1890,"isOffset":false,"isSlot":false,"src":"17669:1:7","valueSize":1},{"declaration":1892,"isOffset":false,"isSlot":false,"src":"17672:5:7","valueSize":1},{"declaration":1895,"isOffset":false,"isSlot":false,"src":"17649:6:7","valueSize":1},{"declaration":1895,"isOffset":false,"isSlot":false,"src":"17796:6:7","valueSize":1},{"declaration":1895,"isOffset":false,"isSlot":false,"src":"17810:6:7","valueSize":1}],"id":1925,"nodeType":"InlineAssembly","src":"17626:269:7"},{"expression":{"argumentTypes":null,"id":1926,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"17911:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":1896,"id":1927,"nodeType":"Return","src":"17904:13:7"}]},"documentation":{"id":1888,"nodeType":"StructuredDocumentation","src":"16805:238:7","text":"@dev Reads an unpadded bytes4 value from a position in a byte array.\n @param b Byte array containing a bytes4 value.\n @param index Index in byte array of bytes4 value.\n @return result bytes4 value from byte array."},"implemented":true,"kind":"function","modifiers":[],"name":"readBytes4","overrides":null,"parameters":{"id":1893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1890,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":1929,"src":"17068:14:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1889,"name":"bytes","nodeType":"ElementaryTypeName","src":"17068:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":1892,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","overrides":null,"scope":1929,"src":"17084:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1891,"name":"uint256","nodeType":"ElementaryTypeName","src":"17084:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"17067:31:7"},"returnParameters":{"id":1896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1895,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","overrides":null,"scope":1929,"src":"17122:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1894,"name":"bytes4","nodeType":"ElementaryTypeName","src":"17122:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":null,"visibility":"internal"}],"src":"17121:15:7"},"scope":1940,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1939,"nodeType":"FunctionDefinition","src":"18299:133:7","nodes":[],"body":{"id":1938,"nodeType":"Block","src":"18366:66:7","nodes":[],"statements":[{"AST":{"nodeType":"YulBlock","src":"18385:41:7","statements":[{"expression":{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"18406:1:7"},{"name":"length","nodeType":"YulIdentifier","src":"18409:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18399:6:7"},"nodeType":"YulFunctionCall","src":"18399:17:7"},"nodeType":"YulExpressionStatement","src":"18399:17:7"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1932,"isOffset":false,"isSlot":false,"src":"18406:1:7","valueSize":1},{"declaration":1934,"isOffset":false,"isSlot":false,"src":"18409:6:7","valueSize":1}],"id":1937,"nodeType":"InlineAssembly","src":"18376:50:7"}]},"documentation":{"id":1930,"nodeType":"StructuredDocumentation","src":"17930:364:7","text":"@dev Writes a new length to a byte array.\n      Decreasing length will lead to removing the corresponding lower order bytes from the byte array.\n      Increasing length may lead to appending adjacent in-memory bytes to the end of the byte array.\n @param b Bytes array to write new length to.\n @param length New length of byte array."},"implemented":true,"kind":"function","modifiers":[],"name":"writeLength","overrides":null,"parameters":{"id":1935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1932,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":1939,"src":"18320:14:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1931,"name":"bytes","nodeType":"ElementaryTypeName","src":"18320:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":1934,"mutability":"mutable","name":"length","nodeType":"VariableDeclaration","overrides":null,"scope":1939,"src":"18336:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1933,"name":"uint256","nodeType":"ElementaryTypeName","src":"18336:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"18319:32:7"},"returnParameters":{"id":1936,"nodeType":"ParameterList","parameters":[],"src":"18366:0:7"},"scope":1940,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[1940],"name":"LibBytesV06","scope":1941}],"license":"Apache-2.0"}},"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibSafeMathV06.sol":{"id":8,"ast":{"absolutePath":"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibSafeMathV06.sol","id":2346,"exportedSymbols":{"LibSafeMathV06":[2345]},"nodeType":"SourceUnit","src":"619:4447:8","nodes":[{"id":1942,"nodeType":"PragmaDirective","src":"619:23:8","nodes":[],"literals":["solidity","^","0.6",".5"]},{"id":1943,"nodeType":"ImportDirective","src":"644:39:8","nodes":[],"absolutePath":"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol","file":"./errors/LibRichErrorsV06.sol","scope":2346,"sourceUnit":2413,"symbolAliases":[],"unitAlias":""},{"id":1944,"nodeType":"ImportDirective","src":"684:47:8","nodes":[],"absolutePath":"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibSafeMathRichErrorsV06.sol","file":"./errors/LibSafeMathRichErrorsV06.sol","scope":2346,"sourceUnit":2469,"symbolAliases":[],"unitAlias":""},{"id":2345,"nodeType":"ContractDefinition","src":"733:4332:8","nodes":[{"id":1989,"nodeType":"FunctionDefinition","src":"762:475:8","nodes":[],"body":{"id":1988,"nodeType":"Block","src":"833:404:8","nodes":[],"statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1953,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"847:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"852:1:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"847:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1959,"nodeType":"IfStatement","src":"843:45:8","trueBody":{"id":1958,"nodeType":"Block","src":"855:33:8","statements":[{"expression":{"argumentTypes":null,"hexValue":"30","id":1956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"876:1:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1952,"id":1957,"nodeType":"Return","src":"869:8:8"}]}},{"assignments":[1961],"declarations":[{"constant":false,"id":1961,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":1988,"src":"897:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1960,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1965,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1962,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"909:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"id":1963,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"913:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"909:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"897:17:8"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1966,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"928:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"id":1967,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"932:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"928:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":1969,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"937:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"928:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1985,"nodeType":"IfStatement","src":"924:289:8","trueBody":{"id":1984,"nodeType":"Block","src":"940:273:8","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1976,"name":"LibSafeMathRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"1060:24:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibSafeMathRichErrorsV06_$2468_$","typeString":"type(library LibSafeMathRichErrorsV06)"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"BinOpErrorCodes","nodeType":"MemberAccess","referencedDeclaration":2425,"src":"1060:40:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BinOpErrorCodes_$2425_$","typeString":"type(enum LibSafeMathRichErrorsV06.BinOpErrorCodes)"}},"id":1978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"MULTIPLICATION_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1060:64:8","typeDescriptions":{"typeIdentifier":"t_enum$_BinOpErrorCodes_$2425","typeString":"enum LibSafeMathRichErrorsV06.BinOpErrorCodes"}},{"argumentTypes":null,"id":1979,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"1146:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1980,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"1169:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_BinOpErrorCodes_$2425","typeString":"enum LibSafeMathRichErrorsV06.BinOpErrorCodes"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1974,"name":"LibSafeMathRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"996:24:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibSafeMathRichErrorsV06_$2468_$","typeString":"type(library LibSafeMathRichErrorsV06)"}},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Uint256BinOpError","nodeType":"MemberAccess","referencedDeclaration":2450,"src":"996:42:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_BinOpErrorCodes_$2425_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (enum LibSafeMathRichErrorsV06.BinOpErrorCodes,uint256,uint256) pure returns (bytes memory)"}},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"996:192:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":1971,"name":"LibRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"954:16:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibRichErrorsV06_$2412_$","typeString":"type(library LibRichErrorsV06)"}},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rrevert","nodeType":"MemberAccess","referencedDeclaration":2411,"src":"954:24:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"954:248:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1983,"nodeType":"ExpressionStatement","src":"954:248:8"}]}},{"expression":{"argumentTypes":null,"id":1986,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"1229:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1952,"id":1987,"nodeType":"Return","src":"1222:8:8"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"safeMul","overrides":null,"parameters":{"id":1949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1946,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":1989,"src":"779:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1945,"name":"uint256","nodeType":"ElementaryTypeName","src":"779:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1948,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":1989,"src":"790:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1947,"name":"uint256","nodeType":"ElementaryTypeName","src":"790:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"778:22:8"},"returnParameters":{"id":1952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1951,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":1989,"src":"824:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1950,"name":"uint256","nodeType":"ElementaryTypeName","src":"824:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"823:9:8"},"scope":2345,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2025,"nodeType":"FunctionDefinition","src":"1243:410:8","nodes":[],"body":{"id":2024,"nodeType":"Block","src":"1314:339:8","nodes":[],"statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1998,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"1328:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1333:1:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1328:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":2015,"nodeType":"IfStatement","src":"1324:278:8","trueBody":{"id":2014,"nodeType":"Block","src":"1336:266:8","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2006,"name":"LibSafeMathRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"1456:24:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibSafeMathRichErrorsV06_$2468_$","typeString":"type(library LibSafeMathRichErrorsV06)"}},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"BinOpErrorCodes","nodeType":"MemberAccess","referencedDeclaration":2425,"src":"1456:40:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BinOpErrorCodes_$2425_$","typeString":"type(enum LibSafeMathRichErrorsV06.BinOpErrorCodes)"}},"id":2008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1456:57:8","typeDescriptions":{"typeIdentifier":"t_enum$_BinOpErrorCodes_$2425","typeString":"enum LibSafeMathRichErrorsV06.BinOpErrorCodes"}},{"argumentTypes":null,"id":2009,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"1535:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2010,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"1558:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_BinOpErrorCodes_$2425","typeString":"enum LibSafeMathRichErrorsV06.BinOpErrorCodes"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2004,"name":"LibSafeMathRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"1392:24:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibSafeMathRichErrorsV06_$2468_$","typeString":"type(library LibSafeMathRichErrorsV06)"}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Uint256BinOpError","nodeType":"MemberAccess","referencedDeclaration":2450,"src":"1392:42:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_BinOpErrorCodes_$2425_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (enum LibSafeMathRichErrorsV06.BinOpErrorCodes,uint256,uint256) pure returns (bytes memory)"}},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1392:185:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":2001,"name":"LibRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"1350:16:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibRichErrorsV06_$2412_$","typeString":"type(library LibRichErrorsV06)"}},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rrevert","nodeType":"MemberAccess","referencedDeclaration":2411,"src":"1350:24:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1350:241:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2013,"nodeType":"ExpressionStatement","src":"1350:241:8"}]}},{"assignments":[2017],"declarations":[{"constant":false,"id":2017,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":2024,"src":"1611:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2016,"name":"uint256","nodeType":"ElementaryTypeName","src":"1611:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":2021,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2018,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"1623:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"id":2019,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"1627:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1623:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1611:17:8"},{"expression":{"argumentTypes":null,"id":2022,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"1645:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1997,"id":2023,"nodeType":"Return","src":"1638:8:8"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"safeDiv","overrides":null,"parameters":{"id":1994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1991,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":2025,"src":"1260:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1990,"name":"uint256","nodeType":"ElementaryTypeName","src":"1260:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1993,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":2025,"src":"1271:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1992,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1259:22:8"},"returnParameters":{"id":1997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1996,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":2025,"src":"1305:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1995,"name":"uint256","nodeType":"ElementaryTypeName","src":"1305:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1304:9:8"},"scope":2345,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2057,"nodeType":"FunctionDefinition","src":"1659:391:8","nodes":[],"body":{"id":2056,"nodeType":"Block","src":"1730:320:8","nodes":[],"statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2034,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"1744:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"id":2035,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"1748:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1744:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":2051,"nodeType":"IfStatement","src":"1740:282:8","trueBody":{"id":2050,"nodeType":"Block","src":"1751:271:8","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2042,"name":"LibSafeMathRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"1871:24:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibSafeMathRichErrorsV06_$2468_$","typeString":"type(library LibSafeMathRichErrorsV06)"}},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"BinOpErrorCodes","nodeType":"MemberAccess","referencedDeclaration":2425,"src":"1871:40:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BinOpErrorCodes_$2425_$","typeString":"type(enum LibSafeMathRichErrorsV06.BinOpErrorCodes)"}},"id":2044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SUBTRACTION_UNDERFLOW","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1871:62:8","typeDescriptions":{"typeIdentifier":"t_enum$_BinOpErrorCodes_$2425","typeString":"enum LibSafeMathRichErrorsV06.BinOpErrorCodes"}},{"argumentTypes":null,"id":2045,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"1955:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2046,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"1978:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_BinOpErrorCodes_$2425","typeString":"enum LibSafeMathRichErrorsV06.BinOpErrorCodes"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2040,"name":"LibSafeMathRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"1807:24:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibSafeMathRichErrorsV06_$2468_$","typeString":"type(library LibSafeMathRichErrorsV06)"}},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Uint256BinOpError","nodeType":"MemberAccess","referencedDeclaration":2450,"src":"1807:42:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_BinOpErrorCodes_$2425_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (enum LibSafeMathRichErrorsV06.BinOpErrorCodes,uint256,uint256) pure returns (bytes memory)"}},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1807:190:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":2037,"name":"LibRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"1765:16:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibRichErrorsV06_$2412_$","typeString":"type(library LibRichErrorsV06)"}},"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rrevert","nodeType":"MemberAccess","referencedDeclaration":2411,"src":"1765:24:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1765:246:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2049,"nodeType":"ExpressionStatement","src":"1765:246:8"}]}},{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2052,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"2038:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"id":2053,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"2042:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2038:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2033,"id":2055,"nodeType":"Return","src":"2031:12:8"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"safeSub","overrides":null,"parameters":{"id":2030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2027,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":2057,"src":"1676:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2026,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2029,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":2057,"src":"1687:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2028,"name":"uint256","nodeType":"ElementaryTypeName","src":"1687:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1675:22:8"},"returnParameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2032,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":2057,"src":"1721:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2031,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1720:9:8"},"scope":2345,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2093,"nodeType":"FunctionDefinition","src":"2056:410:8","nodes":[],"body":{"id":2092,"nodeType":"Block","src":"2127:339:8","nodes":[],"statements":[{"assignments":[2067],"declarations":[{"constant":false,"id":2067,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":2092,"src":"2137:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2066,"name":"uint256","nodeType":"ElementaryTypeName","src":"2137:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":2071,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2068,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"2149:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"id":2069,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"2153:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2149:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2137:17:8"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2072,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"2168:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"id":2073,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"2172:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2168:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":2089,"nodeType":"IfStatement","src":"2164:278:8","trueBody":{"id":2088,"nodeType":"Block","src":"2175:267:8","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2080,"name":"LibSafeMathRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"2295:24:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibSafeMathRichErrorsV06_$2468_$","typeString":"type(library LibSafeMathRichErrorsV06)"}},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"BinOpErrorCodes","nodeType":"MemberAccess","referencedDeclaration":2425,"src":"2295:40:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BinOpErrorCodes_$2425_$","typeString":"type(enum LibSafeMathRichErrorsV06.BinOpErrorCodes)"}},"id":2082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"ADDITION_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2295:58:8","typeDescriptions":{"typeIdentifier":"t_enum$_BinOpErrorCodes_$2425","typeString":"enum LibSafeMathRichErrorsV06.BinOpErrorCodes"}},{"argumentTypes":null,"id":2083,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"2375:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2084,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"2398:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_BinOpErrorCodes_$2425","typeString":"enum LibSafeMathRichErrorsV06.BinOpErrorCodes"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2078,"name":"LibSafeMathRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"2231:24:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibSafeMathRichErrorsV06_$2468_$","typeString":"type(library LibSafeMathRichErrorsV06)"}},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Uint256BinOpError","nodeType":"MemberAccess","referencedDeclaration":2450,"src":"2231:42:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_BinOpErrorCodes_$2425_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (enum LibSafeMathRichErrorsV06.BinOpErrorCodes,uint256,uint256) pure returns (bytes memory)"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2231:186:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":2075,"name":"LibRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"2189:16:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibRichErrorsV06_$2412_$","typeString":"type(library LibRichErrorsV06)"}},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rrevert","nodeType":"MemberAccess","referencedDeclaration":2411,"src":"2189:24:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2189:242:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2087,"nodeType":"ExpressionStatement","src":"2189:242:8"}]}},{"expression":{"argumentTypes":null,"id":2090,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"2458:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2065,"id":2091,"nodeType":"Return","src":"2451:8:8"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"safeAdd","overrides":null,"parameters":{"id":2062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2059,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":2093,"src":"2073:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2058,"name":"uint256","nodeType":"ElementaryTypeName","src":"2073:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2061,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":2093,"src":"2084:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2060,"name":"uint256","nodeType":"ElementaryTypeName","src":"2084:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2072:22:8"},"returnParameters":{"id":2065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2064,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":2093,"src":"2118:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2063,"name":"uint256","nodeType":"ElementaryTypeName","src":"2118:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2117:9:8"},"scope":2345,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2110,"nodeType":"FunctionDefinition","src":"2472:108:8","nodes":[],"body":{"id":2109,"nodeType":"Block","src":"2542:38:8","nodes":[],"statements":[{"expression":{"argumentTypes":null,"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2102,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"2559:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"id":2103,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"2564:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2559:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"argumentTypes":null,"id":2106,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"2572:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2559:14:8","trueExpression":{"argumentTypes":null,"id":2105,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"2568:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2101,"id":2108,"nodeType":"Return","src":"2552:21:8"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"max256","overrides":null,"parameters":{"id":2098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2095,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":2110,"src":"2488:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2094,"name":"uint256","nodeType":"ElementaryTypeName","src":"2488:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2097,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":2110,"src":"2499:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2096,"name":"uint256","nodeType":"ElementaryTypeName","src":"2499:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2487:22:8"},"returnParameters":{"id":2101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2100,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":2110,"src":"2533:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2099,"name":"uint256","nodeType":"ElementaryTypeName","src":"2533:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2532:9:8"},"scope":2345,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2127,"nodeType":"FunctionDefinition","src":"2586:107:8","nodes":[],"body":{"id":2126,"nodeType":"Block","src":"2656:37:8","nodes":[],"statements":[{"expression":{"argumentTypes":null,"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2119,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"2673:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"id":2120,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"2677:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2673:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"argumentTypes":null,"id":2123,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"2685:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2673:13:8","trueExpression":{"argumentTypes":null,"id":2122,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"2681:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2118,"id":2125,"nodeType":"Return","src":"2666:20:8"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"min256","overrides":null,"parameters":{"id":2115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2112,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":2127,"src":"2602:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2111,"name":"uint256","nodeType":"ElementaryTypeName","src":"2602:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2114,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":2127,"src":"2613:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2113,"name":"uint256","nodeType":"ElementaryTypeName","src":"2613:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2601:22:8"},"returnParameters":{"id":2118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2117,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":2127,"src":"2647:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2116,"name":"uint256","nodeType":"ElementaryTypeName","src":"2647:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2646:9:8"},"scope":2345,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2172,"nodeType":"FunctionDefinition","src":"2699:478:8","nodes":[],"body":{"id":2171,"nodeType":"Block","src":"2773:404:8","nodes":[],"statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2136,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"2787:1:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":2137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2792:1:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2787:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":2142,"nodeType":"IfStatement","src":"2783:45:8","trueBody":{"id":2141,"nodeType":"Block","src":"2795:33:8","statements":[{"expression":{"argumentTypes":null,"hexValue":"30","id":2139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2816:1:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2135,"id":2140,"nodeType":"Return","src":"2809:8:8"}]}},{"assignments":[2144],"declarations":[{"constant":false,"id":2144,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":2171,"src":"2837:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2143,"name":"uint128","nodeType":"ElementaryTypeName","src":"2837:7:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"value":null,"visibility":"internal"}],"id":2148,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2145,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"2849:1:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"id":2146,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"2853:1:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"2849:5:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"VariableDeclarationStatement","src":"2837:17:8"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2149,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"2868:1:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"id":2150,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"2872:1:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"2868:5:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":2152,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"2877:1:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"2868:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":2168,"nodeType":"IfStatement","src":"2864:289:8","trueBody":{"id":2167,"nodeType":"Block","src":"2880:273:8","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2159,"name":"LibSafeMathRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"3000:24:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibSafeMathRichErrorsV06_$2468_$","typeString":"type(library LibSafeMathRichErrorsV06)"}},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"BinOpErrorCodes","nodeType":"MemberAccess","referencedDeclaration":2425,"src":"3000:40:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BinOpErrorCodes_$2425_$","typeString":"type(enum LibSafeMathRichErrorsV06.BinOpErrorCodes)"}},"id":2161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"MULTIPLICATION_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3000:64:8","typeDescriptions":{"typeIdentifier":"t_enum$_BinOpErrorCodes_$2425","typeString":"enum LibSafeMathRichErrorsV06.BinOpErrorCodes"}},{"argumentTypes":null,"id":2162,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"3086:1:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"argumentTypes":null,"id":2163,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"3109:1:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_BinOpErrorCodes_$2425","typeString":"enum LibSafeMathRichErrorsV06.BinOpErrorCodes"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"argumentTypes":null,"id":2157,"name":"LibSafeMathRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"2936:24:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibSafeMathRichErrorsV06_$2468_$","typeString":"type(library LibSafeMathRichErrorsV06)"}},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Uint256BinOpError","nodeType":"MemberAccess","referencedDeclaration":2450,"src":"2936:42:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_BinOpErrorCodes_$2425_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (enum LibSafeMathRichErrorsV06.BinOpErrorCodes,uint256,uint256) pure returns (bytes memory)"}},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2936:192:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":2154,"name":"LibRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"2894:16:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibRichErrorsV06_$2412_$","typeString":"type(library LibRichErrorsV06)"}},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rrevert","nodeType":"MemberAccess","referencedDeclaration":2411,"src":"2894:24:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2894:248:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2166,"nodeType":"ExpressionStatement","src":"2894:248:8"}]}},{"expression":{"argumentTypes":null,"id":2169,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"3169:1:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":2135,"id":2170,"nodeType":"Return","src":"3162:8:8"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"safeMul128","overrides":null,"parameters":{"id":2132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2129,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":2172,"src":"2719:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2128,"name":"uint128","nodeType":"ElementaryTypeName","src":"2719:7:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"value":null,"visibility":"internal"},{"constant":false,"id":2131,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":2172,"src":"2730:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2130,"name":"uint128","nodeType":"ElementaryTypeName","src":"2730:7:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"value":null,"visibility":"internal"}],"src":"2718:22:8"},"returnParameters":{"id":2135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2134,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":2172,"src":"2764:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2133,"name":"uint128","nodeType":"ElementaryTypeName","src":"2764:7:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"value":null,"visibility":"internal"}],"src":"2763:9:8"},"scope":2345,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2208,"nodeType":"FunctionDefinition","src":"3183:413:8","nodes":[],"body":{"id":2207,"nodeType":"Block","src":"3257:339:8","nodes":[],"statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2181,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"3271:1:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":2182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3276:1:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3271:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":2198,"nodeType":"IfStatement","src":"3267:278:8","trueBody":{"id":2197,"nodeType":"Block","src":"3279:266:8","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2189,"name":"LibSafeMathRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"3399:24:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibSafeMathRichErrorsV06_$2468_$","typeString":"type(library LibSafeMathRichErrorsV06)"}},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"BinOpErrorCodes","nodeType":"MemberAccess","referencedDeclaration":2425,"src":"3399:40:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BinOpErrorCodes_$2425_$","typeString":"type(enum LibSafeMathRichErrorsV06.BinOpErrorCodes)"}},"id":2191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3399:57:8","typeDescriptions":{"typeIdentifier":"t_enum$_BinOpErrorCodes_$2425","typeString":"enum LibSafeMathRichErrorsV06.BinOpErrorCodes"}},{"argumentTypes":null,"id":2192,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"3478:1:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"argumentTypes":null,"id":2193,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"3501:1:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_BinOpErrorCodes_$2425","typeString":"enum LibSafeMathRichErrorsV06.BinOpErrorCodes"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"argumentTypes":null,"id":2187,"name":"LibSafeMathRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"3335:24:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibSafeMathRichErrorsV06_$2468_$","typeString":"type(library LibSafeMathRichErrorsV06)"}},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Uint256BinOpError","nodeType":"MemberAccess","referencedDeclaration":2450,"src":"3335:42:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_BinOpErrorCodes_$2425_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (enum LibSafeMathRichErrorsV06.BinOpErrorCodes,uint256,uint256) pure returns (bytes memory)"}},"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3335:185:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":2184,"name":"LibRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"3293:16:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibRichErrorsV06_$2412_$","typeString":"type(library LibRichErrorsV06)"}},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rrevert","nodeType":"MemberAccess","referencedDeclaration":2411,"src":"3293:24:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3293:241:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2196,"nodeType":"ExpressionStatement","src":"3293:241:8"}]}},{"assignments":[2200],"declarations":[{"constant":false,"id":2200,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":2207,"src":"3554:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2199,"name":"uint128","nodeType":"ElementaryTypeName","src":"3554:7:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"value":null,"visibility":"internal"}],"id":2204,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2201,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"3566:1:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"id":2202,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"3570:1:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"3566:5:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"VariableDeclarationStatement","src":"3554:17:8"},{"expression":{"argumentTypes":null,"id":2205,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"3588:1:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":2180,"id":2206,"nodeType":"Return","src":"3581:8:8"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"safeDiv128","overrides":null,"parameters":{"id":2177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2174,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":2208,"src":"3203:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2173,"name":"uint128","nodeType":"ElementaryTypeName","src":"3203:7:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"value":null,"visibility":"internal"},{"constant":false,"id":2176,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":2208,"src":"3214:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2175,"name":"uint128","nodeType":"ElementaryTypeName","src":"3214:7:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"value":null,"visibility":"internal"}],"src":"3202:22:8"},"returnParameters":{"id":2180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2179,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":2208,"src":"3248:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2178,"name":"uint128","nodeType":"ElementaryTypeName","src":"3248:7:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"value":null,"visibility":"internal"}],"src":"3247:9:8"},"scope":2345,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2240,"nodeType":"FunctionDefinition","src":"3602:394:8","nodes":[],"body":{"id":2239,"nodeType":"Block","src":"3676:320:8","nodes":[],"statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2217,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"3690:1:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"id":2218,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"3694:1:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"3690:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":2234,"nodeType":"IfStatement","src":"3686:282:8","trueBody":{"id":2233,"nodeType":"Block","src":"3697:271:8","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2225,"name":"LibSafeMathRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"3817:24:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibSafeMathRichErrorsV06_$2468_$","typeString":"type(library LibSafeMathRichErrorsV06)"}},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"BinOpErrorCodes","nodeType":"MemberAccess","referencedDeclaration":2425,"src":"3817:40:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BinOpErrorCodes_$2425_$","typeString":"type(enum LibSafeMathRichErrorsV06.BinOpErrorCodes)"}},"id":2227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SUBTRACTION_UNDERFLOW","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3817:62:8","typeDescriptions":{"typeIdentifier":"t_enum$_BinOpErrorCodes_$2425","typeString":"enum LibSafeMathRichErrorsV06.BinOpErrorCodes"}},{"argumentTypes":null,"id":2228,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"3901:1:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"argumentTypes":null,"id":2229,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"3924:1:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_BinOpErrorCodes_$2425","typeString":"enum LibSafeMathRichErrorsV06.BinOpErrorCodes"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"argumentTypes":null,"id":2223,"name":"LibSafeMathRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"3753:24:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibSafeMathRichErrorsV06_$2468_$","typeString":"type(library LibSafeMathRichErrorsV06)"}},"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Uint256BinOpError","nodeType":"MemberAccess","referencedDeclaration":2450,"src":"3753:42:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_BinOpErrorCodes_$2425_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (enum LibSafeMathRichErrorsV06.BinOpErrorCodes,uint256,uint256) pure returns (bytes memory)"}},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3753:190:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":2220,"name":"LibRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"3711:16:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibRichErrorsV06_$2412_$","typeString":"type(library LibRichErrorsV06)"}},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rrevert","nodeType":"MemberAccess","referencedDeclaration":2411,"src":"3711:24:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3711:246:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2232,"nodeType":"ExpressionStatement","src":"3711:246:8"}]}},{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2235,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"3984:1:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"id":2236,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"3988:1:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"3984:5:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":2216,"id":2238,"nodeType":"Return","src":"3977:12:8"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"safeSub128","overrides":null,"parameters":{"id":2213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2210,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":2240,"src":"3622:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2209,"name":"uint128","nodeType":"ElementaryTypeName","src":"3622:7:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"value":null,"visibility":"internal"},{"constant":false,"id":2212,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":2240,"src":"3633:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2211,"name":"uint128","nodeType":"ElementaryTypeName","src":"3633:7:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"value":null,"visibility":"internal"}],"src":"3621:22:8"},"returnParameters":{"id":2216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2215,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":2240,"src":"3667:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2214,"name":"uint128","nodeType":"ElementaryTypeName","src":"3667:7:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"value":null,"visibility":"internal"}],"src":"3666:9:8"},"scope":2345,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2276,"nodeType":"FunctionDefinition","src":"4002:413:8","nodes":[],"body":{"id":2275,"nodeType":"Block","src":"4076:339:8","nodes":[],"statements":[{"assignments":[2250],"declarations":[{"constant":false,"id":2250,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":2275,"src":"4086:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2249,"name":"uint128","nodeType":"ElementaryTypeName","src":"4086:7:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"value":null,"visibility":"internal"}],"id":2254,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2251,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"4098:1:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"id":2252,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"4102:1:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"4098:5:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"VariableDeclarationStatement","src":"4086:17:8"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2255,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"4117:1:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"id":2256,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"4121:1:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"4117:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":2272,"nodeType":"IfStatement","src":"4113:278:8","trueBody":{"id":2271,"nodeType":"Block","src":"4124:267:8","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2263,"name":"LibSafeMathRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"4244:24:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibSafeMathRichErrorsV06_$2468_$","typeString":"type(library LibSafeMathRichErrorsV06)"}},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"BinOpErrorCodes","nodeType":"MemberAccess","referencedDeclaration":2425,"src":"4244:40:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BinOpErrorCodes_$2425_$","typeString":"type(enum LibSafeMathRichErrorsV06.BinOpErrorCodes)"}},"id":2265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"ADDITION_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4244:58:8","typeDescriptions":{"typeIdentifier":"t_enum$_BinOpErrorCodes_$2425","typeString":"enum LibSafeMathRichErrorsV06.BinOpErrorCodes"}},{"argumentTypes":null,"id":2266,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"4324:1:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"argumentTypes":null,"id":2267,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"4347:1:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_BinOpErrorCodes_$2425","typeString":"enum LibSafeMathRichErrorsV06.BinOpErrorCodes"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"argumentTypes":null,"id":2261,"name":"LibSafeMathRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"4180:24:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibSafeMathRichErrorsV06_$2468_$","typeString":"type(library LibSafeMathRichErrorsV06)"}},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Uint256BinOpError","nodeType":"MemberAccess","referencedDeclaration":2450,"src":"4180:42:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_BinOpErrorCodes_$2425_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (enum LibSafeMathRichErrorsV06.BinOpErrorCodes,uint256,uint256) pure returns (bytes memory)"}},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4180:186:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":2258,"name":"LibRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"4138:16:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibRichErrorsV06_$2412_$","typeString":"type(library LibRichErrorsV06)"}},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rrevert","nodeType":"MemberAccess","referencedDeclaration":2411,"src":"4138:24:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4138:242:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2270,"nodeType":"ExpressionStatement","src":"4138:242:8"}]}},{"expression":{"argumentTypes":null,"id":2273,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"4407:1:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":2248,"id":2274,"nodeType":"Return","src":"4400:8:8"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"safeAdd128","overrides":null,"parameters":{"id":2245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2242,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":2276,"src":"4022:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2241,"name":"uint128","nodeType":"ElementaryTypeName","src":"4022:7:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"value":null,"visibility":"internal"},{"constant":false,"id":2244,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":2276,"src":"4033:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2243,"name":"uint128","nodeType":"ElementaryTypeName","src":"4033:7:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"value":null,"visibility":"internal"}],"src":"4021:22:8"},"returnParameters":{"id":2248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2247,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":2276,"src":"4067:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2246,"name":"uint128","nodeType":"ElementaryTypeName","src":"4067:7:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"value":null,"visibility":"internal"}],"src":"4066:9:8"},"scope":2345,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2293,"nodeType":"FunctionDefinition","src":"4421:108:8","nodes":[],"body":{"id":2292,"nodeType":"Block","src":"4491:38:8","nodes":[],"statements":[{"expression":{"argumentTypes":null,"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2285,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"4508:1:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"id":2286,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"4513:1:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"4508:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"argumentTypes":null,"id":2289,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"4521:1:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4508:14:8","trueExpression":{"argumentTypes":null,"id":2288,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"4517:1:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":2284,"id":2291,"nodeType":"Return","src":"4501:21:8"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"max128","overrides":null,"parameters":{"id":2281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2278,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":2293,"src":"4437:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2277,"name":"uint128","nodeType":"ElementaryTypeName","src":"4437:7:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"value":null,"visibility":"internal"},{"constant":false,"id":2280,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":2293,"src":"4448:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2279,"name":"uint128","nodeType":"ElementaryTypeName","src":"4448:7:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"value":null,"visibility":"internal"}],"src":"4436:22:8"},"returnParameters":{"id":2284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2283,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":2293,"src":"4482:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2282,"name":"uint128","nodeType":"ElementaryTypeName","src":"4482:7:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"value":null,"visibility":"internal"}],"src":"4481:9:8"},"scope":2345,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2310,"nodeType":"FunctionDefinition","src":"4535:107:8","nodes":[],"body":{"id":2309,"nodeType":"Block","src":"4605:37:8","nodes":[],"statements":[{"expression":{"argumentTypes":null,"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2302,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"4622:1:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"id":2303,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"4626:1:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"4622:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"argumentTypes":null,"id":2306,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"4634:1:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4622:13:8","trueExpression":{"argumentTypes":null,"id":2305,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"4630:1:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":2301,"id":2308,"nodeType":"Return","src":"4615:20:8"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"min128","overrides":null,"parameters":{"id":2298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2295,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":2310,"src":"4551:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2294,"name":"uint128","nodeType":"ElementaryTypeName","src":"4551:7:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"value":null,"visibility":"internal"},{"constant":false,"id":2297,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":2310,"src":"4562:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2296,"name":"uint128","nodeType":"ElementaryTypeName","src":"4562:7:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"value":null,"visibility":"internal"}],"src":"4550:22:8"},"returnParameters":{"id":2301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2300,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":2310,"src":"4596:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2299,"name":"uint128","nodeType":"ElementaryTypeName","src":"4596:7:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"value":null,"visibility":"internal"}],"src":"4595:9:8"},"scope":2345,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2344,"nodeType":"FunctionDefinition","src":"4648:415:8","nodes":[],"body":{"id":2343,"nodeType":"Block","src":"4722:341:8","nodes":[],"statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2317,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"4736:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4745:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":2319,"name":"uint128","nodeType":"ElementaryTypeName","src":"4745:7:8","typeDescriptions":{"typeIdentifier":null,"typeString":null}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":2318,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4740:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4740:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":2322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4740:17:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"4736:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":2337,"nodeType":"IfStatement","src":"4732:298:8","trueBody":{"id":2336,"nodeType":"Block","src":"4759:271:8","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2329,"name":"LibSafeMathRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"4882:24:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibSafeMathRichErrorsV06_$2468_$","typeString":"type(library LibSafeMathRichErrorsV06)"}},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"DowncastErrorCodes","nodeType":"MemberAccess","referencedDeclaration":2430,"src":"4882:43:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DowncastErrorCodes_$2430_$","typeString":"type(enum LibSafeMathRichErrorsV06.DowncastErrorCodes)"}},"id":2331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"VALUE_TOO_LARGE_TO_DOWNCAST_TO_UINT128","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4882:82:8","typeDescriptions":{"typeIdentifier":"t_enum$_DowncastErrorCodes_$2430","typeString":"enum LibSafeMathRichErrorsV06.DowncastErrorCodes"}},{"argumentTypes":null,"id":2332,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"4986:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_DowncastErrorCodes_$2430","typeString":"enum LibSafeMathRichErrorsV06.DowncastErrorCodes"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2327,"name":"LibSafeMathRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"4815:24:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibSafeMathRichErrorsV06_$2468_$","typeString":"type(library LibSafeMathRichErrorsV06)"}},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Uint256DowncastError","nodeType":"MemberAccess","referencedDeclaration":2467,"src":"4815:45:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_DowncastErrorCodes_$2430_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (enum LibSafeMathRichErrorsV06.DowncastErrorCodes,uint256) pure returns (bytes memory)"}},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4815:190:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":2324,"name":"LibRichErrorsV06","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"4773:16:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibRichErrorsV06_$2412_$","typeString":"type(library LibRichErrorsV06)"}},"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rrevert","nodeType":"MemberAccess","referencedDeclaration":2411,"src":"4773:24:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4773:246:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2335,"nodeType":"ExpressionStatement","src":"4773:246:8"}]}},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2340,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"5054:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5046:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":2338,"name":"uint128","nodeType":"ElementaryTypeName","src":"5046:7:8","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5046:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":2316,"id":2342,"nodeType":"Return","src":"5039:17:8"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"safeDowncastToUint128","overrides":null,"parameters":{"id":2313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2312,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":2344,"src":"4679:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2311,"name":"uint256","nodeType":"ElementaryTypeName","src":"4679:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4678:11:8"},"returnParameters":{"id":2316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2315,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":2344,"src":"4713:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2314,"name":"uint128","nodeType":"ElementaryTypeName","src":"4713:7:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"value":null,"visibility":"internal"}],"src":"4712:9:8"},"scope":2345,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[2345],"name":"LibSafeMathV06","scope":2346}],"license":"Apache-2.0"}},"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibBytesRichErrorsV06.sol":{"id":9,"ast":{"absolutePath":"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibBytesRichErrorsV06.sol","id":2381,"exportedSymbols":{"LibBytesRichErrorsV06":[2380]},"nodeType":"SourceUnit","src":"619:1000:9","nodes":[{"id":2347,"nodeType":"PragmaDirective","src":"619:23:9","nodes":[],"literals":["solidity","^","0.6",".5"]},{"id":2380,"nodeType":"ContractDefinition","src":"644:974:9","nodes":[{"id":2356,"nodeType":"EnumDefinition","src":"680:436:9","nodes":[],"canonicalName":"LibBytesRichErrorsV06.InvalidByteOperationErrorCodes","members":[{"id":2348,"name":"FromLessThanOrEqualsToRequired","nodeType":"EnumValue","src":"726:30:9"},{"id":2349,"name":"ToLessThanOrEqualsLengthRequired","nodeType":"EnumValue","src":"766:32:9"},{"id":2350,"name":"LengthGreaterThanZeroRequired","nodeType":"EnumValue","src":"808:29:9"},{"id":2351,"name":"LengthGreaterThanOrEqualsFourRequired","nodeType":"EnumValue","src":"847:37:9"},{"id":2352,"name":"LengthGreaterThanOrEqualsTwentyRequired","nodeType":"EnumValue","src":"894:39:9"},{"id":2353,"name":"LengthGreaterThanOrEqualsThirtyTwoRequired","nodeType":"EnumValue","src":"943:42:9"},{"id":2354,"name":"LengthGreaterThanOrEqualsNestedBytesLengthRequired","nodeType":"EnumValue","src":"995:50:9"},{"id":2355,"name":"DestinationLengthGreaterThanOrEqualSourceLengthRequired","nodeType":"EnumValue","src":"1055:55:9"}],"name":"InvalidByteOperationErrorCodes"},{"id":2359,"nodeType":"VariableDeclaration","src":"1199:75:9","nodes":[],"constant":true,"mutability":"constant","name":"INVALID_BYTE_OPERATION_ERROR_SELECTOR","overrides":null,"scope":2380,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2357,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1199:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"argumentTypes":null,"hexValue":"30783238303036353935","id":2358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1264:10:9","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_671114645_by_1","typeString":"int_const 671114645"},"value":"0x28006595"},"visibility":"internal"},{"id":2379,"nodeType":"FunctionDefinition","src":"1324:292:9","nodes":[],"body":{"id":2378,"nodeType":"Block","src":"1502:114:9","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2372,"name":"INVALID_BYTE_OPERATION_ERROR_SELECTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"1542:37:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"argumentTypes":null,"id":2373,"name":"errorCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"1581:9:9","typeDescriptions":{"typeIdentifier":"t_enum$_InvalidByteOperationErrorCodes_$2356","typeString":"enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes"}},{"argumentTypes":null,"id":2374,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"1592:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2375,"name":"required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"1600:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_enum$_InvalidByteOperationErrorCodes_$2356","typeString":"enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2370,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1519:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1519:22:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1519:90:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2369,"id":2377,"nodeType":"Return","src":"1512:97:9"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"InvalidByteOperationError","overrides":null,"parameters":{"id":2366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2361,"mutability":"mutable","name":"errorCode","nodeType":"VariableDeclaration","overrides":null,"scope":2379,"src":"1368:40:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_InvalidByteOperationErrorCodes_$2356","typeString":"enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes"},"typeName":{"contractScope":null,"id":2360,"name":"InvalidByteOperationErrorCodes","nodeType":"UserDefinedTypeName","referencedDeclaration":2356,"src":"1368:30:9","typeDescriptions":{"typeIdentifier":"t_enum$_InvalidByteOperationErrorCodes_$2356","typeString":"enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes"}},"value":null,"visibility":"internal"},{"constant":false,"id":2363,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","overrides":null,"scope":2379,"src":"1418:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2362,"name":"uint256","nodeType":"ElementaryTypeName","src":"1418:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2365,"mutability":"mutable","name":"required","nodeType":"VariableDeclaration","overrides":null,"scope":2379,"src":"1442:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2364,"name":"uint256","nodeType":"ElementaryTypeName","src":"1442:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1358:106:9"},"returnParameters":{"id":2369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2368,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":2379,"src":"1488:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2367,"name":"bytes","nodeType":"ElementaryTypeName","src":"1488:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"1487:14:9"},"scope":2380,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[2380],"name":"LibBytesRichErrorsV06","scope":2381}],"license":"Apache-2.0"}},"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol":{"id":10,"ast":{"absolutePath":"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol","id":2413,"exportedSymbols":{"LibRichErrorsV06":[2412]},"nodeType":"SourceUnit","src":"619:1002:10","nodes":[{"id":2382,"nodeType":"PragmaDirective","src":"619:23:10","nodes":[],"literals":["solidity","^","0.6",".5"]},{"id":2412,"nodeType":"ContractDefinition","src":"644:976:10","nodes":[{"id":2385,"nodeType":"VariableDeclaration","src":"717:61:10","nodes":[],"constant":true,"mutability":"constant","name":"STANDARD_ERROR_SELECTOR","overrides":null,"scope":2412,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2383,"name":"bytes4","nodeType":"ElementaryTypeName","src":"717:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"argumentTypes":null,"hexValue":"30783038633337396130","id":2384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:10:10","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_147028384_by_1","typeString":"int_const 147028384"},"value":"0x08c379a0"},"visibility":"internal"},{"id":2403,"nodeType":"FunctionDefinition","src":"1136:170:10","nodes":[],"body":{"id":2402,"nodeType":"Block","src":"1219:87:10","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2395,"name":"STANDARD_ERROR_SELECTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"1259:23:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2398,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"1290:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1284:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2396,"name":"bytes","nodeType":"ElementaryTypeName","src":"1284:5:10","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1284:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":2393,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1236:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1236:22:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1236:63:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2392,"id":2401,"nodeType":"Return","src":"1229:70:10"}]},"documentation":{"id":2386,"nodeType":"StructuredDocumentation","src":"828:303:10","text":"@dev ABI encode a standard, string revert error payload.\n      This is the same payload that would be included by a `revert(string)`\n      solidity statement. It has the function signature `Error(string)`.\n @param message The error string.\n @return The ABI encoded error."},"implemented":true,"kind":"function","modifiers":[],"name":"StandardError","overrides":null,"parameters":{"id":2389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2388,"mutability":"mutable","name":"message","nodeType":"VariableDeclaration","overrides":null,"scope":2403,"src":"1159:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2387,"name":"string","nodeType":"ElementaryTypeName","src":"1159:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"1158:23:10"},"returnParameters":{"id":2392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2391,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":2403,"src":"1205:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2390,"name":"bytes","nodeType":"ElementaryTypeName","src":"1205:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"1204:14:10"},"scope":2412,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2411,"nodeType":"FunctionDefinition","src":"1468:150:10","nodes":[],"body":{"id":2410,"nodeType":"Block","src":"1523:95:10","nodes":[],"statements":[{"AST":{"nodeType":"YulBlock","src":"1542:70:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"errorData","nodeType":"YulIdentifier","src":"1567:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1578:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1563:3:10"},"nodeType":"YulFunctionCall","src":"1563:20:10"},{"arguments":[{"name":"errorData","nodeType":"YulIdentifier","src":"1591:9:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1585:5:10"},"nodeType":"YulFunctionCall","src":"1585:16:10"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1556:6:10"},"nodeType":"YulFunctionCall","src":"1556:46:10"},"nodeType":"YulExpressionStatement","src":"1556:46:10"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2406,"isOffset":false,"isSlot":false,"src":"1567:9:10","valueSize":1},{"declaration":2406,"isOffset":false,"isSlot":false,"src":"1591:9:10","valueSize":1}],"id":2409,"nodeType":"InlineAssembly","src":"1533:79:10"}]},"documentation":{"id":2404,"nodeType":"StructuredDocumentation","src":"1355:108:10","text":"@dev Reverts an encoded rich revert reason `errorData`.\n @param errorData ABI encoded error data."},"implemented":true,"kind":"function","modifiers":[],"name":"rrevert","overrides":null,"parameters":{"id":2407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2406,"mutability":"mutable","name":"errorData","nodeType":"VariableDeclaration","overrides":null,"scope":2411,"src":"1485:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2405,"name":"bytes","nodeType":"ElementaryTypeName","src":"1485:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"1484:24:10"},"returnParameters":{"id":2408,"nodeType":"ParameterList","parameters":[],"src":"1523:0:10"},"scope":2412,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[2412],"name":"LibRichErrorsV06","scope":2413}],"license":"Apache-2.0"}},"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibSafeMathRichErrorsV06.sol":{"id":11,"ast":{"absolutePath":"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibSafeMathRichErrorsV06.sol","id":2469,"exportedSymbols":{"LibSafeMathRichErrorsV06":[2468]},"nodeType":"SourceUnit","src":"619:1210:11","nodes":[{"id":2414,"nodeType":"PragmaDirective","src":"619:23:11","nodes":[],"literals":["solidity","^","0.6",".5"]},{"id":2468,"nodeType":"ContractDefinition","src":"644:1184:11","nodes":[{"id":2417,"nodeType":"VariableDeclaration","src":"752:66:11","nodes":[],"constant":true,"mutability":"constant","name":"UINT256_BINOP_ERROR_SELECTOR","overrides":null,"scope":2468,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2415,"name":"bytes4","nodeType":"ElementaryTypeName","src":"752:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"argumentTypes":null,"hexValue":"30786539343663316262","id":2416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"808:10:11","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_3913728443_by_1","typeString":"int_const 3913728443"},"value":"0xe946c1bb"},"visibility":"internal"},{"id":2420,"nodeType":"VariableDeclaration","src":"889:69:11","nodes":[],"constant":true,"mutability":"constant","name":"UINT256_DOWNCAST_ERROR_SELECTOR","overrides":null,"scope":2468,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2418,"name":"bytes4","nodeType":"ElementaryTypeName","src":"889:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"argumentTypes":null,"hexValue":"30786339393661663762","id":2419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"948:10:11","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_3382095739_by_1","typeString":"int_const 3382095739"},"value":"0xc996af7b"},"visibility":"internal"},{"id":2425,"nodeType":"EnumDefinition","src":"965:144:11","nodes":[],"canonicalName":"LibSafeMathRichErrorsV06.BinOpErrorCodes","members":[{"id":2421,"name":"ADDITION_OVERFLOW","nodeType":"EnumValue","src":"996:17:11"},{"id":2422,"name":"MULTIPLICATION_OVERFLOW","nodeType":"EnumValue","src":"1023:23:11"},{"id":2423,"name":"SUBTRACTION_UNDERFLOW","nodeType":"EnumValue","src":"1056:21:11"},{"id":2424,"name":"DIVISION_BY_ZERO","nodeType":"EnumValue","src":"1087:16:11"}],"name":"BinOpErrorCodes"},{"id":2430,"nodeType":"EnumDefinition","src":"1115:219:11","nodes":[],"canonicalName":"LibSafeMathRichErrorsV06.DowncastErrorCodes","members":[{"id":2426,"name":"VALUE_TOO_LARGE_TO_DOWNCAST_TO_UINT32","nodeType":"EnumValue","src":"1149:37:11"},{"id":2427,"name":"VALUE_TOO_LARGE_TO_DOWNCAST_TO_UINT64","nodeType":"EnumValue","src":"1196:37:11"},{"id":2428,"name":"VALUE_TOO_LARGE_TO_DOWNCAST_TO_UINT96","nodeType":"EnumValue","src":"1243:37:11"},{"id":2429,"name":"VALUE_TOO_LARGE_TO_DOWNCAST_TO_UINT128","nodeType":"EnumValue","src":"1290:38:11"}],"name":"DowncastErrorCodes"},{"id":2450,"nodeType":"FunctionDefinition","src":"1383:236:11","nodes":[],"body":{"id":2449,"nodeType":"Block","src":"1526:93:11","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2443,"name":"UINT256_BINOP_ERROR_SELECTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"1566:28:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"argumentTypes":null,"id":2444,"name":"errorCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"1596:9:11","typeDescriptions":{"typeIdentifier":"t_enum$_BinOpErrorCodes_$2425","typeString":"enum LibSafeMathRichErrorsV06.BinOpErrorCodes"}},{"argumentTypes":null,"id":2445,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"1607:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2446,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"1610:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_enum$_BinOpErrorCodes_$2425","typeString":"enum LibSafeMathRichErrorsV06.BinOpErrorCodes"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2441,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1543:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1543:22:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1543:69:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2440,"id":2448,"nodeType":"Return","src":"1536:76:11"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"Uint256BinOpError","overrides":null,"parameters":{"id":2437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2432,"mutability":"mutable","name":"errorCode","nodeType":"VariableDeclaration","overrides":null,"scope":2450,"src":"1419:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_BinOpErrorCodes_$2425","typeString":"enum LibSafeMathRichErrorsV06.BinOpErrorCodes"},"typeName":{"contractScope":null,"id":2431,"name":"BinOpErrorCodes","nodeType":"UserDefinedTypeName","referencedDeclaration":2425,"src":"1419:15:11","typeDescriptions":{"typeIdentifier":"t_enum$_BinOpErrorCodes_$2425","typeString":"enum LibSafeMathRichErrorsV06.BinOpErrorCodes"}},"value":null,"visibility":"internal"},{"constant":false,"id":2434,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":2450,"src":"1454:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2433,"name":"uint256","nodeType":"ElementaryTypeName","src":"1454:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2436,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":2450,"src":"1473:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2435,"name":"uint256","nodeType":"ElementaryTypeName","src":"1473:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1409:79:11"},"returnParameters":{"id":2440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2439,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":2450,"src":"1512:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2438,"name":"bytes","nodeType":"ElementaryTypeName","src":"1512:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"1511:14:11"},"scope":2468,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2467,"nodeType":"FunctionDefinition","src":"1625:201:11","nodes":[],"body":{"id":2466,"nodeType":"Block","src":"1733:93:11","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2461,"name":"UINT256_DOWNCAST_ERROR_SELECTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"1773:31:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"argumentTypes":null,"id":2462,"name":"errorCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"1806:9:11","typeDescriptions":{"typeIdentifier":"t_enum$_DowncastErrorCodes_$2430","typeString":"enum LibSafeMathRichErrorsV06.DowncastErrorCodes"}},{"argumentTypes":null,"id":2463,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"1817:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_enum$_DowncastErrorCodes_$2430","typeString":"enum LibSafeMathRichErrorsV06.DowncastErrorCodes"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2459,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1750:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1750:22:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1750:69:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2458,"id":2465,"nodeType":"Return","src":"1743:76:11"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"Uint256DowncastError","overrides":null,"parameters":{"id":2455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2452,"mutability":"mutable","name":"errorCode","nodeType":"VariableDeclaration","overrides":null,"scope":2467,"src":"1655:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DowncastErrorCodes_$2430","typeString":"enum LibSafeMathRichErrorsV06.DowncastErrorCodes"},"typeName":{"contractScope":null,"id":2451,"name":"DowncastErrorCodes","nodeType":"UserDefinedTypeName","referencedDeclaration":2430,"src":"1655:18:11","typeDescriptions":{"typeIdentifier":"t_enum$_DowncastErrorCodes_$2430","typeString":"enum LibSafeMathRichErrorsV06.DowncastErrorCodes"}},"value":null,"visibility":"internal"},{"constant":false,"id":2454,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":2467,"src":"1685:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2453,"name":"uint256","nodeType":"ElementaryTypeName","src":"1685:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1654:41:11"},"returnParameters":{"id":2458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2457,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":2467,"src":"1719:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2456,"name":"bytes","nodeType":"ElementaryTypeName","src":"1719:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"1718:14:11"},"scope":2468,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[2468],"name":"LibSafeMathRichErrorsV06","scope":2469}],"license":"Apache-2.0"}}},"contracts":{"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/errors/LibTransformERC20RichErrors.sol":{"LibTransformERC20RichErrors":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/errors/LibTransformERC20RichErrors.sol\":\"LibTransformERC20RichErrors\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@0x/contracts-erc20/=/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/\",\":@0x/contracts-utils/=/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/\"]},\"sources\":{\"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/errors/LibTransformERC20RichErrors.sol\":{\"keccak256\":\"0x7b5d95f624986c2a526e8a339658ae6cb26f70bead2060c65f2ff22abeecfca8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d7fab3f069ea6dfe2e761161fc48d50aa41129866e7a6cabde9dd78b2a75fa27\",\"dweb:/ipfs/QmcVJ1T6tU6qLttg4hbAYq74jYUvfvjZrzHukEUDXg39cz\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev"},"evm":{"assembly":"    /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/errors/LibTransformERC20RichErrors.sol\":644:5599  library LibTransformERC20RichErrors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/errors/LibTransformERC20RichErrors.sol\":644:5599  library LibTransformERC20RichErrors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200992d371e5a3344f0109b514439c79d347a72d6c6eefa6fb1600b62b01a6e6be64736f6c634300060c0033\n}\n","legacyAssembly":{".code":[{"begin":644,"end":5599,"name":"PUSH #[$]","source":0,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":644,"end":5599,"name":"PUSH [$]","source":0,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":644,"end":5599,"name":"PUSH","source":0,"value":"B"},{"begin":644,"end":5599,"name":"DUP3","source":0},{"begin":644,"end":5599,"name":"DUP3","source":0},{"begin":644,"end":5599,"name":"DUP3","source":0},{"begin":644,"end":5599,"name":"CODECOPY","source":0},{"begin":644,"end":5599,"name":"DUP1","source":0},{"begin":644,"end":5599,"name":"MLOAD","source":0},{"begin":644,"end":5599,"name":"PUSH","source":0,"value":"0"},{"begin":644,"end":5599,"name":"BYTE","source":0},{"begin":644,"end":5599,"name":"PUSH","source":0,"value":"73"},{"begin":644,"end":5599,"name":"EQ","source":0},{"begin":644,"end":5599,"name":"PUSH [tag]","source":0,"value":"1"},{"begin":644,"end":5599,"name":"JUMPI","source":0},{"begin":644,"end":5599,"name":"INVALID","source":0},{"begin":644,"end":5599,"name":"tag","source":0,"value":"1"},{"begin":644,"end":5599,"name":"JUMPDEST","source":0},{"begin":644,"end":5599,"name":"ADDRESS","source":0},{"begin":644,"end":5599,"name":"PUSH","source":0,"value":"0"},{"begin":644,"end":5599,"name":"MSTORE","source":0},{"begin":644,"end":5599,"name":"PUSH","source":0,"value":"73"},{"begin":644,"end":5599,"name":"DUP2","source":0},{"begin":644,"end":5599,"name":"MSTORE8","source":0},{"begin":644,"end":5599,"name":"DUP3","source":0},{"begin":644,"end":5599,"name":"DUP2","source":0},{"begin":644,"end":5599,"name":"RETURN","source":0}],".data":{"0":{".auxdata":"a26469706673582212200992d371e5a3344f0109b514439c79d347a72d6c6eefa6fb1600b62b01a6e6be64736f6c634300060c0033",".code":[{"begin":644,"end":5599,"name":"PUSHDEPLOYADDRESS","source":0},{"begin":644,"end":5599,"name":"ADDRESS","source":0},{"begin":644,"end":5599,"name":"EQ","source":0},{"begin":644,"end":5599,"name":"PUSH","source":0,"value":"80"},{"begin":644,"end":5599,"name":"PUSH","source":0,"value":"40"},{"begin":644,"end":5599,"name":"MSTORE","source":0},{"begin":644,"end":5599,"name":"PUSH","source":0,"value":"0"},{"begin":644,"end":5599,"name":"DUP1","source":0},{"begin":644,"end":5599,"name":"REVERT","source":0}]}}},"bytecode":{"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200992d371e5a3344f0109b514439c79d347a72d6c6eefa6fb1600b62b01a6e6be64736f6c634300060c0033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD SWAP3 0xD3 PUSH18 0xE5A3344F0109B514439C79D347A72D6C6EEF 0xA6 0xFB AND STOP 0xB6 0x2B ADD 0xA6 0xE6 0xBE PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ","sourceMap":"644:4955:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200992d371e5a3344f0109b514439c79d347a72d6c6eefa6fb1600b62b01a6e6be64736f6c634300060c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD SWAP3 0xD3 PUSH18 0xE5A3344F0109B514439C79D347A72D6C6EEF 0xA6 0xFB AND STOP 0xB6 0x2B ADD 0xA6 0xE6 0xBE PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ","sourceMap":"644:4955:0:-:0;;;;;;;;","linkReferences":{}},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"external":{},"internal":{"IncompleteFillBuyQuoteError(address,uint256,uint256)":"infinite","IncompleteFillSellQuoteError(address,uint256,uint256)":"infinite","IncompleteTransformERC20Error(address,uint256,uint256)":"infinite","InsufficientEthAttachedError(uint256,uint256)":"infinite","InsufficientProtocolFeeError(uint256,uint256)":"infinite","InsufficientTakerTokenError(uint256,uint256)":"infinite","InvalidERC20AssetDataError(bytes memory)":"infinite","InvalidExecutionContextError(address,address)":"infinite","InvalidTakerFeeTokenError(address)":"infinite","InvalidTransformDataError(enum LibTransformERC20RichErrors.InvalidTransformDataErrorCode,bytes memory)":"infinite","NegativeTransformERC20OutputError(address,uint256)":"infinite","OnlyCallableByDeployerError(address,address)":"infinite","TransformerFailedError(address,bytes memory,bytes memory)":"infinite"}}},"ewasm":{"wasm":""}}},"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/IERC20Transformer.sol":{"IERC20Transformer":{"abi":[{"type":"function","name":"transform","inputs":[{"name":"context","type":"tuple","internalType":"struct IERC20Transformer.TransformContext","components":[{"name":"sender","type":"address","internalType":"address payable"},{"name":"recipient","type":"address","internalType":"address payable"},{"name":"data","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"success","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"}],"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IERC20Transformer.TransformContext\",\"name\":\"context\",\"type\":\"tuple\"}],\"name\":\"transform\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"success\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A transformation callback used in `TransformERC20.transformERC20()`.\",\"kind\":\"dev\",\"methods\":{\"transform((address,address,bytes))\":{\"details\":\"Called from `TransformERC20.transformERC20()`. This will be      delegatecalled in the context of the FlashWallet instance being used.\",\"params\":{\"context\":\"Context information.\"},\"returns\":{\"success\":\"The success bytes (`LibERC20Transformer.TRANSFORMER_SUCCESS`).\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/IERC20Transformer.sol\":\"IERC20Transformer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@0x/contracts-erc20/=/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/\",\":@0x/contracts-utils/=/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/\"]},\"sources\":{\"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/IERC20Transformer.sol\":{\"keccak256\":\"0x78632f2364694d58d968b4c2c20465475da774ca072c49728fa11726993fe7c9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2204c8c11be339ece9d3cb6823510d126fc6b77fa851601e301ee68c87a09f62\",\"dweb:/ipfs/QmR7gJ7URcApR6uomYop72yYm3cSMxyRJr4ZLV4k78ZUha\"]},\"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/IERC20TokenV06.sol\":{\"keccak256\":\"0xc4d00260929b770dfa76ce7266826c24f792463938448f919638c4d29357dfbd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://115f5aeb6d8a2530e24e9ec2066dfe96861f4496cf4c5de989da6d42ddf124e4\",\"dweb:/ipfs/QmQxkf5hQAw5axkkgMeEe2DMtCcs5przJLvFQkQYshAEtf\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","details":"A transformation callback used in `TransformERC20.transformERC20()`.","methods":{"transform((address,address,bytes))":{"details":"Called from `TransformERC20.transformERC20()`. This will be      delegatecalled in the context of the FlashWallet instance being used.","params":{"context":"Context information."},"returns":{"success":"The success bytes (`LibERC20Transformer.TRANSFORMER_SUCCESS`)."}}}},"evm":{"assembly":"","bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"transform((address,address,bytes))":"832b24bb"}},"ewasm":{"wasm":""}}},"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol":{"LibERC20Transformer":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ETH_TOKEN\":{\"details\":\"ETH pseudo-token.\"},\"ETH_TOKEN_ADDRESS\":{\"details\":\"ETH pseudo-token address.\"},\"TRANSFORMER_SUCCESS\":{\"details\":\"Return value indicating success in `IERC20Transformer.transform()`.      This is just `keccak256('TRANSFORMER_SUCCESS')`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":\"LibERC20Transformer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@0x/contracts-erc20/=/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/\",\":@0x/contracts-utils/=/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/\"]},\"sources\":{\"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":{\"keccak256\":\"0xdc2576cdad7411d98d161457d8cbca2f8dee8bf4da10c13df315f47289c9b2cc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://34c291bfd1b97d7158f7e6b13ce946b8d72d417d83e3543b4809ffe832fa4aa8\",\"dweb:/ipfs/QmedTLpHtcM3SWz1jb1zmNZJcfkqvcm1viAAWBg8dPDhHm\"]},\"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/IERC20TokenV06.sol\":{\"keccak256\":\"0xc4d00260929b770dfa76ce7266826c24f792463938448f919638c4d29357dfbd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://115f5aeb6d8a2530e24e9ec2066dfe96861f4496cf4c5de989da6d42ddf124e4\",\"dweb:/ipfs/QmQxkf5hQAw5axkkgMeEe2DMtCcs5przJLvFQkQYshAEtf\"]},\"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":{\"keccak256\":\"0x5f37ab3203377aaad49cf071c072d74ef7389697102da89896f4e21b00e917c5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d4221449faf3751fd20283cc3f276d6b1850a1e1ad3c1daa165e9f33787d1a63\",\"dweb:/ipfs/QmYFhm8S5DoaVSs9ZDMj1cx698nuRfuLmFkN3VVSuEZ6tv\"]},\"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol\":{\"keccak256\":\"0x8e44f6970c8df72de1f48c88084450b7af28e53a25e5ceab6ce2731079a2c893\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2c7922a5f738dcc0e3258c196c97e5644b24d0563c0ba6089cc4427bbc5489e1\",\"dweb:/ipfs/QmeEJ9FPGVffiEYT3KpURMrG1HFBjeSisV6nPzJjZKdfMm\"]},\"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibBytesRichErrorsV06.sol\":{\"keccak256\":\"0x0a0323239a3b849c218aa43e39983c355d086471c0bba29ee7d978d3091d0f17\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f2901054b1c4c36d333d20135b744ab23047adb05351c6452f15369654cabab6\",\"dweb:/ipfs/QmafvQ5EGAVvZgxP3HjuSCxKrSNiQYau4apm72AHFM9e5c\"]},\"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol\":{\"keccak256\":\"0x7c918c16b4be1771ce1c26fa93c6726d17809a4676cef501b4dde3c94fc277f9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c5afd5d606294e1ce53f02a9c1db0fb82c4b2cfdb3d50d08c07b4e52f9457b48\",\"dweb:/ipfs/QmeHN7GrEYfmbt769p39jsaExHDdzz7ktuzbQxCCAVgLrq\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev"},"evm":{"assembly":"    /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":815:6444  library LibERC20Transformer {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":815:6444  library LibERC20Transformer {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d72eb75f0418b15b5d86096e6503469c0c0a9a2f329aa0360f7734cc98f1c31864736f6c634300060c0033\n}\n","legacyAssembly":{".code":[{"begin":815,"end":6444,"name":"PUSH #[$]","source":2,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":815,"end":6444,"name":"PUSH [$]","source":2,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":815,"end":6444,"name":"PUSH","source":2,"value":"B"},{"begin":815,"end":6444,"name":"DUP3","source":2},{"begin":815,"end":6444,"name":"DUP3","source":2},{"begin":815,"end":6444,"name":"DUP3","source":2},{"begin":815,"end":6444,"name":"CODECOPY","source":2},{"begin":815,"end":6444,"name":"DUP1","source":2},{"begin":815,"end":6444,"name":"MLOAD","source":2},{"begin":815,"end":6444,"name":"PUSH","source":2,"value":"0"},{"begin":815,"end":6444,"name":"BYTE","source":2},{"begin":815,"end":6444,"name":"PUSH","source":2,"value":"73"},{"begin":815,"end":6444,"name":"EQ","source":2},{"begin":815,"end":6444,"name":"PUSH [tag]","source":2,"value":"1"},{"begin":815,"end":6444,"name":"JUMPI","source":2},{"begin":815,"end":6444,"name":"INVALID","source":2},{"begin":815,"end":6444,"name":"tag","source":2,"value":"1"},{"begin":815,"end":6444,"name":"JUMPDEST","source":2},{"begin":815,"end":6444,"name":"ADDRESS","source":2},{"begin":815,"end":6444,"name":"PUSH","source":2,"value":"0"},{"begin":815,"end":6444,"name":"MSTORE","source":2},{"begin":815,"end":6444,"name":"PUSH","source":2,"value":"73"},{"begin":815,"end":6444,"name":"DUP2","source":2},{"begin":815,"end":6444,"name":"MSTORE8","source":2},{"begin":815,"end":6444,"name":"DUP3","source":2},{"begin":815,"end":6444,"name":"DUP2","source":2},{"begin":815,"end":6444,"name":"RETURN","source":2}],".data":{"0":{".auxdata":"a2646970667358221220d72eb75f0418b15b5d86096e6503469c0c0a9a2f329aa0360f7734cc98f1c31864736f6c634300060c0033",".code":[{"begin":815,"end":6444,"name":"PUSHDEPLOYADDRESS","source":2},{"begin":815,"end":6444,"name":"ADDRESS","source":2},{"begin":815,"end":6444,"name":"EQ","source":2},{"begin":815,"end":6444,"name":"PUSH","source":2,"value":"80"},{"begin":815,"end":6444,"name":"PUSH","source":2,"value":"40"},{"begin":815,"end":6444,"name":"MSTORE","source":2},{"begin":815,"end":6444,"name":"PUSH","source":2,"value":"0"},{"begin":815,"end":6444,"name":"DUP1","source":2},{"begin":815,"end":6444,"name":"REVERT","source":2}]}}},"bytecode":{"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d72eb75f0418b15b5d86096e6503469c0c0a9a2f329aa0360f7734cc98f1c31864736f6c634300060c0033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0x2E 0xB7 0x5F DIV XOR 0xB1 JUMPDEST 0x5D DUP7 MULMOD PUSH15 0x6503469C0C0A9A2F329AA0360F7734 0xCC SWAP9 CALL 0xC3 XOR PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ","sourceMap":"815:5629:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d72eb75f0418b15b5d86096e6503469c0c0a9a2f329aa0360f7734cc98f1c31864736f6c634300060c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0x2E 0xB7 0x5F DIV XOR 0xB1 JUMPDEST 0x5D DUP7 MULMOD PUSH15 0x6503469C0C0A9A2F329AA0360F7734 0xCC SWAP9 CALL 0xC3 XOR PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ","sourceMap":"815:5629:2:-:0;;;;;;;;","linkReferences":{}},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"external":{},"internal":{"getDeployedAddress(address,uint32)":"infinite","getTokenBalanceOf(contract IERC20TokenV06,address)":"infinite","isTokenETH(contract IERC20TokenV06)":"infinite","rlpEncodeNonce(uint32)":"infinite","transformerTransfer(contract IERC20TokenV06,address payable,uint256)":"infinite","unsafeTransformerTransfer(contract IERC20TokenV06,address payable,uint256)":"infinite"}}},"ewasm":{"wasm":""}}},"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol":{"PayTakerTransformer":{"abi":[{"type":"constructor","inputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deployer","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"die","inputs":[{"name":"ethRecipient","type":"address","internalType":"address payable"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transform","inputs":[{"name":"context","type":"tuple","internalType":"struct IERC20Transformer.TransformContext","components":[{"name":"sender","type":"address","internalType":"address payable"},{"name":"recipient","type":"address","internalType":"address payable"},{"name":"data","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"success","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"}],"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"ethRecipient\",\"type\":\"address\"}],\"name\":\"die\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IERC20Transformer.TransformContext\",\"name\":\"context\",\"type\":\"tuple\"}],\"name\":\"transform\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"success\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A transformer that transfers tokens to the taker.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Create this contract.\"},\"die(address)\":{\"details\":\"Destruct this contract. Only callable by the deployer and will not      succeed in the context of a delegatecall (from another contract).\",\"params\":{\"ethRecipient\":\"The recipient of ETH held in this contract.\"}},\"transform((address,address,bytes))\":{\"details\":\"Forwards tokens to the taker.\",\"params\":{\"context\":\"Context information.\"},\"returns\":{\"success\":\"The success bytes (`LibERC20Transformer.TRANSFORMER_SUCCESS`).\"}}},\"stateVariables\":{\"MAX_UINT256\":{\"details\":\"Maximum uint256 value.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":\"PayTakerTransformer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@0x/contracts-erc20/=/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/\",\":@0x/contracts-utils/=/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/\"]},\"sources\":{\"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/errors/LibTransformERC20RichErrors.sol\":{\"keccak256\":\"0x7b5d95f624986c2a526e8a339658ae6cb26f70bead2060c65f2ff22abeecfca8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d7fab3f069ea6dfe2e761161fc48d50aa41129866e7a6cabde9dd78b2a75fa27\",\"dweb:/ipfs/QmcVJ1T6tU6qLttg4hbAYq74jYUvfvjZrzHukEUDXg39cz\"]},\"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/IERC20Transformer.sol\":{\"keccak256\":\"0x78632f2364694d58d968b4c2c20465475da774ca072c49728fa11726993fe7c9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2204c8c11be339ece9d3cb6823510d126fc6b77fa851601e301ee68c87a09f62\",\"dweb:/ipfs/QmR7gJ7URcApR6uomYop72yYm3cSMxyRJr4ZLV4k78ZUha\"]},\"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":{\"keccak256\":\"0xdc2576cdad7411d98d161457d8cbca2f8dee8bf4da10c13df315f47289c9b2cc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://34c291bfd1b97d7158f7e6b13ce946b8d72d417d83e3543b4809ffe832fa4aa8\",\"dweb:/ipfs/QmedTLpHtcM3SWz1jb1zmNZJcfkqvcm1viAAWBg8dPDhHm\"]},\"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":{\"keccak256\":\"0x4b7a58959019f635ea3894a8bde842bbb07645be2ca2267169abc7cc4c6486c3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://651ab0879ac3332fd991069206cf2d6efab9802dadff747485d5c005f2522719\",\"dweb:/ipfs/QmWg3FVomsinSyzbi9cW7QJ2kMomNPeExK3N99cCmr6Esj\"]},\"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol\":{\"keccak256\":\"0xce5a8ae329d7e824603e9dbbc36571cbdb1979ddc7f2fd911eb1b6714c113253\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://12efa0b26e117ba8bf90d1f14a60e65354d20125debcd076a878d9432c4b95d8\",\"dweb:/ipfs/QmVQFu8t59jcy2YVwDSRj8BHaUbHkps4QGvJGxxS2AXEnG\"]},\"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/IERC20TokenV06.sol\":{\"keccak256\":\"0xc4d00260929b770dfa76ce7266826c24f792463938448f919638c4d29357dfbd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://115f5aeb6d8a2530e24e9ec2066dfe96861f4496cf4c5de989da6d42ddf124e4\",\"dweb:/ipfs/QmQxkf5hQAw5axkkgMeEe2DMtCcs5przJLvFQkQYshAEtf\"]},\"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":{\"keccak256\":\"0x5f37ab3203377aaad49cf071c072d74ef7389697102da89896f4e21b00e917c5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d4221449faf3751fd20283cc3f276d6b1850a1e1ad3c1daa165e9f33787d1a63\",\"dweb:/ipfs/QmYFhm8S5DoaVSs9ZDMj1cx698nuRfuLmFkN3VVSuEZ6tv\"]},\"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol\":{\"keccak256\":\"0x8e44f6970c8df72de1f48c88084450b7af28e53a25e5ceab6ce2731079a2c893\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2c7922a5f738dcc0e3258c196c97e5644b24d0563c0ba6089cc4427bbc5489e1\",\"dweb:/ipfs/QmeEJ9FPGVffiEYT3KpURMrG1HFBjeSisV6nPzJjZKdfMm\"]},\"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibSafeMathV06.sol\":{\"keccak256\":\"0xf41503c5323320d0d4a8de4afddbc41c9e0fa205b8b0ee317bd4d98b411bb3ea\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://168c15f7009ae049478e8be800ef7b627373691878388659bd30b8be049b0c7f\",\"dweb:/ipfs/QmP1R2YzmnbgQhaK5N6QyscgAhWvHAd1sos8f44EV3E5Md\"]},\"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibBytesRichErrorsV06.sol\":{\"keccak256\":\"0x0a0323239a3b849c218aa43e39983c355d086471c0bba29ee7d978d3091d0f17\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f2901054b1c4c36d333d20135b744ab23047adb05351c6452f15369654cabab6\",\"dweb:/ipfs/QmafvQ5EGAVvZgxP3HjuSCxKrSNiQYau4apm72AHFM9e5c\"]},\"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol\":{\"keccak256\":\"0x7c918c16b4be1771ce1c26fa93c6726d17809a4676cef501b4dde3c94fc277f9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c5afd5d606294e1ce53f02a9c1db0fb82c4b2cfdb3d50d08c07b4e52f9457b48\",\"dweb:/ipfs/QmeHN7GrEYfmbt769p39jsaExHDdzz7ktuzbQxCCAVgLrq\"]},\"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibSafeMathRichErrorsV06.sol\":{\"keccak256\":\"0xf9c2aee205c7201a19684c5d8c7f0debc5991b00a6c693c976b092c44f8b8980\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://22e720c36473df8103a97c1c8d4836361b251d756d79735a3803681ebc71874b\",\"dweb:/ipfs/QmT5WuJFV14F872G1Ta7J7kyF6C6VDGqK8orHf81bcW3Fw\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","details":"A transformer that transfers tokens to the taker.","methods":{"constructor":{"details":"Create this contract."},"die(address)":{"details":"Destruct this contract. Only callable by the deployer and will not      succeed in the context of a delegatecall (from another contract).","params":{"ethRecipient":"The recipient of ETH held in this contract."}},"transform((address,address,bytes))":{"details":"Forwards tokens to the taker.","params":{"context":"Context information."},"returns":{"success":"The success bytes (`LibERC20Transformer.TRANSFORMER_SUCCESS`)."}}}},"evm":{"assembly":"    /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":1133:2876  contract PayTakerTransformer is Transformer {... */\n  mstore(0x40, 0xc0)\n    /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":1816:1853  constructor() public Transformer() {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol\":1243:1253  msg.sender */\n  caller\n    /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol\":1232:1253  deployer = msg.sender */\n  0x60\n  dup2\n  dup2\n  shl\n  0x80\n  mstore\n    /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol\":1289:1293  this */\n  address\n    /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol\":1263:1294  _implementation = address(this) */\n  swap1\n  dup2\n  swap1\n  shl\n  0xa0\n  mstore\n    /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":1133:2876  contract PayTakerTransformer is Transformer {... */\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0x7705a66c05de96d79dddf8024a7669ad29d5b174f4aa496e3ca7c392f0ca18e1\")\n  assignImmutable(\"0xe3fb6c7a68b97a1574f1623712f47cd0a60a3212aae0a2101a56c312e7330127\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":1133:2876  contract PayTakerTransformer is Transformer {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x832b24bb\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xc9353cb5\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xd5f39488\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2033:2874  function transform(TransformContext calldata context) external override returns (bytes4 success) {... */\n    tag_3:\n      tag_6\n      tag_7\n      calldatasize\n      0x04\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol\":1538:2050  function die(address payable ethRecipient) external virtual {... */\n    tag_4:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol\":1026:1059  address public immutable deployer */\n    tag_5:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2033:2874  function transform(TransformContext calldata context) external override returns (bytes4 success) {... */\n    tag_9:\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2114:2128  bytes4 success */\n      0x00\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2140:2165  TransformData memory data */\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2179:2191  context.data */\n      tag_23\n      0x40\n      dup5\n      add\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2179:2186  context */\n      dup5\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2179:2191  context.data */\n      tag_24\n      jump\t// in\n    tag_23:\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2168:2209  abi.decode(context.data, (TransformData)) */\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2140:2209  TransformData memory data = abi.decode(context.data, (TransformData)) */\n      swap1\n      pop\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2275:2284  uint256 i */\n      0x00\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2270:2812  for (uint256 i = 0; i < data.tokens.length; ++i) {... */\n    tag_27:\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2294:2305  data.tokens */\n      dup2\n      mload\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2294:2312  data.tokens.length */\n      mload\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2290:2312  i < data.tokens.length */\n      dup2\n      lt\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2270:2812  for (uint256 i = 0; i < data.tokens.length; ++i) {... */\n      iszero\n      tag_28\n      jumpi\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2470:2484  uint256 amount */\n      0x00\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2509:2510  i */\n      dup2\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2487:2491  data */\n      dup4\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2487:2499  data.amounts */\n      0x20\n      add\n      mload\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2487:2506  data.amounts.length */\n      mload\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2487:2510  data.amounts.length > i */\n      gt\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2487:2542  data.amounts.length > i ? data.amounts[i] : uint256(-1) */\n      tag_30\n      jumpi\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2539:2541  -1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2487:2542  data.amounts.length > i ? data.amounts[i] : uint256(-1) */\n      jump(tag_31)\n    tag_30:\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2513:2517  data */\n      dup3\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2513:2525  data.amounts */\n      0x20\n      add\n      mload\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2526:2527  i */\n      dup3\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2513:2528  data.amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_32\n      jumpi\n      invalid\n    tag_32:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2487:2542  data.amounts.length > i ? data.amounts[i] : uint256(-1) */\n    tag_31:\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2470:2542  uint256 amount = data.amounts.length > i ? data.amounts[i] : uint256(-1) */\n      swap1\n      pop\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":1771:1773  -1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2560:2566  amount */\n      dup2\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2560:2581  amount == MAX_UINT256 */\n      eq\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2556:2672  if (amount == MAX_UINT256) {... */\n      iszero\n      tag_33\n      jumpi\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2610:2657  data.tokens[i].getTokenBalanceOf(address(this)) */\n      tag_34\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2651:2655  this */\n      address\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2610:2614  data */\n      dup5\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2610:2621  data.tokens */\n      0x00\n      add\n      mload\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2622:2623  i */\n      dup5\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2610:2624  data.tokens[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_35\n      jumpi\n      invalid\n    tag_35:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2610:2642  data.tokens[i].getTokenBalanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_36\n      swap1\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2610:2657  data.tokens[i].getTokenBalanceOf(address(this)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_34:\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2601:2657  amount = data.tokens[i].getTokenBalanceOf(address(this)) */\n      swap1\n      pop\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2556:2672  if (amount == MAX_UINT256) {... */\n    tag_33:\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2689:2700  amount != 0 */\n      dup1\n      iszero\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2685:2802  if (amount != 0) {... */\n      tag_38\n      jumpi\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2720:2787  data.tokens[i].unsafeTransformerTransfer(context.recipient, amount) */\n      tag_38\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2761:2778  context.recipient */\n      tag_39\n      0x40\n      dup8\n      add\n      0x20\n      dup9\n      add\n      tag_14\n      jump\t// in\n    tag_39:\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2780:2786  amount */\n      dup3\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2720:2724  data */\n      dup6\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2720:2731  data.tokens */\n      0x00\n      add\n      mload\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2732:2733  i */\n      dup6\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2720:2734  data.tokens[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_40\n      jumpi\n      invalid\n    tag_40:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2720:2760  data.tokens[i].unsafeTransformerTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_41\n      swap1\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2720:2787  data.tokens[i].unsafeTransformerTransfer(context.recipient, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_38:\n      pop\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2314:2317  ++i */\n      0x01\n      add\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2270:2812  for (uint256 i = 0; i < data.tokens.length; ++i) {... */\n      jump(tag_27)\n    tag_28:\n      pop\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2828:2867  LibERC20Transformer.TRANSFORMER_SUCCESS */\n      0x13c9929e00000000000000000000000000000000000000000000000000000000\n      swap4\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/PayTakerTransformer.sol\":2033:2874  function transform(TransformContext calldata context) external override returns (bytes4 success) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol\":1538:2050  function die(address payable ethRecipient) external virtual {... */\n    tag_15:\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol\":1656:1666  msg.sender */\n      caller\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol\":1656:1678  msg.sender != deployer */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol\":1670:1678  deployer */\n      immutable(\"0xe3fb6c7a68b97a1574f1623712f47cd0a60a3212aae0a2101a56c312e7330127\")\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol\":1656:1678  msg.sender != deployer */\n      and\n      eq\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol\":1652:1792  if (msg.sender != deployer) {... */\n      tag_44\n      jumpi\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol\":1694:1781  LibTransformERC20RichErrors.OnlyCallableByDeployerError(msg.sender, deployer).rrevert() */\n      tag_44\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol\":1694:1771  LibTransformERC20RichErrors.OnlyCallableByDeployerError(msg.sender, deployer) */\n      tag_45\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol\":1750:1760  msg.sender */\n      caller\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol\":1762:1770  deployer */\n      immutable(\"0xe3fb6c7a68b97a1574f1623712f47cd0a60a3212aae0a2101a56c312e7330127\")\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol\":1694:1749  LibTransformERC20RichErrors.OnlyCallableByDeployerError */\n      tag_46\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol\":1694:1771  LibTransformERC20RichErrors.OnlyCallableByDeployerError(msg.sender, deployer) */\n      jump\t// in\n    tag_45:\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol\":1694:1779  LibTransformERC20RichErrors.OnlyCallableByDeployerError(msg.sender, deployer).rrevert */\n      tag_47\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol\":1694:1781  LibTransformERC20RichErrors.OnlyCallableByDeployerError(msg.sender, deployer).rrevert() */\n      jump\t// in\n    tag_44:\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol\":1859:1863  this */\n      address\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol\":1851:1883  address(this) != _implementation */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol\":1868:1883  _implementation */\n      immutable(\"0x7705a66c05de96d79dddf8024a7669ad29d5b174f4aa496e3ca7c392f0ca18e1\")\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol\":1851:1883  address(this) != _implementation */\n      and\n      eq\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol\":1847:2008  if (address(this) != _implementation) {... */\n      tag_49\n      jumpi\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol\":1899:1997  LibTransformERC20RichErrors.InvalidExecutionContextError(address(this), _implementation).rrevert() */\n      tag_49\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol\":1899:1987  LibTransformERC20RichErrors.InvalidExecutionContextError(address(this), _implementation) */\n      tag_45\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol\":1964:1968  this */\n      address\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol\":1971:1986  _implementation */\n      immutable(\"0x7705a66c05de96d79dddf8024a7669ad29d5b174f4aa496e3ca7c392f0ca18e1\")\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol\":1899:1955  LibTransformERC20RichErrors.InvalidExecutionContextError */\n      tag_51\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol\":1899:1987  LibTransformERC20RichErrors.InvalidExecutionContextError(address(this), _implementation) */\n      jump\t// in\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol\":1899:1997  LibTransformERC20RichErrors.InvalidExecutionContextError(address(this), _implementation).rrevert() */\n    tag_49:\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol\":2030:2042  ethRecipient */\n      dup1\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol\":2017:2043  selfdestruct(ethRecipient) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol\":1026:1059  address public immutable deployer */\n    tag_17:\n      immutable(\"0xe3fb6c7a68b97a1574f1623712f47cd0a60a3212aae0a2101a56c312e7330127\")\n      dup2\n      jump\t// out\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":3298:3530  function getTokenBalanceOf(IERC20TokenV06 token, address owner) internal view returns (uint256 tokenBalance) {... */\n    tag_36:\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":3385:3405  uint256 tokenBalance */\n      0x00\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":3421:3438  isTokenETH(token) */\n      tag_53\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":3432:3437  token */\n      dup4\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":3421:3431  isTokenETH */\n      tag_54\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":3421:3438  isTokenETH(token) */\n      jump\t// in\n    tag_53:\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":3417:3485  if (isTokenETH(token)) {... */\n      iszero\n      tag_55\n      jumpi\n      pop\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":3461:3474  owner.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n      balance\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":3454:3474  return owner.balance */\n      jump(tag_52)\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":3417:3485  if (isTokenETH(token)) {... */\n    tag_55:\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":3501:3523  token.balanceOf(owner) */\n      mload(0x40)\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":3501:3516  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":3501:3523  token.balanceOf(owner) */\n      tag_56\n      swap1\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":3517:3522  owner */\n      dup6\n      swap1\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":3501:3523  token.balanceOf(owner) */\n      0x04\n      add\n      tag_19\n      jump\t// in\n    tag_56:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_59\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_59:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":3494:3523  return token.balanceOf(owner) */\n      swap1\n      pop\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":3298:3530  function getTokenBalanceOf(IERC20TokenV06 token, address owner) internal view returns (uint256 tokenBalance) {... */\n    tag_52:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":2377:2749  function unsafeTransformerTransfer(... */\n    tag_41:\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":2523:2540  isTokenETH(token) */\n      tag_63\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":2534:2539  token */\n      dup4\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":2523:2533  isTokenETH */\n      tag_54\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":2523:2540  isTokenETH(token) */\n      jump\t// in\n    tag_63:\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":2519:2743  if (isTokenETH(token)) {... */\n      iszero\n      tag_64\n      jumpi\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":2557:2566  bool sent */\n      0x00\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":2572:2574  to */\n      dup3\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":2572:2579  to.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":2587:2593  amount */\n      dup3\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":2572:2598  to.call{value: amount}(\"\") */\n      mload(0x40)\n      tag_65\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_69\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_68)\n    tag_69:\n      0x60\n      swap2\n      pop\n    tag_68:\n      pop\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":2556:2598  (bool sent, ) = to.call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":2620:2624  sent */\n      dup1\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":2612:2669  require(sent, \"LibERC20Transformer/FAILED_TO_SEND_ETHER\") */\n      tag_70\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_70:\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":2519:2743  if (isTokenETH(token)) {... */\n      pop\n      jump(tag_74)\n    tag_64:\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":2700:2732  token.compatTransfer(to, amount) */\n      tag_74\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":2700:2720  token.compatTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":2721:2723  to */\n      dup4\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":2725:2731  amount */\n      dup4\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":2700:2720  token.compatTransfer */\n      tag_75\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":2700:2732  token.compatTransfer(to, amount) */\n      jump\t// in\n    tag_74:\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":2377:2749  function unsafeTransformerTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/errors/LibTransformERC20RichErrors.sol\":2455:2706  function OnlyCallableByDeployerError(address caller, address deployer) internal pure returns (bytes memory) {... */\n    tag_46:\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/errors/LibTransformERC20RichErrors.sol\":2549:2561  bytes memory */\n      0x60\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/errors/LibTransformERC20RichErrors.sol\":2622:2679  keccak256(\"OnlyCallableByDeployerError(address,address)\") */\n      0x5cec653b364cca3880afa73ceff506d0651d11d26abbbe4a56460aa933b21b08\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/errors/LibTransformERC20RichErrors.sol\":2682:2688  caller */\n      dup4\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/errors/LibTransformERC20RichErrors.sol\":2690:2698  deployer */\n      dup4\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/errors/LibTransformERC20RichErrors.sol\":2592:2699  abi.encodeWithSelector(bytes4(keccak256(\"OnlyCallableByDeployerError(address,address)\")), caller, deployer) */\n      add(0x24, mload(0x40))\n      tag_77\n      swap3\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      0x40\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      mstore\n      swap1\n      pop\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/errors/LibTransformERC20RichErrors.sol\":2455:2706  function OnlyCallableByDeployerError(address caller, address deployer) internal pure returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol\":1468:1618  function rrevert(bytes memory errorData) internal pure {... */\n    tag_47:\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol\":1591:1600  errorData */\n      dup1\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol\":1585:1601  mload(errorData) */\n      mload\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol\":1578:1582  0x20 */\n      0x20\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol\":1567:1576  errorData */\n      dup3\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol\":1563:1583  add(errorData, 0x20) */\n      add\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol\":1556:1602  revert(add(errorData, 0x20), mload(errorData)) */\n      revert\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/errors/LibTransformERC20RichErrors.sol\":2712:3083  function InvalidExecutionContextError(address actualContext, address expectedContext)... */\n    tag_51:\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/errors/LibTransformERC20RichErrors.sol\":2845:2857  bytes memory */\n      0x60\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/errors/LibTransformERC20RichErrors.sol\":2939:2997  keccak256(\"InvalidExecutionContextError(address,address)\") */\n      0xb5cf2cd09307d6c717473134badbb9761c2c97d7565566c2a71eba6cd6fc514d\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/errors/LibTransformERC20RichErrors.sol\":3016:3029  actualContext */\n      dup4\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/errors/LibTransformERC20RichErrors.sol\":3047:3062  expectedContext */\n      dup4\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/errors/LibTransformERC20RichErrors.sol\":2892:3076  abi.encodeWithSelector(... */\n      add(0x24, mload(0x40))\n      tag_77\n      swap3\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":2918:3054  function isTokenETH(IERC20TokenV06 token) internal pure returns (bool isETH) {... */\n    tag_54:\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":3012:3047  address(token) == ETH_TOKEN_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":982:1024  0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n      0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":3012:3047  address(token) == ETH_TOKEN_ADDRESS */\n      eq\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/LibERC20Transformer.sol\":2918:3054  function isTokenETH(IERC20TokenV06 token) internal pure returns (bool isETH) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":2453:2732  function compatTransfer(... */\n    tag_75:\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":2576:2597  bytes memory callData */\n      0x60\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":2623:2646  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":2648:2650  to */\n      dup4\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":2652:2658  amount */\n      dup4\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":2600:2659  abi.encodeWithSelector(token.transfer.selector, to, amount) */\n      add(0x24, mload(0x40))\n      tag_84\n      swap3\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      0x40\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      mstore\n      swap1\n      pop\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":2669:2725  _callWithOptionalBooleanResult(address(token), callData) */\n      tag_86\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":2708:2713  token */\n      dup5\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":2600:2659  abi.encodeWithSelector(token.transfer.selector, to, amount) */\n      dup3\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":2669:2699  _callWithOptionalBooleanResult */\n      tag_87\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":2669:2725  _callWithOptionalBooleanResult(address(token), callData) */\n      jump\t// in\n    tag_86:\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":2453:2732  function compatTransfer(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":5746:7050  function _callWithOptionalBooleanResult(address target, bytes memory callData) private {... */\n    tag_87:\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":5844:5859  bool didSucceed */\n      0x00\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":5861:5884  bytes memory resultData */\n      0x60\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":5888:5894  target */\n      dup4\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":5888:5899  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":5900:5908  callData */\n      dup4\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":5888:5909  target.call(callData) */\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_93\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_92)\n    tag_93:\n      0x60\n      swap2\n      pop\n    tag_92:\n      pop\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":5843:5909  (bool didSucceed, bytes memory resultData) = target.call(callData) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":5964:5974  didSucceed */\n      dup2\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":5959:6037  if (!didSucceed) {... */\n      tag_95\n      jumpi\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":5990:6026  LibRichErrorsV06.rrevert(resultData) */\n      tag_95\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":6015:6025  resultData */\n      dup2\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":5990:6014  LibRichErrorsV06.rrevert */\n      tag_47\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":5990:6026  LibRichErrorsV06.rrevert(resultData) */\n      jump\t// in\n    tag_95:\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":6205:6222  resultData.length */\n      dup1\n      mload\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":6201:6441  if (resultData.length == 0) {... */\n      tag_96\n      jumpi\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":6304:6323  extcodesize(target) */\n      dup4\n      extcodesize\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":6358:6366  size > 0 */\n      dup1\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":6350:6410  require(size > 0, \"invalid token address, contains no code\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap1\n      tag_99\n      jump\t// in\n    tag_97:\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":6424:6431  return; */\n      pop\n      pop\n      pop\n      jump(tag_88)\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":6201:6441  if (resultData.length == 0) {... */\n    tag_96:\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":6671:6673  32 */\n      0x20\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":6650:6660  resultData */\n      dup2\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":6650:6667  resultData.length */\n      mload\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":6650:6673  resultData.length >= 32 */\n      lt\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":6646:6899  if (resultData.length >= 32) {... */\n      tag_100\n      jumpi\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":6689:6703  uint256 result */\n      0x00\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":6706:6744  LibBytesV06.readUint256(resultData, 0) */\n      tag_101\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":6730:6740  resultData */\n      dup3\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":6742:6743  0 */\n      0x00\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":6706:6729  LibBytesV06.readUint256 */\n      tag_102\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":6706:6744  LibBytesV06.readUint256(resultData, 0) */\n      jump\t// in\n    tag_101:\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":6689:6744  uint256 result = LibBytesV06.readUint256(resultData, 0) */\n      swap1\n      pop\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":6762:6768  result */\n      dup1\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":6772:6773  1 */\n      0x01\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":6762:6773  result == 1 */\n      eq\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":6758:6889  if (result == 1) {... */\n      iszero\n      tag_103\n      jumpi\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":6793:6800  return; */\n      pop\n      pop\n      pop\n      jump(tag_88)\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":6758:6889  if (result == 1) {... */\n    tag_103:\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":6838:6874  LibRichErrorsV06.rrevert(resultData) */\n      tag_105\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":6863:6873  resultData */\n      dup3\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":6838:6862  LibRichErrorsV06.rrevert */\n      tag_47\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":6838:6874  LibRichErrorsV06.rrevert(resultData) */\n      jump\t// in\n    tag_105:\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":6646:6899  if (resultData.length >= 32) {... */\n      pop\n    tag_100:\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":7007:7043  LibRichErrorsV06.rrevert(resultData) */\n      tag_86\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":7032:7042  resultData */\n      dup2\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":7007:7031  LibRichErrorsV06.rrevert */\n      tag_47\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":7007:7043  LibRichErrorsV06.rrevert(resultData) */\n      jump\t// in\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":5746:7050  function _callWithOptionalBooleanResult(address target, bytes memory callData) private {... */\n    tag_88:\n      pop\n      pop\n      jump\t// out\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol\":16226:16396  function readUint256(bytes memory b, uint256 index) internal pure returns (uint256 result) {... */\n    tag_102:\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol\":16301:16315  uint256 result */\n      0x00\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol\":16344:16365  readBytes32(b, index) */\n      tag_60\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol\":16356:16357  b */\n      dup4\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol\":16359:16364  index */\n      dup4\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol\":14458:14472  bytes32 result */\n      0x00\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol\":14499:14504  index */\n      dup2\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol\":14507:14509  32 */\n      0x20\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol\":14499:14509  index + 32 */\n      add\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol\":14488:14489  b */\n      dup4\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol\":14488:14496  b.length */\n      mload\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol\":14488:14509  b.length < index + 32 */\n      lt\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol\":14484:14836  if (b.length < index + 32) {... */\n      iszero\n      tag_112\n      jumpi\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol\":14525:14825  LibRichErrorsV06.rrevert(... */\n      tag_112\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol\":14567:14811  LibBytesRichErrorsV06.InvalidByteOperationError(... */\n      tag_45\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol\":14636:14731  LibBytesRichErrorsV06.InvalidByteOperationErrorCodes.LengthGreaterThanOrEqualsThirtyTwoRequired */\n      0x05\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol\":14753:14754  b */\n      dup6\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol\":14753:14761  b.length */\n      mload\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol\":14783:14788  index */\n      dup6\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol\":14791:14793  32 */\n      0x20\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol\":14783:14793  index + 32 */\n      add\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol\":14567:14614  LibBytesRichErrorsV06.InvalidByteOperationError */\n      tag_114\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol\":14567:14811  LibBytesRichErrorsV06.InvalidByteOperationError(... */\n      jump\t// in\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol\":14525:14825  LibRichErrorsV06.rrevert(... */\n    tag_112:\n      pop\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol\":15014:15027  add(b, index) */\n      add\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol\":14916:14918  32 */\n      0x20\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol\":15014:15027  add(b, index) */\n      add\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol\":15008:15028  mload(add(b, index)) */\n      mload\n      swap1\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol\":14383:15067  function readBytes32(bytes memory b, uint256 index) internal pure returns (bytes32 result) {... */\n      jump\t// out\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibBytesRichErrorsV06.sol\":1324:1616  function InvalidByteOperationError(... */\n    tag_114:\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibBytesRichErrorsV06.sol\":1488:1500  bytes memory */\n      0x60\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibBytesRichErrorsV06.sol\":1264:1274  0x28006595 */\n      0x28006595\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibBytesRichErrorsV06.sol\":1542:1579  INVALID_BYTE_OPERATION_ERROR_SELECTOR */\n      0xe0\n      shl\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibBytesRichErrorsV06.sol\":1581:1590  errorCode */\n      dup5\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibBytesRichErrorsV06.sol\":1592:1598  offset */\n      dup5\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibBytesRichErrorsV06.sol\":1600:1608  required */\n      dup5\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibBytesRichErrorsV06.sol\":1519:1609  abi.encodeWithSelector(INVALID_BYTE_OPERATION_ERROR_SELECTOR, errorCode, offset, required) */\n      add(0x24, mload(0x40))\n      tag_116\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      0x40\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      mstore\n      swap1\n      pop\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibBytesRichErrorsV06.sol\":1324:1616  function InvalidByteOperationError(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_22:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"--CODEGEN--\":994:1701   */\n    tag_119:\n      0x00\n        /* \"--CODEGEN--\":1111:1114   */\n      dup3\n        /* \"--CODEGEN--\":1104:1108   */\n      0x1f\n        /* \"--CODEGEN--\":1096:1102   */\n      dup4\n        /* \"--CODEGEN--\":1092:1109   */\n      add\n        /* \"--CODEGEN--\":1088:1115   */\n      slt\n        /* \"--CODEGEN--\":1078:1080   */\n      tag_121\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":1119:1131   */\n      revert\n        /* \"--CODEGEN--\":1078:1080   */\n    tag_121:\n        /* \"--CODEGEN--\":1166:1172   */\n      dup2\n        /* \"--CODEGEN--\":1153:1173   */\n      calldataload\n        /* \"--CODEGEN--\":1188:1268   */\n      tag_122\n        /* \"--CODEGEN--\":1203:1267   */\n      tag_123\n        /* \"--CODEGEN--\":1260:1266   */\n      dup3\n        /* \"--CODEGEN--\":1203:1267   */\n      tag_124\n      jump\t// in\n    tag_123:\n        /* \"--CODEGEN--\":1188:1268   */\n      tag_125\n      jump\t// in\n    tag_122:\n        /* \"--CODEGEN--\":1296:1317   */\n      dup2\n      dup2\n      mstore\n        /* \"--CODEGEN--\":1179:1268   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":1340:1344   */\n      0x20\n        /* \"--CODEGEN--\":1353:1367   */\n      dup1\n      dup4\n      add\n      swap1\n        /* \"--CODEGEN--\":1328:1345   */\n      dup5\n      dup2\n      add\n        /* \"--CODEGEN--\":1442:1459   */\n      dup2\n      dup5\n      mul\n        /* \"--CODEGEN--\":1433:1460   */\n      dup7\n      add\n      dup3\n      add\n        /* \"--CODEGEN--\":1430:1466   */\n      dup8\n      lt\n        /* \"--CODEGEN--\":1427:1429   */\n      iszero\n      tag_126\n      jumpi\n        /* \"--CODEGEN--\":1479:1480   */\n      0x00\n      dup1\n        /* \"--CODEGEN--\":1469:1481   */\n      revert\n        /* \"--CODEGEN--\":1427:1429   */\n    tag_126:\n        /* \"--CODEGEN--\":1504:1505   */\n      0x00\n        /* \"--CODEGEN--\":1489:1695   */\n    tag_127:\n        /* \"--CODEGEN--\":1514:1520   */\n      dup5\n        /* \"--CODEGEN--\":1511:1512   */\n      dup2\n        /* \"--CODEGEN--\":1508:1521   */\n      lt\n        /* \"--CODEGEN--\":1489:1695   */\n      iszero\n      tag_129\n      jumpi\n        /* \"--CODEGEN--\":2958:2978   */\n      dup2\n      calldataload\n        /* \"--CODEGEN--\":1582:1632   */\n      dup5\n      mstore\n        /* \"--CODEGEN--\":1646:1660   */\n      swap3\n      dup3\n      add\n      swap3\n        /* \"--CODEGEN--\":1674:1688   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"--CODEGEN--\":1536:1537   */\n      0x01\n        /* \"--CODEGEN--\":1529:1538   */\n      add\n        /* \"--CODEGEN--\":1489:1695   */\n      jump(tag_127)\n    tag_129:\n        /* \"--CODEGEN--\":1493:1507   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"--CODEGEN--\":1071:1701   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":1709:1885   */\n    tag_130:\n        /* \"--CODEGEN--\":1799:1819   */\n      dup1\n      calldataload\n        /* \"--CODEGEN--\":1824:1880   */\n      tag_52\n        /* \"--CODEGEN--\":1799:1819   */\n      dup2\n        /* \"--CODEGEN--\":1824:1880   */\n      tag_133\n      jump\t// in\n        /* \"--CODEGEN--\":3169:3426   */\n    tag_14:\n      0x00\n        /* \"--CODEGEN--\":3281:3283   */\n      0x20\n        /* \"--CODEGEN--\":3269:3278   */\n      dup3\n        /* \"--CODEGEN--\":3260:3267   */\n      dup5\n        /* \"--CODEGEN--\":3256:3279   */\n      sub\n        /* \"--CODEGEN--\":3252:3284   */\n      slt\n        /* \"--CODEGEN--\":3249:3251   */\n      iszero\n      tag_135\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":3287:3299   */\n      revert\n        /* \"--CODEGEN--\":3249:3251   */\n    tag_135:\n        /* \"--CODEGEN--\":93:99   */\n      dup2\n        /* \"--CODEGEN--\":80:100   */\n      calldataload\n        /* \"--CODEGEN--\":105:146   */\n      tag_136\n        /* \"--CODEGEN--\":140:145   */\n      dup2\n        /* \"--CODEGEN--\":105:146   */\n      tag_133\n      jump\t// in\n    tag_136:\n        /* \"--CODEGEN--\":3339:3410   */\n      swap4\n        /* \"--CODEGEN--\":3243:3426   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":3433:3830   */\n    tag_8:\n      0x00\n        /* \"--CODEGEN--\":3572:3574   */\n      0x20\n        /* \"--CODEGEN--\":3560:3569   */\n      dup3\n        /* \"--CODEGEN--\":3551:3558   */\n      dup5\n        /* \"--CODEGEN--\":3547:3570   */\n      sub\n        /* \"--CODEGEN--\":3543:3575   */\n      slt\n        /* \"--CODEGEN--\":3540:3542   */\n      iszero\n      tag_138\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":3578:3590   */\n      revert\n        /* \"--CODEGEN--\":3540:3542   */\n    tag_138:\n        /* \"--CODEGEN--\":3636:3653   */\n      dup2\n        /* \"--CODEGEN--\":3623:3654   */\n      calldataload\n        /* \"--CODEGEN--\":3674:3692   */\n      0xffffffffffffffff\n        /* \"--CODEGEN--\":3666:3672   */\n      dup2\n        /* \"--CODEGEN--\":3663:3693   */\n      gt\n        /* \"--CODEGEN--\":3660:3662   */\n      iszero\n      tag_139\n      jumpi\n      dup2\n      dup3\n        /* \"--CODEGEN--\":3696:3708   */\n      revert\n        /* \"--CODEGEN--\":3660:3662   */\n    tag_139:\n        /* \"--CODEGEN--\":3782:3804   */\n      dup3\n      add\n        /* \"--CODEGEN--\":2061:2063   */\n      0x60\n        /* \"--CODEGEN--\":2043:2059   */\n      dup2\n      dup6\n      sub\n        /* \"--CODEGEN--\":2039:2064   */\n      slt\n        /* \"--CODEGEN--\":2036:2038   */\n      iszero\n      tag_136\n      jumpi\n      dup2\n      dup3\n        /* \"--CODEGEN--\":2067:2079   */\n      revert\n        /* \"--CODEGEN--\":3837:4224   */\n    tag_26:\n      0x00\n        /* \"--CODEGEN--\":3971:3973   */\n      0x20\n      dup1\n        /* \"--CODEGEN--\":3959:3968   */\n      dup4\n        /* \"--CODEGEN--\":3950:3957   */\n      dup6\n        /* \"--CODEGEN--\":3946:3969   */\n      sub\n        /* \"--CODEGEN--\":3942:3974   */\n      slt\n        /* \"--CODEGEN--\":3939:3941   */\n      iszero\n      tag_142\n      jumpi\n      dup2\n      dup3\n        /* \"--CODEGEN--\":3977:3989   */\n      revert\n        /* \"--CODEGEN--\":3939:3941   */\n    tag_142:\n        /* \"--CODEGEN--\":4035:4052   */\n      dup3\n        /* \"--CODEGEN--\":4022:4053   */\n      calldataload\n        /* \"--CODEGEN--\":4073:4091   */\n      0xffffffffffffffff\n      dup1\n        /* \"--CODEGEN--\":4065:4071   */\n      dup3\n        /* \"--CODEGEN--\":4062:4092   */\n      gt\n        /* \"--CODEGEN--\":4059:4061   */\n      iszero\n      tag_143\n      jumpi\n      dup4\n      dup5\n        /* \"--CODEGEN--\":4095:4107   */\n      revert\n        /* \"--CODEGEN--\":4059:4061   */\n    tag_143:\n        /* \"--CODEGEN--\":4176:4198   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"--CODEGEN--\":2281:2285   */\n      0x40\n        /* \"--CODEGEN--\":2260:2279   */\n      dup3\n      dup8\n      sub\n        /* \"--CODEGEN--\":2256:2286   */\n      slt\n        /* \"--CODEGEN--\":2253:2255   */\n      iszero\n      tag_144\n      jumpi\n      dup4\n      dup5\n        /* \"--CODEGEN--\":2289:2301   */\n      revert\n        /* \"--CODEGEN--\":2253:2255   */\n    tag_144:\n        /* \"--CODEGEN--\":2317:2337   */\n      tag_145\n        /* \"--CODEGEN--\":2281:2285   */\n      0x40\n        /* \"--CODEGEN--\":2317:2337   */\n      tag_125\n      jump\t// in\n    tag_145:\n        /* \"--CODEGEN--\":2402:2419   */\n      dup3\n        /* \"--CODEGEN--\":2389:2420   */\n      calldataload\n        /* \"--CODEGEN--\":4073:4091   */\n      dup3\n        /* \"--CODEGEN--\":2432:2438   */\n      dup2\n        /* \"--CODEGEN--\":2429:2459   */\n      gt\n        /* \"--CODEGEN--\":2426:2428   */\n      iszero\n      tag_146\n      jumpi\n      dup6\n      dup7\n        /* \"--CODEGEN--\":2462:2474   */\n      revert\n        /* \"--CODEGEN--\":2426:2428   */\n    tag_146:\n        /* \"--CODEGEN--\":2576:2598   */\n      dup4\n      add\n        /* \"--CODEGEN--\":325:329   */\n      0x1f\n        /* \"--CODEGEN--\":313:330   */\n      dup2\n      add\n        /* \"--CODEGEN--\":309:336   */\n      dup9\n      sgt\n        /* \"--CODEGEN--\":299:301   */\n      tag_147\n      jumpi\n      dup6\n      dup7\n        /* \"--CODEGEN--\":340:352   */\n      revert\n        /* \"--CODEGEN--\":299:301   */\n    tag_147:\n        /* \"--CODEGEN--\":387:393   */\n      dup1\n        /* \"--CODEGEN--\":374:394   */\n      calldataload\n        /* \"--CODEGEN--\":409:512   */\n      tag_148\n        /* \"--CODEGEN--\":424:511   */\n      tag_123\n        /* \"--CODEGEN--\":504:510   */\n      dup3\n        /* \"--CODEGEN--\":424:511   */\n      tag_124\n      jump\t// in\n        /* \"--CODEGEN--\":409:512   */\n    tag_148:\n        /* \"--CODEGEN--\":540:561   */\n      dup2\n      dup2\n      mstore\n        /* \"--CODEGEN--\":597:611   */\n      dup7\n      dup2\n      add\n      swap1\n        /* \"--CODEGEN--\":572:589   */\n      dup4\n      dup9\n      add\n        /* \"--CODEGEN--\":686:703   */\n      dup9\n      dup5\n      mul\n        /* \"--CODEGEN--\":677:704   */\n      dup6\n      add\n      dup10\n      add\n        /* \"--CODEGEN--\":674:710   */\n      dup13\n      lt\n        /* \"--CODEGEN--\":671:673   */\n      iszero\n      tag_150\n      jumpi\n      dup10\n      dup11\n        /* \"--CODEGEN--\":713:725   */\n      revert\n        /* \"--CODEGEN--\":671:673   */\n    tag_150:\n      dup10\n        /* \"--CODEGEN--\":739:749   */\n      swap5\n      pop\n        /* \"--CODEGEN--\":733:962   */\n    tag_151:\n        /* \"--CODEGEN--\":758:764   */\n      dup4\n        /* \"--CODEGEN--\":755:756   */\n      dup6\n        /* \"--CODEGEN--\":752:765   */\n      lt\n        /* \"--CODEGEN--\":733:962   */\n      iszero\n      tag_153\n      jumpi\n        /* \"--CODEGEN--\":838:898   */\n      tag_154\n        /* \"--CODEGEN--\":894:897   */\n      dup13\n        /* \"--CODEGEN--\":882:892   */\n      dup3\n        /* \"--CODEGEN--\":838:898   */\n      tag_130\n      jump\t// in\n    tag_154:\n        /* \"--CODEGEN--\":826:899   */\n      dup4\n      mstore\n        /* \"--CODEGEN--\":780:781   */\n      0x01\n        /* \"--CODEGEN--\":773:782   */\n      swap5\n      swap1\n      swap5\n      add\n      swap4\n        /* \"--CODEGEN--\":913:927   */\n      swap2\n      dup9\n      add\n      swap2\n        /* \"--CODEGEN--\":941:955   */\n      dup9\n      add\n        /* \"--CODEGEN--\":733:962   */\n      jump(tag_151)\n    tag_153:\n      pop\n        /* \"--CODEGEN--\":2482:2605   */\n      dup5\n      mstore\n      pop\n      pop\n      pop\n        /* \"--CODEGEN--\":2682:2700   */\n      dup3\n      dup5\n      add\n        /* \"--CODEGEN--\":2669:2701   */\n      calldataload\n        /* \"--CODEGEN--\":2710:2740   */\n      dup3\n      dup2\n      gt\n        /* \"--CODEGEN--\":2707:2709   */\n      iszero\n      tag_155\n      jumpi\n      dup6\n      dup7\n        /* \"--CODEGEN--\":2743:2755   */\n      revert\n        /* \"--CODEGEN--\":2707:2709   */\n    tag_155:\n        /* \"--CODEGEN--\":2788:2862   */\n      tag_156\n        /* \"--CODEGEN--\":2858:2861   */\n      dup9\n        /* \"--CODEGEN--\":2849:2855   */\n      dup3\n        /* \"--CODEGEN--\":2838:2847   */\n      dup7\n        /* \"--CODEGEN--\":2834:2856   */\n      add\n        /* \"--CODEGEN--\":2788:2862   */\n      tag_119\n      jump\t// in\n    tag_156:\n        /* \"--CODEGEN--\":2770:2786   */\n      swap5\n      dup3\n      add\n        /* \"--CODEGEN--\":2763:2863   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"--CODEGEN--\":2774:2779   */\n      swap7\n        /* \"--CODEGEN--\":3933:4224   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":4231:4494   */\n    tag_61:\n      0x00\n        /* \"--CODEGEN--\":4346:4348   */\n      0x20\n        /* \"--CODEGEN--\":4334:4343   */\n      dup3\n        /* \"--CODEGEN--\":4325:4332   */\n      dup5\n        /* \"--CODEGEN--\":4321:4344   */\n      sub\n        /* \"--CODEGEN--\":4317:4349   */\n      slt\n        /* \"--CODEGEN--\":4314:4316   */\n      iszero\n      tag_158\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":4352:4364   */\n      revert\n        /* \"--CODEGEN--\":4314:4316   */\n    tag_158:\n      pop\n        /* \"--CODEGEN--\":3106:3119   */\n      mload\n      swap2\n        /* \"--CODEGEN--\":4308:4494   */\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":6496:6767   */\n    tag_90:\n      0x00\n        /* \"--CODEGEN--\":4898:4903   */\n      dup3\n        /* \"--CODEGEN--\":11165:11177   */\n      mload\n      dup2\n        /* \"--CODEGEN--\":12653:12754   */\n    tag_160:\n        /* \"--CODEGEN--\":12667:12673   */\n      dup2\n        /* \"--CODEGEN--\":12664:12665   */\n      dup2\n        /* \"--CODEGEN--\":12661:12674   */\n      lt\n        /* \"--CODEGEN--\":12653:12754   */\n      iszero\n      tag_162\n      jumpi\n        /* \"--CODEGEN--\":5042:5046   */\n      0x20\n        /* \"--CODEGEN--\":12734:12745   */\n      dup2\n      dup7\n      add\n      dup2\n      add\n        /* \"--CODEGEN--\":12728:12746   */\n      mload\n        /* \"--CODEGEN--\":12715:12726   */\n      dup6\n      dup4\n      add\n        /* \"--CODEGEN--\":12708:12747   */\n      mstore\n        /* \"--CODEGEN--\":12682:12692   */\n      add\n        /* \"--CODEGEN--\":12653:12754   */\n      jump(tag_160)\n    tag_162:\n        /* \"--CODEGEN--\":12769:12775   */\n      dup2\n        /* \"--CODEGEN--\":12766:12767   */\n      dup2\n        /* \"--CODEGEN--\":12763:12776   */\n      gt\n        /* \"--CODEGEN--\":12760:12762   */\n      iszero\n      tag_163\n      jumpi\n      dup3\n        /* \"--CODEGEN--\":12825:12831   */\n      dup3\n        /* \"--CODEGEN--\":12820:12823   */\n      dup6\n        /* \"--CODEGEN--\":12816:12832   */\n      add\n        /* \"--CODEGEN--\":12809:12836   */\n      mstore\n        /* \"--CODEGEN--\":12760:12762   */\n    tag_163:\n      pop\n        /* \"--CODEGEN--\":5073:5089   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"--CODEGEN--\":6630:6767   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":6774:7153   */\n    tag_66:\n        /* \"--CODEGEN--\":7138:7148   */\n      swap1\n        /* \"--CODEGEN--\":6962:7153   */\n      jump\t// out\n        /* \"--CODEGEN--\":7160:7382   */\n    tag_19:\n        /* \"--CODEGEN--\":12263:12305   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":12252:12306   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"--CODEGEN--\":4572:4609   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":7287:7289   */\n      0x20\n        /* \"--CODEGEN--\":7272:7290   */\n      add\n      swap1\n        /* \"--CODEGEN--\":7258:7382   */\n      jump\t// out\n        /* \"--CODEGEN--\":7389:7722   */\n    tag_78:\n        /* \"--CODEGEN--\":12263:12305   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":12252:12306   */\n      swap3\n      dup4\n      and\n        /* \"--CODEGEN--\":4572:4609   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":12252:12306   */\n      swap2\n      and\n        /* \"--CODEGEN--\":7708:7710   */\n      0x20\n        /* \"--CODEGEN--\":7693:7711   */\n      dup3\n      add\n        /* \"--CODEGEN--\":4572:4609   */\n      mstore\n        /* \"--CODEGEN--\":7544:7546   */\n      0x40\n        /* \"--CODEGEN--\":7529:7547   */\n      add\n      swap1\n        /* \"--CODEGEN--\":7515:7722   */\n      jump\t// out\n        /* \"--CODEGEN--\":7729:8062   */\n    tag_85:\n        /* \"--CODEGEN--\":12263:12305   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":12252:12306   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"--CODEGEN--\":4572:4609   */\n      dup3\n      mstore\n        /* \"--CODEGEN--\":8048:8050   */\n      0x20\n        /* \"--CODEGEN--\":8033:8051   */\n      dup3\n      add\n        /* \"--CODEGEN--\":6447:6484   */\n      mstore\n        /* \"--CODEGEN--\":7884:7886   */\n      0x40\n        /* \"--CODEGEN--\":7869:7887   */\n      add\n      swap1\n        /* \"--CODEGEN--\":7855:8062   */\n      jump\t// out\n        /* \"--CODEGEN--\":8069:8287   */\n    tag_11:\n        /* \"--CODEGEN--\":11807:11873   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":11796:11874   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"--CODEGEN--\":4690:4726   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":8194:8196   */\n      0x20\n        /* \"--CODEGEN--\":8179:8197   */\n      add\n      swap1\n        /* \"--CODEGEN--\":8165:8287   */\n      jump\t// out\n        /* \"--CODEGEN--\":8294:8804   */\n    tag_117:\n        /* \"--CODEGEN--\":8510:8512   */\n      0x60\n        /* \"--CODEGEN--\":8495:8513   */\n      dup2\n      add\n        /* \"--CODEGEN--\":12961:12962   */\n      0x08\n        /* \"--CODEGEN--\":12951:12963   */\n      dup6\n      lt\n        /* \"--CODEGEN--\":12941:12943   */\n      tag_170\n      jumpi\n        /* \"--CODEGEN--\":12967:12976   */\n      invalid\n        /* \"--CODEGEN--\":12941:12943   */\n    tag_170:\n        /* \"--CODEGEN--\":5205:5288   */\n      swap4\n      dup2\n      mstore\n        /* \"--CODEGEN--\":8707:8709   */\n      0x20\n        /* \"--CODEGEN--\":8692:8710   */\n      dup2\n      add\n        /* \"--CODEGEN--\":6447:6484   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"--CODEGEN--\":8790:8792   */\n      0x40\n        /* \"--CODEGEN--\":8775:8793   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":6447:6484   */\n      mstore\n        /* \"--CODEGEN--\":8481:8804   */\n      swap1\n      jump\t// out\n        /* \"--CODEGEN--\":8811:9227   */\n    tag_72:\n        /* \"--CODEGEN--\":9011:9013   */\n      0x20\n        /* \"--CODEGEN--\":9025:9072   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":5525:5527   */\n      0x28\n        /* \"--CODEGEN--\":8996:9014   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":11463:11482   */\n      mstore\n        /* \"--CODEGEN--\":5561:5595   */\n      0x4c696245524332305472616e73666f726d65722f4641494c45445f544f5f5345\n        /* \"--CODEGEN--\":11503:11517   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":5541:5596   */\n      mstore\n        /* \"--CODEGEN--\":5630:5640   */\n      0x4e445f4554484552000000000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":5616:5628   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":5609:5641   */\n      mstore\n        /* \"--CODEGEN--\":5660:5672   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":8982:9227   */\n      jump\t// out\n        /* \"--CODEGEN--\":9234:9650   */\n    tag_99:\n        /* \"--CODEGEN--\":9434:9436   */\n      0x20\n        /* \"--CODEGEN--\":9448:9495   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":5911:5913   */\n      0x27\n        /* \"--CODEGEN--\":9419:9437   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":11463:11482   */\n      mstore\n        /* \"--CODEGEN--\":5947:5981   */\n      0x696e76616c696420746f6b656e20616464726573732c20636f6e7461696e7320\n        /* \"--CODEGEN--\":11503:11517   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":5927:5982   */\n      mstore\n        /* \"--CODEGEN--\":6016:6025   */\n      0x6e6f20636f646500000000000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":6002:6014   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":5995:6026   */\n      mstore\n        /* \"--CODEGEN--\":6045:6057   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":9405:9650   */\n      jump\t// out\n        /* \"--CODEGEN--\":9657:10163   */\n    tag_24:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":9792:9803   */\n      dup4\n        /* \"--CODEGEN--\":9779:9804   */\n      calldataload\n        /* \"--CODEGEN--\":9843:9891   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1\n        /* \"--CODEGEN--\":9867:9875   */\n      dup5\n        /* \"--CODEGEN--\":9851:9865   */\n      calldatasize\n        /* \"--CODEGEN--\":9847:9876   */\n      sub\n        /* \"--CODEGEN--\":9843:9891   */\n      add\n        /* \"--CODEGEN--\":9823:9841   */\n      dup2\n        /* \"--CODEGEN--\":9819:9892   */\n      slt\n        /* \"--CODEGEN--\":9809:9811   */\n      tag_174\n      jumpi\n      dup3\n      dup4\n        /* \"--CODEGEN--\":9896:9908   */\n      revert\n        /* \"--CODEGEN--\":9809:9811   */\n    tag_174:\n        /* \"--CODEGEN--\":9923:9956   */\n      dup4\n      add\n        /* \"--CODEGEN--\":9977:9995   */\n      dup1\n      calldataload\n      swap2\n      pop\n        /* \"--CODEGEN--\":10015:10033   */\n      0xffffffffffffffff\n        /* \"--CODEGEN--\":10004:10034   */\n      dup3\n      gt\n        /* \"--CODEGEN--\":10001:10003   */\n      iszero\n      tag_175\n      jumpi\n      dup3\n      dup4\n        /* \"--CODEGEN--\":10037:10049   */\n      revert\n        /* \"--CODEGEN--\":10001:10003   */\n    tag_175:\n        /* \"--CODEGEN--\":9882:9886   */\n      0x20\n        /* \"--CODEGEN--\":10065:10078   */\n      add\n      swap2\n      pop\n        /* \"--CODEGEN--\":9851:9865   */\n      calldatasize\n        /* \"--CODEGEN--\":10097:10135   */\n      dup2\n      swap1\n      sub\n        /* \"--CODEGEN--\":10087:10136   */\n      dup3\n      sgt\n        /* \"--CODEGEN--\":10084:10086   */\n      iszero\n      tag_176\n      jumpi\n        /* \"--CODEGEN--\":10149:10150   */\n      0x00\n      dup1\n        /* \"--CODEGEN--\":10139:10151   */\n      revert\n        /* \"--CODEGEN--\":10084:10086   */\n    tag_176:\n        /* \"--CODEGEN--\":9747:10163   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":10170:10426   */\n    tag_125:\n        /* \"--CODEGEN--\":10232:10234   */\n      0x40\n        /* \"--CODEGEN--\":10226:10235   */\n      mload\n        /* \"--CODEGEN--\":10258:10275   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":10333:10351   */\n      0xffffffffffffffff\n        /* \"--CODEGEN--\":10318:10352   */\n      dup2\n      gt\n        /* \"--CODEGEN--\":10354:10376   */\n      dup3\n      dup3\n      lt\n        /* \"--CODEGEN--\":10315:10377   */\n      or\n        /* \"--CODEGEN--\":10312:10314   */\n      iszero\n      tag_178\n      jumpi\n        /* \"--CODEGEN--\":10390:10391   */\n      0x00\n      dup1\n        /* \"--CODEGEN--\":10380:10392   */\n      revert\n        /* \"--CODEGEN--\":10312:10314   */\n    tag_178:\n        /* \"--CODEGEN--\":10232:10234   */\n      0x40\n        /* \"--CODEGEN--\":10399:10421   */\n      mstore\n        /* \"--CODEGEN--\":10210:10426   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":10433:10760   */\n    tag_124:\n      0x00\n        /* \"--CODEGEN--\":10615:10633   */\n      0xffffffffffffffff\n        /* \"--CODEGEN--\":10607:10613   */\n      dup3\n        /* \"--CODEGEN--\":10604:10634   */\n      gt\n        /* \"--CODEGEN--\":10601:10603   */\n      iszero\n      tag_180\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":10637:10649   */\n      revert\n        /* \"--CODEGEN--\":10601:10603   */\n    tag_180:\n      pop\n        /* \"--CODEGEN--\":10682:10686   */\n      0x20\n        /* \"--CODEGEN--\":10670:10687   */\n      swap1\n      dup2\n      mul\n        /* \"--CODEGEN--\":10735:10750   */\n      add\n      swap1\n        /* \"--CODEGEN--\":10538:10760   */\n      jump\t// out\n        /* \"--CODEGEN--\":12990:13123   */\n    tag_133:\n        /* \"--CODEGEN--\":12263:12305   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":13093:13098   */\n      dup2\n        /* \"--CODEGEN--\":12252:12306   */\n      and\n        /* \"--CODEGEN--\":13060:13065   */\n      dup2\n        /* \"--CODEGEN--\":13057:13100   */\n      eq\n        /* \"--CODEGEN--\":13047:13049   */\n      tag_182\n      jumpi\n        /* \"--CODEGEN--\":13114:13115   */\n      0x00\n      dup1\n        /* \"--CODEGEN--\":13104:13116   */\n      revert\n        /* \"--CODEGEN--\":13047:13049   */\n    tag_182:\n        /* \"--CODEGEN--\":13041:13123   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122018067da33af76a4f7d450f3e055224ccfca173861a0349070f13e6c9d51cfff464736f6c634300060c0033\n}\n","legacyAssembly":{".code":[{"begin":1133,"end":2876,"name":"PUSH","source":3,"value":"C0"},{"begin":1133,"end":2876,"name":"PUSH","source":3,"value":"40"},{"begin":1133,"end":2876,"name":"MSTORE","source":3},{"begin":1816,"end":1853,"name":"CALLVALUE","source":3},{"begin":1816,"end":1853,"name":"DUP1","source":3},{"begin":1816,"end":1853,"name":"ISZERO","source":3},{"begin":1816,"end":1853,"name":"PUSH [tag]","source":3,"value":"1"},{"begin":1816,"end":1853,"name":"JUMPI","source":3},{"begin":1816,"end":1853,"name":"PUSH","source":3,"value":"0"},{"begin":1816,"end":1853,"name":"DUP1","source":3},{"begin":1816,"end":1853,"name":"REVERT","source":3},{"begin":1816,"end":1853,"name":"tag","source":3,"value":"1"},{"begin":1816,"end":1853,"name":"JUMPDEST","source":3},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":1243,"end":1253,"name":"CALLER","source":4},{"begin":1232,"end":1253,"name":"PUSH","source":4,"value":"60"},{"begin":1232,"end":1253,"name":"DUP2","source":4},{"begin":1232,"end":1253,"name":"DUP2","source":4},{"begin":1232,"end":1253,"name":"SHL","source":4},{"begin":1232,"end":1253,"name":"PUSH","source":4,"value":"80"},{"begin":1232,"end":1253,"name":"MSTORE","source":4},{"begin":1289,"end":1293,"name":"ADDRESS","source":4},{"begin":1263,"end":1294,"name":"SWAP1","source":4},{"begin":1263,"end":1294,"name":"DUP2","source":4},{"begin":1263,"end":1294,"name":"SWAP1","source":4},{"begin":1263,"end":1294,"name":"SHL","source":4},{"begin":1263,"end":1294,"name":"PUSH","source":4,"value":"A0"},{"begin":1263,"end":1294,"name":"MSTORE","source":4},{"begin":1133,"end":2876,"name":"PUSH #[$]","source":3,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":1133,"end":2876,"name":"PUSH [$]","source":3,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":1133,"end":2876,"name":"PUSH","source":3,"value":"0"},{"begin":1133,"end":2876,"name":"CODECOPY","source":3},{"begin":1133,"end":2876,"name":"ASSIGNIMMUTABLE","source":3,"value":"925"},{"begin":1133,"end":2876,"name":"ASSIGNIMMUTABLE","source":3,"value":"922"},{"begin":1133,"end":2876,"name":"PUSH #[$]","source":3,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":1133,"end":2876,"name":"PUSH","source":3,"value":"0"},{"begin":1133,"end":2876,"name":"RETURN","source":3}],".data":{"0":{".auxdata":"a264697066735822122018067da33af76a4f7d450f3e055224ccfca173861a0349070f13e6c9d51cfff464736f6c634300060c0033",".code":[{"begin":1133,"end":2876,"name":"PUSH","source":3,"value":"80"},{"begin":1133,"end":2876,"name":"PUSH","source":3,"value":"40"},{"begin":1133,"end":2876,"name":"MSTORE","source":3},{"begin":1133,"end":2876,"name":"CALLVALUE","source":3},{"begin":1133,"end":2876,"name":"DUP1","source":3},{"begin":1133,"end":2876,"name":"ISZERO","source":3},{"begin":1133,"end":2876,"name":"PUSH [tag]","source":3,"value":"1"},{"begin":1133,"end":2876,"name":"JUMPI","source":3},{"begin":1133,"end":2876,"name":"PUSH","source":3,"value":"0"},{"begin":1133,"end":2876,"name":"DUP1","source":3},{"begin":1133,"end":2876,"name":"REVERT","source":3},{"begin":1133,"end":2876,"name":"tag","source":3,"value":"1"},{"begin":1133,"end":2876,"name":"JUMPDEST","source":3},{"begin":1133,"end":2876,"name":"POP","source":3},{"begin":1133,"end":2876,"name":"PUSH","source":3,"value":"4"},{"begin":1133,"end":2876,"name":"CALLDATASIZE","source":3},{"begin":1133,"end":2876,"name":"LT","source":3},{"begin":1133,"end":2876,"name":"PUSH [tag]","source":3,"value":"2"},{"begin":1133,"end":2876,"name":"JUMPI","source":3},{"begin":1133,"end":2876,"name":"PUSH","source":3,"value":"0"},{"begin":1133,"end":2876,"name":"CALLDATALOAD","source":3},{"begin":1133,"end":2876,"name":"PUSH","source":3,"value":"E0"},{"begin":1133,"end":2876,"name":"SHR","source":3},{"begin":1133,"end":2876,"name":"DUP1","source":3},{"begin":1133,"end":2876,"name":"PUSH","source":3,"value":"832B24BB"},{"begin":1133,"end":2876,"name":"EQ","source":3},{"begin":1133,"end":2876,"name":"PUSH [tag]","source":3,"value":"3"},{"begin":1133,"end":2876,"name":"JUMPI","source":3},{"begin":1133,"end":2876,"name":"DUP1","source":3},{"begin":1133,"end":2876,"name":"PUSH","source":3,"value":"C9353CB5"},{"begin":1133,"end":2876,"name":"EQ","source":3},{"begin":1133,"end":2876,"name":"PUSH [tag]","source":3,"value":"4"},{"begin":1133,"end":2876,"name":"JUMPI","source":3},{"begin":1133,"end":2876,"name":"DUP1","source":3},{"begin":1133,"end":2876,"name":"PUSH","source":3,"value":"D5F39488"},{"begin":1133,"end":2876,"name":"EQ","source":3},{"begin":1133,"end":2876,"name":"PUSH [tag]","source":3,"value":"5"},{"begin":1133,"end":2876,"name":"JUMPI","source":3},{"begin":1133,"end":2876,"name":"tag","source":3,"value":"2"},{"begin":1133,"end":2876,"name":"JUMPDEST","source":3},{"begin":1133,"end":2876,"name":"PUSH","source":3,"value":"0"},{"begin":1133,"end":2876,"name":"DUP1","source":3},{"begin":1133,"end":2876,"name":"REVERT","source":3},{"begin":2033,"end":2874,"name":"tag","source":3,"value":"3"},{"begin":2033,"end":2874,"name":"JUMPDEST","source":3},{"begin":2033,"end":2874,"name":"PUSH [tag]","source":3,"value":"6"},{"begin":2033,"end":2874,"name":"PUSH [tag]","source":3,"value":"7"},{"begin":2033,"end":2874,"name":"CALLDATASIZE","source":3},{"begin":2033,"end":2874,"name":"PUSH","source":3,"value":"4"},{"begin":2033,"end":2874,"name":"PUSH [tag]","source":3,"value":"8"},{"begin":2033,"end":2874,"name":"JUMP","source":3,"value":"[in]"},{"begin":2033,"end":2874,"name":"tag","source":3,"value":"7"},{"begin":2033,"end":2874,"name":"JUMPDEST","source":3},{"begin":2033,"end":2874,"name":"PUSH [tag]","source":3,"value":"9"},{"begin":2033,"end":2874,"name":"JUMP","source":3,"value":"[in]"},{"begin":2033,"end":2874,"name":"tag","source":3,"value":"6"},{"begin":2033,"end":2874,"name":"JUMPDEST","source":3},{"begin":2033,"end":2874,"name":"PUSH","source":3,"value":"40"},{"begin":2033,"end":2874,"name":"MLOAD","source":3},{"begin":2033,"end":2874,"name":"PUSH [tag]","source":3,"value":"10"},{"begin":2033,"end":2874,"name":"SWAP2","source":3},{"begin":2033,"end":2874,"name":"SWAP1","source":3},{"begin":2033,"end":2874,"name":"PUSH [tag]","source":3,"value":"11"},{"begin":2033,"end":2874,"name":"JUMP","source":3,"value":"[in]"},{"begin":2033,"end":2874,"name":"tag","source":3,"value":"10"},{"begin":2033,"end":2874,"name":"JUMPDEST","source":3},{"begin":2033,"end":2874,"name":"PUSH","source":3,"value":"40"},{"begin":2033,"end":2874,"name":"MLOAD","source":3},{"begin":2033,"end":2874,"name":"DUP1","source":3},{"begin":2033,"end":2874,"name":"SWAP2","source":3},{"begin":2033,"end":2874,"name":"SUB","source":3},{"begin":2033,"end":2874,"name":"SWAP1","source":3},{"begin":2033,"end":2874,"name":"RETURN","source":3},{"begin":1538,"end":2050,"name":"tag","source":4,"value":"4"},{"begin":1538,"end":2050,"name":"JUMPDEST","source":4},{"begin":1538,"end":2050,"name":"PUSH [tag]","source":4,"value":"12"},{"begin":1538,"end":2050,"name":"PUSH [tag]","source":4,"value":"13"},{"begin":1538,"end":2050,"name":"CALLDATASIZE","source":4},{"begin":1538,"end":2050,"name":"PUSH","source":4,"value":"4"},{"begin":1538,"end":2050,"name":"PUSH [tag]","source":4,"value":"14"},{"begin":1538,"end":2050,"name":"JUMP","source":4,"value":"[in]"},{"begin":1538,"end":2050,"name":"tag","source":4,"value":"13"},{"begin":1538,"end":2050,"name":"JUMPDEST","source":4},{"begin":1538,"end":2050,"name":"PUSH [tag]","source":4,"value":"15"},{"begin":1538,"end":2050,"name":"JUMP","source":4,"value":"[in]"},{"begin":1538,"end":2050,"name":"tag","source":4,"value":"12"},{"begin":1538,"end":2050,"name":"JUMPDEST","source":4},{"begin":1538,"end":2050,"name":"STOP","source":4},{"begin":1026,"end":1059,"name":"tag","source":4,"value":"5"},{"begin":1026,"end":1059,"name":"JUMPDEST","source":4},{"begin":1026,"end":1059,"name":"PUSH [tag]","source":4,"value":"16"},{"begin":1026,"end":1059,"name":"PUSH [tag]","source":4,"value":"17"},{"begin":1026,"end":1059,"name":"JUMP","source":4,"value":"[in]"},{"begin":1026,"end":1059,"name":"tag","source":4,"value":"16"},{"begin":1026,"end":1059,"name":"JUMPDEST","source":4},{"begin":1026,"end":1059,"name":"PUSH","source":4,"value":"40"},{"begin":1026,"end":1059,"name":"MLOAD","source":4},{"begin":1026,"end":1059,"name":"PUSH [tag]","source":4,"value":"10"},{"begin":1026,"end":1059,"name":"SWAP2","source":4},{"begin":1026,"end":1059,"name":"SWAP1","source":4},{"begin":1026,"end":1059,"name":"PUSH [tag]","source":4,"value":"19"},{"begin":1026,"end":1059,"name":"JUMP","source":4,"value":"[in]"},{"begin":2033,"end":2874,"name":"tag","source":3,"value":"9"},{"begin":2033,"end":2874,"name":"JUMPDEST","source":3},{"begin":2114,"end":2128,"name":"PUSH","source":3,"value":"0"},{"begin":2140,"end":2165,"name":"PUSH [tag]","source":3,"value":"21"},{"begin":2140,"end":2165,"name":"PUSH [tag]","source":3,"value":"22"},{"begin":2140,"end":2165,"name":"JUMP","source":3,"value":"[in]"},{"begin":2140,"end":2165,"name":"tag","source":3,"value":"21"},{"begin":2140,"end":2165,"name":"JUMPDEST","source":3},{"begin":2179,"end":2191,"name":"PUSH [tag]","source":3,"value":"23"},{"begin":2179,"end":2191,"name":"PUSH","source":3,"value":"40"},{"begin":2179,"end":2191,"name":"DUP5","source":3},{"begin":2179,"end":2191,"name":"ADD","source":3},{"begin":2179,"end":2186,"name":"DUP5","source":3},{"begin":2179,"end":2191,"name":"PUSH [tag]","source":3,"value":"24"},{"begin":2179,"end":2191,"name":"JUMP","source":3,"value":"[in]"},{"begin":2179,"end":2191,"name":"tag","source":3,"value":"23"},{"begin":2179,"end":2191,"name":"JUMPDEST","source":3},{"begin":2168,"end":2209,"name":"DUP2","source":3},{"begin":2168,"end":2209,"name":"ADD","source":3},{"begin":2168,"end":2209,"name":"SWAP1","source":3},{"begin":2168,"end":2209,"name":"PUSH [tag]","source":3,"value":"25"},{"begin":2168,"end":2209,"name":"SWAP2","source":3},{"begin":2168,"end":2209,"name":"SWAP1","source":3},{"begin":2168,"end":2209,"name":"PUSH [tag]","source":3,"value":"26"},{"begin":2168,"end":2209,"name":"JUMP","source":3,"value":"[in]"},{"begin":2168,"end":2209,"name":"tag","source":3,"value":"25"},{"begin":2168,"end":2209,"name":"JUMPDEST","source":3},{"begin":2140,"end":2209,"name":"SWAP1","source":3},{"begin":2140,"end":2209,"name":"POP","source":3},{"begin":2275,"end":2284,"name":"PUSH","source":3,"value":"0"},{"begin":2270,"end":2812,"name":"tag","source":3,"value":"27"},{"begin":2270,"end":2812,"name":"JUMPDEST","source":3},{"begin":2294,"end":2305,"name":"DUP2","source":3},{"begin":2294,"end":2305,"name":"MLOAD","source":3},{"begin":2294,"end":2312,"name":"MLOAD","source":3},{"begin":2290,"end":2312,"name":"DUP2","source":3},{"begin":2290,"end":2312,"name":"LT","source":3},{"begin":2270,"end":2812,"name":"ISZERO","source":3},{"begin":2270,"end":2812,"name":"PUSH [tag]","source":3,"value":"28"},{"begin":2270,"end":2812,"name":"JUMPI","source":3},{"begin":2470,"end":2484,"name":"PUSH","source":3,"value":"0"},{"begin":2509,"end":2510,"name":"DUP2","source":3},{"begin":2487,"end":2491,"name":"DUP4","source":3},{"begin":2487,"end":2499,"name":"PUSH","source":3,"value":"20"},{"begin":2487,"end":2499,"name":"ADD","source":3},{"begin":2487,"end":2499,"name":"MLOAD","source":3},{"begin":2487,"end":2506,"name":"MLOAD","source":3},{"begin":2487,"end":2510,"name":"GT","source":3},{"begin":2487,"end":2542,"name":"PUSH [tag]","source":3,"value":"30"},{"begin":2487,"end":2542,"name":"JUMPI","source":3},{"begin":2539,"end":2541,"name":"PUSH","source":3,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":2487,"end":2542,"name":"PUSH [tag]","source":3,"value":"31"},{"begin":2487,"end":2542,"name":"JUMP","source":3},{"begin":2487,"end":2542,"name":"tag","source":3,"value":"30"},{"begin":2487,"end":2542,"name":"JUMPDEST","source":3},{"begin":2513,"end":2517,"name":"DUP3","source":3},{"begin":2513,"end":2525,"name":"PUSH","source":3,"value":"20"},{"begin":2513,"end":2525,"name":"ADD","source":3},{"begin":2513,"end":2525,"name":"MLOAD","source":3},{"begin":2526,"end":2527,"name":"DUP3","source":3},{"begin":2513,"end":2528,"name":"DUP2","source":3},{"begin":2513,"end":2528,"name":"MLOAD","source":3},{"begin":2513,"end":2528,"name":"DUP2","source":3},{"begin":2513,"end":2528,"name":"LT","source":3},{"begin":2513,"end":2528,"name":"PUSH [tag]","source":3,"value":"32"},{"begin":2513,"end":2528,"name":"JUMPI","source":3},{"begin":2513,"end":2528,"name":"INVALID","source":3},{"begin":2513,"end":2528,"name":"tag","source":3,"value":"32"},{"begin":2513,"end":2528,"name":"JUMPDEST","source":3},{"begin":2513,"end":2528,"name":"PUSH","source":3,"value":"20"},{"begin":2513,"end":2528,"name":"MUL","source":3},{"begin":2513,"end":2528,"name":"PUSH","source":3,"value":"20"},{"begin":2513,"end":2528,"name":"ADD","source":3},{"begin":2513,"end":2528,"name":"ADD","source":3},{"begin":2513,"end":2528,"name":"MLOAD","source":3},{"begin":2487,"end":2542,"name":"tag","source":3,"value":"31"},{"begin":2487,"end":2542,"name":"JUMPDEST","source":3},{"begin":2470,"end":2542,"name":"SWAP1","source":3},{"begin":2470,"end":2542,"name":"POP","source":3},{"begin":1771,"end":1773,"name":"PUSH","source":3,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":2560,"end":2566,"name":"DUP2","source":3},{"begin":2560,"end":2581,"name":"EQ","source":3},{"begin":2556,"end":2672,"name":"ISZERO","source":3},{"begin":2556,"end":2672,"name":"PUSH [tag]","source":3,"value":"33"},{"begin":2556,"end":2672,"name":"JUMPI","source":3},{"begin":2610,"end":2657,"name":"PUSH [tag]","source":3,"value":"34"},{"begin":2651,"end":2655,"name":"ADDRESS","source":3},{"begin":2610,"end":2614,"name":"DUP5","source":3},{"begin":2610,"end":2621,"name":"PUSH","source":3,"value":"0"},{"begin":2610,"end":2621,"name":"ADD","source":3},{"begin":2610,"end":2621,"name":"MLOAD","source":3},{"begin":2622,"end":2623,"name":"DUP5","source":3},{"begin":2610,"end":2624,"name":"DUP2","source":3},{"begin":2610,"end":2624,"name":"MLOAD","source":3},{"begin":2610,"end":2624,"name":"DUP2","source":3},{"begin":2610,"end":2624,"name":"LT","source":3},{"begin":2610,"end":2624,"name":"PUSH [tag]","source":3,"value":"35"},{"begin":2610,"end":2624,"name":"JUMPI","source":3},{"begin":2610,"end":2624,"name":"INVALID","source":3},{"begin":2610,"end":2624,"name":"tag","source":3,"value":"35"},{"begin":2610,"end":2624,"name":"JUMPDEST","source":3},{"begin":2610,"end":2624,"name":"PUSH","source":3,"value":"20"},{"begin":2610,"end":2624,"name":"MUL","source":3},{"begin":2610,"end":2624,"name":"PUSH","source":3,"value":"20"},{"begin":2610,"end":2624,"name":"ADD","source":3},{"begin":2610,"end":2624,"name":"ADD","source":3},{"begin":2610,"end":2624,"name":"MLOAD","source":3},{"begin":2610,"end":2642,"name":"PUSH","source":3,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":2610,"end":2642,"name":"AND","source":3},{"begin":2610,"end":2642,"name":"PUSH [tag]","source":3,"value":"36"},{"begin":2610,"end":2642,"name":"SWAP1","source":3},{"begin":2610,"end":2657,"name":"SWAP2","source":3},{"begin":2610,"end":2657,"name":"SWAP1","source":3},{"begin":2610,"end":2657,"name":"PUSH","source":3,"value":"FFFFFFFF"},{"begin":2610,"end":2657,"name":"AND","source":3},{"begin":2610,"end":2657,"name":"JUMP","source":3,"value":"[in]"},{"begin":2610,"end":2657,"name":"tag","source":3,"value":"34"},{"begin":2610,"end":2657,"name":"JUMPDEST","source":3},{"begin":2601,"end":2657,"name":"SWAP1","source":3},{"begin":2601,"end":2657,"name":"POP","source":3},{"begin":2556,"end":2672,"name":"tag","source":3,"value":"33"},{"begin":2556,"end":2672,"name":"JUMPDEST","source":3},{"begin":2689,"end":2700,"name":"DUP1","source":3},{"begin":2689,"end":2700,"name":"ISZERO","source":3},{"begin":2685,"end":2802,"name":"PUSH [tag]","source":3,"value":"38"},{"begin":2685,"end":2802,"name":"JUMPI","source":3},{"begin":2720,"end":2787,"name":"PUSH [tag]","source":3,"value":"38"},{"begin":2761,"end":2778,"name":"PUSH [tag]","source":3,"value":"39"},{"begin":2761,"end":2778,"name":"PUSH","source":3,"value":"40"},{"begin":2761,"end":2778,"name":"DUP8","source":3},{"begin":2761,"end":2778,"name":"ADD","source":3},{"begin":2761,"end":2778,"name":"PUSH","source":3,"value":"20"},{"begin":2761,"end":2778,"name":"DUP9","source":3},{"begin":2761,"end":2778,"name":"ADD","source":3},{"begin":2761,"end":2778,"name":"PUSH [tag]","source":3,"value":"14"},{"begin":2761,"end":2778,"name":"JUMP","source":3,"value":"[in]"},{"begin":2761,"end":2778,"name":"tag","source":3,"value":"39"},{"begin":2761,"end":2778,"name":"JUMPDEST","source":3},{"begin":2780,"end":2786,"name":"DUP3","source":3},{"begin":2720,"end":2724,"name":"DUP6","source":3},{"begin":2720,"end":2731,"name":"PUSH","source":3,"value":"0"},{"begin":2720,"end":2731,"name":"ADD","source":3},{"begin":2720,"end":2731,"name":"MLOAD","source":3},{"begin":2732,"end":2733,"name":"DUP6","source":3},{"begin":2720,"end":2734,"name":"DUP2","source":3},{"begin":2720,"end":2734,"name":"MLOAD","source":3},{"begin":2720,"end":2734,"name":"DUP2","source":3},{"begin":2720,"end":2734,"name":"LT","source":3},{"begin":2720,"end":2734,"name":"PUSH [tag]","source":3,"value":"40"},{"begin":2720,"end":2734,"name":"JUMPI","source":3},{"begin":2720,"end":2734,"name":"INVALID","source":3},{"begin":2720,"end":2734,"name":"tag","source":3,"value":"40"},{"begin":2720,"end":2734,"name":"JUMPDEST","source":3},{"begin":2720,"end":2734,"name":"PUSH","source":3,"value":"20"},{"begin":2720,"end":2734,"name":"MUL","source":3},{"begin":2720,"end":2734,"name":"PUSH","source":3,"value":"20"},{"begin":2720,"end":2734,"name":"ADD","source":3},{"begin":2720,"end":2734,"name":"ADD","source":3},{"begin":2720,"end":2734,"name":"MLOAD","source":3},{"begin":2720,"end":2760,"name":"PUSH","source":3,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":2720,"end":2760,"name":"AND","source":3},{"begin":2720,"end":2760,"name":"PUSH [tag]","source":3,"value":"41"},{"begin":2720,"end":2760,"name":"SWAP1","source":3},{"begin":2720,"end":2787,"name":"SWAP3","source":3},{"begin":2720,"end":2787,"name":"SWAP2","source":3},{"begin":2720,"end":2787,"name":"SWAP1","source":3},{"begin":2720,"end":2787,"name":"PUSH","source":3,"value":"FFFFFFFF"},{"begin":2720,"end":2787,"name":"AND","source":3},{"begin":2720,"end":2787,"name":"JUMP","source":3,"value":"[in]"},{"begin":2720,"end":2787,"name":"tag","source":3,"value":"38"},{"begin":2720,"end":2787,"name":"JUMPDEST","source":3},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":2314,"end":2317,"name":"PUSH","source":3,"value":"1"},{"begin":2314,"end":2317,"name":"ADD","source":3},{"begin":2270,"end":2812,"name":"PUSH [tag]","source":3,"value":"27"},{"begin":2270,"end":2812,"name":"JUMP","source":3},{"begin":2270,"end":2812,"name":"tag","source":3,"value":"28"},{"begin":2270,"end":2812,"name":"JUMPDEST","source":3},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":2828,"end":2867,"name":"PUSH","source":3,"value":"13C9929E00000000000000000000000000000000000000000000000000000000"},{"begin":2828,"end":2867,"name":"SWAP4","source":3},{"begin":2033,"end":2874,"name":"SWAP3","source":3},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":2033,"end":2874,"name":"JUMP","source":3,"value":"[out]"},{"begin":1538,"end":2050,"name":"tag","source":4,"value":"15"},{"begin":1538,"end":2050,"name":"JUMPDEST","source":4},{"begin":1656,"end":1666,"name":"CALLER","source":4},{"begin":1656,"end":1678,"name":"PUSH","source":4,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":1670,"end":1678,"name":"PUSHIMMUTABLE","source":4,"value":"922"},{"begin":1656,"end":1678,"name":"AND","source":4},{"begin":1656,"end":1678,"name":"EQ","source":4},{"begin":1652,"end":1792,"name":"PUSH [tag]","source":4,"value":"44"},{"begin":1652,"end":1792,"name":"JUMPI","source":4},{"begin":1694,"end":1781,"name":"PUSH [tag]","source":4,"value":"44"},{"begin":1694,"end":1771,"name":"PUSH [tag]","source":4,"value":"45"},{"begin":1750,"end":1760,"name":"CALLER","source":4},{"begin":1762,"end":1770,"name":"PUSHIMMUTABLE","source":4,"value":"922"},{"begin":1694,"end":1749,"name":"PUSH [tag]","source":4,"value":"46"},{"begin":1694,"end":1771,"name":"JUMP","source":4,"value":"[in]"},{"begin":1694,"end":1771,"name":"tag","source":4,"value":"45"},{"begin":1694,"end":1771,"name":"JUMPDEST","source":4},{"begin":1694,"end":1779,"name":"PUSH [tag]","source":4,"value":"47"},{"begin":1694,"end":1781,"name":"JUMP","source":4,"value":"[in]"},{"begin":1694,"end":1781,"name":"tag","source":4,"value":"44"},{"begin":1694,"end":1781,"name":"JUMPDEST","source":4},{"begin":1859,"end":1863,"name":"ADDRESS","source":4},{"begin":1851,"end":1883,"name":"PUSH","source":4,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":1868,"end":1883,"name":"PUSHIMMUTABLE","source":4,"value":"925"},{"begin":1851,"end":1883,"name":"AND","source":4},{"begin":1851,"end":1883,"name":"EQ","source":4},{"begin":1847,"end":2008,"name":"PUSH [tag]","source":4,"value":"49"},{"begin":1847,"end":2008,"name":"JUMPI","source":4},{"begin":1899,"end":1997,"name":"PUSH [tag]","source":4,"value":"49"},{"begin":1899,"end":1987,"name":"PUSH [tag]","source":4,"value":"45"},{"begin":1964,"end":1968,"name":"ADDRESS","source":4},{"begin":1971,"end":1986,"name":"PUSHIMMUTABLE","source":4,"value":"925"},{"begin":1899,"end":1955,"name":"PUSH [tag]","source":4,"value":"51"},{"begin":1899,"end":1987,"name":"JUMP","source":4,"value":"[in]"},{"begin":1899,"end":1997,"name":"tag","source":4,"value":"49"},{"begin":1899,"end":1997,"name":"JUMPDEST","source":4},{"begin":2030,"end":2042,"name":"DUP1","source":4},{"begin":2017,"end":2043,"name":"PUSH","source":4,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":2017,"end":2043,"name":"AND","source":4},{"begin":2017,"end":2043,"name":"SELFDESTRUCT","source":4},{"begin":1026,"end":1059,"name":"tag","source":4,"value":"17"},{"begin":1026,"end":1059,"name":"JUMPDEST","source":4},{"begin":1026,"end":1059,"name":"PUSHIMMUTABLE","source":4,"value":"922"},{"begin":1026,"end":1059,"name":"DUP2","source":4},{"begin":1026,"end":1059,"name":"JUMP","source":4,"value":"[out]"},{"begin":3298,"end":3530,"name":"tag","source":2,"value":"36"},{"begin":3298,"end":3530,"name":"JUMPDEST","source":2},{"begin":3385,"end":3405,"name":"PUSH","source":2,"value":"0"},{"begin":3421,"end":3438,"name":"PUSH [tag]","source":2,"value":"53"},{"begin":3432,"end":3437,"name":"DUP4","source":2},{"begin":3421,"end":3431,"name":"PUSH [tag]","source":2,"value":"54"},{"begin":3421,"end":3438,"name":"JUMP","source":2,"value":"[in]"},{"begin":3421,"end":3438,"name":"tag","source":2,"value":"53"},{"begin":3421,"end":3438,"name":"JUMPDEST","source":2},{"begin":3417,"end":3485,"name":"ISZERO","source":2},{"begin":3417,"end":3485,"name":"PUSH [tag]","source":2,"value":"55"},{"begin":3417,"end":3485,"name":"JUMPI","source":2},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":3461,"end":3474,"name":"PUSH","source":2,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":3461,"end":3474,"name":"DUP2","source":2},{"begin":3461,"end":3474,"name":"AND","source":2},{"begin":3461,"end":3474,"name":"BALANCE","source":2},{"begin":3454,"end":3474,"name":"PUSH [tag]","source":2,"value":"52"},{"begin":3454,"end":3474,"name":"JUMP","source":2},{"begin":3417,"end":3485,"name":"tag","source":2,"value":"55"},{"begin":3417,"end":3485,"name":"JUMPDEST","source":2},{"begin":3501,"end":3523,"name":"PUSH","source":2,"value":"40"},{"begin":3501,"end":3523,"name":"MLOAD","source":2},{"begin":3501,"end":3523,"name":"PUSH","source":2,"value":"70A0823100000000000000000000000000000000000000000000000000000000"},{"begin":3501,"end":3523,"name":"DUP2","source":2},{"begin":3501,"end":3523,"name":"MSTORE","source":2},{"begin":3501,"end":3516,"name":"PUSH","source":2,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":3501,"end":3516,"name":"DUP5","source":2},{"begin":3501,"end":3516,"name":"AND","source":2},{"begin":3501,"end":3516,"name":"SWAP1","source":2},{"begin":3501,"end":3516,"name":"PUSH","source":2,"value":"70A08231"},{"begin":3501,"end":3516,"name":"SWAP1","source":2},{"begin":3501,"end":3523,"name":"PUSH [tag]","source":2,"value":"56"},{"begin":3501,"end":3523,"name":"SWAP1","source":2},{"begin":3517,"end":3522,"name":"DUP6","source":2},{"begin":3517,"end":3522,"name":"SWAP1","source":2},{"begin":3501,"end":3523,"name":"PUSH","source":2,"value":"4"},{"begin":3501,"end":3523,"name":"ADD","source":2},{"begin":3501,"end":3523,"name":"PUSH [tag]","source":2,"value":"19"},{"begin":3501,"end":3523,"name":"JUMP","source":2,"value":"[in]"},{"begin":3501,"end":3523,"name":"tag","source":2,"value":"56"},{"begin":3501,"end":3523,"name":"JUMPDEST","source":2},{"begin":3501,"end":3523,"name":"PUSH","source":2,"value":"20"},{"begin":3501,"end":3523,"name":"PUSH","source":2,"value":"40"},{"begin":3501,"end":3523,"name":"MLOAD","source":2},{"begin":3501,"end":3523,"name":"DUP1","source":2},{"begin":3501,"end":3523,"name":"DUP4","source":2},{"begin":3501,"end":3523,"name":"SUB","source":2},{"begin":3501,"end":3523,"name":"DUP2","source":2},{"begin":3501,"end":3523,"name":"DUP7","source":2},{"begin":3501,"end":3523,"name":"DUP1","source":2},{"begin":3501,"end":3523,"name":"EXTCODESIZE","source":2},{"begin":3501,"end":3523,"name":"ISZERO","source":2},{"begin":3501,"end":3523,"name":"DUP1","source":2},{"begin":3501,"end":3523,"name":"ISZERO","source":2},{"begin":3501,"end":3523,"name":"PUSH [tag]","source":2,"value":"57"},{"begin":3501,"end":3523,"name":"JUMPI","source":2},{"begin":3501,"end":3523,"name":"PUSH","source":2,"value":"0"},{"begin":3501,"end":3523,"name":"DUP1","source":2},{"begin":3501,"end":3523,"name":"REVERT","source":2},{"begin":3501,"end":3523,"name":"tag","source":2,"value":"57"},{"begin":3501,"end":3523,"name":"JUMPDEST","source":2},{"begin":3501,"end":3523,"name":"POP","source":2},{"begin":3501,"end":3523,"name":"GAS","source":2},{"begin":3501,"end":3523,"name":"STATICCALL","source":2},{"begin":3501,"end":3523,"name":"ISZERO","source":2},{"begin":3501,"end":3523,"name":"DUP1","source":2},{"begin":3501,"end":3523,"name":"ISZERO","source":2},{"begin":3501,"end":3523,"name":"PUSH [tag]","source":2,"value":"59"},{"begin":3501,"end":3523,"name":"JUMPI","source":2},{"begin":3501,"end":3523,"name":"RETURNDATASIZE","source":2},{"begin":3501,"end":3523,"name":"PUSH","source":2,"value":"0"},{"begin":3501,"end":3523,"name":"DUP1","source":2},{"begin":3501,"end":3523,"name":"RETURNDATACOPY","source":2},{"begin":3501,"end":3523,"name":"RETURNDATASIZE","source":2},{"begin":3501,"end":3523,"name":"PUSH","source":2,"value":"0"},{"begin":3501,"end":3523,"name":"REVERT","source":2},{"begin":3501,"end":3523,"name":"tag","source":2,"value":"59"},{"begin":3501,"end":3523,"name":"JUMPDEST","source":2},{"begin":3501,"end":3523,"name":"POP","source":2},{"begin":3501,"end":3523,"name":"POP","source":2},{"begin":3501,"end":3523,"name":"POP","source":2},{"begin":3501,"end":3523,"name":"POP","source":2},{"begin":3501,"end":3523,"name":"PUSH","source":2,"value":"40"},{"begin":3501,"end":3523,"name":"MLOAD","source":2},{"begin":3501,"end":3523,"name":"RETURNDATASIZE","source":2},{"begin":3501,"end":3523,"name":"PUSH","source":2,"value":"1F"},{"begin":3501,"end":3523,"name":"NOT","source":2},{"begin":3501,"end":3523,"name":"PUSH","source":2,"value":"1F"},{"begin":3501,"end":3523,"name":"DUP3","source":2},{"begin":3501,"end":3523,"name":"ADD","source":2},{"begin":3501,"end":3523,"name":"AND","source":2},{"begin":3501,"end":3523,"name":"DUP3","source":2},{"begin":3501,"end":3523,"name":"ADD","source":2},{"begin":3501,"end":3523,"name":"DUP1","source":2},{"begin":3501,"end":3523,"name":"PUSH","source":2,"value":"40"},{"begin":3501,"end":3523,"name":"MSTORE","source":2},{"begin":3501,"end":3523,"name":"POP","source":2},{"begin":3501,"end":3523,"name":"DUP2","source":2},{"begin":3501,"end":3523,"name":"ADD","source":2},{"begin":3501,"end":3523,"name":"SWAP1","source":2},{"begin":3501,"end":3523,"name":"PUSH [tag]","source":2,"value":"60"},{"begin":3501,"end":3523,"name":"SWAP2","source":2},{"begin":3501,"end":3523,"name":"SWAP1","source":2},{"begin":3501,"end":3523,"name":"PUSH [tag]","source":2,"value":"61"},{"begin":3501,"end":3523,"name":"JUMP","source":2,"value":"[in]"},{"begin":3501,"end":3523,"name":"tag","source":2,"value":"60"},{"begin":3501,"end":3523,"name":"JUMPDEST","source":2},{"begin":3494,"end":3523,"name":"SWAP1","source":2},{"begin":3494,"end":3523,"name":"POP","source":2},{"begin":3298,"end":3530,"name":"tag","source":2,"value":"52"},{"begin":3298,"end":3530,"name":"JUMPDEST","source":2},{"begin":3298,"end":3530,"name":"SWAP3","source":2},{"begin":3298,"end":3530,"name":"SWAP2","source":2},{"begin":3298,"end":3530,"name":"POP","source":2},{"begin":3298,"end":3530,"name":"POP","source":2},{"begin":3298,"end":3530,"name":"JUMP","source":2,"value":"[out]"},{"begin":2377,"end":2749,"name":"tag","source":2,"value":"41"},{"begin":2377,"end":2749,"name":"JUMPDEST","source":2},{"begin":2523,"end":2540,"name":"PUSH [tag]","source":2,"value":"63"},{"begin":2534,"end":2539,"name":"DUP4","source":2},{"begin":2523,"end":2533,"name":"PUSH [tag]","source":2,"value":"54"},{"begin":2523,"end":2540,"name":"JUMP","source":2,"value":"[in]"},{"begin":2523,"end":2540,"name":"tag","source":2,"value":"63"},{"begin":2523,"end":2540,"name":"JUMPDEST","source":2},{"begin":2519,"end":2743,"name":"ISZERO","source":2},{"begin":2519,"end":2743,"name":"PUSH [tag]","source":2,"value":"64"},{"begin":2519,"end":2743,"name":"JUMPI","source":2},{"begin":2557,"end":2566,"name":"PUSH","source":2,"value":"0"},{"begin":2572,"end":2574,"name":"DUP3","source":2},{"begin":2572,"end":2579,"name":"PUSH","source":2,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":2572,"end":2579,"name":"AND","source":2},{"begin":2587,"end":2593,"name":"DUP3","source":2},{"begin":2572,"end":2598,"name":"PUSH","source":2,"value":"40"},{"begin":2572,"end":2598,"name":"MLOAD","source":2},{"begin":2572,"end":2598,"name":"PUSH [tag]","source":2,"value":"65"},{"begin":2572,"end":2598,"name":"SWAP1","source":2},{"begin":2572,"end":2598,"name":"PUSH [tag]","source":2,"value":"66"},{"begin":2572,"end":2598,"name":"JUMP","source":2,"value":"[in]"},{"begin":2572,"end":2598,"name":"tag","source":2,"value":"65"},{"begin":2572,"end":2598,"name":"JUMPDEST","source":2},{"begin":2572,"end":2598,"name":"PUSH","source":2,"value":"0"},{"begin":2572,"end":2598,"name":"PUSH","source":2,"value":"40"},{"begin":2572,"end":2598,"name":"MLOAD","source":2},{"begin":2572,"end":2598,"name":"DUP1","source":2},{"begin":2572,"end":2598,"name":"DUP4","source":2},{"begin":2572,"end":2598,"name":"SUB","source":2},{"begin":2572,"end":2598,"name":"DUP2","source":2},{"begin":2572,"end":2598,"name":"DUP6","source":2},{"begin":2572,"end":2598,"name":"DUP8","source":2},{"begin":2572,"end":2598,"name":"GAS","source":2},{"begin":2572,"end":2598,"name":"CALL","source":2},{"begin":2572,"end":2598,"name":"SWAP3","source":2},{"begin":2572,"end":2598,"name":"POP","source":2},{"begin":2572,"end":2598,"name":"POP","source":2},{"begin":2572,"end":2598,"name":"POP","source":2},{"begin":2572,"end":2598,"name":"RETURNDATASIZE","source":2},{"begin":2572,"end":2598,"name":"DUP1","source":2},{"begin":2572,"end":2598,"name":"PUSH","source":2,"value":"0"},{"begin":2572,"end":2598,"name":"DUP2","source":2},{"begin":2572,"end":2598,"name":"EQ","source":2},{"begin":2572,"end":2598,"name":"PUSH [tag]","source":2,"value":"69"},{"begin":2572,"end":2598,"name":"JUMPI","source":2},{"begin":2572,"end":2598,"name":"PUSH","source":2,"value":"40"},{"begin":2572,"end":2598,"name":"MLOAD","source":2},{"begin":2572,"end":2598,"name":"SWAP2","source":2},{"begin":2572,"end":2598,"name":"POP","source":2},{"begin":2572,"end":2598,"name":"PUSH","source":2,"value":"1F"},{"begin":2572,"end":2598,"name":"NOT","source":2},{"begin":2572,"end":2598,"name":"PUSH","source":2,"value":"3F"},{"begin":2572,"end":2598,"name":"RETURNDATASIZE","source":2},{"begin":2572,"end":2598,"name":"ADD","source":2},{"begin":2572,"end":2598,"name":"AND","source":2},{"begin":2572,"end":2598,"name":"DUP3","source":2},{"begin":2572,"end":2598,"name":"ADD","source":2},{"begin":2572,"end":2598,"name":"PUSH","source":2,"value":"40"},{"begin":2572,"end":2598,"name":"MSTORE","source":2},{"begin":2572,"end":2598,"name":"RETURNDATASIZE","source":2},{"begin":2572,"end":2598,"name":"DUP3","source":2},{"begin":2572,"end":2598,"name":"MSTORE","source":2},{"begin":2572,"end":2598,"name":"RETURNDATASIZE","source":2},{"begin":2572,"end":2598,"name":"PUSH","source":2,"value":"0"},{"begin":2572,"end":2598,"name":"PUSH","source":2,"value":"20"},{"begin":2572,"end":2598,"name":"DUP5","source":2},{"begin":2572,"end":2598,"name":"ADD","source":2},{"begin":2572,"end":2598,"name":"RETURNDATACOPY","source":2},{"begin":2572,"end":2598,"name":"PUSH [tag]","source":2,"value":"68"},{"begin":2572,"end":2598,"name":"JUMP","source":2},{"begin":2572,"end":2598,"name":"tag","source":2,"value":"69"},{"begin":2572,"end":2598,"name":"JUMPDEST","source":2},{"begin":2572,"end":2598,"name":"PUSH","source":2,"value":"60"},{"begin":2572,"end":2598,"name":"SWAP2","source":2},{"begin":2572,"end":2598,"name":"POP","source":2},{"begin":2572,"end":2598,"name":"tag","source":2,"value":"68"},{"begin":2572,"end":2598,"name":"JUMPDEST","source":2},{"begin":2572,"end":2598,"name":"POP","source":2},{"begin":2556,"end":2598,"name":"POP","source":2},{"begin":2556,"end":2598,"name":"SWAP1","source":2},{"begin":2556,"end":2598,"name":"POP","source":2},{"begin":2620,"end":2624,"name":"DUP1","source":2},{"begin":2612,"end":2669,"name":"PUSH [tag]","source":2,"value":"70"},{"begin":2612,"end":2669,"name":"JUMPI","source":2},{"begin":2612,"end":2669,"name":"PUSH","source":2,"value":"40"},{"begin":2612,"end":2669,"name":"MLOAD","source":2},{"begin":2612,"end":2669,"name":"PUSH","source":2,"value":"8C379A000000000000000000000000000000000000000000000000000000000"},{"begin":2612,"end":2669,"name":"DUP2","source":2},{"begin":2612,"end":2669,"name":"MSTORE","source":2},{"begin":2612,"end":2669,"name":"PUSH","source":2,"value":"4"},{"begin":2612,"end":2669,"name":"ADD","source":2},{"begin":2612,"end":2669,"name":"PUSH [tag]","source":2,"value":"71"},{"begin":2612,"end":2669,"name":"SWAP1","source":2},{"begin":2612,"end":2669,"name":"PUSH [tag]","source":2,"value":"72"},{"begin":2612,"end":2669,"name":"JUMP","source":2,"value":"[in]"},{"begin":2612,"end":2669,"name":"tag","source":2,"value":"71"},{"begin":2612,"end":2669,"name":"JUMPDEST","source":2},{"begin":2612,"end":2669,"name":"PUSH","source":2,"value":"40"},{"begin":2612,"end":2669,"name":"MLOAD","source":2},{"begin":2612,"end":2669,"name":"DUP1","source":2},{"begin":2612,"end":2669,"name":"SWAP2","source":2},{"begin":2612,"end":2669,"name":"SUB","source":2},{"begin":2612,"end":2669,"name":"SWAP1","source":2},{"begin":2612,"end":2669,"name":"REVERT","source":2},{"begin":2612,"end":2669,"name":"tag","source":2,"value":"70"},{"begin":2612,"end":2669,"name":"JUMPDEST","source":2},{"begin":2519,"end":2743,"name":"POP","source":2},{"begin":2519,"end":2743,"name":"PUSH [tag]","source":2,"value":"74"},{"begin":2519,"end":2743,"name":"JUMP","source":2},{"begin":2519,"end":2743,"name":"tag","source":2,"value":"64"},{"begin":2519,"end":2743,"name":"JUMPDEST","source":2},{"begin":2700,"end":2732,"name":"PUSH [tag]","source":2,"value":"74"},{"begin":2700,"end":2720,"name":"PUSH","source":2,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":2700,"end":2720,"name":"DUP5","source":2},{"begin":2700,"end":2720,"name":"AND","source":2},{"begin":2721,"end":2723,"name":"DUP4","source":2},{"begin":2725,"end":2731,"name":"DUP4","source":2},{"begin":2700,"end":2720,"name":"PUSH [tag]","source":2,"value":"75"},{"begin":2700,"end":2732,"name":"JUMP","source":2,"value":"[in]"},{"begin":2700,"end":2732,"name":"tag","source":2,"value":"74"},{"begin":2700,"end":2732,"name":"JUMPDEST","source":2},{"begin":2377,"end":2749,"name":"POP","source":2},{"begin":2377,"end":2749,"name":"POP","source":2},{"begin":2377,"end":2749,"name":"POP","source":2},{"begin":2377,"end":2749,"name":"JUMP","source":2,"value":"[out]"},{"begin":2455,"end":2706,"name":"tag","source":0,"value":"46"},{"begin":2455,"end":2706,"name":"JUMPDEST","source":0},{"begin":2549,"end":2561,"name":"PUSH","source":0,"value":"60"},{"begin":2622,"end":2679,"name":"PUSH","source":0,"value":"5CEC653B364CCA3880AFA73CEFF506D0651D11D26ABBBE4A56460AA933B21B08"},{"begin":2682,"end":2688,"name":"DUP4","source":0},{"begin":2690,"end":2698,"name":"DUP4","source":0},{"begin":2592,"end":2699,"name":"PUSH","source":0,"value":"40"},{"begin":2592,"end":2699,"name":"MLOAD","source":0},{"begin":2592,"end":2699,"name":"PUSH","source":0,"value":"24"},{"begin":2592,"end":2699,"name":"ADD","source":0},{"begin":2592,"end":2699,"name":"PUSH [tag]","source":0,"value":"77"},{"begin":2592,"end":2699,"name":"SWAP3","source":0},{"begin":2592,"end":2699,"name":"SWAP2","source":0},{"begin":2592,"end":2699,"name":"SWAP1","source":0},{"begin":2592,"end":2699,"name":"PUSH [tag]","source":0,"value":"78"},{"begin":2592,"end":2699,"name":"JUMP","source":0,"value":"[in]"},{"begin":2592,"end":2699,"name":"tag","source":0,"value":"77"},{"begin":2592,"end":2699,"name":"JUMPDEST","source":0},{"begin":2592,"end":2699,"name":"PUSH","source":0,"value":"40"},{"begin":2592,"end":2699,"name":"DUP1","source":0},{"begin":2592,"end":2699,"name":"MLOAD","source":0},{"begin":2592,"end":2699,"name":"PUSH","source":0,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"},{"begin":2592,"end":2699,"name":"DUP2","source":0},{"begin":2592,"end":2699,"name":"DUP5","source":0},{"begin":2592,"end":2699,"name":"SUB","source":0},{"begin":2592,"end":2699,"name":"ADD","source":0},{"begin":2592,"end":2699,"name":"DUP2","source":0},{"begin":2592,"end":2699,"name":"MSTORE","source":0},{"begin":2592,"end":2699,"name":"SWAP2","source":0},{"begin":2592,"end":2699,"name":"SWAP1","source":0},{"begin":2592,"end":2699,"name":"MSTORE","source":0},{"begin":2592,"end":2699,"name":"PUSH","source":0,"value":"20"},{"begin":2592,"end":2699,"name":"DUP2","source":0},{"begin":2592,"end":2699,"name":"ADD","source":0},{"begin":2592,"end":2699,"name":"DUP1","source":0},{"begin":2592,"end":2699,"name":"MLOAD","source":0},{"begin":2592,"end":2699,"name":"PUSH","source":0,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":2592,"end":2699,"name":"AND","source":0},{"begin":2592,"end":2699,"name":"PUSH","source":0,"value":"FFFFFFFF00000000000000000000000000000000000000000000000000000000"},{"begin":2592,"end":2699,"name":"SWAP1","source":0},{"begin":2592,"end":2699,"name":"SWAP4","source":0},{"begin":2592,"end":2699,"name":"AND","source":0},{"begin":2592,"end":2699,"name":"SWAP3","source":0},{"begin":2592,"end":2699,"name":"SWAP1","source":0},{"begin":2592,"end":2699,"name":"SWAP3","source":0},{"begin":2592,"end":2699,"name":"OR","source":0},{"begin":2592,"end":2699,"name":"SWAP1","source":0},{"begin":2592,"end":2699,"name":"SWAP2","source":0},{"begin":2592,"end":2699,"name":"MSTORE","source":0},{"begin":2592,"end":2699,"name":"SWAP1","source":0},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":2455,"end":2706,"name":"SWAP3","source":0},{"begin":2455,"end":2706,"name":"SWAP2","source":0},{"begin":2455,"end":2706,"name":"POP","source":0},{"begin":2455,"end":2706,"name":"POP","source":0},{"begin":2455,"end":2706,"name":"JUMP","source":0,"value":"[out]"},{"begin":1468,"end":1618,"name":"tag","source":10,"value":"47"},{"begin":1468,"end":1618,"name":"JUMPDEST","source":10},{"begin":1591,"end":1600,"name":"DUP1","source":10},{"begin":1585,"end":1601,"name":"MLOAD","source":10},{"begin":1578,"end":1582,"name":"PUSH","source":10,"value":"20"},{"begin":1567,"end":1576,"name":"DUP3","source":10},{"begin":1563,"end":1583,"name":"ADD","source":10},{"begin":1556,"end":1602,"name":"REVERT","source":10},{"begin":2712,"end":3083,"name":"tag","source":0,"value":"51"},{"begin":2712,"end":3083,"name":"JUMPDEST","source":0},{"begin":2845,"end":2857,"name":"PUSH","source":0,"value":"60"},{"begin":2939,"end":2997,"name":"PUSH","source":0,"value":"B5CF2CD09307D6C717473134BADBB9761C2C97D7565566C2A71EBA6CD6FC514D"},{"begin":3016,"end":3029,"name":"DUP4","source":0},{"begin":3047,"end":3062,"name":"DUP4","source":0},{"begin":2892,"end":3076,"name":"PUSH","source":0,"value":"40"},{"begin":2892,"end":3076,"name":"MLOAD","source":0},{"begin":2892,"end":3076,"name":"PUSH","source":0,"value":"24"},{"begin":2892,"end":3076,"name":"ADD","source":0},{"begin":2892,"end":3076,"name":"PUSH [tag]","source":0,"value":"77"},{"begin":2892,"end":3076,"name":"SWAP3","source":0},{"begin":2892,"end":3076,"name":"SWAP2","source":0},{"begin":2892,"end":3076,"name":"SWAP1","source":0},{"begin":2892,"end":3076,"name":"PUSH [tag]","source":0,"value":"78"},{"begin":2892,"end":3076,"name":"JUMP","source":0,"value":"[in]"},{"begin":2918,"end":3054,"name":"tag","source":2,"value":"54"},{"begin":2918,"end":3054,"name":"JUMPDEST","source":2},{"begin":3012,"end":3047,"name":"PUSH","source":2,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":3012,"end":3047,"name":"DUP2","source":2},{"begin":3012,"end":3047,"name":"AND","source":2},{"begin":982,"end":1024,"name":"PUSH","source":2,"value":"EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"},{"begin":3012,"end":3047,"name":"EQ","source":2},{"begin":2918,"end":3054,"name":"SWAP2","source":2},{"begin":2918,"end":3054,"name":"SWAP1","source":2},{"begin":2918,"end":3054,"name":"POP","source":2},{"begin":2918,"end":3054,"name":"JUMP","source":2,"value":"[out]"},{"begin":2453,"end":2732,"name":"tag","source":6,"value":"75"},{"begin":2453,"end":2732,"name":"JUMPDEST","source":6},{"begin":2576,"end":2597,"name":"PUSH","source":6,"value":"60"},{"begin":2623,"end":2646,"name":"PUSH","source":6,"value":"A9059CBB"},{"begin":2623,"end":2646,"name":"PUSH","source":6,"value":"E0"},{"begin":2623,"end":2646,"name":"SHL","source":6},{"begin":2648,"end":2650,"name":"DUP4","source":6},{"begin":2652,"end":2658,"name":"DUP4","source":6},{"begin":2600,"end":2659,"name":"PUSH","source":6,"value":"40"},{"begin":2600,"end":2659,"name":"MLOAD","source":6},{"begin":2600,"end":2659,"name":"PUSH","source":6,"value":"24"},{"begin":2600,"end":2659,"name":"ADD","source":6},{"begin":2600,"end":2659,"name":"PUSH [tag]","source":6,"value":"84"},{"begin":2600,"end":2659,"name":"SWAP3","source":6},{"begin":2600,"end":2659,"name":"SWAP2","source":6},{"begin":2600,"end":2659,"name":"SWAP1","source":6},{"begin":2600,"end":2659,"name":"PUSH [tag]","source":6,"value":"85"},{"begin":2600,"end":2659,"name":"JUMP","source":6,"value":"[in]"},{"begin":2600,"end":2659,"name":"tag","source":6,"value":"84"},{"begin":2600,"end":2659,"name":"JUMPDEST","source":6},{"begin":2600,"end":2659,"name":"PUSH","source":6,"value":"40"},{"begin":2600,"end":2659,"name":"DUP1","source":6},{"begin":2600,"end":2659,"name":"MLOAD","source":6},{"begin":2600,"end":2659,"name":"PUSH","source":6,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"},{"begin":2600,"end":2659,"name":"DUP2","source":6},{"begin":2600,"end":2659,"name":"DUP5","source":6},{"begin":2600,"end":2659,"name":"SUB","source":6},{"begin":2600,"end":2659,"name":"ADD","source":6},{"begin":2600,"end":2659,"name":"DUP2","source":6},{"begin":2600,"end":2659,"name":"MSTORE","source":6},{"begin":2600,"end":2659,"name":"SWAP2","source":6},{"begin":2600,"end":2659,"name":"SWAP1","source":6},{"begin":2600,"end":2659,"name":"MSTORE","source":6},{"begin":2600,"end":2659,"name":"PUSH","source":6,"value":"20"},{"begin":2600,"end":2659,"name":"DUP2","source":6},{"begin":2600,"end":2659,"name":"ADD","source":6},{"begin":2600,"end":2659,"name":"DUP1","source":6},{"begin":2600,"end":2659,"name":"MLOAD","source":6},{"begin":2600,"end":2659,"name":"PUSH","source":6,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":2600,"end":2659,"name":"AND","source":6},{"begin":2600,"end":2659,"name":"PUSH","source":6,"value":"FFFFFFFF00000000000000000000000000000000000000000000000000000000"},{"begin":2600,"end":2659,"name":"SWAP1","source":6},{"begin":2600,"end":2659,"name":"SWAP4","source":6},{"begin":2600,"end":2659,"name":"AND","source":6},{"begin":2600,"end":2659,"name":"SWAP3","source":6},{"begin":2600,"end":2659,"name":"SWAP1","source":6},{"begin":2600,"end":2659,"name":"SWAP3","source":6},{"begin":2600,"end":2659,"name":"OR","source":6},{"begin":2600,"end":2659,"name":"SWAP1","source":6},{"begin":2600,"end":2659,"name":"SWAP2","source":6},{"begin":2600,"end":2659,"name":"MSTORE","source":6},{"begin":2600,"end":2659,"name":"SWAP1","source":6},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":2669,"end":2725,"name":"PUSH [tag]","source":6,"value":"86"},{"begin":2708,"end":2713,"name":"DUP5","source":6},{"begin":2600,"end":2659,"name":"DUP3","source":6},{"begin":2669,"end":2699,"name":"PUSH [tag]","source":6,"value":"87"},{"begin":2669,"end":2725,"name":"JUMP","source":6,"value":"[in]"},{"begin":2669,"end":2725,"name":"tag","source":6,"value":"86"},{"begin":2669,"end":2725,"name":"JUMPDEST","source":6},{"begin":2453,"end":2732,"name":"POP","source":6},{"begin":2453,"end":2732,"name":"POP","source":6},{"begin":2453,"end":2732,"name":"POP","source":6},{"begin":2453,"end":2732,"name":"POP","source":6},{"begin":2453,"end":2732,"name":"JUMP","source":6,"value":"[out]"},{"begin":5746,"end":7050,"name":"tag","source":6,"value":"87"},{"begin":5746,"end":7050,"name":"JUMPDEST","source":6},{"begin":5844,"end":5859,"name":"PUSH","source":6,"value":"0"},{"begin":5861,"end":5884,"name":"PUSH","source":6,"value":"60"},{"begin":5888,"end":5894,"name":"DUP4","source":6},{"begin":5888,"end":5899,"name":"PUSH","source":6,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":5888,"end":5899,"name":"AND","source":6},{"begin":5900,"end":5908,"name":"DUP4","source":6},{"begin":5888,"end":5909,"name":"PUSH","source":6,"value":"40"},{"begin":5888,"end":5909,"name":"MLOAD","source":6},{"begin":5888,"end":5909,"name":"PUSH [tag]","source":6,"value":"89"},{"begin":5888,"end":5909,"name":"SWAP2","source":6},{"begin":5888,"end":5909,"name":"SWAP1","source":6},{"begin":5888,"end":5909,"name":"PUSH [tag]","source":6,"value":"90"},{"begin":5888,"end":5909,"name":"JUMP","source":6,"value":"[in]"},{"begin":5888,"end":5909,"name":"tag","source":6,"value":"89"},{"begin":5888,"end":5909,"name":"JUMPDEST","source":6},{"begin":5888,"end":5909,"name":"PUSH","source":6,"value":"0"},{"begin":5888,"end":5909,"name":"PUSH","source":6,"value":"40"},{"begin":5888,"end":5909,"name":"MLOAD","source":6},{"begin":5888,"end":5909,"name":"DUP1","source":6},{"begin":5888,"end":5909,"name":"DUP4","source":6},{"begin":5888,"end":5909,"name":"SUB","source":6},{"begin":5888,"end":5909,"name":"DUP2","source":6},{"begin":5888,"end":5909,"name":"PUSH","source":6,"value":"0"},{"begin":5888,"end":5909,"name":"DUP7","source":6},{"begin":5888,"end":5909,"name":"GAS","source":6},{"begin":5888,"end":5909,"name":"CALL","source":6},{"begin":5888,"end":5909,"name":"SWAP2","source":6},{"begin":5888,"end":5909,"name":"POP","source":6},{"begin":5888,"end":5909,"name":"POP","source":6},{"begin":5888,"end":5909,"name":"RETURNDATASIZE","source":6},{"begin":5888,"end":5909,"name":"DUP1","source":6},{"begin":5888,"end":5909,"name":"PUSH","source":6,"value":"0"},{"begin":5888,"end":5909,"name":"DUP2","source":6},{"begin":5888,"end":5909,"name":"EQ","source":6},{"begin":5888,"end":5909,"name":"PUSH [tag]","source":6,"value":"93"},{"begin":5888,"end":5909,"name":"JUMPI","source":6},{"begin":5888,"end":5909,"name":"PUSH","source":6,"value":"40"},{"begin":5888,"end":5909,"name":"MLOAD","source":6},{"begin":5888,"end":5909,"name":"SWAP2","source":6},{"begin":5888,"end":5909,"name":"POP","source":6},{"begin":5888,"end":5909,"name":"PUSH","source":6,"value":"1F"},{"begin":5888,"end":5909,"name":"NOT","source":6},{"begin":5888,"end":5909,"name":"PUSH","source":6,"value":"3F"},{"begin":5888,"end":5909,"name":"RETURNDATASIZE","source":6},{"begin":5888,"end":5909,"name":"ADD","source":6},{"begin":5888,"end":5909,"name":"AND","source":6},{"begin":5888,"end":5909,"name":"DUP3","source":6},{"begin":5888,"end":5909,"name":"ADD","source":6},{"begin":5888,"end":5909,"name":"PUSH","source":6,"value":"40"},{"begin":5888,"end":5909,"name":"MSTORE","source":6},{"begin":5888,"end":5909,"name":"RETURNDATASIZE","source":6},{"begin":5888,"end":5909,"name":"DUP3","source":6},{"begin":5888,"end":5909,"name":"MSTORE","source":6},{"begin":5888,"end":5909,"name":"RETURNDATASIZE","source":6},{"begin":5888,"end":5909,"name":"PUSH","source":6,"value":"0"},{"begin":5888,"end":5909,"name":"PUSH","source":6,"value":"20"},{"begin":5888,"end":5909,"name":"DUP5","source":6},{"begin":5888,"end":5909,"name":"ADD","source":6},{"begin":5888,"end":5909,"name":"RETURNDATACOPY","source":6},{"begin":5888,"end":5909,"name":"PUSH [tag]","source":6,"value":"92"},{"begin":5888,"end":5909,"name":"JUMP","source":6},{"begin":5888,"end":5909,"name":"tag","source":6,"value":"93"},{"begin":5888,"end":5909,"name":"JUMPDEST","source":6},{"begin":5888,"end":5909,"name":"PUSH","source":6,"value":"60"},{"begin":5888,"end":5909,"name":"SWAP2","source":6},{"begin":5888,"end":5909,"name":"POP","source":6},{"begin":5888,"end":5909,"name":"tag","source":6,"value":"92"},{"begin":5888,"end":5909,"name":"JUMPDEST","source":6},{"begin":5888,"end":5909,"name":"POP","source":6},{"begin":5843,"end":5909,"name":"SWAP2","source":6},{"begin":5843,"end":5909,"name":"POP","source":6},{"begin":5843,"end":5909,"name":"SWAP2","source":6},{"begin":5843,"end":5909,"name":"POP","source":6},{"begin":5964,"end":5974,"name":"DUP2","source":6},{"begin":5959,"end":6037,"name":"PUSH [tag]","source":6,"value":"95"},{"begin":5959,"end":6037,"name":"JUMPI","source":6},{"begin":5990,"end":6026,"name":"PUSH [tag]","source":6,"value":"95"},{"begin":6015,"end":6025,"name":"DUP2","source":6},{"begin":5990,"end":6014,"name":"PUSH [tag]","source":6,"value":"47"},{"begin":5990,"end":6026,"name":"JUMP","source":6,"value":"[in]"},{"begin":5990,"end":6026,"name":"tag","source":6,"value":"95"},{"begin":5990,"end":6026,"name":"JUMPDEST","source":6},{"begin":6205,"end":6222,"name":"DUP1","source":6},{"begin":6205,"end":6222,"name":"MLOAD","source":6},{"begin":6201,"end":6441,"name":"PUSH [tag]","source":6,"value":"96"},{"begin":6201,"end":6441,"name":"JUMPI","source":6},{"begin":6304,"end":6323,"name":"DUP4","source":6},{"begin":6304,"end":6323,"name":"EXTCODESIZE","source":6},{"begin":6358,"end":6366,"name":"DUP1","source":6},{"begin":6350,"end":6410,"name":"PUSH [tag]","source":6,"value":"97"},{"begin":6350,"end":6410,"name":"JUMPI","source":6},{"begin":6350,"end":6410,"name":"PUSH","source":6,"value":"40"},{"begin":6350,"end":6410,"name":"MLOAD","source":6},{"begin":6350,"end":6410,"name":"PUSH","source":6,"value":"8C379A000000000000000000000000000000000000000000000000000000000"},{"begin":6350,"end":6410,"name":"DUP2","source":6},{"begin":6350,"end":6410,"name":"MSTORE","source":6},{"begin":6350,"end":6410,"name":"PUSH","source":6,"value":"4"},{"begin":6350,"end":6410,"name":"ADD","source":6},{"begin":6350,"end":6410,"name":"PUSH [tag]","source":6,"value":"71"},{"begin":6350,"end":6410,"name":"SWAP1","source":6},{"begin":6350,"end":6410,"name":"PUSH [tag]","source":6,"value":"99"},{"begin":6350,"end":6410,"name":"JUMP","source":6,"value":"[in]"},{"begin":6350,"end":6410,"name":"tag","source":6,"value":"97"},{"begin":6350,"end":6410,"name":"JUMPDEST","source":6},{"begin":6424,"end":6431,"name":"POP","source":6},{"begin":6424,"end":6431,"name":"POP","source":6},{"begin":6424,"end":6431,"name":"POP","source":6},{"begin":6424,"end":6431,"name":"PUSH [tag]","source":6,"value":"88"},{"begin":6424,"end":6431,"name":"JUMP","source":6},{"begin":6201,"end":6441,"name":"tag","source":6,"value":"96"},{"begin":6201,"end":6441,"name":"JUMPDEST","source":6},{"begin":6671,"end":6673,"name":"PUSH","source":6,"value":"20"},{"begin":6650,"end":6660,"name":"DUP2","source":6},{"begin":6650,"end":6667,"name":"MLOAD","source":6},{"begin":6650,"end":6673,"name":"LT","source":6},{"begin":6646,"end":6899,"name":"PUSH [tag]","source":6,"value":"100"},{"begin":6646,"end":6899,"name":"JUMPI","source":6},{"begin":6689,"end":6703,"name":"PUSH","source":6,"value":"0"},{"begin":6706,"end":6744,"name":"PUSH [tag]","source":6,"value":"101"},{"begin":6730,"end":6740,"name":"DUP3","source":6},{"begin":6742,"end":6743,"name":"PUSH","source":6,"value":"0"},{"begin":6706,"end":6729,"name":"PUSH [tag]","source":6,"value":"102"},{"begin":6706,"end":6744,"name":"JUMP","source":6,"value":"[in]"},{"begin":6706,"end":6744,"name":"tag","source":6,"value":"101"},{"begin":6706,"end":6744,"name":"JUMPDEST","source":6},{"begin":6689,"end":6744,"name":"SWAP1","source":6},{"begin":6689,"end":6744,"name":"POP","source":6},{"begin":6762,"end":6768,"name":"DUP1","source":6},{"begin":6772,"end":6773,"name":"PUSH","source":6,"value":"1"},{"begin":6762,"end":6773,"name":"EQ","source":6},{"begin":6758,"end":6889,"name":"ISZERO","source":6},{"begin":6758,"end":6889,"name":"PUSH [tag]","source":6,"value":"103"},{"begin":6758,"end":6889,"name":"JUMPI","source":6},{"begin":6793,"end":6800,"name":"POP","source":6},{"begin":6793,"end":6800,"name":"POP","source":6},{"begin":6793,"end":6800,"name":"POP","source":6},{"begin":6793,"end":6800,"name":"PUSH [tag]","source":6,"value":"88"},{"begin":6793,"end":6800,"name":"JUMP","source":6},{"begin":6758,"end":6889,"name":"tag","source":6,"value":"103"},{"begin":6758,"end":6889,"name":"JUMPDEST","source":6},{"begin":6838,"end":6874,"name":"PUSH [tag]","source":6,"value":"105"},{"begin":6863,"end":6873,"name":"DUP3","source":6},{"begin":6838,"end":6862,"name":"PUSH [tag]","source":6,"value":"47"},{"begin":6838,"end":6874,"name":"JUMP","source":6,"value":"[in]"},{"begin":6838,"end":6874,"name":"tag","source":6,"value":"105"},{"begin":6838,"end":6874,"name":"JUMPDEST","source":6},{"begin":6646,"end":6899,"name":"POP","source":6},{"begin":6646,"end":6899,"name":"tag","source":6,"value":"100"},{"begin":6646,"end":6899,"name":"JUMPDEST","source":6},{"begin":7007,"end":7043,"name":"PUSH [tag]","source":6,"value":"86"},{"begin":7032,"end":7042,"name":"DUP2","source":6},{"begin":7007,"end":7031,"name":"PUSH [tag]","source":6,"value":"47"},{"begin":7007,"end":7043,"name":"JUMP","source":6,"value":"[in]"},{"begin":5746,"end":7050,"name":"tag","source":6,"value":"88"},{"begin":5746,"end":7050,"name":"JUMPDEST","source":6},{"begin":5746,"end":7050,"name":"POP","source":6},{"begin":5746,"end":7050,"name":"POP","source":6},{"begin":5746,"end":7050,"name":"JUMP","source":6,"value":"[out]"},{"begin":16226,"end":16396,"name":"tag","source":7,"value":"102"},{"begin":16226,"end":16396,"name":"JUMPDEST","source":7},{"begin":16301,"end":16315,"name":"PUSH","source":7,"value":"0"},{"begin":16344,"end":16365,"name":"PUSH [tag]","source":7,"value":"60"},{"begin":16356,"end":16357,"name":"DUP4","source":7},{"begin":16359,"end":16364,"name":"DUP4","source":7},{"begin":14458,"end":14472,"name":"PUSH","source":7,"value":"0"},{"begin":14499,"end":14504,"name":"DUP2","source":7},{"begin":14507,"end":14509,"name":"PUSH","source":7,"value":"20"},{"begin":14499,"end":14509,"name":"ADD","source":7},{"begin":14488,"end":14489,"name":"DUP4","source":7},{"begin":14488,"end":14496,"name":"MLOAD","source":7},{"begin":14488,"end":14509,"name":"LT","source":7},{"begin":14484,"end":14836,"name":"ISZERO","source":7},{"begin":14484,"end":14836,"name":"PUSH [tag]","source":7,"value":"112"},{"begin":14484,"end":14836,"name":"JUMPI","source":7},{"begin":14525,"end":14825,"name":"PUSH [tag]","source":7,"value":"112"},{"begin":14567,"end":14811,"name":"PUSH [tag]","source":7,"value":"45"},{"begin":14636,"end":14731,"name":"PUSH","source":7,"value":"5"},{"begin":14753,"end":14754,"name":"DUP6","source":7},{"begin":14753,"end":14761,"name":"MLOAD","source":7},{"begin":14783,"end":14788,"name":"DUP6","source":7},{"begin":14791,"end":14793,"name":"PUSH","source":7,"value":"20"},{"begin":14783,"end":14793,"name":"ADD","source":7},{"begin":14567,"end":14614,"name":"PUSH [tag]","source":7,"value":"114"},{"begin":14567,"end":14811,"name":"JUMP","source":7,"value":"[in]"},{"begin":14525,"end":14825,"name":"tag","source":7,"value":"112"},{"begin":14525,"end":14825,"name":"JUMPDEST","source":7},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":15014,"end":15027,"name":"ADD","source":7},{"begin":14916,"end":14918,"name":"PUSH","source":7,"value":"20"},{"begin":15014,"end":15027,"name":"ADD","source":7},{"begin":15008,"end":15028,"name":"MLOAD","source":7},{"begin":15008,"end":15028,"name":"SWAP1","source":7},{"begin":14383,"end":15067,"name":"JUMP","source":7,"value":"[out]"},{"begin":1324,"end":1616,"name":"tag","source":9,"value":"114"},{"begin":1324,"end":1616,"name":"JUMPDEST","source":9},{"begin":1488,"end":1500,"name":"PUSH","source":9,"value":"60"},{"begin":1264,"end":1274,"name":"PUSH","source":9,"value":"28006595"},{"begin":1542,"end":1579,"name":"PUSH","source":9,"value":"E0"},{"begin":1542,"end":1579,"name":"SHL","source":9},{"begin":1581,"end":1590,"name":"DUP5","source":9},{"begin":1592,"end":1598,"name":"DUP5","source":9},{"begin":1600,"end":1608,"name":"DUP5","source":9},{"begin":1519,"end":1609,"name":"PUSH","source":9,"value":"40"},{"begin":1519,"end":1609,"name":"MLOAD","source":9},{"begin":1519,"end":1609,"name":"PUSH","source":9,"value":"24"},{"begin":1519,"end":1609,"name":"ADD","source":9},{"begin":1519,"end":1609,"name":"PUSH [tag]","source":9,"value":"116"},{"begin":1519,"end":1609,"name":"SWAP4","source":9},{"begin":1519,"end":1609,"name":"SWAP3","source":9},{"begin":1519,"end":1609,"name":"SWAP2","source":9},{"begin":1519,"end":1609,"name":"SWAP1","source":9},{"begin":1519,"end":1609,"name":"PUSH [tag]","source":9,"value":"117"},{"begin":1519,"end":1609,"name":"JUMP","source":9,"value":"[in]"},{"begin":1519,"end":1609,"name":"tag","source":9,"value":"116"},{"begin":1519,"end":1609,"name":"JUMPDEST","source":9},{"begin":1519,"end":1609,"name":"PUSH","source":9,"value":"40"},{"begin":1519,"end":1609,"name":"DUP1","source":9},{"begin":1519,"end":1609,"name":"MLOAD","source":9},{"begin":1519,"end":1609,"name":"PUSH","source":9,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"},{"begin":1519,"end":1609,"name":"DUP2","source":9},{"begin":1519,"end":1609,"name":"DUP5","source":9},{"begin":1519,"end":1609,"name":"SUB","source":9},{"begin":1519,"end":1609,"name":"ADD","source":9},{"begin":1519,"end":1609,"name":"DUP2","source":9},{"begin":1519,"end":1609,"name":"MSTORE","source":9},{"begin":1519,"end":1609,"name":"SWAP2","source":9},{"begin":1519,"end":1609,"name":"SWAP1","source":9},{"begin":1519,"end":1609,"name":"MSTORE","source":9},{"begin":1519,"end":1609,"name":"PUSH","source":9,"value":"20"},{"begin":1519,"end":1609,"name":"DUP2","source":9},{"begin":1519,"end":1609,"name":"ADD","source":9},{"begin":1519,"end":1609,"name":"DUP1","source":9},{"begin":1519,"end":1609,"name":"MLOAD","source":9},{"begin":1519,"end":1609,"name":"PUSH","source":9,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":1519,"end":1609,"name":"AND","source":9},{"begin":1519,"end":1609,"name":"PUSH","source":9,"value":"FFFFFFFF00000000000000000000000000000000000000000000000000000000"},{"begin":1519,"end":1609,"name":"SWAP1","source":9},{"begin":1519,"end":1609,"name":"SWAP4","source":9},{"begin":1519,"end":1609,"name":"AND","source":9},{"begin":1519,"end":1609,"name":"SWAP3","source":9},{"begin":1519,"end":1609,"name":"SWAP1","source":9},{"begin":1519,"end":1609,"name":"SWAP3","source":9},{"begin":1519,"end":1609,"name":"OR","source":9},{"begin":1519,"end":1609,"name":"SWAP1","source":9},{"begin":1519,"end":1609,"name":"SWAP2","source":9},{"begin":1519,"end":1609,"name":"MSTORE","source":9},{"begin":1519,"end":1609,"name":"SWAP1","source":9},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":1324,"end":1616,"name":"SWAP4","source":9},{"begin":1324,"end":1616,"name":"SWAP3","source":9},{"begin":1324,"end":1616,"name":"POP","source":9},{"begin":1324,"end":1616,"name":"POP","source":9},{"begin":1324,"end":1616,"name":"POP","source":9},{"begin":1324,"end":1616,"name":"JUMP","source":9,"value":"[out]"},{"begin":-1,"end":-1,"name":"tag","source":-1,"value":"22"},{"begin":-1,"end":-1,"name":"JUMPDEST","source":-1},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"40"},{"begin":-1,"end":-1,"name":"MLOAD","source":-1},{"begin":-1,"end":-1,"name":"DUP1","source":-1},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"40"},{"begin":-1,"end":-1,"name":"ADD","source":-1},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"40"},{"begin":-1,"end":-1,"name":"MSTORE","source":-1},{"begin":-1,"end":-1,"name":"DUP1","source":-1},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"60"},{"begin":-1,"end":-1,"name":"DUP2","source":-1},{"begin":-1,"end":-1,"name":"MSTORE","source":-1},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"20"},{"begin":-1,"end":-1,"name":"ADD","source":-1},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"60"},{"begin":-1,"end":-1,"name":"DUP2","source":-1},{"begin":-1,"end":-1,"name":"MSTORE","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"SWAP1","source":-1},{"begin":-1,"end":-1,"name":"JUMP","source":-1,"value":"[out]"},{"begin":994,"end":1701,"name":"tag","source":-1,"value":"119"},{"begin":994,"end":1701,"name":"JUMPDEST","source":-1},{"begin":994,"end":1701,"name":"PUSH","source":-1,"value":"0"},{"begin":1111,"end":1114,"name":"DUP3","source":-1},{"begin":1104,"end":1108,"name":"PUSH","source":-1,"value":"1F"},{"begin":1096,"end":1102,"name":"DUP4","source":-1},{"begin":1092,"end":1109,"name":"ADD","source":-1},{"begin":1088,"end":1115,"name":"SLT","source":-1},{"begin":1078,"end":1080,"name":"PUSH [tag]","source":-1,"value":"121"},{"begin":1078,"end":1080,"name":"JUMPI","source":-1},{"begin":-1,"end":-1,"name":"DUP1","source":-1},{"begin":-1,"end":-1,"name":"DUP2","source":-1},{"begin":1119,"end":1131,"name":"REVERT","source":-1},{"begin":1078,"end":1080,"name":"tag","source":-1,"value":"121"},{"begin":1078,"end":1080,"name":"JUMPDEST","source":-1},{"begin":1166,"end":1172,"name":"DUP2","source":-1},{"begin":1153,"end":1173,"name":"CALLDATALOAD","source":-1},{"begin":1188,"end":1268,"name":"PUSH [tag]","source":-1,"value":"122"},{"begin":1203,"end":1267,"name":"PUSH [tag]","source":-1,"value":"123"},{"begin":1260,"end":1266,"name":"DUP3","source":-1},{"begin":1203,"end":1267,"name":"PUSH [tag]","source":-1,"value":"124"},{"begin":1203,"end":1267,"name":"JUMP","source":-1,"value":"[in]"},{"begin":1203,"end":1267,"name":"tag","source":-1,"value":"123"},{"begin":1203,"end":1267,"name":"JUMPDEST","source":-1},{"begin":1188,"end":1268,"name":"PUSH [tag]","source":-1,"value":"125"},{"begin":1188,"end":1268,"name":"JUMP","source":-1,"value":"[in]"},{"begin":1188,"end":1268,"name":"tag","source":-1,"value":"122"},{"begin":1188,"end":1268,"name":"JUMPDEST","source":-1},{"begin":1296,"end":1317,"name":"DUP2","source":-1},{"begin":1296,"end":1317,"name":"DUP2","source":-1},{"begin":1296,"end":1317,"name":"MSTORE","source":-1},{"begin":1179,"end":1268,"name":"SWAP2","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":1340,"end":1344,"name":"PUSH","source":-1,"value":"20"},{"begin":1353,"end":1367,"name":"DUP1","source":-1},{"begin":1353,"end":1367,"name":"DUP4","source":-1},{"begin":1353,"end":1367,"name":"ADD","source":-1},{"begin":1353,"end":1367,"name":"SWAP1","source":-1},{"begin":1328,"end":1345,"name":"DUP5","source":-1},{"begin":1328,"end":1345,"name":"DUP2","source":-1},{"begin":1328,"end":1345,"name":"ADD","source":-1},{"begin":1442,"end":1459,"name":"DUP2","source":-1},{"begin":1442,"end":1459,"name":"DUP5","source":-1},{"begin":1442,"end":1459,"name":"MUL","source":-1},{"begin":1433,"end":1460,"name":"DUP7","source":-1},{"begin":1433,"end":1460,"name":"ADD","source":-1},{"begin":1433,"end":1460,"name":"DUP3","source":-1},{"begin":1433,"end":1460,"name":"ADD","source":-1},{"begin":1430,"end":1466,"name":"DUP8","source":-1},{"begin":-1,"end":-1,"name":"LT","source":-1},{"begin":1427,"end":1429,"name":"ISZERO","source":-1},{"begin":1427,"end":1429,"name":"PUSH [tag]","source":-1,"value":"126"},{"begin":1427,"end":1429,"name":"JUMPI","source":-1},{"begin":1479,"end":1480,"name":"PUSH","source":-1,"value":"0"},{"begin":1479,"end":1480,"name":"DUP1","source":-1},{"begin":1469,"end":1481,"name":"REVERT","source":-1},{"begin":1427,"end":1429,"name":"tag","source":-1,"value":"126"},{"begin":1427,"end":1429,"name":"JUMPDEST","source":-1},{"begin":1504,"end":1505,"name":"PUSH","source":-1,"value":"0"},{"begin":1489,"end":1695,"name":"tag","source":-1,"value":"127"},{"begin":1489,"end":1695,"name":"JUMPDEST","source":-1},{"begin":1514,"end":1520,"name":"DUP5","source":-1},{"begin":1511,"end":1512,"name":"DUP2","source":-1},{"begin":1508,"end":1521,"name":"LT","source":-1},{"begin":1489,"end":1695,"name":"ISZERO","source":-1},{"begin":1489,"end":1695,"name":"PUSH [tag]","source":-1,"value":"129"},{"begin":1489,"end":1695,"name":"JUMPI","source":-1},{"begin":2958,"end":2978,"name":"DUP2","source":-1},{"begin":2958,"end":2978,"name":"CALLDATALOAD","source":-1},{"begin":1582,"end":1632,"name":"DUP5","source":-1},{"begin":1582,"end":1632,"name":"MSTORE","source":-1},{"begin":1646,"end":1660,"name":"SWAP3","source":-1},{"begin":1646,"end":1660,"name":"DUP3","source":-1},{"begin":1646,"end":1660,"name":"ADD","source":-1},{"begin":1646,"end":1660,"name":"SWAP3","source":-1},{"begin":1674,"end":1688,"name":"SWAP1","source":-1},{"begin":1674,"end":1688,"name":"DUP3","source":-1},{"begin":1674,"end":1688,"name":"ADD","source":-1},{"begin":1674,"end":1688,"name":"SWAP1","source":-1},{"begin":1536,"end":1537,"name":"PUSH","source":-1,"value":"1"},{"begin":1529,"end":1538,"name":"ADD","source":-1},{"begin":1489,"end":1695,"name":"PUSH [tag]","source":-1,"value":"127"},{"begin":1489,"end":1695,"name":"JUMP","source":-1},{"begin":1489,"end":1695,"name":"tag","source":-1,"value":"129"},{"begin":1489,"end":1695,"name":"JUMPDEST","source":-1},{"begin":1493,"end":1507,"name":"POP","source":-1},{"begin":1493,"end":1507,"name":"POP","source":-1},{"begin":1493,"end":1507,"name":"POP","source":-1},{"begin":1493,"end":1507,"name":"POP","source":-1},{"begin":1493,"end":1507,"name":"POP","source":-1},{"begin":1071,"end":1701,"name":"SWAP3","source":-1},{"begin":1071,"end":1701,"name":"SWAP2","source":-1},{"begin":1071,"end":1701,"name":"POP","source":-1},{"begin":1071,"end":1701,"name":"POP","source":-1},{"begin":1071,"end":1701,"name":"JUMP","source":-1,"value":"[out]"},{"begin":1709,"end":1885,"name":"tag","source":-1,"value":"130"},{"begin":1709,"end":1885,"name":"JUMPDEST","source":-1},{"begin":1799,"end":1819,"name":"DUP1","source":-1},{"begin":1799,"end":1819,"name":"CALLDATALOAD","source":-1},{"begin":1824,"end":1880,"name":"PUSH [tag]","source":-1,"value":"52"},{"begin":1799,"end":1819,"name":"DUP2","source":-1},{"begin":1824,"end":1880,"name":"PUSH [tag]","source":-1,"value":"133"},{"begin":1824,"end":1880,"name":"JUMP","source":-1,"value":"[in]"},{"begin":3169,"end":3426,"name":"tag","source":-1,"value":"14"},{"begin":3169,"end":3426,"name":"JUMPDEST","source":-1},{"begin":3169,"end":3426,"name":"PUSH","source":-1,"value":"0"},{"begin":3281,"end":3283,"name":"PUSH","source":-1,"value":"20"},{"begin":3269,"end":3278,"name":"DUP3","source":-1},{"begin":3260,"end":3267,"name":"DUP5","source":-1},{"begin":3256,"end":3279,"name":"SUB","source":-1},{"begin":3252,"end":3284,"name":"SLT","source":-1},{"begin":3249,"end":3251,"name":"ISZERO","source":-1},{"begin":3249,"end":3251,"name":"PUSH [tag]","source":-1,"value":"135"},{"begin":3249,"end":3251,"name":"JUMPI","source":-1},{"begin":-1,"end":-1,"name":"DUP1","source":-1},{"begin":-1,"end":-1,"name":"DUP2","source":-1},{"begin":3287,"end":3299,"name":"REVERT","source":-1},{"begin":3249,"end":3251,"name":"tag","source":-1,"value":"135"},{"begin":3249,"end":3251,"name":"JUMPDEST","source":-1},{"begin":93,"end":99,"name":"DUP2","source":-1},{"begin":80,"end":100,"name":"CALLDATALOAD","source":-1},{"begin":105,"end":146,"name":"PUSH [tag]","source":-1,"value":"136"},{"begin":140,"end":145,"name":"DUP2","source":-1},{"begin":105,"end":146,"name":"PUSH [tag]","source":-1,"value":"133"},{"begin":105,"end":146,"name":"JUMP","source":-1,"value":"[in]"},{"begin":105,"end":146,"name":"tag","source":-1,"value":"136"},{"begin":105,"end":146,"name":"JUMPDEST","source":-1},{"begin":3339,"end":3410,"name":"SWAP4","source":-1},{"begin":3243,"end":3426,"name":"SWAP3","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":3243,"end":3426,"name":"JUMP","source":-1,"value":"[out]"},{"begin":3433,"end":3830,"name":"tag","source":-1,"value":"8"},{"begin":3433,"end":3830,"name":"JUMPDEST","source":-1},{"begin":3433,"end":3830,"name":"PUSH","source":-1,"value":"0"},{"begin":3572,"end":3574,"name":"PUSH","source":-1,"value":"20"},{"begin":3560,"end":3569,"name":"DUP3","source":-1},{"begin":3551,"end":3558,"name":"DUP5","source":-1},{"begin":3547,"end":3570,"name":"SUB","source":-1},{"begin":3543,"end":3575,"name":"SLT","source":-1},{"begin":3540,"end":3542,"name":"ISZERO","source":-1},{"begin":3540,"end":3542,"name":"PUSH [tag]","source":-1,"value":"138"},{"begin":3540,"end":3542,"name":"JUMPI","source":-1},{"begin":-1,"end":-1,"name":"DUP1","source":-1},{"begin":-1,"end":-1,"name":"DUP2","source":-1},{"begin":3578,"end":3590,"name":"REVERT","source":-1},{"begin":3540,"end":3542,"name":"tag","source":-1,"value":"138"},{"begin":3540,"end":3542,"name":"JUMPDEST","source":-1},{"begin":3636,"end":3653,"name":"DUP2","source":-1},{"begin":3623,"end":3654,"name":"CALLDATALOAD","source":-1},{"begin":3674,"end":3692,"name":"PUSH","source":-1,"value":"FFFFFFFFFFFFFFFF"},{"begin":3666,"end":3672,"name":"DUP2","source":-1},{"begin":3663,"end":3693,"name":"GT","source":-1},{"begin":3660,"end":3662,"name":"ISZERO","source":-1},{"begin":3660,"end":3662,"name":"PUSH [tag]","source":-1,"value":"139"},{"begin":3660,"end":3662,"name":"JUMPI","source":-1},{"begin":-1,"end":-1,"name":"DUP2","source":-1},{"begin":-1,"end":-1,"name":"DUP3","source":-1},{"begin":3696,"end":3708,"name":"REVERT","source":-1},{"begin":3660,"end":3662,"name":"tag","source":-1,"value":"139"},{"begin":3660,"end":3662,"name":"JUMPDEST","source":-1},{"begin":3782,"end":3804,"name":"DUP3","source":-1},{"begin":3782,"end":3804,"name":"ADD","source":-1},{"begin":2061,"end":2063,"name":"PUSH","source":-1,"value":"60"},{"begin":2043,"end":2059,"name":"DUP2","source":-1},{"begin":2043,"end":2059,"name":"DUP6","source":-1},{"begin":2043,"end":2059,"name":"SUB","source":-1},{"begin":2039,"end":2064,"name":"SLT","source":-1},{"begin":2036,"end":2038,"name":"ISZERO","source":-1},{"begin":2036,"end":2038,"name":"PUSH [tag]","source":-1,"value":"136"},{"begin":2036,"end":2038,"name":"JUMPI","source":-1},{"begin":-1,"end":-1,"name":"DUP2","source":-1},{"begin":-1,"end":-1,"name":"DUP3","source":-1},{"begin":2067,"end":2079,"name":"REVERT","source":-1},{"begin":3837,"end":4224,"name":"tag","source":-1,"value":"26"},{"begin":3837,"end":4224,"name":"JUMPDEST","source":-1},{"begin":3837,"end":4224,"name":"PUSH","source":-1,"value":"0"},{"begin":3971,"end":3973,"name":"PUSH","source":-1,"value":"20"},{"begin":3971,"end":3973,"name":"DUP1","source":-1},{"begin":3959,"end":3968,"name":"DUP4","source":-1},{"begin":3950,"end":3957,"name":"DUP6","source":-1},{"begin":3946,"end":3969,"name":"SUB","source":-1},{"begin":3942,"end":3974,"name":"SLT","source":-1},{"begin":3939,"end":3941,"name":"ISZERO","source":-1},{"begin":3939,"end":3941,"name":"PUSH [tag]","source":-1,"value":"142"},{"begin":3939,"end":3941,"name":"JUMPI","source":-1},{"begin":-1,"end":-1,"name":"DUP2","source":-1},{"begin":-1,"end":-1,"name":"DUP3","source":-1},{"begin":3977,"end":3989,"name":"REVERT","source":-1},{"begin":3939,"end":3941,"name":"tag","source":-1,"value":"142"},{"begin":3939,"end":3941,"name":"JUMPDEST","source":-1},{"begin":4035,"end":4052,"name":"DUP3","source":-1},{"begin":4022,"end":4053,"name":"CALLDATALOAD","source":-1},{"begin":4073,"end":4091,"name":"PUSH","source":-1,"value":"FFFFFFFFFFFFFFFF"},{"begin":4073,"end":4091,"name":"DUP1","source":-1},{"begin":4065,"end":4071,"name":"DUP3","source":-1},{"begin":4062,"end":4092,"name":"GT","source":-1},{"begin":4059,"end":4061,"name":"ISZERO","source":-1},{"begin":4059,"end":4061,"name":"PUSH [tag]","source":-1,"value":"143"},{"begin":4059,"end":4061,"name":"JUMPI","source":-1},{"begin":-1,"end":-1,"name":"DUP4","source":-1},{"begin":-1,"end":-1,"name":"DUP5","source":-1},{"begin":4095,"end":4107,"name":"REVERT","source":-1},{"begin":4059,"end":4061,"name":"tag","source":-1,"value":"143"},{"begin":4059,"end":4061,"name":"JUMPDEST","source":-1},{"begin":4176,"end":4198,"name":"SWAP1","source":-1},{"begin":4176,"end":4198,"name":"DUP5","source":-1},{"begin":4176,"end":4198,"name":"ADD","source":-1},{"begin":4176,"end":4198,"name":"SWAP1","source":-1},{"begin":2281,"end":2285,"name":"PUSH","source":-1,"value":"40"},{"begin":2260,"end":2279,"name":"DUP3","source":-1},{"begin":2260,"end":2279,"name":"DUP8","source":-1},{"begin":2260,"end":2279,"name":"SUB","source":-1},{"begin":2256,"end":2286,"name":"SLT","source":-1},{"begin":2253,"end":2255,"name":"ISZERO","source":-1},{"begin":2253,"end":2255,"name":"PUSH [tag]","source":-1,"value":"144"},{"begin":2253,"end":2255,"name":"JUMPI","source":-1},{"begin":-1,"end":-1,"name":"DUP4","source":-1},{"begin":-1,"end":-1,"name":"DUP5","source":-1},{"begin":2289,"end":2301,"name":"REVERT","source":-1},{"begin":2253,"end":2255,"name":"tag","source":-1,"value":"144"},{"begin":2253,"end":2255,"name":"JUMPDEST","source":-1},{"begin":2317,"end":2337,"name":"PUSH [tag]","source":-1,"value":"145"},{"begin":2281,"end":2285,"name":"PUSH","source":-1,"value":"40"},{"begin":2317,"end":2337,"name":"PUSH [tag]","source":-1,"value":"125"},{"begin":2317,"end":2337,"name":"JUMP","source":-1,"value":"[in]"},{"begin":2317,"end":2337,"name":"tag","source":-1,"value":"145"},{"begin":2317,"end":2337,"name":"JUMPDEST","source":-1},{"begin":2402,"end":2419,"name":"DUP3","source":-1},{"begin":2389,"end":2420,"name":"CALLDATALOAD","source":-1},{"begin":4073,"end":4091,"name":"DUP3","source":-1},{"begin":2432,"end":2438,"name":"DUP2","source":-1},{"begin":2429,"end":2459,"name":"GT","source":-1},{"begin":2426,"end":2428,"name":"ISZERO","source":-1},{"begin":2426,"end":2428,"name":"PUSH [tag]","source":-1,"value":"146"},{"begin":2426,"end":2428,"name":"JUMPI","source":-1},{"begin":-1,"end":-1,"name":"DUP6","source":-1},{"begin":-1,"end":-1,"name":"DUP7","source":-1},{"begin":2462,"end":2474,"name":"REVERT","source":-1},{"begin":2426,"end":2428,"name":"tag","source":-1,"value":"146"},{"begin":2426,"end":2428,"name":"JUMPDEST","source":-1},{"begin":2576,"end":2598,"name":"DUP4","source":-1},{"begin":2576,"end":2598,"name":"ADD","source":-1},{"begin":325,"end":329,"name":"PUSH","source":-1,"value":"1F"},{"begin":313,"end":330,"name":"DUP2","source":-1},{"begin":313,"end":330,"name":"ADD","source":-1},{"begin":309,"end":336,"name":"DUP9","source":-1},{"begin":-1,"end":-1,"name":"SGT","source":-1},{"begin":299,"end":301,"name":"PUSH [tag]","source":-1,"value":"147"},{"begin":299,"end":301,"name":"JUMPI","source":-1},{"begin":-1,"end":-1,"name":"DUP6","source":-1},{"begin":-1,"end":-1,"name":"DUP7","source":-1},{"begin":340,"end":352,"name":"REVERT","source":-1},{"begin":299,"end":301,"name":"tag","source":-1,"value":"147"},{"begin":299,"end":301,"name":"JUMPDEST","source":-1},{"begin":387,"end":393,"name":"DUP1","source":-1},{"begin":374,"end":394,"name":"CALLDATALOAD","source":-1},{"begin":409,"end":512,"name":"PUSH [tag]","source":-1,"value":"148"},{"begin":424,"end":511,"name":"PUSH [tag]","source":-1,"value":"123"},{"begin":504,"end":510,"name":"DUP3","source":-1},{"begin":424,"end":511,"name":"PUSH [tag]","source":-1,"value":"124"},{"begin":424,"end":511,"name":"JUMP","source":-1,"value":"[in]"},{"begin":409,"end":512,"name":"tag","source":-1,"value":"148"},{"begin":409,"end":512,"name":"JUMPDEST","source":-1},{"begin":540,"end":561,"name":"DUP2","source":-1},{"begin":540,"end":561,"name":"DUP2","source":-1},{"begin":540,"end":561,"name":"MSTORE","source":-1},{"begin":597,"end":611,"name":"DUP7","source":-1},{"begin":597,"end":611,"name":"DUP2","source":-1},{"begin":597,"end":611,"name":"ADD","source":-1},{"begin":597,"end":611,"name":"SWAP1","source":-1},{"begin":572,"end":589,"name":"DUP4","source":-1},{"begin":572,"end":589,"name":"DUP9","source":-1},{"begin":572,"end":589,"name":"ADD","source":-1},{"begin":686,"end":703,"name":"DUP9","source":-1},{"begin":686,"end":703,"name":"DUP5","source":-1},{"begin":686,"end":703,"name":"MUL","source":-1},{"begin":677,"end":704,"name":"DUP6","source":-1},{"begin":677,"end":704,"name":"ADD","source":-1},{"begin":677,"end":704,"name":"DUP10","source":-1},{"begin":677,"end":704,"name":"ADD","source":-1},{"begin":674,"end":710,"name":"DUP13","source":-1},{"begin":-1,"end":-1,"name":"LT","source":-1},{"begin":671,"end":673,"name":"ISZERO","source":-1},{"begin":671,"end":673,"name":"PUSH [tag]","source":-1,"value":"150"},{"begin":671,"end":673,"name":"JUMPI","source":-1},{"begin":-1,"end":-1,"name":"DUP10","source":-1},{"begin":-1,"end":-1,"name":"DUP11","source":-1},{"begin":713,"end":725,"name":"REVERT","source":-1},{"begin":671,"end":673,"name":"tag","source":-1,"value":"150"},{"begin":671,"end":673,"name":"JUMPDEST","source":-1},{"begin":-1,"end":-1,"name":"DUP10","source":-1},{"begin":739,"end":749,"name":"SWAP5","source":-1},{"begin":739,"end":749,"name":"POP","source":-1},{"begin":733,"end":962,"name":"tag","source":-1,"value":"151"},{"begin":733,"end":962,"name":"JUMPDEST","source":-1},{"begin":758,"end":764,"name":"DUP4","source":-1},{"begin":755,"end":756,"name":"DUP6","source":-1},{"begin":752,"end":765,"name":"LT","source":-1},{"begin":733,"end":962,"name":"ISZERO","source":-1},{"begin":733,"end":962,"name":"PUSH [tag]","source":-1,"value":"153"},{"begin":733,"end":962,"name":"JUMPI","source":-1},{"begin":838,"end":898,"name":"PUSH [tag]","source":-1,"value":"154"},{"begin":894,"end":897,"name":"DUP13","source":-1},{"begin":882,"end":892,"name":"DUP3","source":-1},{"begin":838,"end":898,"name":"PUSH [tag]","source":-1,"value":"130"},{"begin":838,"end":898,"name":"JUMP","source":-1,"value":"[in]"},{"begin":838,"end":898,"name":"tag","source":-1,"value":"154"},{"begin":838,"end":898,"name":"JUMPDEST","source":-1},{"begin":826,"end":899,"name":"DUP4","source":-1},{"begin":826,"end":899,"name":"MSTORE","source":-1},{"begin":780,"end":781,"name":"PUSH","source":-1,"value":"1"},{"begin":773,"end":782,"name":"SWAP5","source":-1},{"begin":773,"end":782,"name":"SWAP1","source":-1},{"begin":773,"end":782,"name":"SWAP5","source":-1},{"begin":773,"end":782,"name":"ADD","source":-1},{"begin":773,"end":782,"name":"SWAP4","source":-1},{"begin":913,"end":927,"name":"SWAP2","source":-1},{"begin":913,"end":927,"name":"DUP9","source":-1},{"begin":913,"end":927,"name":"ADD","source":-1},{"begin":913,"end":927,"name":"SWAP2","source":-1},{"begin":941,"end":955,"name":"DUP9","source":-1},{"begin":941,"end":955,"name":"ADD","source":-1},{"begin":733,"end":962,"name":"PUSH [tag]","source":-1,"value":"151"},{"begin":733,"end":962,"name":"JUMP","source":-1},{"begin":733,"end":962,"name":"tag","source":-1,"value":"153"},{"begin":733,"end":962,"name":"JUMPDEST","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":2482,"end":2605,"name":"DUP5","source":-1},{"begin":2482,"end":2605,"name":"MSTORE","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":2682,"end":2700,"name":"DUP3","source":-1},{"begin":2682,"end":2700,"name":"DUP5","source":-1},{"begin":2682,"end":2700,"name":"ADD","source":-1},{"begin":2669,"end":2701,"name":"CALLDATALOAD","source":-1},{"begin":2710,"end":2740,"name":"DUP3","source":-1},{"begin":2710,"end":2740,"name":"DUP2","source":-1},{"begin":2710,"end":2740,"name":"GT","source":-1},{"begin":2707,"end":2709,"name":"ISZERO","source":-1},{"begin":2707,"end":2709,"name":"PUSH [tag]","source":-1,"value":"155"},{"begin":2707,"end":2709,"name":"JUMPI","source":-1},{"begin":-1,"end":-1,"name":"DUP6","source":-1},{"begin":-1,"end":-1,"name":"DUP7","source":-1},{"begin":2743,"end":2755,"name":"REVERT","source":-1},{"begin":2707,"end":2709,"name":"tag","source":-1,"value":"155"},{"begin":2707,"end":2709,"name":"JUMPDEST","source":-1},{"begin":2788,"end":2862,"name":"PUSH [tag]","source":-1,"value":"156"},{"begin":2858,"end":2861,"name":"DUP9","source":-1},{"begin":2849,"end":2855,"name":"DUP3","source":-1},{"begin":2838,"end":2847,"name":"DUP7","source":-1},{"begin":2834,"end":2856,"name":"ADD","source":-1},{"begin":2788,"end":2862,"name":"PUSH [tag]","source":-1,"value":"119"},{"begin":2788,"end":2862,"name":"JUMP","source":-1,"value":"[in]"},{"begin":2788,"end":2862,"name":"tag","source":-1,"value":"156"},{"begin":2788,"end":2862,"name":"JUMPDEST","source":-1},{"begin":2770,"end":2786,"name":"SWAP5","source":-1},{"begin":2770,"end":2786,"name":"DUP3","source":-1},{"begin":2770,"end":2786,"name":"ADD","source":-1},{"begin":2763,"end":2863,"name":"SWAP5","source":-1},{"begin":2763,"end":2863,"name":"SWAP1","source":-1},{"begin":2763,"end":2863,"name":"SWAP5","source":-1},{"begin":2763,"end":2863,"name":"MSTORE","source":-1},{"begin":2774,"end":2779,"name":"SWAP7","source":-1},{"begin":3933,"end":4224,"name":"SWAP6","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":3933,"end":4224,"name":"JUMP","source":-1,"value":"[out]"},{"begin":4231,"end":4494,"name":"tag","source":-1,"value":"61"},{"begin":4231,"end":4494,"name":"JUMPDEST","source":-1},{"begin":4231,"end":4494,"name":"PUSH","source":-1,"value":"0"},{"begin":4346,"end":4348,"name":"PUSH","source":-1,"value":"20"},{"begin":4334,"end":4343,"name":"DUP3","source":-1},{"begin":4325,"end":4332,"name":"DUP5","source":-1},{"begin":4321,"end":4344,"name":"SUB","source":-1},{"begin":4317,"end":4349,"name":"SLT","source":-1},{"begin":4314,"end":4316,"name":"ISZERO","source":-1},{"begin":4314,"end":4316,"name":"PUSH [tag]","source":-1,"value":"158"},{"begin":4314,"end":4316,"name":"JUMPI","source":-1},{"begin":-1,"end":-1,"name":"DUP1","source":-1},{"begin":-1,"end":-1,"name":"DUP2","source":-1},{"begin":4352,"end":4364,"name":"REVERT","source":-1},{"begin":4314,"end":4316,"name":"tag","source":-1,"value":"158"},{"begin":4314,"end":4316,"name":"JUMPDEST","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":3106,"end":3119,"name":"MLOAD","source":-1},{"begin":3106,"end":3119,"name":"SWAP2","source":-1},{"begin":4308,"end":4494,"name":"SWAP1","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":4308,"end":4494,"name":"JUMP","source":-1,"value":"[out]"},{"begin":6496,"end":6767,"name":"tag","source":-1,"value":"90"},{"begin":6496,"end":6767,"name":"JUMPDEST","source":-1},{"begin":6496,"end":6767,"name":"PUSH","source":-1,"value":"0"},{"begin":4898,"end":4903,"name":"DUP3","source":-1},{"begin":11165,"end":11177,"name":"MLOAD","source":-1},{"begin":-1,"end":-1,"name":"DUP2","source":-1},{"begin":12653,"end":12754,"name":"tag","source":-1,"value":"160"},{"begin":12653,"end":12754,"name":"JUMPDEST","source":-1},{"begin":12667,"end":12673,"name":"DUP2","source":-1},{"begin":12664,"end":12665,"name":"DUP2","source":-1},{"begin":12661,"end":12674,"name":"LT","source":-1},{"begin":12653,"end":12754,"name":"ISZERO","source":-1},{"begin":12653,"end":12754,"name":"PUSH [tag]","source":-1,"value":"162"},{"begin":12653,"end":12754,"name":"JUMPI","source":-1},{"begin":5042,"end":5046,"name":"PUSH","source":-1,"value":"20"},{"begin":12734,"end":12745,"name":"DUP2","source":-1},{"begin":12734,"end":12745,"name":"DUP7","source":-1},{"begin":12734,"end":12745,"name":"ADD","source":-1},{"begin":12734,"end":12745,"name":"DUP2","source":-1},{"begin":12734,"end":12745,"name":"ADD","source":-1},{"begin":12728,"end":12746,"name":"MLOAD","source":-1},{"begin":12715,"end":12726,"name":"DUP6","source":-1},{"begin":12715,"end":12726,"name":"DUP4","source":-1},{"begin":12715,"end":12726,"name":"ADD","source":-1},{"begin":12708,"end":12747,"name":"MSTORE","source":-1},{"begin":12682,"end":12692,"name":"ADD","source":-1},{"begin":12653,"end":12754,"name":"PUSH [tag]","source":-1,"value":"160"},{"begin":12653,"end":12754,"name":"JUMP","source":-1},{"begin":12653,"end":12754,"name":"tag","source":-1,"value":"162"},{"begin":12653,"end":12754,"name":"JUMPDEST","source":-1},{"begin":12769,"end":12775,"name":"DUP2","source":-1},{"begin":12766,"end":12767,"name":"DUP2","source":-1},{"begin":12763,"end":12776,"name":"GT","source":-1},{"begin":12760,"end":12762,"name":"ISZERO","source":-1},{"begin":12760,"end":12762,"name":"PUSH [tag]","source":-1,"value":"163"},{"begin":12760,"end":12762,"name":"JUMPI","source":-1},{"begin":-1,"end":-1,"name":"DUP3","source":-1},{"begin":12825,"end":12831,"name":"DUP3","source":-1},{"begin":12820,"end":12823,"name":"DUP6","source":-1},{"begin":12816,"end":12832,"name":"ADD","source":-1},{"begin":12809,"end":12836,"name":"MSTORE","source":-1},{"begin":12760,"end":12762,"name":"tag","source":-1,"value":"163"},{"begin":12760,"end":12762,"name":"JUMPDEST","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":5073,"end":5089,"name":"SWAP2","source":-1},{"begin":5073,"end":5089,"name":"SWAP1","source":-1},{"begin":5073,"end":5089,"name":"SWAP2","source":-1},{"begin":5073,"end":5089,"name":"ADD","source":-1},{"begin":5073,"end":5089,"name":"SWAP3","source":-1},{"begin":6630,"end":6767,"name":"SWAP2","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":6630,"end":6767,"name":"JUMP","source":-1,"value":"[out]"},{"begin":6774,"end":7153,"name":"tag","source":-1,"value":"66"},{"begin":6774,"end":7153,"name":"JUMPDEST","source":-1},{"begin":7138,"end":7148,"name":"SWAP1","source":-1},{"begin":6962,"end":7153,"name":"JUMP","source":-1,"value":"[out]"},{"begin":7160,"end":7382,"name":"tag","source":-1,"value":"19"},{"begin":7160,"end":7382,"name":"JUMPDEST","source":-1},{"begin":12263,"end":12305,"name":"PUSH","source":-1,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":12252,"end":12306,"name":"SWAP2","source":-1},{"begin":12252,"end":12306,"name":"SWAP1","source":-1},{"begin":12252,"end":12306,"name":"SWAP2","source":-1},{"begin":12252,"end":12306,"name":"AND","source":-1},{"begin":4572,"end":4609,"name":"DUP2","source":-1},{"begin":4572,"end":4609,"name":"MSTORE","source":-1},{"begin":7287,"end":7289,"name":"PUSH","source":-1,"value":"20"},{"begin":7272,"end":7290,"name":"ADD","source":-1},{"begin":7272,"end":7290,"name":"SWAP1","source":-1},{"begin":7258,"end":7382,"name":"JUMP","source":-1,"value":"[out]"},{"begin":7389,"end":7722,"name":"tag","source":-1,"value":"78"},{"begin":7389,"end":7722,"name":"JUMPDEST","source":-1},{"begin":12263,"end":12305,"name":"PUSH","source":-1,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":12252,"end":12306,"name":"SWAP3","source":-1},{"begin":12252,"end":12306,"name":"DUP4","source":-1},{"begin":12252,"end":12306,"name":"AND","source":-1},{"begin":4572,"end":4609,"name":"DUP2","source":-1},{"begin":4572,"end":4609,"name":"MSTORE","source":-1},{"begin":12252,"end":12306,"name":"SWAP2","source":-1},{"begin":12252,"end":12306,"name":"AND","source":-1},{"begin":7708,"end":7710,"name":"PUSH","source":-1,"value":"20"},{"begin":7693,"end":7711,"name":"DUP3","source":-1},{"begin":7693,"end":7711,"name":"ADD","source":-1},{"begin":4572,"end":4609,"name":"MSTORE","source":-1},{"begin":7544,"end":7546,"name":"PUSH","source":-1,"value":"40"},{"begin":7529,"end":7547,"name":"ADD","source":-1},{"begin":7529,"end":7547,"name":"SWAP1","source":-1},{"begin":7515,"end":7722,"name":"JUMP","source":-1,"value":"[out]"},{"begin":7729,"end":8062,"name":"tag","source":-1,"value":"85"},{"begin":7729,"end":8062,"name":"JUMPDEST","source":-1},{"begin":12263,"end":12305,"name":"PUSH","source":-1,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":12252,"end":12306,"name":"SWAP3","source":-1},{"begin":12252,"end":12306,"name":"SWAP1","source":-1},{"begin":12252,"end":12306,"name":"SWAP3","source":-1},{"begin":12252,"end":12306,"name":"AND","source":-1},{"begin":4572,"end":4609,"name":"DUP3","source":-1},{"begin":4572,"end":4609,"name":"MSTORE","source":-1},{"begin":8048,"end":8050,"name":"PUSH","source":-1,"value":"20"},{"begin":8033,"end":8051,"name":"DUP3","source":-1},{"begin":8033,"end":8051,"name":"ADD","source":-1},{"begin":6447,"end":6484,"name":"MSTORE","source":-1},{"begin":7884,"end":7886,"name":"PUSH","source":-1,"value":"40"},{"begin":7869,"end":7887,"name":"ADD","source":-1},{"begin":7869,"end":7887,"name":"SWAP1","source":-1},{"begin":7855,"end":8062,"name":"JUMP","source":-1,"value":"[out]"},{"begin":8069,"end":8287,"name":"tag","source":-1,"value":"11"},{"begin":8069,"end":8287,"name":"JUMPDEST","source":-1},{"begin":11807,"end":11873,"name":"PUSH","source":-1,"value":"FFFFFFFF00000000000000000000000000000000000000000000000000000000"},{"begin":11796,"end":11874,"name":"SWAP2","source":-1},{"begin":11796,"end":11874,"name":"SWAP1","source":-1},{"begin":11796,"end":11874,"name":"SWAP2","source":-1},{"begin":11796,"end":11874,"name":"AND","source":-1},{"begin":4690,"end":4726,"name":"DUP2","source":-1},{"begin":4690,"end":4726,"name":"MSTORE","source":-1},{"begin":8194,"end":8196,"name":"PUSH","source":-1,"value":"20"},{"begin":8179,"end":8197,"name":"ADD","source":-1},{"begin":8179,"end":8197,"name":"SWAP1","source":-1},{"begin":8165,"end":8287,"name":"JUMP","source":-1,"value":"[out]"},{"begin":8294,"end":8804,"name":"tag","source":-1,"value":"117"},{"begin":8294,"end":8804,"name":"JUMPDEST","source":-1},{"begin":8510,"end":8512,"name":"PUSH","source":-1,"value":"60"},{"begin":8495,"end":8513,"name":"DUP2","source":-1},{"begin":8495,"end":8513,"name":"ADD","source":-1},{"begin":12961,"end":12962,"name":"PUSH","source":-1,"value":"8"},{"begin":12951,"end":12963,"name":"DUP6","source":-1},{"begin":12951,"end":12963,"name":"LT","source":-1},{"begin":12941,"end":12943,"name":"PUSH [tag]","source":-1,"value":"170"},{"begin":12941,"end":12943,"name":"JUMPI","source":-1},{"begin":12967,"end":12976,"name":"INVALID","source":-1},{"begin":12941,"end":12943,"name":"tag","source":-1,"value":"170"},{"begin":12941,"end":12943,"name":"JUMPDEST","source":-1},{"begin":5205,"end":5288,"name":"SWAP4","source":-1},{"begin":5205,"end":5288,"name":"DUP2","source":-1},{"begin":5205,"end":5288,"name":"MSTORE","source":-1},{"begin":8707,"end":8709,"name":"PUSH","source":-1,"value":"20"},{"begin":8692,"end":8710,"name":"DUP2","source":-1},{"begin":8692,"end":8710,"name":"ADD","source":-1},{"begin":6447,"end":6484,"name":"SWAP3","source":-1},{"begin":6447,"end":6484,"name":"SWAP1","source":-1},{"begin":6447,"end":6484,"name":"SWAP3","source":-1},{"begin":6447,"end":6484,"name":"MSTORE","source":-1},{"begin":8790,"end":8792,"name":"PUSH","source":-1,"value":"40"},{"begin":8775,"end":8793,"name":"SWAP1","source":-1},{"begin":8775,"end":8793,"name":"SWAP2","source":-1},{"begin":8775,"end":8793,"name":"ADD","source":-1},{"begin":6447,"end":6484,"name":"MSTORE","source":-1},{"begin":8481,"end":8804,"name":"SWAP1","source":-1},{"begin":8481,"end":8804,"name":"JUMP","source":-1,"value":"[out]"},{"begin":8811,"end":9227,"name":"tag","source":-1,"value":"72"},{"begin":8811,"end":9227,"name":"JUMPDEST","source":-1},{"begin":9011,"end":9013,"name":"PUSH","source":-1,"value":"20"},{"begin":9025,"end":9072,"name":"DUP1","source":-1},{"begin":9025,"end":9072,"name":"DUP3","source":-1},{"begin":9025,"end":9072,"name":"MSTORE","source":-1},{"begin":5525,"end":5527,"name":"PUSH","source":-1,"value":"28"},{"begin":8996,"end":9014,"name":"SWAP1","source":-1},{"begin":8996,"end":9014,"name":"DUP3","source":-1},{"begin":8996,"end":9014,"name":"ADD","source":-1},{"begin":11463,"end":11482,"name":"MSTORE","source":-1},{"begin":5561,"end":5595,"name":"PUSH","source":-1,"value":"4C696245524332305472616E73666F726D65722F4641494C45445F544F5F5345"},{"begin":11503,"end":11517,"name":"PUSH","source":-1,"value":"40"},{"begin":11503,"end":11517,"name":"DUP3","source":-1},{"begin":11503,"end":11517,"name":"ADD","source":-1},{"begin":5541,"end":5596,"name":"MSTORE","source":-1},{"begin":5630,"end":5640,"name":"PUSH","source":-1,"value":"4E445F4554484552000000000000000000000000000000000000000000000000"},{"begin":5616,"end":5628,"name":"PUSH","source":-1,"value":"60"},{"begin":5616,"end":5628,"name":"DUP3","source":-1},{"begin":5616,"end":5628,"name":"ADD","source":-1},{"begin":5609,"end":5641,"name":"MSTORE","source":-1},{"begin":5660,"end":5672,"name":"PUSH","source":-1,"value":"80"},{"begin":5660,"end":5672,"name":"ADD","source":-1},{"begin":5660,"end":5672,"name":"SWAP1","source":-1},{"begin":8982,"end":9227,"name":"JUMP","source":-1,"value":"[out]"},{"begin":9234,"end":9650,"name":"tag","source":-1,"value":"99"},{"begin":9234,"end":9650,"name":"JUMPDEST","source":-1},{"begin":9434,"end":9436,"name":"PUSH","source":-1,"value":"20"},{"begin":9448,"end":9495,"name":"DUP1","source":-1},{"begin":9448,"end":9495,"name":"DUP3","source":-1},{"begin":9448,"end":9495,"name":"MSTORE","source":-1},{"begin":5911,"end":5913,"name":"PUSH","source":-1,"value":"27"},{"begin":9419,"end":9437,"name":"SWAP1","source":-1},{"begin":9419,"end":9437,"name":"DUP3","source":-1},{"begin":9419,"end":9437,"name":"ADD","source":-1},{"begin":11463,"end":11482,"name":"MSTORE","source":-1},{"begin":5947,"end":5981,"name":"PUSH","source":-1,"value":"696E76616C696420746F6B656E20616464726573732C20636F6E7461696E7320"},{"begin":11503,"end":11517,"name":"PUSH","source":-1,"value":"40"},{"begin":11503,"end":11517,"name":"DUP3","source":-1},{"begin":11503,"end":11517,"name":"ADD","source":-1},{"begin":5927,"end":5982,"name":"MSTORE","source":-1},{"begin":6016,"end":6025,"name":"PUSH","source":-1,"value":"6E6F20636F646500000000000000000000000000000000000000000000000000"},{"begin":6002,"end":6014,"name":"PUSH","source":-1,"value":"60"},{"begin":6002,"end":6014,"name":"DUP3","source":-1},{"begin":6002,"end":6014,"name":"ADD","source":-1},{"begin":5995,"end":6026,"name":"MSTORE","source":-1},{"begin":6045,"end":6057,"name":"PUSH","source":-1,"value":"80"},{"begin":6045,"end":6057,"name":"ADD","source":-1},{"begin":6045,"end":6057,"name":"SWAP1","source":-1},{"begin":9405,"end":9650,"name":"JUMP","source":-1,"value":"[out]"},{"begin":9657,"end":10163,"name":"tag","source":-1,"value":"24"},{"begin":9657,"end":10163,"name":"JUMPDEST","source":-1},{"begin":9657,"end":10163,"name":"PUSH","source":-1,"value":"0"},{"begin":9657,"end":10163,"name":"DUP1","source":-1},{"begin":9792,"end":9803,"name":"DUP4","source":-1},{"begin":9779,"end":9804,"name":"CALLDATALOAD","source":-1},{"begin":9843,"end":9891,"name":"PUSH","source":-1,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1"},{"begin":9867,"end":9875,"name":"DUP5","source":-1},{"begin":9851,"end":9865,"name":"CALLDATASIZE","source":-1},{"begin":9847,"end":9876,"name":"SUB","source":-1},{"begin":9843,"end":9891,"name":"ADD","source":-1},{"begin":9823,"end":9841,"name":"DUP2","source":-1},{"begin":9819,"end":9892,"name":"SLT","source":-1},{"begin":9809,"end":9811,"name":"PUSH [tag]","source":-1,"value":"174"},{"begin":9809,"end":9811,"name":"JUMPI","source":-1},{"begin":-1,"end":-1,"name":"DUP3","source":-1},{"begin":-1,"end":-1,"name":"DUP4","source":-1},{"begin":9896,"end":9908,"name":"REVERT","source":-1},{"begin":9809,"end":9811,"name":"tag","source":-1,"value":"174"},{"begin":9809,"end":9811,"name":"JUMPDEST","source":-1},{"begin":9923,"end":9956,"name":"DUP4","source":-1},{"begin":9923,"end":9956,"name":"ADD","source":-1},{"begin":9977,"end":9995,"name":"DUP1","source":-1},{"begin":9977,"end":9995,"name":"CALLDATALOAD","source":-1},{"begin":9977,"end":9995,"name":"SWAP2","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":10015,"end":10033,"name":"PUSH","source":-1,"value":"FFFFFFFFFFFFFFFF"},{"begin":10004,"end":10034,"name":"DUP3","source":-1},{"begin":10004,"end":10034,"name":"GT","source":-1},{"begin":10001,"end":10003,"name":"ISZERO","source":-1},{"begin":10001,"end":10003,"name":"PUSH [tag]","source":-1,"value":"175"},{"begin":10001,"end":10003,"name":"JUMPI","source":-1},{"begin":-1,"end":-1,"name":"DUP3","source":-1},{"begin":-1,"end":-1,"name":"DUP4","source":-1},{"begin":10037,"end":10049,"name":"REVERT","source":-1},{"begin":10001,"end":10003,"name":"tag","source":-1,"value":"175"},{"begin":10001,"end":10003,"name":"JUMPDEST","source":-1},{"begin":9882,"end":9886,"name":"PUSH","source":-1,"value":"20"},{"begin":10065,"end":10078,"name":"ADD","source":-1},{"begin":10065,"end":10078,"name":"SWAP2","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":9851,"end":9865,"name":"CALLDATASIZE","source":-1},{"begin":10097,"end":10135,"name":"DUP2","source":-1},{"begin":10097,"end":10135,"name":"SWAP1","source":-1},{"begin":10097,"end":10135,"name":"SUB","source":-1},{"begin":10087,"end":10136,"name":"DUP3","source":-1},{"begin":10087,"end":10136,"name":"SGT","source":-1},{"begin":10084,"end":10086,"name":"ISZERO","source":-1},{"begin":10084,"end":10086,"name":"PUSH [tag]","source":-1,"value":"176"},{"begin":10084,"end":10086,"name":"JUMPI","source":-1},{"begin":10149,"end":10150,"name":"PUSH","source":-1,"value":"0"},{"begin":10149,"end":10150,"name":"DUP1","source":-1},{"begin":10139,"end":10151,"name":"REVERT","source":-1},{"begin":10084,"end":10086,"name":"tag","source":-1,"value":"176"},{"begin":10084,"end":10086,"name":"JUMPDEST","source":-1},{"begin":9747,"end":10163,"name":"SWAP3","source":-1},{"begin":9747,"end":10163,"name":"POP","source":-1},{"begin":9747,"end":10163,"name":"SWAP3","source":-1},{"begin":9747,"end":10163,"name":"SWAP1","source":-1},{"begin":9747,"end":10163,"name":"POP","source":-1},{"begin":9747,"end":10163,"name":"JUMP","source":-1,"value":"[out]"},{"begin":10170,"end":10426,"name":"tag","source":-1,"value":"125"},{"begin":10170,"end":10426,"name":"JUMPDEST","source":-1},{"begin":10232,"end":10234,"name":"PUSH","source":-1,"value":"40"},{"begin":10226,"end":10235,"name":"MLOAD","source":-1},{"begin":10258,"end":10275,"name":"DUP2","source":-1},{"begin":10258,"end":10275,"name":"DUP2","source":-1},{"begin":10258,"end":10275,"name":"ADD","source":-1},{"begin":10333,"end":10351,"name":"PUSH","source":-1,"value":"FFFFFFFFFFFFFFFF"},{"begin":10318,"end":10352,"name":"DUP2","source":-1},{"begin":10318,"end":10352,"name":"GT","source":-1},{"begin":10354,"end":10376,"name":"DUP3","source":-1},{"begin":10354,"end":10376,"name":"DUP3","source":-1},{"begin":10354,"end":10376,"name":"LT","source":-1},{"begin":10315,"end":10377,"name":"OR","source":-1},{"begin":10312,"end":10314,"name":"ISZERO","source":-1},{"begin":10312,"end":10314,"name":"PUSH [tag]","source":-1,"value":"178"},{"begin":10312,"end":10314,"name":"JUMPI","source":-1},{"begin":10390,"end":10391,"name":"PUSH","source":-1,"value":"0"},{"begin":10390,"end":10391,"name":"DUP1","source":-1},{"begin":10380,"end":10392,"name":"REVERT","source":-1},{"begin":10312,"end":10314,"name":"tag","source":-1,"value":"178"},{"begin":10312,"end":10314,"name":"JUMPDEST","source":-1},{"begin":10232,"end":10234,"name":"PUSH","source":-1,"value":"40"},{"begin":10399,"end":10421,"name":"MSTORE","source":-1},{"begin":10210,"end":10426,"name":"SWAP2","source":-1},{"begin":10210,"end":10426,"name":"SWAP1","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":10210,"end":10426,"name":"JUMP","source":-1,"value":"[out]"},{"begin":10433,"end":10760,"name":"tag","source":-1,"value":"124"},{"begin":10433,"end":10760,"name":"JUMPDEST","source":-1},{"begin":10433,"end":10760,"name":"PUSH","source":-1,"value":"0"},{"begin":10615,"end":10633,"name":"PUSH","source":-1,"value":"FFFFFFFFFFFFFFFF"},{"begin":10607,"end":10613,"name":"DUP3","source":-1},{"begin":10604,"end":10634,"name":"GT","source":-1},{"begin":10601,"end":10603,"name":"ISZERO","source":-1},{"begin":10601,"end":10603,"name":"PUSH [tag]","source":-1,"value":"180"},{"begin":10601,"end":10603,"name":"JUMPI","source":-1},{"begin":-1,"end":-1,"name":"DUP1","source":-1},{"begin":-1,"end":-1,"name":"DUP2","source":-1},{"begin":10637,"end":10649,"name":"REVERT","source":-1},{"begin":10601,"end":10603,"name":"tag","source":-1,"value":"180"},{"begin":10601,"end":10603,"name":"JUMPDEST","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":10682,"end":10686,"name":"PUSH","source":-1,"value":"20"},{"begin":10670,"end":10687,"name":"SWAP1","source":-1},{"begin":10670,"end":10687,"name":"DUP2","source":-1},{"begin":10670,"end":10687,"name":"MUL","source":-1},{"begin":10735,"end":10750,"name":"ADD","source":-1},{"begin":10735,"end":10750,"name":"SWAP1","source":-1},{"begin":10538,"end":10760,"name":"JUMP","source":-1,"value":"[out]"},{"begin":12990,"end":13123,"name":"tag","source":-1,"value":"133"},{"begin":12990,"end":13123,"name":"JUMPDEST","source":-1},{"begin":12263,"end":12305,"name":"PUSH","source":-1,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":13093,"end":13098,"name":"DUP2","source":-1},{"begin":12252,"end":12306,"name":"AND","source":-1},{"begin":13060,"end":13065,"name":"DUP2","source":-1},{"begin":13057,"end":13100,"name":"EQ","source":-1},{"begin":13047,"end":13049,"name":"PUSH [tag]","source":-1,"value":"182"},{"begin":13047,"end":13049,"name":"JUMPI","source":-1},{"begin":13114,"end":13115,"name":"PUSH","source":-1,"value":"0"},{"begin":13114,"end":13115,"name":"DUP1","source":-1},{"begin":13104,"end":13116,"name":"REVERT","source":-1},{"begin":13047,"end":13049,"name":"tag","source":-1,"value":"182"},{"begin":13047,"end":13049,"name":"JUMPDEST","source":-1},{"begin":13041,"end":13123,"name":"POP","source":-1},{"begin":13041,"end":13123,"name":"JUMP","source":-1,"value":"[out]"}]}}},"bytecode":{"object":"60c060405234801561001057600080fd5b5033606081811b608052309081901b60a052610d4761004e6000398061029652806102c4525080610227528061025552806103035250610d476000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063832b24bb14610046578063c9353cb51461006f578063d5f3948814610084575b600080fd5b61005961005436600461094d565b610099565b6040516100669190610b32565b60405180910390f35b61008261007d36600461092a565b61020f565b005b61008c610301565b6040516100669190610ac4565b60006100a3610897565b6100b06040840184610c3b565b8101906100bd9190610985565b905060005b8151518110156101e65760008183602001515111610100577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610119565b8260200151828151811061011057fe5b60200260200101515b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81141561018657610183308460000151848151811061015757fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1661032590919063ffffffff16565b90505b80156101dd576101dd61019f604087016020880161092a565b82856000015185815181106101b057fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166103fe9092919063ffffffff16565b506001016100c2565b507f13c9929e000000000000000000000000000000000000000000000000000000009392505050565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461027e5761027e610279337f00000000000000000000000000000000000000000000000000000000000000006104e4565b61059f565b3073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146102e8576102e8610279307f00000000000000000000000000000000000000000000000000000000000000006105a7565b8073ffffffffffffffffffffffffffffffffffffffff16ff5b7f000000000000000000000000000000000000000000000000000000000000000081565b6000610330836105dd565b15610353575073ffffffffffffffffffffffffffffffffffffffff8116316103f8565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416906370a08231906103a5908590600401610ac4565b60206040518083038186803b1580156103bd57600080fd5b505afa1580156103d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f59190610a70565b90505b92915050565b610407836105dd565b156104be5760008273ffffffffffffffffffffffffffffffffffffffff168260405161043290610ac1565b60006040518083038185875af1925050503d806000811461046f576040519150601f19603f3d011682016040523d82523d6000602084013e610474565b606091505b50509050806104b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104af90610b81565b60405180910390fd5b506104df565b6104df73ffffffffffffffffffffffffffffffffffffffff8416838361060f565b505050565b60607f5cec653b364cca3880afa73ceff506d0651d11d26abbbe4a56460aa933b21b08838360405160240161051a929190610ae5565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152905092915050565b805160208201fd5b60607fb5cf2cd09307d6c717473134badbb9761c2c97d7565566c2a71eba6cd6fc514d838360405160240161051a929190610ae5565b73ffffffffffffffffffffffffffffffffffffffff811673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14919050565b606063a9059cbb60e01b838360405160240161062c929190610b0c565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915290506106b584826106bb565b50505050565b600060608373ffffffffffffffffffffffffffffffffffffffff16836040516106e49190610a88565b6000604051808303816000865af19150503d8060008114610721576040519150601f19603f3d011682016040523d82523d6000602084013e610726565b606091505b509150915081610739576107398161059f565b805161078057833b80610778576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104af90610bde565b5050506107bd565b60208151106107b45760006107968260006107c1565b905080600114156107a9575050506107bd565b6107b28261059f565b505b6106b58161059f565b5050565b60006103f58383600081602001835110156107e9576107e961027960058551856020016107f2565b50016020015190565b6060632800659560e01b84848460405160240161081193929190610b5f565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915290509392505050565b604051806040016040528060608152602001606081525090565b600082601f8301126108c1578081fd5b81356108d46108cf82610ccc565b610ca5565b8181529150602080830190848101818402860182018710156108f557600080fd5b60005b84811015610914578135845292820192908201906001016108f8565b505050505092915050565b80356103f881610cec565b60006020828403121561093b578081fd5b813561094681610cec565b9392505050565b60006020828403121561095e578081fd5b813567ffffffffffffffff811115610974578182fd5b820160608185031215610946578182fd5b60006020808385031215610997578182fd5b823567ffffffffffffffff808211156109ae578384fd5b90840190604082870312156109c1578384fd5b6109cb6040610ca5565b8235828111156109d9578586fd5b8301601f810188136109e9578586fd5b80356109f76108cf82610ccc565b81815286810190838801888402850189018c1015610a1357898afd5b8994505b83851015610a3d57610a298c8261091f565b835260019490940193918801918801610a17565b5084525050508284013582811115610a53578586fd5b610a5f888286016108b1565b948201949094529695505050505050565b600060208284031215610a81578081fd5b5051919050565b60008251815b81811015610aa85760208186018101518583015201610a8e565b81811115610ab65782828501525b509190910192915050565b90565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b7fffffffff0000000000000000000000000000000000000000000000000000000091909116815260200190565b6060810160088510610b6d57fe5b938152602081019290925260409091015290565b60208082526028908201527f4c696245524332305472616e73666f726d65722f4641494c45445f544f5f534560408201527f4e445f4554484552000000000000000000000000000000000000000000000000606082015260800190565b60208082526027908201527f696e76616c696420746f6b656e20616464726573732c20636f6e7461696e732060408201527f6e6f20636f646500000000000000000000000000000000000000000000000000606082015260800190565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610c6f578283fd5b83018035915067ffffffffffffffff821115610c89578283fd5b602001915036819003821315610c9e57600080fd5b9250929050565b60405181810167ffffffffffffffff81118282101715610cc457600080fd5b604052919050565b600067ffffffffffffffff821115610ce2578081fd5b5060209081020190565b73ffffffffffffffffffffffffffffffffffffffff81168114610d0e57600080fd5b5056fea264697066735822122018067da33af76a4f7d450f3e055224ccfca173861a0349070f13e6c9d51cfff464736f6c634300060c0033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x60 DUP2 DUP2 SHL PUSH1 0x80 MSTORE ADDRESS SWAP1 DUP2 SWAP1 SHL PUSH1 0xA0 MSTORE PUSH2 0xD47 PUSH2 0x4E PUSH1 0x0 CODECOPY DUP1 PUSH2 0x296 MSTORE DUP1 PUSH2 0x2C4 MSTORE POP DUP1 PUSH2 0x227 MSTORE DUP1 PUSH2 0x255 MSTORE DUP1 PUSH2 0x303 MSTORE POP PUSH2 0xD47 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x832B24BB EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xC9353CB5 EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0xD5F39488 EQ PUSH2 0x84 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x94D JUMP JUMPDEST PUSH2 0x99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0xB32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x92A JUMP JUMPDEST PUSH2 0x20F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8C PUSH2 0x301 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0xAC4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA3 PUSH2 0x897 JUMP JUMPDEST PUSH2 0xB0 PUSH1 0x40 DUP5 ADD DUP5 PUSH2 0xC3B JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x985 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP2 DUP4 PUSH1 0x20 ADD MLOAD MLOAD GT PUSH2 0x100 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x119 JUMP JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x110 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ ISZERO PUSH2 0x186 JUMPI PUSH2 0x183 ADDRESS DUP5 PUSH1 0x0 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x157 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x325 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 ISZERO PUSH2 0x1DD JUMPI PUSH2 0x1DD PUSH2 0x19F PUSH1 0x40 DUP8 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x92A JUMP JUMPDEST DUP3 DUP6 PUSH1 0x0 ADD MLOAD DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1B0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3FE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0xC2 JUMP JUMPDEST POP PUSH32 0x13C9929E00000000000000000000000000000000000000000000000000000000 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x27E JUMPI PUSH2 0x27E PUSH2 0x279 CALLER PUSH32 0x0 PUSH2 0x4E4 JUMP JUMPDEST PUSH2 0x59F JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x2E8 JUMPI PUSH2 0x2E8 PUSH2 0x279 ADDRESS PUSH32 0x0 PUSH2 0x5A7 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x330 DUP4 PUSH2 0x5DD JUMP JUMPDEST ISZERO PUSH2 0x353 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND BALANCE PUSH2 0x3F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x3A5 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0xAC4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0xA70 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x407 DUP4 PUSH2 0x5DD JUMP JUMPDEST ISZERO PUSH2 0x4BE JUMPI PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x432 SWAP1 PUSH2 0xAC1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x46F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x474 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x4B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AF SWAP1 PUSH2 0xB81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x4DF JUMP JUMPDEST PUSH2 0x4DF PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND DUP4 DUP4 PUSH2 0x60F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH32 0x5CEC653B364CCA3880AFA73CEFF506D0651D11D26ABBBE4A56460AA933B21B08 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x51A SWAP3 SWAP2 SWAP1 PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x60 PUSH32 0xB5CF2CD09307D6C717473134BADBB9761C2C97D7565566C2A71EBA6CD6FC514D DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x51A SWAP3 SWAP2 SWAP1 PUSH2 0xAE5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x62C SWAP3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE SWAP1 POP PUSH2 0x6B5 DUP5 DUP3 PUSH2 0x6BB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x6E4 SWAP2 SWAP1 PUSH2 0xA88 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x726 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x739 JUMPI PUSH2 0x739 DUP2 PUSH2 0x59F JUMP JUMPDEST DUP1 MLOAD PUSH2 0x780 JUMPI DUP4 EXTCODESIZE DUP1 PUSH2 0x778 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AF SWAP1 PUSH2 0xBDE JUMP JUMPDEST POP POP POP PUSH2 0x7BD JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD LT PUSH2 0x7B4 JUMPI PUSH1 0x0 PUSH2 0x796 DUP3 PUSH1 0x0 PUSH2 0x7C1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x7A9 JUMPI POP POP POP PUSH2 0x7BD JUMP JUMPDEST PUSH2 0x7B2 DUP3 PUSH2 0x59F JUMP JUMPDEST POP JUMPDEST PUSH2 0x6B5 DUP2 PUSH2 0x59F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F5 DUP4 DUP4 PUSH1 0x0 DUP2 PUSH1 0x20 ADD DUP4 MLOAD LT ISZERO PUSH2 0x7E9 JUMPI PUSH2 0x7E9 PUSH2 0x279 PUSH1 0x5 DUP6 MLOAD DUP6 PUSH1 0x20 ADD PUSH2 0x7F2 JUMP JUMPDEST POP ADD PUSH1 0x20 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH4 0x28006595 PUSH1 0xE0 SHL DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x811 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB5F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8C1 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x8D4 PUSH2 0x8CF DUP3 PUSH2 0xCCC JUMP JUMPDEST PUSH2 0xCA5 JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 POP PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP5 DUP2 ADD DUP2 DUP5 MUL DUP7 ADD DUP3 ADD DUP8 LT ISZERO PUSH2 0x8F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x914 JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP3 ADD SWAP3 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x8F8 JUMP JUMPDEST POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x3F8 DUP2 PUSH2 0xCEC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x93B JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x946 DUP2 PUSH2 0xCEC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x95E JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x974 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 ADD PUSH1 0x60 DUP2 DUP6 SUB SLT ISZERO PUSH2 0x946 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x997 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x9AE JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP1 DUP5 ADD SWAP1 PUSH1 0x40 DUP3 DUP8 SUB SLT ISZERO PUSH2 0x9C1 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x9CB PUSH1 0x40 PUSH2 0xCA5 JUMP JUMPDEST DUP3 CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x9D9 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP9 SGT PUSH2 0x9E9 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x9F7 PUSH2 0x8CF DUP3 PUSH2 0xCCC JUMP JUMPDEST DUP2 DUP2 MSTORE DUP7 DUP2 ADD SWAP1 DUP4 DUP9 ADD DUP9 DUP5 MUL DUP6 ADD DUP10 ADD DUP13 LT ISZERO PUSH2 0xA13 JUMPI DUP10 DUP11 REVERT JUMPDEST DUP10 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0xA3D JUMPI PUSH2 0xA29 DUP13 DUP3 PUSH2 0x91F JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP9 ADD SWAP2 DUP9 ADD PUSH2 0xA17 JUMP JUMPDEST POP DUP5 MSTORE POP POP POP DUP3 DUP5 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0xA53 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH2 0xA5F DUP9 DUP3 DUP7 ADD PUSH2 0x8B1 JUMP JUMPDEST SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA81 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAA8 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0xA8E JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xAB6 JUMPI DUP3 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH1 0x8 DUP6 LT PUSH2 0xB6D JUMPI INVALID JUMPDEST SWAP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x4C696245524332305472616E73666F726D65722F4641494C45445F544F5F5345 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x4E445F4554484552000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x27 SWAP1 DUP3 ADD MSTORE PUSH32 0x696E76616C696420746F6B656E20616464726573732C20636F6E7461696E7320 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6E6F20636F646500000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0xC6F JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC89 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0xC9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xCC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xCE2 JUMPI DUP1 DUP2 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xD0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR MOD PUSH30 0xA33AF76A4F7D450F3E055224CCFCA173861A0349070F13E6C9D51CFFF464 PUSH20 0x6F6C634300060C00330000000000000000000000 ","sourceMap":"1133:1743:3:-:0;;;1816:37;;;;;;;;;-1:-1:-1;1243:10:4;1232:21;;;;;;1289:4;1263:31;;;;;;1133:1743:3;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c8063832b24bb14610046578063c9353cb51461006f578063d5f3948814610084575b600080fd5b61005961005436600461094d565b610099565b6040516100669190610b32565b60405180910390f35b61008261007d36600461092a565b61020f565b005b61008c610301565b6040516100669190610ac4565b60006100a3610897565b6100b06040840184610c3b565b8101906100bd9190610985565b905060005b8151518110156101e65760008183602001515111610100577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610119565b8260200151828151811061011057fe5b60200260200101515b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81141561018657610183308460000151848151811061015757fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1661032590919063ffffffff16565b90505b80156101dd576101dd61019f604087016020880161092a565b82856000015185815181106101b057fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166103fe9092919063ffffffff16565b506001016100c2565b507f13c9929e000000000000000000000000000000000000000000000000000000009392505050565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461027e5761027e610279337f00000000000000000000000000000000000000000000000000000000000000006104e4565b61059f565b3073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146102e8576102e8610279307f00000000000000000000000000000000000000000000000000000000000000006105a7565b8073ffffffffffffffffffffffffffffffffffffffff16ff5b7f000000000000000000000000000000000000000000000000000000000000000081565b6000610330836105dd565b15610353575073ffffffffffffffffffffffffffffffffffffffff8116316103f8565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416906370a08231906103a5908590600401610ac4565b60206040518083038186803b1580156103bd57600080fd5b505afa1580156103d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f59190610a70565b90505b92915050565b610407836105dd565b156104be5760008273ffffffffffffffffffffffffffffffffffffffff168260405161043290610ac1565b60006040518083038185875af1925050503d806000811461046f576040519150601f19603f3d011682016040523d82523d6000602084013e610474565b606091505b50509050806104b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104af90610b81565b60405180910390fd5b506104df565b6104df73ffffffffffffffffffffffffffffffffffffffff8416838361060f565b505050565b60607f5cec653b364cca3880afa73ceff506d0651d11d26abbbe4a56460aa933b21b08838360405160240161051a929190610ae5565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152905092915050565b805160208201fd5b60607fb5cf2cd09307d6c717473134badbb9761c2c97d7565566c2a71eba6cd6fc514d838360405160240161051a929190610ae5565b73ffffffffffffffffffffffffffffffffffffffff811673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14919050565b606063a9059cbb60e01b838360405160240161062c929190610b0c565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915290506106b584826106bb565b50505050565b600060608373ffffffffffffffffffffffffffffffffffffffff16836040516106e49190610a88565b6000604051808303816000865af19150503d8060008114610721576040519150601f19603f3d011682016040523d82523d6000602084013e610726565b606091505b509150915081610739576107398161059f565b805161078057833b80610778576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104af90610bde565b5050506107bd565b60208151106107b45760006107968260006107c1565b905080600114156107a9575050506107bd565b6107b28261059f565b505b6106b58161059f565b5050565b60006103f58383600081602001835110156107e9576107e961027960058551856020016107f2565b50016020015190565b6060632800659560e01b84848460405160240161081193929190610b5f565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915290509392505050565b604051806040016040528060608152602001606081525090565b600082601f8301126108c1578081fd5b81356108d46108cf82610ccc565b610ca5565b8181529150602080830190848101818402860182018710156108f557600080fd5b60005b84811015610914578135845292820192908201906001016108f8565b505050505092915050565b80356103f881610cec565b60006020828403121561093b578081fd5b813561094681610cec565b9392505050565b60006020828403121561095e578081fd5b813567ffffffffffffffff811115610974578182fd5b820160608185031215610946578182fd5b60006020808385031215610997578182fd5b823567ffffffffffffffff808211156109ae578384fd5b90840190604082870312156109c1578384fd5b6109cb6040610ca5565b8235828111156109d9578586fd5b8301601f810188136109e9578586fd5b80356109f76108cf82610ccc565b81815286810190838801888402850189018c1015610a1357898afd5b8994505b83851015610a3d57610a298c8261091f565b835260019490940193918801918801610a17565b5084525050508284013582811115610a53578586fd5b610a5f888286016108b1565b948201949094529695505050505050565b600060208284031215610a81578081fd5b5051919050565b60008251815b81811015610aa85760208186018101518583015201610a8e565b81811115610ab65782828501525b509190910192915050565b90565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b7fffffffff0000000000000000000000000000000000000000000000000000000091909116815260200190565b6060810160088510610b6d57fe5b938152602081019290925260409091015290565b60208082526028908201527f4c696245524332305472616e73666f726d65722f4641494c45445f544f5f534560408201527f4e445f4554484552000000000000000000000000000000000000000000000000606082015260800190565b60208082526027908201527f696e76616c696420746f6b656e20616464726573732c20636f6e7461696e732060408201527f6e6f20636f646500000000000000000000000000000000000000000000000000606082015260800190565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610c6f578283fd5b83018035915067ffffffffffffffff821115610c89578283fd5b602001915036819003821315610c9e57600080fd5b9250929050565b60405181810167ffffffffffffffff81118282101715610cc457600080fd5b604052919050565b600067ffffffffffffffff821115610ce2578081fd5b5060209081020190565b73ffffffffffffffffffffffffffffffffffffffff81168114610d0e57600080fd5b5056fea264697066735822122018067da33af76a4f7d450f3e055224ccfca173861a0349070f13e6c9d51cfff464736f6c634300060c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x832B24BB EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xC9353CB5 EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0xD5F39488 EQ PUSH2 0x84 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x94D JUMP JUMPDEST PUSH2 0x99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0xB32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x92A JUMP JUMPDEST PUSH2 0x20F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8C PUSH2 0x301 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0xAC4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA3 PUSH2 0x897 JUMP JUMPDEST PUSH2 0xB0 PUSH1 0x40 DUP5 ADD DUP5 PUSH2 0xC3B JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x985 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP2 DUP4 PUSH1 0x20 ADD MLOAD MLOAD GT PUSH2 0x100 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x119 JUMP JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x110 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ ISZERO PUSH2 0x186 JUMPI PUSH2 0x183 ADDRESS DUP5 PUSH1 0x0 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x157 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x325 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 ISZERO PUSH2 0x1DD JUMPI PUSH2 0x1DD PUSH2 0x19F PUSH1 0x40 DUP8 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x92A JUMP JUMPDEST DUP3 DUP6 PUSH1 0x0 ADD MLOAD DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1B0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3FE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0xC2 JUMP JUMPDEST POP PUSH32 0x13C9929E00000000000000000000000000000000000000000000000000000000 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x27E JUMPI PUSH2 0x27E PUSH2 0x279 CALLER PUSH32 0x0 PUSH2 0x4E4 JUMP JUMPDEST PUSH2 0x59F JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x2E8 JUMPI PUSH2 0x2E8 PUSH2 0x279 ADDRESS PUSH32 0x0 PUSH2 0x5A7 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x330 DUP4 PUSH2 0x5DD JUMP JUMPDEST ISZERO PUSH2 0x353 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND BALANCE PUSH2 0x3F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x3A5 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0xAC4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0xA70 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x407 DUP4 PUSH2 0x5DD JUMP JUMPDEST ISZERO PUSH2 0x4BE JUMPI PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x432 SWAP1 PUSH2 0xAC1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x46F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x474 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x4B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AF SWAP1 PUSH2 0xB81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x4DF JUMP JUMPDEST PUSH2 0x4DF PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND DUP4 DUP4 PUSH2 0x60F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH32 0x5CEC653B364CCA3880AFA73CEFF506D0651D11D26ABBBE4A56460AA933B21B08 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x51A SWAP3 SWAP2 SWAP1 PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x60 PUSH32 0xB5CF2CD09307D6C717473134BADBB9761C2C97D7565566C2A71EBA6CD6FC514D DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x51A SWAP3 SWAP2 SWAP1 PUSH2 0xAE5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x62C SWAP3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE SWAP1 POP PUSH2 0x6B5 DUP5 DUP3 PUSH2 0x6BB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x6E4 SWAP2 SWAP1 PUSH2 0xA88 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x726 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x739 JUMPI PUSH2 0x739 DUP2 PUSH2 0x59F JUMP JUMPDEST DUP1 MLOAD PUSH2 0x780 JUMPI DUP4 EXTCODESIZE DUP1 PUSH2 0x778 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AF SWAP1 PUSH2 0xBDE JUMP JUMPDEST POP POP POP PUSH2 0x7BD JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD LT PUSH2 0x7B4 JUMPI PUSH1 0x0 PUSH2 0x796 DUP3 PUSH1 0x0 PUSH2 0x7C1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x7A9 JUMPI POP POP POP PUSH2 0x7BD JUMP JUMPDEST PUSH2 0x7B2 DUP3 PUSH2 0x59F JUMP JUMPDEST POP JUMPDEST PUSH2 0x6B5 DUP2 PUSH2 0x59F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F5 DUP4 DUP4 PUSH1 0x0 DUP2 PUSH1 0x20 ADD DUP4 MLOAD LT ISZERO PUSH2 0x7E9 JUMPI PUSH2 0x7E9 PUSH2 0x279 PUSH1 0x5 DUP6 MLOAD DUP6 PUSH1 0x20 ADD PUSH2 0x7F2 JUMP JUMPDEST POP ADD PUSH1 0x20 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH4 0x28006595 PUSH1 0xE0 SHL DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x811 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB5F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8C1 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x8D4 PUSH2 0x8CF DUP3 PUSH2 0xCCC JUMP JUMPDEST PUSH2 0xCA5 JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 POP PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP5 DUP2 ADD DUP2 DUP5 MUL DUP7 ADD DUP3 ADD DUP8 LT ISZERO PUSH2 0x8F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x914 JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP3 ADD SWAP3 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x8F8 JUMP JUMPDEST POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x3F8 DUP2 PUSH2 0xCEC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x93B JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x946 DUP2 PUSH2 0xCEC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x95E JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x974 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 ADD PUSH1 0x60 DUP2 DUP6 SUB SLT ISZERO PUSH2 0x946 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x997 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x9AE JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP1 DUP5 ADD SWAP1 PUSH1 0x40 DUP3 DUP8 SUB SLT ISZERO PUSH2 0x9C1 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x9CB PUSH1 0x40 PUSH2 0xCA5 JUMP JUMPDEST DUP3 CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x9D9 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP9 SGT PUSH2 0x9E9 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x9F7 PUSH2 0x8CF DUP3 PUSH2 0xCCC JUMP JUMPDEST DUP2 DUP2 MSTORE DUP7 DUP2 ADD SWAP1 DUP4 DUP9 ADD DUP9 DUP5 MUL DUP6 ADD DUP10 ADD DUP13 LT ISZERO PUSH2 0xA13 JUMPI DUP10 DUP11 REVERT JUMPDEST DUP10 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0xA3D JUMPI PUSH2 0xA29 DUP13 DUP3 PUSH2 0x91F JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP9 ADD SWAP2 DUP9 ADD PUSH2 0xA17 JUMP JUMPDEST POP DUP5 MSTORE POP POP POP DUP3 DUP5 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0xA53 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH2 0xA5F DUP9 DUP3 DUP7 ADD PUSH2 0x8B1 JUMP JUMPDEST SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA81 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAA8 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0xA8E JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xAB6 JUMPI DUP3 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH1 0x8 DUP6 LT PUSH2 0xB6D JUMPI INVALID JUMPDEST SWAP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x4C696245524332305472616E73666F726D65722F4641494C45445F544F5F5345 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x4E445F4554484552000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x27 SWAP1 DUP3 ADD MSTORE PUSH32 0x696E76616C696420746F6B656E20616464726573732C20636F6E7461696E7320 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6E6F20636F646500000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0xC6F JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC89 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0xC9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xCC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xCE2 JUMPI DUP1 DUP2 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xD0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR MOD PUSH30 0xA33AF76A4F7D450F3E055224CCFCA173861A0349070F13E6C9D51CFFF464 PUSH20 0x6F6C634300060C00330000000000000000000000 ","sourceMap":"1133:1743:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2033:841;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1538:512:4;;;;;;:::i;:::-;;:::i;:::-;;1026:33;;;:::i;:::-;;;;;;;:::i;2033:841:3:-;2114:14;2140:25;;:::i;:::-;2179:12;;;;:7;:12;:::i;:::-;2168:41;;;;;;;:::i;:::-;2140:69;;2275:9;2270:542;2294:11;;:18;2290:22;;2270:542;;;2470:14;2509:1;2487:4;:12;;;:19;:23;:55;;2539:2;2487:55;;;2513:4;:12;;;2526:1;2513:15;;;;;;;;;;;;;;2487:55;2470:72;;1771:2;2560:6;:21;2556:116;;;2610:47;2651:4;2610;:11;;;2622:1;2610:14;;;;;;;;;;;;;;:32;;;;:47;;;;:::i;:::-;2601:56;;2556:116;2689:11;;2685:117;;2720:67;2761:17;;;;;;;;:::i;:::-;2780:6;2720:4;:11;;;2732:1;2720:14;;;;;;;;;;;;;;:40;;;;:67;;;;;:::i;:::-;-1:-1:-1;2314:3:3;;2270:542;;;-1:-1:-1;2828:39:3;;2033:841;-1:-1:-1;;;2033:841:3:o;1538:512:4:-;1656:10;:22;1670:8;1656:22;;1652:140;;1694:87;:77;1750:10;1762:8;1694:55;:77::i;:::-;:85;:87::i;:::-;1859:4;1851:32;1868:15;1851:32;;1847:161;;1899:98;:88;1964:4;1971:15;1899:56;:88::i;:98::-;2030:12;2017:26;;;1026:33;;;:::o;3298:232:2:-;3385:20;3421:17;3432:5;3421:10;:17::i;:::-;3417:68;;;-1:-1:-1;3461:13:2;;;;3454:20;;3417:68;3501:22;;;;;:15;;;;;;:22;;3517:5;;3501:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3494:29;;3298:232;;;;;:::o;2377:372::-;2523:17;2534:5;2523:10;:17::i;:::-;2519:224;;;2557:9;2572:2;:7;;2587:6;2572:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2556:42;;;2620:4;2612:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;2519:224;;;;2700:32;:20;;;2721:2;2725:6;2700:20;:32::i;:::-;2377:372;;;:::o;2455:251:0:-;2549:12;2622:57;2682:6;2690:8;2592:107;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2455:251:0;;;;:::o;1468:150:10:-;1591:9;1585:16;1578:4;1567:9;1563:20;1556:46;2712:371:0;2845:12;2939:58;3016:13;3047:15;2892:184;;;;;;;;;:::i;2918:136:2:-;3012:35;;;982:42;3012:35;2918:136;;;:::o;2453:279:6:-;2576:21;2623:23;;;2648:2;2652:6;2600:59;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2669:56:6;2708:5;2600:59;2669:30;:56::i;:::-;2453:279;;;;:::o;5746:1304::-;5844:15;5861:23;5888:6;:11;;5900:8;5888:21;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5843:66;;;;5964:10;5959:78;;5990:36;6015:10;5990:24;:36::i;:::-;6205:17;;6201:240;;6304:19;;6358:8;6350:60;;;;;;;;;;;;:::i;:::-;6424:7;;;;;6201:240;6671:2;6650:10;:17;:23;6646:253;;6689:14;6706:38;6730:10;6742:1;6706:23;:38::i;:::-;6689:55;;6762:6;6772:1;6762:11;6758:131;;;6793:7;;;;;6758:131;6838:36;6863:10;6838:24;:36::i;:::-;6646:253;;7007:36;7032:10;7007:24;:36::i;5746:1304::-;;;:::o;16226:170:7:-;16301:14;16344:21;16356:1;16359:5;14458:14;14499:5;14507:2;14499:10;14488:1;:8;:21;14484:352;;;14525:300;14567:244;14636:95;14753:1;:8;14783:5;14791:2;14783:10;14567:47;:244::i;14525:300::-;-1:-1:-1;15014:13:7;14916:2;15014:13;15008:20;;14383:684::o;1324:292:9:-;1488:12;1264:10;1542:37;;1581:9;1592:6;1600:8;1519:90;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1324:292:9;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;:::o;994:707::-;;1111:3;1104:4;1096:6;1092:17;1088:27;1078:2;;-1:-1;;1119:12;1078:2;1166:6;1153:20;1188:80;1203:64;1260:6;1203:64;:::i;:::-;1188:80;:::i;:::-;1296:21;;;1179:89;-1:-1;1340:4;1353:14;;;;1328:17;;;1442;;;1433:27;;;;1430:36;-1:-1;1427:2;;;1479:1;;1469:12;1427:2;1504:1;1489:206;1514:6;1511:1;1508:13;1489:206;;;2958:20;;1582:50;;1646:14;;;;1674;;;;1536:1;1529:9;1489:206;;;1493:14;;;;;1071:630;;;;:::o;1709:176::-;1799:20;;1824:56;1799:20;1824:56;:::i;3169:257::-;;3281:2;3269:9;3260:7;3256:23;3252:32;3249:2;;;-1:-1;;3287:12;3249:2;93:6;80:20;105:41;140:5;105:41;:::i;:::-;3339:71;3243:183;-1:-1;;;3243:183::o;3433:397::-;;3572:2;3560:9;3551:7;3547:23;3543:32;3540:2;;;-1:-1;;3578:12;3540:2;3636:17;3623:31;3674:18;3666:6;3663:30;3660:2;;;-1:-1;;3696:12;3660:2;3782:22;;2061:2;2043:16;;;2039:25;2036:2;;;-1:-1;;2067:12;3837:387;;3971:2;;3959:9;3950:7;3946:23;3942:32;3939:2;;;-1:-1;;3977:12;3939:2;4035:17;4022:31;4073:18;;4065:6;4062:30;4059:2;;;-1:-1;;4095:12;4059:2;4176:22;;;;2281:4;2260:19;;;2256:30;2253:2;;;-1:-1;;2289:12;2253:2;2317:20;2281:4;2317:20;:::i;:::-;2402:17;2389:31;4073:18;2432:6;2429:30;2426:2;;;-1:-1;;2462:12;2426:2;2576:22;;325:4;313:17;;309:27;-1:-1;299:2;;-1:-1;;340:12;299:2;387:6;374:20;409:103;424:87;504:6;424:87;:::i;409:103::-;540:21;;;597:14;;;;572:17;;;686;;;677:27;;;;674:36;-1:-1;671:2;;;-1:-1;;713:12;671:2;-1:-1;739:10;;733:229;758:6;755:1;752:13;733:229;;;838:60;894:3;882:10;838:60;:::i;:::-;826:73;;780:1;773:9;;;;;913:14;;;;941;;733:229;;;-1:-1;2482:123;;-1:-1;;;2682:18;;;2669:32;2710:30;;;2707:2;;;-1:-1;;2743:12;2707:2;2788:74;2858:3;2849:6;2838:9;2834:22;2788:74;:::i;:::-;2770:16;;;2763:100;;;;2774:5;3933:291;-1:-1;;;;;;3933:291::o;4231:263::-;;4346:2;4334:9;4325:7;4321:23;4317:32;4314:2;;;-1:-1;;4352:12;4314:2;-1:-1;3106:13;;4308:186;-1:-1;4308:186::o;6496:271::-;;4898:5;11165:12;-1:-1;12653:101;12667:6;12664:1;12661:13;12653:101;;;5042:4;12734:11;;;;;12728:18;12715:11;;;12708:39;12682:10;12653:101;;;12769:6;12766:1;12763:13;12760:2;;;-1:-1;12825:6;12820:3;12816:16;12809:27;12760:2;-1:-1;5073:16;;;;;6630:137;-1:-1;;6630:137::o;6774:379::-;7138:10;6962:191::o;7160:222::-;12263:42;12252:54;;;;4572:37;;7287:2;7272:18;;7258:124::o;7389:333::-;12263:42;12252:54;;;4572:37;;12252:54;;7708:2;7693:18;;4572:37;7544:2;7529:18;;7515:207::o;7729:333::-;12263:42;12252:54;;;;4572:37;;8048:2;8033:18;;6447:37;7884:2;7869:18;;7855:207::o;8069:218::-;11807:66;11796:78;;;;4690:36;;8194:2;8179:18;;8165:122::o;8294:510::-;8510:2;8495:18;;12961:1;12951:12;;12941:2;;12967:9;12941:2;5205:83;;;8707:2;8692:18;;6447:37;;;;8790:2;8775:18;;;6447:37;8481:323;:::o;8811:416::-;9011:2;9025:47;;;5525:2;8996:18;;;11463:19;5561:34;11503:14;;;5541:55;5630:10;5616:12;;;5609:32;5660:12;;;8982:245::o;9234:416::-;9434:2;9448:47;;;5911:2;9419:18;;;11463:19;5947:34;11503:14;;;5927:55;6016:9;6002:12;;;5995:31;6045:12;;;9405:245::o;9657:506::-;;;9792:11;9779:25;9843:48;9867:8;9851:14;9847:29;9843:48;9823:18;9819:73;9809:2;;-1:-1;;9896:12;9809:2;9923:33;;9977:18;;;-1:-1;10015:18;10004:30;;10001:2;;;-1:-1;;10037:12;10001:2;9882:4;10065:13;;-1:-1;9851:14;10097:38;;;10087:49;;10084:2;;;10149:1;;10139:12;10084:2;9747:416;;;;;:::o;10170:256::-;10232:2;10226:9;10258:17;;;10333:18;10318:34;;10354:22;;;10315:62;10312:2;;;10390:1;;10380:12;10312:2;10232;10399:22;10210:216;;-1:-1;10210:216::o;10433:327::-;;10615:18;10607:6;10604:30;10601:2;;;-1:-1;;10637:12;10601:2;-1:-1;10682:4;10670:17;;;10735:15;;10538:222::o;12990:133::-;12263:42;13093:5;12252:54;13060:5;13057:43;13047:2;;13114:1;;13104:12;13047:2;13041:82;:::o","linkReferences":{},"immutableReferences":{"922":[{"start":551,"length":32},{"start":597,"length":32},{"start":771,"length":32}],"925":[{"start":662,"length":32},{"start":708,"length":32}]}},"methodIdentifiers":{"deployer()":"d5f39488","die(address)":"c9353cb5","transform((address,address,bytes))":"832b24bb"},"gasEstimates":{"creation":{"codeDepositCost":"679800","executionCost":"infinite","totalCost":"infinite"},"external":{"deployer()":"infinite","die(address)":"infinite","transform((address,address,bytes))":"infinite"},"internal":{}}},"ewasm":{"wasm":""}}},"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol":{"Transformer":{"abi":[{"type":"constructor","inputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deployer","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"die","inputs":[{"name":"ethRecipient","type":"address","internalType":"address payable"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transform","inputs":[{"name":"context","type":"tuple","internalType":"struct IERC20Transformer.TransformContext","components":[{"name":"sender","type":"address","internalType":"address payable"},{"name":"recipient","type":"address","internalType":"address payable"},{"name":"data","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"success","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"}],"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"ethRecipient\",\"type\":\"address\"}],\"name\":\"die\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IERC20Transformer.TransformContext\",\"name\":\"context\",\"type\":\"tuple\"}],\"name\":\"transform\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"success\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Abstract base class for transformers.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Create this contract.\"},\"die(address)\":{\"details\":\"Destruct this contract. Only callable by the deployer and will not      succeed in the context of a delegatecall (from another contract).\",\"params\":{\"ethRecipient\":\"The recipient of ETH held in this contract.\"}},\"transform((address,address,bytes))\":{\"details\":\"Called from `TransformERC20.transformERC20()`. This will be      delegatecalled in the context of the FlashWallet instance being used.\",\"params\":{\"context\":\"Context information.\"},\"returns\":{\"success\":\"The success bytes (`LibERC20Transformer.TRANSFORMER_SUCCESS`).\"}}},\"stateVariables\":{\"_implementation\":{\"details\":\"The original address of this contract.\"},\"deployer\":{\"details\":\"The address of the deployer.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol\":\"Transformer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@0x/contracts-erc20/=/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/\",\":@0x/contracts-utils/=/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/\"]},\"sources\":{\"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/errors/LibTransformERC20RichErrors.sol\":{\"keccak256\":\"0x7b5d95f624986c2a526e8a339658ae6cb26f70bead2060c65f2ff22abeecfca8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d7fab3f069ea6dfe2e761161fc48d50aa41129866e7a6cabde9dd78b2a75fa27\",\"dweb:/ipfs/QmcVJ1T6tU6qLttg4hbAYq74jYUvfvjZrzHukEUDXg39cz\"]},\"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/IERC20Transformer.sol\":{\"keccak256\":\"0x78632f2364694d58d968b4c2c20465475da774ca072c49728fa11726993fe7c9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2204c8c11be339ece9d3cb6823510d126fc6b77fa851601e301ee68c87a09f62\",\"dweb:/ipfs/QmR7gJ7URcApR6uomYop72yYm3cSMxyRJr4ZLV4k78ZUha\"]},\"/Users/kyuc/code/0x/protocol/contracts/zero-ex/contracts/src/transformers/Transformer.sol\":{\"keccak256\":\"0xce5a8ae329d7e824603e9dbbc36571cbdb1979ddc7f2fd911eb1b6714c113253\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://12efa0b26e117ba8bf90d1f14a60e65354d20125debcd076a878d9432c4b95d8\",\"dweb:/ipfs/QmVQFu8t59jcy2YVwDSRj8BHaUbHkps4QGvJGxxS2AXEnG\"]},\"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/IERC20TokenV06.sol\":{\"keccak256\":\"0xc4d00260929b770dfa76ce7266826c24f792463938448f919638c4d29357dfbd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://115f5aeb6d8a2530e24e9ec2066dfe96861f4496cf4c5de989da6d42ddf124e4\",\"dweb:/ipfs/QmQxkf5hQAw5axkkgMeEe2DMtCcs5przJLvFQkQYshAEtf\"]},\"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol\":{\"keccak256\":\"0x7c918c16b4be1771ce1c26fa93c6726d17809a4676cef501b4dde3c94fc277f9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c5afd5d606294e1ce53f02a9c1db0fb82c4b2cfdb3d50d08c07b4e52f9457b48\",\"dweb:/ipfs/QmeHN7GrEYfmbt769p39jsaExHDdzz7ktuzbQxCCAVgLrq\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","details":"Abstract base class for transformers.","methods":{"constructor":{"details":"Create this contract."},"die(address)":{"details":"Destruct this contract. Only callable by the deployer and will not      succeed in the context of a delegatecall (from another contract).","params":{"ethRecipient":"The recipient of ETH held in this contract."}},"transform((address,address,bytes))":{"details":"Called from `TransformERC20.transformERC20()`. This will be      delegatecalled in the context of the FlashWallet instance being used.","params":{"context":"Context information."},"returns":{"success":"The success bytes (`LibERC20Transformer.TRANSFORMER_SUCCESS`)."}}}},"evm":{"assembly":"","bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"deployer()":"d5f39488","die(address)":"c9353cb5","transform((address,address,bytes))":"832b24bb"}},"ewasm":{"wasm":""}}},"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/IERC20TokenV06.sol":{"IERC20TokenV06":{"abi":[{"type":"function","name":"allowance","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"spender","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"approve","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"balanceOf","inputs":[{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"transfer","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"transferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"event","name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"spender","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Transfer","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Get the allowance for `spender` to spend from `owner`.\",\"params\":{\"owner\":\"The address of the account owning tokens\",\"spender\":\"The address of the account able to transfer the tokens\"},\"returns\":{\"_0\":\"Amount of remaining tokens allowed to spent\"}},\"approve(address,uint256)\":{\"details\":\"`msg.sender` approves `spender` to spend `value` tokens\",\"params\":{\"spender\":\"The address of the account able to transfer the tokens\",\"value\":\"The amount of wei to be approved for transfer\"},\"returns\":{\"_0\":\"Always true if the call has enough gas to complete execution\"}},\"balanceOf(address)\":{\"details\":\"Get the balance of `owner`.\",\"params\":{\"owner\":\"The address from which the balance will be retrieved\"},\"returns\":{\"_0\":\"Balance of owner\"}},\"decimals()\":{\"details\":\"Get the number of decimals this token has.\"},\"totalSupply()\":{\"details\":\"Query total supply of token\",\"returns\":{\"_0\":\"Total supply of token\"}},\"transfer(address,uint256)\":{\"details\":\"send `value` token to `to` from `msg.sender`\",\"params\":{\"to\":\"The address of the recipient\",\"value\":\"The amount of token to be transferred\"},\"returns\":{\"_0\":\"True if transfer was successful\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"send `value` token to `to` from `from` on the condition it is approved by `from`\",\"params\":{\"from\":\"The address of the sender\",\"to\":\"The address of the recipient\",\"value\":\"The amount of token to be transferred\"},\"returns\":{\"_0\":\"True if transfer was successful\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/IERC20TokenV06.sol\":\"IERC20TokenV06\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@0x/contracts-erc20/=/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/\",\":@0x/contracts-utils/=/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/\"]},\"sources\":{\"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/IERC20TokenV06.sol\":{\"keccak256\":\"0xc4d00260929b770dfa76ce7266826c24f792463938448f919638c4d29357dfbd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://115f5aeb6d8a2530e24e9ec2066dfe96861f4496cf4c5de989da6d42ddf124e4\",\"dweb:/ipfs/QmQxkf5hQAw5axkkgMeEe2DMtCcs5przJLvFQkQYshAEtf\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","methods":{"allowance(address,address)":{"details":"Get the allowance for `spender` to spend from `owner`.","params":{"owner":"The address of the account owning tokens","spender":"The address of the account able to transfer the tokens"},"returns":{"_0":"Amount of remaining tokens allowed to spent"}},"approve(address,uint256)":{"details":"`msg.sender` approves `spender` to spend `value` tokens","params":{"spender":"The address of the account able to transfer the tokens","value":"The amount of wei to be approved for transfer"},"returns":{"_0":"Always true if the call has enough gas to complete execution"}},"balanceOf(address)":{"details":"Get the balance of `owner`.","params":{"owner":"The address from which the balance will be retrieved"},"returns":{"_0":"Balance of owner"}},"decimals()":{"details":"Get the number of decimals this token has."},"totalSupply()":{"details":"Query total supply of token","returns":{"_0":"Total supply of token"}},"transfer(address,uint256)":{"details":"send `value` token to `to` from `msg.sender`","params":{"to":"The address of the recipient","value":"The amount of token to be transferred"},"returns":{"_0":"True if transfer was successful"}},"transferFrom(address,address,uint256)":{"details":"send `value` token to `to` from `from` on the condition it is approved by `from`","params":{"from":"The address of the sender","to":"The address of the recipient","value":"The amount of token to be transferred"},"returns":{"_0":"True if transfer was successful"}}}},"evm":{"assembly":"","bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"ewasm":{"wasm":""}}},"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol":{"LibERC20TokenV06":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":\"LibERC20TokenV06\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@0x/contracts-erc20/=/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/\",\":@0x/contracts-utils/=/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/\"]},\"sources\":{\"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/IERC20TokenV06.sol\":{\"keccak256\":\"0xc4d00260929b770dfa76ce7266826c24f792463938448f919638c4d29357dfbd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://115f5aeb6d8a2530e24e9ec2066dfe96861f4496cf4c5de989da6d42ddf124e4\",\"dweb:/ipfs/QmQxkf5hQAw5axkkgMeEe2DMtCcs5przJLvFQkQYshAEtf\"]},\"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":{\"keccak256\":\"0x5f37ab3203377aaad49cf071c072d74ef7389697102da89896f4e21b00e917c5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d4221449faf3751fd20283cc3f276d6b1850a1e1ad3c1daa165e9f33787d1a63\",\"dweb:/ipfs/QmYFhm8S5DoaVSs9ZDMj1cx698nuRfuLmFkN3VVSuEZ6tv\"]},\"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol\":{\"keccak256\":\"0x8e44f6970c8df72de1f48c88084450b7af28e53a25e5ceab6ce2731079a2c893\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2c7922a5f738dcc0e3258c196c97e5644b24d0563c0ba6089cc4427bbc5489e1\",\"dweb:/ipfs/QmeEJ9FPGVffiEYT3KpURMrG1HFBjeSisV6nPzJjZKdfMm\"]},\"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibBytesRichErrorsV06.sol\":{\"keccak256\":\"0x0a0323239a3b849c218aa43e39983c355d086471c0bba29ee7d978d3091d0f17\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f2901054b1c4c36d333d20135b744ab23047adb05351c6452f15369654cabab6\",\"dweb:/ipfs/QmafvQ5EGAVvZgxP3HjuSCxKrSNiQYau4apm72AHFM9e5c\"]},\"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol\":{\"keccak256\":\"0x7c918c16b4be1771ce1c26fa93c6726d17809a4676cef501b4dde3c94fc277f9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c5afd5d606294e1ce53f02a9c1db0fb82c4b2cfdb3d50d08c07b4e52f9457b48\",\"dweb:/ipfs/QmeHN7GrEYfmbt769p39jsaExHDdzz7ktuzbQxCCAVgLrq\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev"},"evm":{"assembly":"    /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":816:7052  library LibERC20TokenV06 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/contracts/src/v06/LibERC20TokenV06.sol\":816:7052  library LibERC20TokenV06 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122095e0234bcd042a1b0978f607d286c7bad96b46ef30089fd928f4db149fc9bacd64736f6c634300060c0033\n}\n","legacyAssembly":{".code":[{"begin":816,"end":7052,"name":"PUSH #[$]","source":6,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":816,"end":7052,"name":"PUSH [$]","source":6,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":816,"end":7052,"name":"PUSH","source":6,"value":"B"},{"begin":816,"end":7052,"name":"DUP3","source":6},{"begin":816,"end":7052,"name":"DUP3","source":6},{"begin":816,"end":7052,"name":"DUP3","source":6},{"begin":816,"end":7052,"name":"CODECOPY","source":6},{"begin":816,"end":7052,"name":"DUP1","source":6},{"begin":816,"end":7052,"name":"MLOAD","source":6},{"begin":816,"end":7052,"name":"PUSH","source":6,"value":"0"},{"begin":816,"end":7052,"name":"BYTE","source":6},{"begin":816,"end":7052,"name":"PUSH","source":6,"value":"73"},{"begin":816,"end":7052,"name":"EQ","source":6},{"begin":816,"end":7052,"name":"PUSH [tag]","source":6,"value":"1"},{"begin":816,"end":7052,"name":"JUMPI","source":6},{"begin":816,"end":7052,"name":"INVALID","source":6},{"begin":816,"end":7052,"name":"tag","source":6,"value":"1"},{"begin":816,"end":7052,"name":"JUMPDEST","source":6},{"begin":816,"end":7052,"name":"ADDRESS","source":6},{"begin":816,"end":7052,"name":"PUSH","source":6,"value":"0"},{"begin":816,"end":7052,"name":"MSTORE","source":6},{"begin":816,"end":7052,"name":"PUSH","source":6,"value":"73"},{"begin":816,"end":7052,"name":"DUP2","source":6},{"begin":816,"end":7052,"name":"MSTORE8","source":6},{"begin":816,"end":7052,"name":"DUP3","source":6},{"begin":816,"end":7052,"name":"DUP2","source":6},{"begin":816,"end":7052,"name":"RETURN","source":6}],".data":{"0":{".auxdata":"a264697066735822122095e0234bcd042a1b0978f607d286c7bad96b46ef30089fd928f4db149fc9bacd64736f6c634300060c0033",".code":[{"begin":816,"end":7052,"name":"PUSHDEPLOYADDRESS","source":6},{"begin":816,"end":7052,"name":"ADDRESS","source":6},{"begin":816,"end":7052,"name":"EQ","source":6},{"begin":816,"end":7052,"name":"PUSH","source":6,"value":"80"},{"begin":816,"end":7052,"name":"PUSH","source":6,"value":"40"},{"begin":816,"end":7052,"name":"MSTORE","source":6},{"begin":816,"end":7052,"name":"PUSH","source":6,"value":"0"},{"begin":816,"end":7052,"name":"DUP1","source":6},{"begin":816,"end":7052,"name":"REVERT","source":6}]}}},"bytecode":{"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122095e0234bcd042a1b0978f607d286c7bad96b46ef30089fd928f4db149fc9bacd64736f6c634300060c0033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0xE0 0x23 0x4B 0xCD DIV 0x2A SHL MULMOD PUSH25 0xF607D286C7BAD96B46EF30089FD928F4DB149FC9BACD64736F PUSH13 0x634300060C0033000000000000 ","sourceMap":"816:6236:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122095e0234bcd042a1b0978f607d286c7bad96b46ef30089fd928f4db149fc9bacd64736f6c634300060c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0xE0 0x23 0x4B 0xCD DIV 0x2A SHL MULMOD PUSH25 0xF607D286C7BAD96B46EF30089FD928F4DB149FC9BACD64736F PUSH13 0x634300060C0033000000000000 ","sourceMap":"816:6236:6:-:0;;;;;;;;","linkReferences":{}},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"external":{},"internal":{"_callWithOptionalBooleanResult(address,bytes memory)":"infinite","approveIfBelow(contract IERC20TokenV06,address,uint256)":"infinite","compatAllowance(contract IERC20TokenV06,address,address)":"infinite","compatApprove(contract IERC20TokenV06,address,uint256)":"infinite","compatBalanceOf(contract IERC20TokenV06,address)":"infinite","compatDecimals(contract IERC20TokenV06)":"infinite","compatTransfer(contract IERC20TokenV06,address,uint256)":"infinite","compatTransferFrom(contract IERC20TokenV06,address,address,uint256)":"infinite"}}},"ewasm":{"wasm":""}}},"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol":{"LibBytesV06":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol\":\"LibBytesV06\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@0x/contracts-erc20/=/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/\",\":@0x/contracts-utils/=/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/\"]},\"sources\":{\"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol\":{\"keccak256\":\"0x8e44f6970c8df72de1f48c88084450b7af28e53a25e5ceab6ce2731079a2c893\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2c7922a5f738dcc0e3258c196c97e5644b24d0563c0ba6089cc4427bbc5489e1\",\"dweb:/ipfs/QmeEJ9FPGVffiEYT3KpURMrG1HFBjeSisV6nPzJjZKdfMm\"]},\"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibBytesRichErrorsV06.sol\":{\"keccak256\":\"0x0a0323239a3b849c218aa43e39983c355d086471c0bba29ee7d978d3091d0f17\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f2901054b1c4c36d333d20135b744ab23047adb05351c6452f15369654cabab6\",\"dweb:/ipfs/QmafvQ5EGAVvZgxP3HjuSCxKrSNiQYau4apm72AHFM9e5c\"]},\"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol\":{\"keccak256\":\"0x7c918c16b4be1771ce1c26fa93c6726d17809a4676cef501b4dde3c94fc277f9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c5afd5d606294e1ce53f02a9c1db0fb82c4b2cfdb3d50d08c07b4e52f9457b48\",\"dweb:/ipfs/QmeHN7GrEYfmbt769p39jsaExHDdzz7ktuzbQxCCAVgLrq\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev"},"evm":{"assembly":"    /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol\":730:18434  library LibBytesV06 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibBytesV06.sol\":730:18434  library LibBytesV06 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206118b9d1ed94d300e45318ef6e51c3532eb0a7d47750cbc6a03fa410264ebb7764736f6c634300060c0033\n}\n","legacyAssembly":{".code":[{"begin":730,"end":18434,"name":"PUSH #[$]","source":7,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":730,"end":18434,"name":"PUSH [$]","source":7,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":730,"end":18434,"name":"PUSH","source":7,"value":"B"},{"begin":730,"end":18434,"name":"DUP3","source":7},{"begin":730,"end":18434,"name":"DUP3","source":7},{"begin":730,"end":18434,"name":"DUP3","source":7},{"begin":730,"end":18434,"name":"CODECOPY","source":7},{"begin":730,"end":18434,"name":"DUP1","source":7},{"begin":730,"end":18434,"name":"MLOAD","source":7},{"begin":730,"end":18434,"name":"PUSH","source":7,"value":"0"},{"begin":730,"end":18434,"name":"BYTE","source":7},{"begin":730,"end":18434,"name":"PUSH","source":7,"value":"73"},{"begin":730,"end":18434,"name":"EQ","source":7},{"begin":730,"end":18434,"name":"PUSH [tag]","source":7,"value":"1"},{"begin":730,"end":18434,"name":"JUMPI","source":7},{"begin":730,"end":18434,"name":"INVALID","source":7},{"begin":730,"end":18434,"name":"tag","source":7,"value":"1"},{"begin":730,"end":18434,"name":"JUMPDEST","source":7},{"begin":730,"end":18434,"name":"ADDRESS","source":7},{"begin":730,"end":18434,"name":"PUSH","source":7,"value":"0"},{"begin":730,"end":18434,"name":"MSTORE","source":7},{"begin":730,"end":18434,"name":"PUSH","source":7,"value":"73"},{"begin":730,"end":18434,"name":"DUP2","source":7},{"begin":730,"end":18434,"name":"MSTORE8","source":7},{"begin":730,"end":18434,"name":"DUP3","source":7},{"begin":730,"end":18434,"name":"DUP2","source":7},{"begin":730,"end":18434,"name":"RETURN","source":7}],".data":{"0":{".auxdata":"a26469706673582212206118b9d1ed94d300e45318ef6e51c3532eb0a7d47750cbc6a03fa410264ebb7764736f6c634300060c0033",".code":[{"begin":730,"end":18434,"name":"PUSHDEPLOYADDRESS","source":7},{"begin":730,"end":18434,"name":"ADDRESS","source":7},{"begin":730,"end":18434,"name":"EQ","source":7},{"begin":730,"end":18434,"name":"PUSH","source":7,"value":"80"},{"begin":730,"end":18434,"name":"PUSH","source":7,"value":"40"},{"begin":730,"end":18434,"name":"MSTORE","source":7},{"begin":730,"end":18434,"name":"PUSH","source":7,"value":"0"},{"begin":730,"end":18434,"name":"DUP1","source":7},{"begin":730,"end":18434,"name":"REVERT","source":7}]}}},"bytecode":{"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206118b9d1ed94d300e45318ef6e51c3532eb0a7d47750cbc6a03fa410264ebb7764736f6c634300060c0033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x18B9 0xD1 0xED SWAP5 0xD3 STOP 0xE4 MSTORE8 XOR 0xEF PUSH15 0x51C3532EB0A7D47750CBC6A03FA410 0x26 0x4E 0xBB PUSH24 0x64736F6C634300060C003300000000000000000000000000 ","sourceMap":"730:17704:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206118b9d1ed94d300e45318ef6e51c3532eb0a7d47750cbc6a03fa410264ebb7764736f6c634300060c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x18B9 0xD1 0xED SWAP5 0xD3 STOP 0xE4 MSTORE8 XOR 0xEF PUSH15 0x51C3532EB0A7D47750CBC6A03FA410 0x26 0x4E 0xBB PUSH24 0x64736F6C634300060C003300000000000000000000000000 ","sourceMap":"730:17704:7:-:0;;;;;;;;","linkReferences":{}},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"external":{},"internal":{"contentAddress(bytes memory)":"infinite","equals(bytes memory,bytes memory)":"infinite","memCopy(uint256,uint256,uint256)":"infinite","popLastByte(bytes memory)":"infinite","rawAddress(bytes memory)":"infinite","readAddress(bytes memory,uint256)":"infinite","readBytes32(bytes memory,uint256)":"infinite","readBytes4(bytes memory,uint256)":"infinite","readUint256(bytes memory,uint256)":"infinite","slice(bytes memory,uint256,uint256)":"infinite","sliceDestructive(bytes memory,uint256,uint256)":"infinite","writeAddress(bytes memory,uint256,address)":"infinite","writeBytes32(bytes memory,uint256,bytes32)":"infinite","writeLength(bytes memory,uint256)":"infinite","writeUint256(bytes memory,uint256,uint256)":"infinite"}}},"ewasm":{"wasm":""}}},"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibSafeMathV06.sol":{"LibSafeMathV06":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibSafeMathV06.sol\":\"LibSafeMathV06\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@0x/contracts-erc20/=/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/\",\":@0x/contracts-utils/=/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/\"]},\"sources\":{\"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibSafeMathV06.sol\":{\"keccak256\":\"0xf41503c5323320d0d4a8de4afddbc41c9e0fa205b8b0ee317bd4d98b411bb3ea\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://168c15f7009ae049478e8be800ef7b627373691878388659bd30b8be049b0c7f\",\"dweb:/ipfs/QmP1R2YzmnbgQhaK5N6QyscgAhWvHAd1sos8f44EV3E5Md\"]},\"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol\":{\"keccak256\":\"0x7c918c16b4be1771ce1c26fa93c6726d17809a4676cef501b4dde3c94fc277f9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c5afd5d606294e1ce53f02a9c1db0fb82c4b2cfdb3d50d08c07b4e52f9457b48\",\"dweb:/ipfs/QmeHN7GrEYfmbt769p39jsaExHDdzz7ktuzbQxCCAVgLrq\"]},\"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibSafeMathRichErrorsV06.sol\":{\"keccak256\":\"0xf9c2aee205c7201a19684c5d8c7f0debc5991b00a6c693c976b092c44f8b8980\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://22e720c36473df8103a97c1c8d4836361b251d756d79735a3803681ebc71874b\",\"dweb:/ipfs/QmT5WuJFV14F872G1Ta7J7kyF6C6VDGqK8orHf81bcW3Fw\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev"},"evm":{"assembly":"    /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibSafeMathV06.sol\":733:5065  library LibSafeMathV06 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/LibSafeMathV06.sol\":733:5065  library LibSafeMathV06 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220621458ca62f32f4b8ab993f2ff7d5dffcd1dc78cecf832016e9a7c0bf514f7fb64736f6c634300060c0033\n}\n","legacyAssembly":{".code":[{"begin":733,"end":5065,"name":"PUSH #[$]","source":8,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":733,"end":5065,"name":"PUSH [$]","source":8,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":733,"end":5065,"name":"PUSH","source":8,"value":"B"},{"begin":733,"end":5065,"name":"DUP3","source":8},{"begin":733,"end":5065,"name":"DUP3","source":8},{"begin":733,"end":5065,"name":"DUP3","source":8},{"begin":733,"end":5065,"name":"CODECOPY","source":8},{"begin":733,"end":5065,"name":"DUP1","source":8},{"begin":733,"end":5065,"name":"MLOAD","source":8},{"begin":733,"end":5065,"name":"PUSH","source":8,"value":"0"},{"begin":733,"end":5065,"name":"BYTE","source":8},{"begin":733,"end":5065,"name":"PUSH","source":8,"value":"73"},{"begin":733,"end":5065,"name":"EQ","source":8},{"begin":733,"end":5065,"name":"PUSH [tag]","source":8,"value":"1"},{"begin":733,"end":5065,"name":"JUMPI","source":8},{"begin":733,"end":5065,"name":"INVALID","source":8},{"begin":733,"end":5065,"name":"tag","source":8,"value":"1"},{"begin":733,"end":5065,"name":"JUMPDEST","source":8},{"begin":733,"end":5065,"name":"ADDRESS","source":8},{"begin":733,"end":5065,"name":"PUSH","source":8,"value":"0"},{"begin":733,"end":5065,"name":"MSTORE","source":8},{"begin":733,"end":5065,"name":"PUSH","source":8,"value":"73"},{"begin":733,"end":5065,"name":"DUP2","source":8},{"begin":733,"end":5065,"name":"MSTORE8","source":8},{"begin":733,"end":5065,"name":"DUP3","source":8},{"begin":733,"end":5065,"name":"DUP2","source":8},{"begin":733,"end":5065,"name":"RETURN","source":8}],".data":{"0":{".auxdata":"a2646970667358221220621458ca62f32f4b8ab993f2ff7d5dffcd1dc78cecf832016e9a7c0bf514f7fb64736f6c634300060c0033",".code":[{"begin":733,"end":5065,"name":"PUSHDEPLOYADDRESS","source":8},{"begin":733,"end":5065,"name":"ADDRESS","source":8},{"begin":733,"end":5065,"name":"EQ","source":8},{"begin":733,"end":5065,"name":"PUSH","source":8,"value":"80"},{"begin":733,"end":5065,"name":"PUSH","source":8,"value":"40"},{"begin":733,"end":5065,"name":"MSTORE","source":8},{"begin":733,"end":5065,"name":"PUSH","source":8,"value":"0"},{"begin":733,"end":5065,"name":"DUP1","source":8},{"begin":733,"end":5065,"name":"REVERT","source":8}]}}},"bytecode":{"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220621458ca62f32f4b8ab993f2ff7d5dffcd1dc78cecf832016e9a7c0bf514f7fb64736f6c634300060c0033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0x1458CA PUSH3 0xF32F4B DUP11 0xB9 SWAP4 CALLCODE SELFDESTRUCT PUSH30 0x5DFFCD1DC78CECF832016E9A7C0BF514F7FB64736F6C634300060C003300 ","sourceMap":"733:4332:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220621458ca62f32f4b8ab993f2ff7d5dffcd1dc78cecf832016e9a7c0bf514f7fb64736f6c634300060c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0x1458CA PUSH3 0xF32F4B DUP11 0xB9 SWAP4 CALLCODE SELFDESTRUCT PUSH30 0x5DFFCD1DC78CECF832016E9A7C0BF514F7FB64736F6C634300060C003300 ","sourceMap":"733:4332:8:-:0;;;;;;;;","linkReferences":{}},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"external":{},"internal":{"max128(uint128,uint128)":"infinite","max256(uint256,uint256)":"infinite","min128(uint128,uint128)":"infinite","min256(uint256,uint256)":"infinite","safeAdd(uint256,uint256)":"infinite","safeAdd128(uint128,uint128)":"infinite","safeDiv(uint256,uint256)":"infinite","safeDiv128(uint128,uint128)":"infinite","safeDowncastToUint128(uint256)":"infinite","safeMul(uint256,uint256)":"infinite","safeMul128(uint128,uint128)":"infinite","safeSub(uint256,uint256)":"infinite","safeSub128(uint128,uint128)":"infinite"}}},"ewasm":{"wasm":""}}},"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibBytesRichErrorsV06.sol":{"LibBytesRichErrorsV06":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibBytesRichErrorsV06.sol\":\"LibBytesRichErrorsV06\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@0x/contracts-erc20/=/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/\",\":@0x/contracts-utils/=/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/\"]},\"sources\":{\"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibBytesRichErrorsV06.sol\":{\"keccak256\":\"0x0a0323239a3b849c218aa43e39983c355d086471c0bba29ee7d978d3091d0f17\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f2901054b1c4c36d333d20135b744ab23047adb05351c6452f15369654cabab6\",\"dweb:/ipfs/QmafvQ5EGAVvZgxP3HjuSCxKrSNiQYau4apm72AHFM9e5c\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev"},"evm":{"assembly":"    /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibBytesRichErrorsV06.sol\":644:1618  library LibBytesRichErrorsV06 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibBytesRichErrorsV06.sol\":644:1618  library LibBytesRichErrorsV06 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c4bda3d15c65697215c3dee9821e721ad7ccf772d7d5b1907b97485b0f0b8ec964736f6c634300060c0033\n}\n","legacyAssembly":{".code":[{"begin":644,"end":1618,"name":"PUSH #[$]","source":9,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":644,"end":1618,"name":"PUSH [$]","source":9,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":644,"end":1618,"name":"PUSH","source":9,"value":"B"},{"begin":644,"end":1618,"name":"DUP3","source":9},{"begin":644,"end":1618,"name":"DUP3","source":9},{"begin":644,"end":1618,"name":"DUP3","source":9},{"begin":644,"end":1618,"name":"CODECOPY","source":9},{"begin":644,"end":1618,"name":"DUP1","source":9},{"begin":644,"end":1618,"name":"MLOAD","source":9},{"begin":644,"end":1618,"name":"PUSH","source":9,"value":"0"},{"begin":644,"end":1618,"name":"BYTE","source":9},{"begin":644,"end":1618,"name":"PUSH","source":9,"value":"73"},{"begin":644,"end":1618,"name":"EQ","source":9},{"begin":644,"end":1618,"name":"PUSH [tag]","source":9,"value":"1"},{"begin":644,"end":1618,"name":"JUMPI","source":9},{"begin":644,"end":1618,"name":"INVALID","source":9},{"begin":644,"end":1618,"name":"tag","source":9,"value":"1"},{"begin":644,"end":1618,"name":"JUMPDEST","source":9},{"begin":644,"end":1618,"name":"ADDRESS","source":9},{"begin":644,"end":1618,"name":"PUSH","source":9,"value":"0"},{"begin":644,"end":1618,"name":"MSTORE","source":9},{"begin":644,"end":1618,"name":"PUSH","source":9,"value":"73"},{"begin":644,"end":1618,"name":"DUP2","source":9},{"begin":644,"end":1618,"name":"MSTORE8","source":9},{"begin":644,"end":1618,"name":"DUP3","source":9},{"begin":644,"end":1618,"name":"DUP2","source":9},{"begin":644,"end":1618,"name":"RETURN","source":9}],".data":{"0":{".auxdata":"a2646970667358221220c4bda3d15c65697215c3dee9821e721ad7ccf772d7d5b1907b97485b0f0b8ec964736f6c634300060c0033",".code":[{"begin":644,"end":1618,"name":"PUSHDEPLOYADDRESS","source":9},{"begin":644,"end":1618,"name":"ADDRESS","source":9},{"begin":644,"end":1618,"name":"EQ","source":9},{"begin":644,"end":1618,"name":"PUSH","source":9,"value":"80"},{"begin":644,"end":1618,"name":"PUSH","source":9,"value":"40"},{"begin":644,"end":1618,"name":"MSTORE","source":9},{"begin":644,"end":1618,"name":"PUSH","source":9,"value":"0"},{"begin":644,"end":1618,"name":"DUP1","source":9},{"begin":644,"end":1618,"name":"REVERT","source":9}]}}},"bytecode":{"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c4bda3d15c65697215c3dee9821e721ad7ccf772d7d5b1907b97485b0f0b8ec964736f6c634300060c0033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 0xBD LOG3 0xD1 0x5C PUSH6 0x697215C3DEE9 DUP3 0x1E PUSH19 0x1AD7CCF772D7D5B1907B97485B0F0B8EC96473 PUSH16 0x6C634300060C00330000000000000000 ","sourceMap":"644:974:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c4bda3d15c65697215c3dee9821e721ad7ccf772d7d5b1907b97485b0f0b8ec964736f6c634300060c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 0xBD LOG3 0xD1 0x5C PUSH6 0x697215C3DEE9 DUP3 0x1E PUSH19 0x1AD7CCF772D7D5B1907B97485B0F0B8EC96473 PUSH16 0x6C634300060C00330000000000000000 ","sourceMap":"644:974:9:-:0;;;;;;;;","linkReferences":{}},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"external":{},"internal":{"InvalidByteOperationError(enum LibBytesRichErrorsV06.InvalidByteOperationErrorCodes,uint256,uint256)":"infinite"}}},"ewasm":{"wasm":""}}},"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol":{"LibRichErrorsV06":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol\":\"LibRichErrorsV06\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@0x/contracts-erc20/=/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/\",\":@0x/contracts-utils/=/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/\"]},\"sources\":{\"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol\":{\"keccak256\":\"0x7c918c16b4be1771ce1c26fa93c6726d17809a4676cef501b4dde3c94fc277f9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c5afd5d606294e1ce53f02a9c1db0fb82c4b2cfdb3d50d08c07b4e52f9457b48\",\"dweb:/ipfs/QmeHN7GrEYfmbt769p39jsaExHDdzz7ktuzbQxCCAVgLrq\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev"},"evm":{"assembly":"    /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol\":644:1620  library LibRichErrorsV06 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol\":644:1620  library LibRichErrorsV06 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220329370ddfb87a2c5958da9c0ed2f0d57e5f80a6b0d0afe2a71795d5cc14b43f064736f6c634300060c0033\n}\n","legacyAssembly":{".code":[{"begin":644,"end":1620,"name":"PUSH #[$]","source":10,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":644,"end":1620,"name":"PUSH [$]","source":10,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":644,"end":1620,"name":"PUSH","source":10,"value":"B"},{"begin":644,"end":1620,"name":"DUP3","source":10},{"begin":644,"end":1620,"name":"DUP3","source":10},{"begin":644,"end":1620,"name":"DUP3","source":10},{"begin":644,"end":1620,"name":"CODECOPY","source":10},{"begin":644,"end":1620,"name":"DUP1","source":10},{"begin":644,"end":1620,"name":"MLOAD","source":10},{"begin":644,"end":1620,"name":"PUSH","source":10,"value":"0"},{"begin":644,"end":1620,"name":"BYTE","source":10},{"begin":644,"end":1620,"name":"PUSH","source":10,"value":"73"},{"begin":644,"end":1620,"name":"EQ","source":10},{"begin":644,"end":1620,"name":"PUSH [tag]","source":10,"value":"1"},{"begin":644,"end":1620,"name":"JUMPI","source":10},{"begin":644,"end":1620,"name":"INVALID","source":10},{"begin":644,"end":1620,"name":"tag","source":10,"value":"1"},{"begin":644,"end":1620,"name":"JUMPDEST","source":10},{"begin":644,"end":1620,"name":"ADDRESS","source":10},{"begin":644,"end":1620,"name":"PUSH","source":10,"value":"0"},{"begin":644,"end":1620,"name":"MSTORE","source":10},{"begin":644,"end":1620,"name":"PUSH","source":10,"value":"73"},{"begin":644,"end":1620,"name":"DUP2","source":10},{"begin":644,"end":1620,"name":"MSTORE8","source":10},{"begin":644,"end":1620,"name":"DUP3","source":10},{"begin":644,"end":1620,"name":"DUP2","source":10},{"begin":644,"end":1620,"name":"RETURN","source":10}],".data":{"0":{".auxdata":"a2646970667358221220329370ddfb87a2c5958da9c0ed2f0d57e5f80a6b0d0afe2a71795d5cc14b43f064736f6c634300060c0033",".code":[{"begin":644,"end":1620,"name":"PUSHDEPLOYADDRESS","source":10},{"begin":644,"end":1620,"name":"ADDRESS","source":10},{"begin":644,"end":1620,"name":"EQ","source":10},{"begin":644,"end":1620,"name":"PUSH","source":10,"value":"80"},{"begin":644,"end":1620,"name":"PUSH","source":10,"value":"40"},{"begin":644,"end":1620,"name":"MSTORE","source":10},{"begin":644,"end":1620,"name":"PUSH","source":10,"value":"0"},{"begin":644,"end":1620,"name":"DUP1","source":10},{"begin":644,"end":1620,"name":"REVERT","source":10}]}}},"bytecode":{"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220329370ddfb87a2c5958da9c0ed2f0d57e5f80a6b0d0afe2a71795d5cc14b43f064736f6c634300060c0033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN SWAP4 PUSH17 0xDDFB87A2C5958DA9C0ED2F0D57E5F80A6B 0xD EXP INVALID 0x2A PUSH18 0x795D5CC14B43F064736F6C634300060C0033 ","sourceMap":"644:976:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220329370ddfb87a2c5958da9c0ed2f0d57e5f80a6b0d0afe2a71795d5cc14b43f064736f6c634300060c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN SWAP4 PUSH17 0xDDFB87A2C5958DA9C0ED2F0D57E5F80A6B 0xD EXP INVALID 0x2A PUSH18 0x795D5CC14B43F064736F6C634300060C0033 ","sourceMap":"644:976:10:-:0;;;;;;;;","linkReferences":{}},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"external":{},"internal":{"StandardError(string memory)":"infinite","rrevert(bytes memory)":"infinite"}}},"ewasm":{"wasm":""}}},"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibSafeMathRichErrorsV06.sol":{"LibSafeMathRichErrorsV06":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibSafeMathRichErrorsV06.sol\":\"LibSafeMathRichErrorsV06\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@0x/contracts-erc20/=/Users/kyuc/code/0x/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20/\",\":@0x/contracts-utils/=/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/\"]},\"sources\":{\"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibSafeMathRichErrorsV06.sol\":{\"keccak256\":\"0xf9c2aee205c7201a19684c5d8c7f0debc5991b00a6c693c976b092c44f8b8980\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://22e720c36473df8103a97c1c8d4836361b251d756d79735a3803681ebc71874b\",\"dweb:/ipfs/QmT5WuJFV14F872G1Ta7J7kyF6C6VDGqK8orHf81bcW3Fw\"]}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev"},"evm":{"assembly":"    /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibSafeMathRichErrorsV06.sol\":644:1828  library LibSafeMathRichErrorsV06 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"/Users/kyuc/code/0x/protocol/node_modules/@0x/contracts-utils/contracts/src/v06/errors/LibSafeMathRichErrorsV06.sol\":644:1828  library LibSafeMathRichErrorsV06 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122087460aa69e1181d7c19e38913fed07d53848951d3694ad779936967b190669f664736f6c634300060c0033\n}\n","legacyAssembly":{".code":[{"begin":644,"end":1828,"name":"PUSH #[$]","source":11,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":644,"end":1828,"name":"PUSH [$]","source":11,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":644,"end":1828,"name":"PUSH","source":11,"value":"B"},{"begin":644,"end":1828,"name":"DUP3","source":11},{"begin":644,"end":1828,"name":"DUP3","source":11},{"begin":644,"end":1828,"name":"DUP3","source":11},{"begin":644,"end":1828,"name":"CODECOPY","source":11},{"begin":644,"end":1828,"name":"DUP1","source":11},{"begin":644,"end":1828,"name":"MLOAD","source":11},{"begin":644,"end":1828,"name":"PUSH","source":11,"value":"0"},{"begin":644,"end":1828,"name":"BYTE","source":11},{"begin":644,"end":1828,"name":"PUSH","source":11,"value":"73"},{"begin":644,"end":1828,"name":"EQ","source":11},{"begin":644,"end":1828,"name":"PUSH [tag]","source":11,"value":"1"},{"begin":644,"end":1828,"name":"JUMPI","source":11},{"begin":644,"end":1828,"name":"INVALID","source":11},{"begin":644,"end":1828,"name":"tag","source":11,"value":"1"},{"begin":644,"end":1828,"name":"JUMPDEST","source":11},{"begin":644,"end":1828,"name":"ADDRESS","source":11},{"begin":644,"end":1828,"name":"PUSH","source":11,"value":"0"},{"begin":644,"end":1828,"name":"MSTORE","source":11},{"begin":644,"end":1828,"name":"PUSH","source":11,"value":"73"},{"begin":644,"end":1828,"name":"DUP2","source":11},{"begin":644,"end":1828,"name":"MSTORE8","source":11},{"begin":644,"end":1828,"name":"DUP3","source":11},{"begin":644,"end":1828,"name":"DUP2","source":11},{"begin":644,"end":1828,"name":"RETURN","source":11}],".data":{"0":{".auxdata":"a264697066735822122087460aa69e1181d7c19e38913fed07d53848951d3694ad779936967b190669f664736f6c634300060c0033",".code":[{"begin":644,"end":1828,"name":"PUSHDEPLOYADDRESS","source":11},{"begin":644,"end":1828,"name":"ADDRESS","source":11},{"begin":644,"end":1828,"name":"EQ","source":11},{"begin":644,"end":1828,"name":"PUSH","source":11,"value":"80"},{"begin":644,"end":1828,"name":"PUSH","source":11,"value":"40"},{"begin":644,"end":1828,"name":"MSTORE","source":11},{"begin":644,"end":1828,"name":"PUSH","source":11,"value":"0"},{"begin":644,"end":1828,"name":"DUP1","source":11},{"begin":644,"end":1828,"name":"REVERT","source":11}]}}},"bytecode":{"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122087460aa69e1181d7c19e38913fed07d53848951d3694ad779936967b190669f664736f6c634300060c0033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 CHAINID EXP 0xA6 SWAP15 GT DUP2 0xD7 0xC1 SWAP15 CODESIZE SWAP2 EXTCODEHASH 0xED SMOD 0xD5 CODESIZE 0x48 SWAP6 SAR CALLDATASIZE SWAP5 0xAD PUSH24 0x9936967B190669F664736F6C634300060C00330000000000 ","sourceMap":"644:1184:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122087460aa69e1181d7c19e38913fed07d53848951d3694ad779936967b190669f664736f6c634300060c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 CHAINID EXP 0xA6 SWAP15 GT DUP2 0xD7 0xC1 SWAP15 CODESIZE SWAP2 EXTCODEHASH 0xED SMOD 0xD5 CODESIZE 0x48 SWAP6 SAR CALLDATASIZE SWAP5 0xAD PUSH24 0x9936967B190669F664736F6C634300060C00330000000000 ","sourceMap":"644:1184:11:-:0;;;;;;;;","linkReferences":{}},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"external":{},"internal":{"Uint256BinOpError(enum LibSafeMathRichErrorsV06.BinOpErrorCodes,uint256,uint256)":"infinite","Uint256DowncastError(enum LibSafeMathRichErrorsV06.DowncastErrorCodes,uint256)":"infinite"}}},"ewasm":{"wasm":""}}}}}],"expires_at":18446744073709551615}