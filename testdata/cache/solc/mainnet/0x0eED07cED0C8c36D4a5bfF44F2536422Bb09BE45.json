{"data":[{"SourceCode":"/**\r\n *Submitted for verification at Etherscan.io on 2019-08-28\r\n*/\r\n\r\n/*\r\n\r\n    Copyright 2019 dYdX Trading Inc.\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n\r\n*/\r\n\r\npragma solidity 0.5.7;\r\npragma experimental ABIEncoderV2;\r\n\r\n// File: openzeppelin-solidity/contracts/math/SafeMath.sol\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Unsigned math operations with safety checks that revert on error\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n    * @dev Multiplies two unsigned integers, reverts on overflow.\r\n    */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b);\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.\r\n    */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\r\n    */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Adds two unsigned integers, reverts on overflow.\r\n    */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a);\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\r\n    * reverts when dividing by zero.\r\n    */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b != 0);\r\n        return a % b;\r\n    }\r\n}\r\n\r\n// File: contracts/protocol/lib/Require.sol\r\n\r\n/**\r\n * @title Require\r\n * @author dYdX\r\n *\r\n * Stringifies parameters to pretty-print revert messages. Costs more gas than regular require()\r\n */\r\nlibrary Require {\r\n\r\n    // ============ Constants ============\r\n\r\n    uint256 constant ASCII_ZERO = 48; // '0'\r\n    uint256 constant ASCII_RELATIVE_ZERO = 87; // 'a' - 10\r\n    uint256 constant ASCII_LOWER_EX = 120; // 'x'\r\n    bytes2 constant COLON = 0x3a20; // ': '\r\n    bytes2 constant COMMA = 0x2c20; // ', '\r\n    bytes2 constant LPAREN = 0x203c; // ' <'\r\n    byte constant RPAREN = 0x3e; // '>'\r\n    uint256 constant FOUR_BIT_MASK = 0xf;\r\n\r\n    // ============ Library Functions ============\r\n\r\n    function that(\r\n        bool must,\r\n        bytes32 file,\r\n        bytes32 reason\r\n    )\r\n        internal\r\n        pure\r\n    {\r\n        if (!must) {\r\n            revert(\r\n                string(\r\n                    abi.encodePacked(\r\n                        stringify(file),\r\n                        COLON,\r\n                        stringify(reason)\r\n                    )\r\n                )\r\n            );\r\n        }\r\n    }\r\n\r\n    function that(\r\n        bool must,\r\n        bytes32 file,\r\n        bytes32 reason,\r\n        uint256 payloadA\r\n    )\r\n        internal\r\n        pure\r\n    {\r\n        if (!must) {\r\n            revert(\r\n                string(\r\n                    abi.encodePacked(\r\n                        stringify(file),\r\n                        COLON,\r\n                        stringify(reason),\r\n                        LPAREN,\r\n                        stringify(payloadA),\r\n                        RPAREN\r\n                    )\r\n                )\r\n            );\r\n        }\r\n    }\r\n\r\n    function that(\r\n        bool must,\r\n        bytes32 file,\r\n        bytes32 reason,\r\n        uint256 payloadA,\r\n        uint256 payloadB\r\n    )\r\n        internal\r\n        pure\r\n    {\r\n        if (!must) {\r\n            revert(\r\n                string(\r\n                    abi.encodePacked(\r\n                        stringify(file),\r\n                        COLON,\r\n                        stringify(reason),\r\n                        LPAREN,\r\n                        stringify(payloadA),\r\n                        COMMA,\r\n                        stringify(payloadB),\r\n                        RPAREN\r\n                    )\r\n                )\r\n            );\r\n        }\r\n    }\r\n\r\n    function that(\r\n        bool must,\r\n        bytes32 file,\r\n        bytes32 reason,\r\n        address payloadA\r\n    )\r\n        internal\r\n        pure\r\n    {\r\n        if (!must) {\r\n            revert(\r\n                string(\r\n                    abi.encodePacked(\r\n                        stringify(file),\r\n                        COLON,\r\n                        stringify(reason),\r\n                        LPAREN,\r\n                        stringify(payloadA),\r\n                        RPAREN\r\n                    )\r\n                )\r\n            );\r\n        }\r\n    }\r\n\r\n    function that(\r\n        bool must,\r\n        bytes32 file,\r\n        bytes32 reason,\r\n        address payloadA,\r\n        uint256 payloadB\r\n    )\r\n        internal\r\n        pure\r\n    {\r\n        if (!must) {\r\n            revert(\r\n                string(\r\n                    abi.encodePacked(\r\n                        stringify(file),\r\n                        COLON,\r\n                        stringify(reason),\r\n                        LPAREN,\r\n                        stringify(payloadA),\r\n                        COMMA,\r\n                        stringify(payloadB),\r\n                        RPAREN\r\n                    )\r\n                )\r\n            );\r\n        }\r\n    }\r\n\r\n    function that(\r\n        bool must,\r\n        bytes32 file,\r\n        bytes32 reason,\r\n        address payloadA,\r\n        uint256 payloadB,\r\n        uint256 payloadC\r\n    )\r\n        internal\r\n        pure\r\n    {\r\n        if (!must) {\r\n            revert(\r\n                string(\r\n                    abi.encodePacked(\r\n                        stringify(file),\r\n                        COLON,\r\n                        stringify(reason),\r\n                        LPAREN,\r\n                        stringify(payloadA),\r\n                        COMMA,\r\n                        stringify(payloadB),\r\n                        COMMA,\r\n                        stringify(payloadC),\r\n                        RPAREN\r\n                    )\r\n                )\r\n            );\r\n        }\r\n    }\r\n\r\n    // ============ Private Functions ============\r\n\r\n    function stringify(\r\n        bytes32 input\r\n    )\r\n        private\r\n        pure\r\n        returns (bytes memory)\r\n    {\r\n        // put the input bytes into the result\r\n        bytes memory result = abi.encodePacked(input);\r\n\r\n        // determine the length of the input by finding the location of the last non-zero byte\r\n        for (uint256 i = 32; i > 0; ) {\r\n            // reverse-for-loops with unsigned integer\r\n            /* solium-disable-next-line security/no-modify-for-iter-var */\r\n            i--;\r\n\r\n            // find the last non-zero byte in order to determine the length\r\n            if (result[i] != 0) {\r\n                uint256 length = i + 1;\r\n\r\n                /* solium-disable-next-line security/no-inline-assembly */\r\n                assembly {\r\n                    mstore(result, length) // r.length = length;\r\n                }\r\n\r\n                return result;\r\n            }\r\n        }\r\n\r\n        // all bytes are zero\r\n        return new bytes(0);\r\n    }\r\n\r\n    function stringify(\r\n        uint256 input\r\n    )\r\n        private\r\n        pure\r\n        returns (bytes memory)\r\n    {\r\n        if (input == 0) {\r\n            return \"0\";\r\n        }\r\n\r\n        // get the final string length\r\n        uint256 j = input;\r\n        uint256 length;\r\n        while (j != 0) {\r\n            length++;\r\n            j /= 10;\r\n        }\r\n\r\n        // allocate the string\r\n        bytes memory bstr = new bytes(length);\r\n\r\n        // populate the string starting with the least-significant character\r\n        j = input;\r\n        for (uint256 i = length; i > 0; ) {\r\n            // reverse-for-loops with unsigned integer\r\n            /* solium-disable-next-line security/no-modify-for-iter-var */\r\n            i--;\r\n\r\n            // take last decimal digit\r\n            bstr[i] = byte(uint8(ASCII_ZERO + (j % 10)));\r\n\r\n            // remove the last decimal digit\r\n            j /= 10;\r\n        }\r\n\r\n        return bstr;\r\n    }\r\n\r\n    function stringify(\r\n        address input\r\n    )\r\n        private\r\n        pure\r\n        returns (bytes memory)\r\n    {\r\n        uint256 z = uint256(input);\r\n\r\n        // addresses are \"0x\" followed by 20 bytes of data which take up 2 characters each\r\n        bytes memory result = new bytes(42);\r\n\r\n        // populate the result with \"0x\"\r\n        result[0] = byte(uint8(ASCII_ZERO));\r\n        result[1] = byte(uint8(ASCII_LOWER_EX));\r\n\r\n        // for each byte (starting from the lowest byte), populate the result with two characters\r\n        for (uint256 i = 0; i < 20; i++) {\r\n            // each byte takes two characters\r\n            uint256 shift = i * 2;\r\n\r\n            // populate the least-significant character\r\n            result[41 - shift] = char(z & FOUR_BIT_MASK);\r\n            z = z >> 4;\r\n\r\n            // populate the most-significant character\r\n            result[40 - shift] = char(z & FOUR_BIT_MASK);\r\n            z = z >> 4;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    function char(\r\n        uint256 input\r\n    )\r\n        private\r\n        pure\r\n        returns (byte)\r\n    {\r\n        // return ASCII digit (0-9)\r\n        if (input < 10) {\r\n            return byte(uint8(input + ASCII_ZERO));\r\n        }\r\n\r\n        // return ASCII letter (a-f)\r\n        return byte(uint8(input + ASCII_RELATIVE_ZERO));\r\n    }\r\n}\r\n\r\n// File: contracts/protocol/lib/Math.sol\r\n\r\n/**\r\n * @title Math\r\n * @author dYdX\r\n *\r\n * Library for non-standard Math functions\r\n */\r\nlibrary Math {\r\n    using SafeMath for uint256;\r\n\r\n    // ============ Constants ============\r\n\r\n    bytes32 constant FILE = \"Math\";\r\n\r\n    // ============ Library Functions ============\r\n\r\n    /*\r\n     * Return target * (numerator / denominator).\r\n     */\r\n    function getPartial(\r\n        uint256 target,\r\n        uint256 numerator,\r\n        uint256 denominator\r\n    )\r\n        internal\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        return target.mul(numerator).div(denominator);\r\n    }\r\n\r\n    /*\r\n     * Return target * (numerator / denominator), but rounded up.\r\n     */\r\n    function getPartialRoundUp(\r\n        uint256 target,\r\n        uint256 numerator,\r\n        uint256 denominator\r\n    )\r\n        internal\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        if (target == 0 || numerator == 0) {\r\n            // SafeMath will check for zero denominator\r\n            return SafeMath.div(0, denominator);\r\n        }\r\n        return target.mul(numerator).sub(1).div(denominator).add(1);\r\n    }\r\n\r\n    function to128(\r\n        uint256 number\r\n    )\r\n        internal\r\n        pure\r\n        returns (uint128)\r\n    {\r\n        uint128 result = uint128(number);\r\n        Require.that(\r\n            result == number,\r\n            FILE,\r\n            \"Unsafe cast to uint128\"\r\n        );\r\n        return result;\r\n    }\r\n\r\n    function to96(\r\n        uint256 number\r\n    )\r\n        internal\r\n        pure\r\n        returns (uint96)\r\n    {\r\n        uint96 result = uint96(number);\r\n        Require.that(\r\n            result == number,\r\n            FILE,\r\n            \"Unsafe cast to uint96\"\r\n        );\r\n        return result;\r\n    }\r\n\r\n    function to32(\r\n        uint256 number\r\n    )\r\n        internal\r\n        pure\r\n        returns (uint32)\r\n    {\r\n        uint32 result = uint32(number);\r\n        Require.that(\r\n            result == number,\r\n            FILE,\r\n            \"Unsafe cast to uint32\"\r\n        );\r\n        return result;\r\n    }\r\n\r\n    function min(\r\n        uint256 a,\r\n        uint256 b\r\n    )\r\n        internal\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    function max(\r\n        uint256 a,\r\n        uint256 b\r\n    )\r\n        internal\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        return a > b ? a : b;\r\n    }\r\n}\r\n\r\n// File: contracts/protocol/lib/Decimal.sol\r\n\r\n/**\r\n * @title Decimal\r\n * @author dYdX\r\n *\r\n * Library that defines a fixed-point number with 18 decimal places.\r\n */\r\nlibrary Decimal {\r\n    using SafeMath for uint256;\r\n\r\n    // ============ Constants ============\r\n\r\n    uint256 constant BASE = 10**18;\r\n\r\n    // ============ Structs ============\r\n\r\n    struct D256 {\r\n        uint256 value;\r\n    }\r\n\r\n    // ============ Functions ============\r\n\r\n    function one()\r\n        internal\r\n        pure\r\n        returns (D256 memory)\r\n    {\r\n        return D256({ value: BASE });\r\n    }\r\n\r\n    function onePlus(\r\n        D256 memory d\r\n    )\r\n        internal\r\n        pure\r\n        returns (D256 memory)\r\n    {\r\n        return D256({ value: d.value.add(BASE) });\r\n    }\r\n\r\n    function mul(\r\n        uint256 target,\r\n        D256 memory d\r\n    )\r\n        internal\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        return Math.getPartial(target, d.value, BASE);\r\n    }\r\n\r\n    function div(\r\n        uint256 target,\r\n        D256 memory d\r\n    )\r\n        internal\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        return Math.getPartial(target, BASE, d.value);\r\n    }\r\n}\r\n\r\n// File: contracts/protocol/lib/Time.sol\r\n\r\n/**\r\n * @title Time\r\n * @author dYdX\r\n *\r\n * Library for dealing with time, assuming timestamps fit within 32 bits (valid until year 2106)\r\n */\r\nlibrary Time {\r\n\r\n    // ============ Library Functions ============\r\n\r\n    function currentTime()\r\n        internal\r\n        view\r\n        returns (uint32)\r\n    {\r\n        return Math.to32(block.timestamp);\r\n    }\r\n}\r\n\r\n// File: contracts/protocol/lib/Types.sol\r\n\r\n/**\r\n * @title Types\r\n * @author dYdX\r\n *\r\n * Library for interacting with the basic structs used in Solo\r\n */\r\nlibrary Types {\r\n    using Math for uint256;\r\n\r\n    // ============ AssetAmount ============\r\n\r\n    enum AssetDenomination {\r\n        Wei, // the amount is denominated in wei\r\n        Par  // the amount is denominated in par\r\n    }\r\n\r\n    enum AssetReference {\r\n        Delta, // the amount is given as a delta from the current value\r\n        Target // the amount is given as an exact number to end up at\r\n    }\r\n\r\n    struct AssetAmount {\r\n        bool sign; // true if positive\r\n        AssetDenomination denomination;\r\n        AssetReference ref;\r\n        uint256 value;\r\n    }\r\n\r\n    // ============ Par (Principal Amount) ============\r\n\r\n    // Total borrow and supply values for a market\r\n    struct TotalPar {\r\n        uint128 borrow;\r\n        uint128 supply;\r\n    }\r\n\r\n    // Individual principal amount for an account\r\n    struct Par {\r\n        bool sign; // true if positive\r\n        uint128 value;\r\n    }\r\n\r\n    function zeroPar()\r\n        internal\r\n        pure\r\n        returns (Par memory)\r\n    {\r\n        return Par({\r\n            sign: false,\r\n            value: 0\r\n        });\r\n    }\r\n\r\n    function sub(\r\n        Par memory a,\r\n        Par memory b\r\n    )\r\n        internal\r\n        pure\r\n        returns (Par memory)\r\n    {\r\n        return add(a, negative(b));\r\n    }\r\n\r\n    function add(\r\n        Par memory a,\r\n        Par memory b\r\n    )\r\n        internal\r\n        pure\r\n        returns (Par memory)\r\n    {\r\n        Par memory result;\r\n        if (a.sign == b.sign) {\r\n            result.sign = a.sign;\r\n            result.value = SafeMath.add(a.value, b.value).to128();\r\n        } else {\r\n            if (a.value >= b.value) {\r\n                result.sign = a.sign;\r\n                result.value = SafeMath.sub(a.value, b.value).to128();\r\n            } else {\r\n                result.sign = b.sign;\r\n                result.value = SafeMath.sub(b.value, a.value).to128();\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function equals(\r\n        Par memory a,\r\n        Par memory b\r\n    )\r\n        internal\r\n        pure\r\n        returns (bool)\r\n    {\r\n        if (a.value == b.value) {\r\n            if (a.value == 0) {\r\n                return true;\r\n            }\r\n            return a.sign == b.sign;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function negative(\r\n        Par memory a\r\n    )\r\n        internal\r\n        pure\r\n        returns (Par memory)\r\n    {\r\n        return Par({\r\n            sign: !a.sign,\r\n            value: a.value\r\n        });\r\n    }\r\n\r\n    function isNegative(\r\n        Par memory a\r\n    )\r\n        internal\r\n        pure\r\n        returns (bool)\r\n    {\r\n        return !a.sign && a.value > 0;\r\n    }\r\n\r\n    function isPositive(\r\n        Par memory a\r\n    )\r\n        internal\r\n        pure\r\n        returns (bool)\r\n    {\r\n        return a.sign && a.value > 0;\r\n    }\r\n\r\n    function isZero(\r\n        Par memory a\r\n    )\r\n        internal\r\n        pure\r\n        returns (bool)\r\n    {\r\n        return a.value == 0;\r\n    }\r\n\r\n    // ============ Wei (Token Amount) ============\r\n\r\n    // Individual token amount for an account\r\n    struct Wei {\r\n        bool sign; // true if positive\r\n        uint256 value;\r\n    }\r\n\r\n    function zeroWei()\r\n        internal\r\n        pure\r\n        returns (Wei memory)\r\n    {\r\n        return Wei({\r\n            sign: false,\r\n            value: 0\r\n        });\r\n    }\r\n\r\n    function sub(\r\n        Wei memory a,\r\n        Wei memory b\r\n    )\r\n        internal\r\n        pure\r\n        returns (Wei memory)\r\n    {\r\n        return add(a, negative(b));\r\n    }\r\n\r\n    function add(\r\n        Wei memory a,\r\n        Wei memory b\r\n    )\r\n        internal\r\n        pure\r\n        returns (Wei memory)\r\n    {\r\n        Wei memory result;\r\n        if (a.sign == b.sign) {\r\n            result.sign = a.sign;\r\n            result.value = SafeMath.add(a.value, b.value);\r\n        } else {\r\n            if (a.value >= b.value) {\r\n                result.sign = a.sign;\r\n                result.value = SafeMath.sub(a.value, b.value);\r\n            } else {\r\n                result.sign = b.sign;\r\n                result.value = SafeMath.sub(b.value, a.value);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function equals(\r\n        Wei memory a,\r\n        Wei memory b\r\n    )\r\n        internal\r\n        pure\r\n        returns (bool)\r\n    {\r\n        if (a.value == b.value) {\r\n            if (a.value == 0) {\r\n                return true;\r\n            }\r\n            return a.sign == b.sign;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function negative(\r\n        Wei memory a\r\n    )\r\n        internal\r\n        pure\r\n        returns (Wei memory)\r\n    {\r\n        return Wei({\r\n            sign: !a.sign,\r\n            value: a.value\r\n        });\r\n    }\r\n\r\n    function isNegative(\r\n        Wei memory a\r\n    )\r\n        internal\r\n        pure\r\n        returns (bool)\r\n    {\r\n        return !a.sign && a.value > 0;\r\n    }\r\n\r\n    function isPositive(\r\n        Wei memory a\r\n    )\r\n        internal\r\n        pure\r\n        returns (bool)\r\n    {\r\n        return a.sign && a.value > 0;\r\n    }\r\n\r\n    function isZero(\r\n        Wei memory a\r\n    )\r\n        internal\r\n        pure\r\n        returns (bool)\r\n    {\r\n        return a.value == 0;\r\n    }\r\n}\r\n\r\n// File: contracts/protocol/lib/Interest.sol\r\n\r\n/**\r\n * @title Interest\r\n * @author dYdX\r\n *\r\n * Library for managing the interest rate and interest indexes of Solo\r\n */\r\nlibrary Interest {\r\n    using Math for uint256;\r\n    using SafeMath for uint256;\r\n\r\n    // ============ Constants ============\r\n\r\n    bytes32 constant FILE = \"Interest\";\r\n    uint64 constant BASE = 10**18;\r\n\r\n    // ============ Structs ============\r\n\r\n    struct Rate {\r\n        uint256 value;\r\n    }\r\n\r\n    struct Index {\r\n        uint96 borrow;\r\n        uint96 supply;\r\n        uint32 lastUpdate;\r\n    }\r\n\r\n    // ============ Library Functions ============\r\n\r\n    /**\r\n     * Get a new market Index based on the old index and market interest rate.\r\n     * Calculate interest for borrowers by using the formula rate * time. Approximates\r\n     * continuously-compounded interest when called frequently, but is much more\r\n     * gas-efficient to calculate. For suppliers, the interest rate is adjusted by the earningsRate,\r\n     * then prorated the across all suppliers.\r\n     *\r\n     * @param  index         The old index for a market\r\n     * @param  rate          The current interest rate of the market\r\n     * @param  totalPar      The total supply and borrow par values of the market\r\n     * @param  earningsRate  The portion of the interest that is forwarded to the suppliers\r\n     * @return               The updated index for a market\r\n     */\r\n    function calculateNewIndex(\r\n        Index memory index,\r\n        Rate memory rate,\r\n        Types.TotalPar memory totalPar,\r\n        Decimal.D256 memory earningsRate\r\n    )\r\n        internal\r\n        view\r\n        returns (Index memory)\r\n    {\r\n        (\r\n            Types.Wei memory supplyWei,\r\n            Types.Wei memory borrowWei\r\n        ) = totalParToWei(totalPar, index);\r\n\r\n        // get interest increase for borrowers\r\n        uint32 currentTime = Time.currentTime();\r\n        uint256 borrowInterest = rate.value.mul(uint256(currentTime).sub(index.lastUpdate));\r\n\r\n        // get interest increase for suppliers\r\n        uint256 supplyInterest;\r\n        if (Types.isZero(supplyWei)) {\r\n            supplyInterest = 0;\r\n        } else {\r\n            supplyInterest = Decimal.mul(borrowInterest, earningsRate);\r\n            if (borrowWei.value < supplyWei.value) {\r\n                supplyInterest = Math.getPartial(supplyInterest, borrowWei.value, supplyWei.value);\r\n            }\r\n        }\r\n        assert(supplyInterest <= borrowInterest);\r\n\r\n        return Index({\r\n            borrow: Math.getPartial(index.borrow, borrowInterest, BASE).add(index.borrow).to96(),\r\n            supply: Math.getPartial(index.supply, supplyInterest, BASE).add(index.supply).to96(),\r\n            lastUpdate: currentTime\r\n        });\r\n    }\r\n\r\n    function newIndex()\r\n        internal\r\n        view\r\n        returns (Index memory)\r\n    {\r\n        return Index({\r\n            borrow: BASE,\r\n            supply: BASE,\r\n            lastUpdate: Time.currentTime()\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Convert a principal amount to a token amount given an index.\r\n     */\r\n    function parToWei(\r\n        Types.Par memory input,\r\n        Index memory index\r\n    )\r\n        internal\r\n        pure\r\n        returns (Types.Wei memory)\r\n    {\r\n        uint256 inputValue = uint256(input.value);\r\n        if (input.sign) {\r\n            return Types.Wei({\r\n                sign: true,\r\n                value: inputValue.getPartial(index.supply, BASE)\r\n            });\r\n        } else {\r\n            return Types.Wei({\r\n                sign: false,\r\n                value: inputValue.getPartialRoundUp(index.borrow, BASE)\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Convert a token amount to a principal amount given an index.\r\n     */\r\n    function weiToPar(\r\n        Types.Wei memory input,\r\n        Index memory index\r\n    )\r\n        internal\r\n        pure\r\n        returns (Types.Par memory)\r\n    {\r\n        if (input.sign) {\r\n            return Types.Par({\r\n                sign: true,\r\n                value: input.value.getPartial(BASE, index.supply).to128()\r\n            });\r\n        } else {\r\n            return Types.Par({\r\n                sign: false,\r\n                value: input.value.getPartialRoundUp(BASE, index.borrow).to128()\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Convert the total supply and borrow principal amounts of a market to total supply and borrow\r\n     * token amounts.\r\n     */\r\n    function totalParToWei(\r\n        Types.TotalPar memory totalPar,\r\n        Index memory index\r\n    )\r\n        internal\r\n        pure\r\n        returns (Types.Wei memory, Types.Wei memory)\r\n    {\r\n        Types.Par memory supplyPar = Types.Par({\r\n            sign: true,\r\n            value: totalPar.supply\r\n        });\r\n        Types.Par memory borrowPar = Types.Par({\r\n            sign: false,\r\n            value: totalPar.borrow\r\n        });\r\n        Types.Wei memory supplyWei = parToWei(supplyPar, index);\r\n        Types.Wei memory borrowWei = parToWei(borrowPar, index);\r\n        return (supplyWei, borrowWei);\r\n    }\r\n}\r\n\r\n// File: contracts/protocol/interfaces/IInterestSetter.sol\r\n\r\n/**\r\n * @title IInterestSetter\r\n * @author dYdX\r\n *\r\n * Interface that Interest Setters for Solo must implement in order to report interest rates.\r\n */\r\ninterface IInterestSetter {\r\n\r\n    // ============ Public Functions ============\r\n\r\n    /**\r\n     * Get the interest rate of a token given some borrowed and supplied amounts\r\n     *\r\n     * @param  token        The address of the ERC20 token for the market\r\n     * @param  borrowWei    The total borrowed token amount for the market\r\n     * @param  supplyWei    The total supplied token amount for the market\r\n     * @return              The interest rate per second\r\n     */\r\n    function getInterestRate(\r\n        address token,\r\n        uint256 borrowWei,\r\n        uint256 supplyWei\r\n    )\r\n        external\r\n        view\r\n        returns (Interest.Rate memory);\r\n}\r\n\r\n// File: contracts/external/interestsetters/DoubleExponentInterestSetter.sol\r\n\r\n/**\r\n * @title DoubleExponentInterestSetter\r\n * @author dYdX\r\n *\r\n * Interest setter that sets interest based on a polynomial of the usage percentage of the market.\r\n * Interest = C_0 + C_1 * U^(2^0) + C_2 * U^(2^1) + C_3 * U^(2^2) ...\r\n */\r\ncontract DoubleExponentInterestSetter is\r\n    IInterestSetter\r\n{\r\n    using Math for uint256;\r\n    using SafeMath for uint256;\r\n\r\n    // ============ Constants ============\r\n\r\n    uint256 constant PERCENT = 100;\r\n\r\n    uint256 constant BASE = 10 ** 18;\r\n\r\n    uint256 constant SECONDS_IN_A_YEAR = 60 * 60 * 24 * 365;\r\n\r\n    uint256 constant BYTE = 8;\r\n\r\n    // ============ Structs ============\r\n\r\n    struct PolyStorage {\r\n        uint128 maxAPR;\r\n        uint128 coefficients;\r\n    }\r\n\r\n    // ============ Storage ============\r\n\r\n    PolyStorage g_storage;\r\n\r\n    // ============ Constructor ============\r\n\r\n    constructor(\r\n        PolyStorage memory params\r\n    )\r\n        public\r\n    {\r\n        // verify that all coefficients add up to 100%\r\n        uint256 sumOfCoefficients = 0;\r\n        for (\r\n            uint256 coefficients = params.coefficients;\r\n            coefficients != 0;\r\n            coefficients >>= BYTE\r\n        ) {\r\n            sumOfCoefficients += coefficients % 256;\r\n        }\r\n        require(\r\n            sumOfCoefficients == PERCENT,\r\n            \"Coefficients must sum to 100\"\r\n        );\r\n\r\n        // store the params\r\n        g_storage = params;\r\n    }\r\n\r\n    // ============ Public Functions ============\r\n\r\n    /**\r\n     * Get the interest rate given some borrowed and supplied amounts. The interest function is a\r\n     * polynomial function of the utilization (borrowWei / supplyWei) of the market.\r\n     *\r\n     *   - If borrowWei > supplyWei then the utilization is considered to be equal to 1.\r\n     *   - If both are zero, then the utilization is considered to be equal to 0.\r\n     *\r\n     * @return The interest rate per second (times 10 ** 18)\r\n     */\r\n    function getInterestRate(\r\n        address /* token */,\r\n        uint256 borrowWei,\r\n        uint256 supplyWei\r\n    )\r\n        external\r\n        view\r\n        returns (Interest.Rate memory)\r\n    {\r\n        if (borrowWei == 0) {\r\n            return Interest.Rate({\r\n                value: 0\r\n            });\r\n        }\r\n\r\n        PolyStorage memory s = g_storage;\r\n        uint256 maxAPR = s.maxAPR;\r\n\r\n        if (borrowWei >= supplyWei) {\r\n            return Interest.Rate({\r\n                value: maxAPR / SECONDS_IN_A_YEAR\r\n            });\r\n        }\r\n\r\n        // process the first coefficient\r\n        uint256 coefficients = s.coefficients;\r\n        uint256 result = uint8(coefficients) * BASE;\r\n        coefficients >>= BYTE;\r\n\r\n        // initialize polynomial as the utilization\r\n        // no safeDiv since supplyWei must be non-zero at this point\r\n        uint256 polynomial = BASE.mul(borrowWei) / supplyWei;\r\n\r\n        // for each non-zero coefficient...\r\n        while (true) {\r\n            // gets the lowest-order byte\r\n            uint256 coefficient = uint256(uint8(coefficients));\r\n\r\n            // if non-zero, add to result\r\n            if (coefficient != 0) {\r\n                // no safeAdd since there are at most 16 coefficients\r\n                // no safeMul since (coefficient < 256 && polynomial <= 10**18)\r\n                result += coefficient * polynomial;\r\n\r\n                // break if this is the last non-zero coefficient\r\n                if (coefficient == coefficients) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // double the order of the polynomial term\r\n            // no safeMul since polynomial <= 10^18\r\n            // no safeDiv since the divisor is a non-zero constant\r\n            polynomial = polynomial * polynomial / BASE;\r\n\r\n            // move to next coefficient\r\n            coefficients >>= BYTE;\r\n        }\r\n\r\n        // normalize the result\r\n        // no safeMul since result fits within 72 bits and maxAPR fits within 128 bits\r\n        // no safeDiv since the divisor is a non-zero constant\r\n        return Interest.Rate({\r\n            value: result * maxAPR / (SECONDS_IN_A_YEAR * BASE * PERCENT)\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get the maximum APR that this interestSetter will return. The actual APY may be higher\r\n     * depending on how often the interest is compounded.\r\n     *\r\n     * @return The maximum APR\r\n     */\r\n    function getMaxAPR()\r\n        external\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return g_storage.maxAPR;\r\n    }\r\n\r\n    /**\r\n     * Get all of the coefficients of the interest calculation, starting from the coefficient for\r\n     * the first-order utilization variable.\r\n     *\r\n     * @return The coefficients\r\n     */\r\n    function getCoefficients()\r\n        external\r\n        view\r\n        returns (uint256[] memory)\r\n    {\r\n        // allocate new array with maximum of 16 coefficients\r\n        uint256[] memory result = new uint256[](16);\r\n\r\n        // add the coefficients to the array\r\n        uint256 numCoefficients = 0;\r\n        for (\r\n            uint256 coefficients = g_storage.coefficients;\r\n            coefficients != 0;\r\n            coefficients >>= BYTE\r\n        ) {\r\n            result[numCoefficients] = coefficients % 256;\r\n            numCoefficients++;\r\n        }\r\n\r\n        // modify result.length to match numCoefficients\r\n        /* solium-disable-next-line security/no-inline-assembly */\r\n        assembly {\r\n            mstore(result, numCoefficients)\r\n        }\r\n\r\n        return result;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"getMaxAPR\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCoefficients\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"borrowWei\",\"type\":\"uint256\"},{\"name\":\"supplyWei\",\"type\":\"uint256\"}],\"name\":\"getInterestRate\",\"outputs\":[{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"name\":\"maxAPR\",\"type\":\"uint128\"},{\"name\":\"coefficients\",\"type\":\"uint128\"}],\"name\":\"params\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"DoubleExponentInterestSetter","CompilerVersion":"v0.5.7+commit.6da8b019","OptimizationUsed":1,"Runs":10000,"ConstructorArguments":"0x00000000000000000000000000000000000000000000000006f05b59d3b2000000000000000000000000000000000000000000000000000000281e000a001400","EVMVersion":"Default","Library":"","LicenseType":"Apache-2.0","Proxy":0,"SwarmSource":"bzzr://9bbbae324b65a1656bd5d0cc0a55eae10dc27058d91193624b2ccd11b10e46fc"},{"Contract":{"content":"/**\r\n *Submitted for verification at Etherscan.io on 2019-08-28\r\n*/\r\n\r\n/*\r\n\r\n    Copyright 2019 dYdX Trading Inc.\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n\r\n*/\r\n\r\npragma solidity 0.5.7;\r\npragma experimental ABIEncoderV2;\r\n\r\n// File: openzeppelin-solidity/contracts/math/SafeMath.sol\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Unsigned math operations with safety checks that revert on error\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n    * @dev Multiplies two unsigned integers, reverts on overflow.\r\n    */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b);\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.\r\n    */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\r\n    */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Adds two unsigned integers, reverts on overflow.\r\n    */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a);\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\r\n    * reverts when dividing by zero.\r\n    */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b != 0);\r\n        return a % b;\r\n    }\r\n}\r\n\r\n// File: contracts/protocol/lib/Require.sol\r\n\r\n/**\r\n * @title Require\r\n * @author dYdX\r\n *\r\n * Stringifies parameters to pretty-print revert messages. Costs more gas than regular require()\r\n */\r\nlibrary Require {\r\n\r\n    // ============ Constants ============\r\n\r\n    uint256 constant ASCII_ZERO = 48; // '0'\r\n    uint256 constant ASCII_RELATIVE_ZERO = 87; // 'a' - 10\r\n    uint256 constant ASCII_LOWER_EX = 120; // 'x'\r\n    bytes2 constant COLON = 0x3a20; // ': '\r\n    bytes2 constant COMMA = 0x2c20; // ', '\r\n    bytes2 constant LPAREN = 0x203c; // ' <'\r\n    byte constant RPAREN = 0x3e; // '>'\r\n    uint256 constant FOUR_BIT_MASK = 0xf;\r\n\r\n    // ============ Library Functions ============\r\n\r\n    function that(\r\n        bool must,\r\n        bytes32 file,\r\n        bytes32 reason\r\n    )\r\n        internal\r\n        pure\r\n    {\r\n        if (!must) {\r\n            revert(\r\n                string(\r\n                    abi.encodePacked(\r\n                        stringify(file),\r\n                        COLON,\r\n                        stringify(reason)\r\n                    )\r\n                )\r\n            );\r\n        }\r\n    }\r\n\r\n    function that(\r\n        bool must,\r\n        bytes32 file,\r\n        bytes32 reason,\r\n        uint256 payloadA\r\n    )\r\n        internal\r\n        pure\r\n    {\r\n        if (!must) {\r\n            revert(\r\n                string(\r\n                    abi.encodePacked(\r\n                        stringify(file),\r\n                        COLON,\r\n                        stringify(reason),\r\n                        LPAREN,\r\n                        stringify(payloadA),\r\n                        RPAREN\r\n                    )\r\n                )\r\n            );\r\n        }\r\n    }\r\n\r\n    function that(\r\n        bool must,\r\n        bytes32 file,\r\n        bytes32 reason,\r\n        uint256 payloadA,\r\n        uint256 payloadB\r\n    )\r\n        internal\r\n        pure\r\n    {\r\n        if (!must) {\r\n            revert(\r\n                string(\r\n                    abi.encodePacked(\r\n                        stringify(file),\r\n                        COLON,\r\n                        stringify(reason),\r\n                        LPAREN,\r\n                        stringify(payloadA),\r\n                        COMMA,\r\n                        stringify(payloadB),\r\n                        RPAREN\r\n                    )\r\n                )\r\n            );\r\n        }\r\n    }\r\n\r\n    function that(\r\n        bool must,\r\n        bytes32 file,\r\n        bytes32 reason,\r\n        address payloadA\r\n    )\r\n        internal\r\n        pure\r\n    {\r\n        if (!must) {\r\n            revert(\r\n                string(\r\n                    abi.encodePacked(\r\n                        stringify(file),\r\n                        COLON,\r\n                        stringify(reason),\r\n                        LPAREN,\r\n                        stringify(payloadA),\r\n                        RPAREN\r\n                    )\r\n                )\r\n            );\r\n        }\r\n    }\r\n\r\n    function that(\r\n        bool must,\r\n        bytes32 file,\r\n        bytes32 reason,\r\n        address payloadA,\r\n        uint256 payloadB\r\n    )\r\n        internal\r\n        pure\r\n    {\r\n        if (!must) {\r\n            revert(\r\n                string(\r\n                    abi.encodePacked(\r\n                        stringify(file),\r\n                        COLON,\r\n                        stringify(reason),\r\n                        LPAREN,\r\n                        stringify(payloadA),\r\n                        COMMA,\r\n                        stringify(payloadB),\r\n                        RPAREN\r\n                    )\r\n                )\r\n            );\r\n        }\r\n    }\r\n\r\n    function that(\r\n        bool must,\r\n        bytes32 file,\r\n        bytes32 reason,\r\n        address payloadA,\r\n        uint256 payloadB,\r\n        uint256 payloadC\r\n    )\r\n        internal\r\n        pure\r\n    {\r\n        if (!must) {\r\n            revert(\r\n                string(\r\n                    abi.encodePacked(\r\n                        stringify(file),\r\n                        COLON,\r\n                        stringify(reason),\r\n                        LPAREN,\r\n                        stringify(payloadA),\r\n                        COMMA,\r\n                        stringify(payloadB),\r\n                        COMMA,\r\n                        stringify(payloadC),\r\n                        RPAREN\r\n                    )\r\n                )\r\n            );\r\n        }\r\n    }\r\n\r\n    // ============ Private Functions ============\r\n\r\n    function stringify(\r\n        bytes32 input\r\n    )\r\n        private\r\n        pure\r\n        returns (bytes memory)\r\n    {\r\n        // put the input bytes into the result\r\n        bytes memory result = abi.encodePacked(input);\r\n\r\n        // determine the length of the input by finding the location of the last non-zero byte\r\n        for (uint256 i = 32; i > 0; ) {\r\n            // reverse-for-loops with unsigned integer\r\n            /* solium-disable-next-line security/no-modify-for-iter-var */\r\n            i--;\r\n\r\n            // find the last non-zero byte in order to determine the length\r\n            if (result[i] != 0) {\r\n                uint256 length = i + 1;\r\n\r\n                /* solium-disable-next-line security/no-inline-assembly */\r\n                assembly {\r\n                    mstore(result, length) // r.length = length;\r\n                }\r\n\r\n                return result;\r\n            }\r\n        }\r\n\r\n        // all bytes are zero\r\n        return new bytes(0);\r\n    }\r\n\r\n    function stringify(\r\n        uint256 input\r\n    )\r\n        private\r\n        pure\r\n        returns (bytes memory)\r\n    {\r\n        if (input == 0) {\r\n            return \"0\";\r\n        }\r\n\r\n        // get the final string length\r\n        uint256 j = input;\r\n        uint256 length;\r\n        while (j != 0) {\r\n            length++;\r\n            j /= 10;\r\n        }\r\n\r\n        // allocate the string\r\n        bytes memory bstr = new bytes(length);\r\n\r\n        // populate the string starting with the least-significant character\r\n        j = input;\r\n        for (uint256 i = length; i > 0; ) {\r\n            // reverse-for-loops with unsigned integer\r\n            /* solium-disable-next-line security/no-modify-for-iter-var */\r\n            i--;\r\n\r\n            // take last decimal digit\r\n            bstr[i] = byte(uint8(ASCII_ZERO + (j % 10)));\r\n\r\n            // remove the last decimal digit\r\n            j /= 10;\r\n        }\r\n\r\n        return bstr;\r\n    }\r\n\r\n    function stringify(\r\n        address input\r\n    )\r\n        private\r\n        pure\r\n        returns (bytes memory)\r\n    {\r\n        uint256 z = uint256(input);\r\n\r\n        // addresses are \"0x\" followed by 20 bytes of data which take up 2 characters each\r\n        bytes memory result = new bytes(42);\r\n\r\n        // populate the result with \"0x\"\r\n        result[0] = byte(uint8(ASCII_ZERO));\r\n        result[1] = byte(uint8(ASCII_LOWER_EX));\r\n\r\n        // for each byte (starting from the lowest byte), populate the result with two characters\r\n        for (uint256 i = 0; i < 20; i++) {\r\n            // each byte takes two characters\r\n            uint256 shift = i * 2;\r\n\r\n            // populate the least-significant character\r\n            result[41 - shift] = char(z & FOUR_BIT_MASK);\r\n            z = z >> 4;\r\n\r\n            // populate the most-significant character\r\n            result[40 - shift] = char(z & FOUR_BIT_MASK);\r\n            z = z >> 4;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    function char(\r\n        uint256 input\r\n    )\r\n        private\r\n        pure\r\n        returns (byte)\r\n    {\r\n        // return ASCII digit (0-9)\r\n        if (input < 10) {\r\n            return byte(uint8(input + ASCII_ZERO));\r\n        }\r\n\r\n        // return ASCII letter (a-f)\r\n        return byte(uint8(input + ASCII_RELATIVE_ZERO));\r\n    }\r\n}\r\n\r\n// File: contracts/protocol/lib/Math.sol\r\n\r\n/**\r\n * @title Math\r\n * @author dYdX\r\n *\r\n * Library for non-standard Math functions\r\n */\r\nlibrary Math {\r\n    using SafeMath for uint256;\r\n\r\n    // ============ Constants ============\r\n\r\n    bytes32 constant FILE = \"Math\";\r\n\r\n    // ============ Library Functions ============\r\n\r\n    /*\r\n     * Return target * (numerator / denominator).\r\n     */\r\n    function getPartial(\r\n        uint256 target,\r\n        uint256 numerator,\r\n        uint256 denominator\r\n    )\r\n        internal\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        return target.mul(numerator).div(denominator);\r\n    }\r\n\r\n    /*\r\n     * Return target * (numerator / denominator), but rounded up.\r\n     */\r\n    function getPartialRoundUp(\r\n        uint256 target,\r\n        uint256 numerator,\r\n        uint256 denominator\r\n    )\r\n        internal\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        if (target == 0 || numerator == 0) {\r\n            // SafeMath will check for zero denominator\r\n            return SafeMath.div(0, denominator);\r\n        }\r\n        return target.mul(numerator).sub(1).div(denominator).add(1);\r\n    }\r\n\r\n    function to128(\r\n        uint256 number\r\n    )\r\n        internal\r\n        pure\r\n        returns (uint128)\r\n    {\r\n        uint128 result = uint128(number);\r\n        Require.that(\r\n            result == number,\r\n            FILE,\r\n            \"Unsafe cast to uint128\"\r\n        );\r\n        return result;\r\n    }\r\n\r\n    function to96(\r\n        uint256 number\r\n    )\r\n        internal\r\n        pure\r\n        returns (uint96)\r\n    {\r\n        uint96 result = uint96(number);\r\n        Require.that(\r\n            result == number,\r\n            FILE,\r\n            \"Unsafe cast to uint96\"\r\n        );\r\n        return result;\r\n    }\r\n\r\n    function to32(\r\n        uint256 number\r\n    )\r\n        internal\r\n        pure\r\n        returns (uint32)\r\n    {\r\n        uint32 result = uint32(number);\r\n        Require.that(\r\n            result == number,\r\n            FILE,\r\n            \"Unsafe cast to uint32\"\r\n        );\r\n        return result;\r\n    }\r\n\r\n    function min(\r\n        uint256 a,\r\n        uint256 b\r\n    )\r\n        internal\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    function max(\r\n        uint256 a,\r\n        uint256 b\r\n    )\r\n        internal\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        return a > b ? a : b;\r\n    }\r\n}\r\n\r\n// File: contracts/protocol/lib/Decimal.sol\r\n\r\n/**\r\n * @title Decimal\r\n * @author dYdX\r\n *\r\n * Library that defines a fixed-point number with 18 decimal places.\r\n */\r\nlibrary Decimal {\r\n    using SafeMath for uint256;\r\n\r\n    // ============ Constants ============\r\n\r\n    uint256 constant BASE = 10**18;\r\n\r\n    // ============ Structs ============\r\n\r\n    struct D256 {\r\n        uint256 value;\r\n    }\r\n\r\n    // ============ Functions ============\r\n\r\n    function one()\r\n        internal\r\n        pure\r\n        returns (D256 memory)\r\n    {\r\n        return D256({ value: BASE });\r\n    }\r\n\r\n    function onePlus(\r\n        D256 memory d\r\n    )\r\n        internal\r\n        pure\r\n        returns (D256 memory)\r\n    {\r\n        return D256({ value: d.value.add(BASE) });\r\n    }\r\n\r\n    function mul(\r\n        uint256 target,\r\n        D256 memory d\r\n    )\r\n        internal\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        return Math.getPartial(target, d.value, BASE);\r\n    }\r\n\r\n    function div(\r\n        uint256 target,\r\n        D256 memory d\r\n    )\r\n        internal\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        return Math.getPartial(target, BASE, d.value);\r\n    }\r\n}\r\n\r\n// File: contracts/protocol/lib/Time.sol\r\n\r\n/**\r\n * @title Time\r\n * @author dYdX\r\n *\r\n * Library for dealing with time, assuming timestamps fit within 32 bits (valid until year 2106)\r\n */\r\nlibrary Time {\r\n\r\n    // ============ Library Functions ============\r\n\r\n    function currentTime()\r\n        internal\r\n        view\r\n        returns (uint32)\r\n    {\r\n        return Math.to32(block.timestamp);\r\n    }\r\n}\r\n\r\n// File: contracts/protocol/lib/Types.sol\r\n\r\n/**\r\n * @title Types\r\n * @author dYdX\r\n *\r\n * Library for interacting with the basic structs used in Solo\r\n */\r\nlibrary Types {\r\n    using Math for uint256;\r\n\r\n    // ============ AssetAmount ============\r\n\r\n    enum AssetDenomination {\r\n        Wei, // the amount is denominated in wei\r\n        Par  // the amount is denominated in par\r\n    }\r\n\r\n    enum AssetReference {\r\n        Delta, // the amount is given as a delta from the current value\r\n        Target // the amount is given as an exact number to end up at\r\n    }\r\n\r\n    struct AssetAmount {\r\n        bool sign; // true if positive\r\n        AssetDenomination denomination;\r\n        AssetReference ref;\r\n        uint256 value;\r\n    }\r\n\r\n    // ============ Par (Principal Amount) ============\r\n\r\n    // Total borrow and supply values for a market\r\n    struct TotalPar {\r\n        uint128 borrow;\r\n        uint128 supply;\r\n    }\r\n\r\n    // Individual principal amount for an account\r\n    struct Par {\r\n        bool sign; // true if positive\r\n        uint128 value;\r\n    }\r\n\r\n    function zeroPar()\r\n        internal\r\n        pure\r\n        returns (Par memory)\r\n    {\r\n        return Par({\r\n            sign: false,\r\n            value: 0\r\n        });\r\n    }\r\n\r\n    function sub(\r\n        Par memory a,\r\n        Par memory b\r\n    )\r\n        internal\r\n        pure\r\n        returns (Par memory)\r\n    {\r\n        return add(a, negative(b));\r\n    }\r\n\r\n    function add(\r\n        Par memory a,\r\n        Par memory b\r\n    )\r\n        internal\r\n        pure\r\n        returns (Par memory)\r\n    {\r\n        Par memory result;\r\n        if (a.sign == b.sign) {\r\n            result.sign = a.sign;\r\n            result.value = SafeMath.add(a.value, b.value).to128();\r\n        } else {\r\n            if (a.value >= b.value) {\r\n                result.sign = a.sign;\r\n                result.value = SafeMath.sub(a.value, b.value).to128();\r\n            } else {\r\n                result.sign = b.sign;\r\n                result.value = SafeMath.sub(b.value, a.value).to128();\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function equals(\r\n        Par memory a,\r\n        Par memory b\r\n    )\r\n        internal\r\n        pure\r\n        returns (bool)\r\n    {\r\n        if (a.value == b.value) {\r\n            if (a.value == 0) {\r\n                return true;\r\n            }\r\n            return a.sign == b.sign;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function negative(\r\n        Par memory a\r\n    )\r\n        internal\r\n        pure\r\n        returns (Par memory)\r\n    {\r\n        return Par({\r\n            sign: !a.sign,\r\n            value: a.value\r\n        });\r\n    }\r\n\r\n    function isNegative(\r\n        Par memory a\r\n    )\r\n        internal\r\n        pure\r\n        returns (bool)\r\n    {\r\n        return !a.sign && a.value > 0;\r\n    }\r\n\r\n    function isPositive(\r\n        Par memory a\r\n    )\r\n        internal\r\n        pure\r\n        returns (bool)\r\n    {\r\n        return a.sign && a.value > 0;\r\n    }\r\n\r\n    function isZero(\r\n        Par memory a\r\n    )\r\n        internal\r\n        pure\r\n        returns (bool)\r\n    {\r\n        return a.value == 0;\r\n    }\r\n\r\n    // ============ Wei (Token Amount) ============\r\n\r\n    // Individual token amount for an account\r\n    struct Wei {\r\n        bool sign; // true if positive\r\n        uint256 value;\r\n    }\r\n\r\n    function zeroWei()\r\n        internal\r\n        pure\r\n        returns (Wei memory)\r\n    {\r\n        return Wei({\r\n            sign: false,\r\n            value: 0\r\n        });\r\n    }\r\n\r\n    function sub(\r\n        Wei memory a,\r\n        Wei memory b\r\n    )\r\n        internal\r\n        pure\r\n        returns (Wei memory)\r\n    {\r\n        return add(a, negative(b));\r\n    }\r\n\r\n    function add(\r\n        Wei memory a,\r\n        Wei memory b\r\n    )\r\n        internal\r\n        pure\r\n        returns (Wei memory)\r\n    {\r\n        Wei memory result;\r\n        if (a.sign == b.sign) {\r\n            result.sign = a.sign;\r\n            result.value = SafeMath.add(a.value, b.value);\r\n        } else {\r\n            if (a.value >= b.value) {\r\n                result.sign = a.sign;\r\n                result.value = SafeMath.sub(a.value, b.value);\r\n            } else {\r\n                result.sign = b.sign;\r\n                result.value = SafeMath.sub(b.value, a.value);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function equals(\r\n        Wei memory a,\r\n        Wei memory b\r\n    )\r\n        internal\r\n        pure\r\n        returns (bool)\r\n    {\r\n        if (a.value == b.value) {\r\n            if (a.value == 0) {\r\n                return true;\r\n            }\r\n            return a.sign == b.sign;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function negative(\r\n        Wei memory a\r\n    )\r\n        internal\r\n        pure\r\n        returns (Wei memory)\r\n    {\r\n        return Wei({\r\n            sign: !a.sign,\r\n            value: a.value\r\n        });\r\n    }\r\n\r\n    function isNegative(\r\n        Wei memory a\r\n    )\r\n        internal\r\n        pure\r\n        returns (bool)\r\n    {\r\n        return !a.sign && a.value > 0;\r\n    }\r\n\r\n    function isPositive(\r\n        Wei memory a\r\n    )\r\n        internal\r\n        pure\r\n        returns (bool)\r\n    {\r\n        return a.sign && a.value > 0;\r\n    }\r\n\r\n    function isZero(\r\n        Wei memory a\r\n    )\r\n        internal\r\n        pure\r\n        returns (bool)\r\n    {\r\n        return a.value == 0;\r\n    }\r\n}\r\n\r\n// File: contracts/protocol/lib/Interest.sol\r\n\r\n/**\r\n * @title Interest\r\n * @author dYdX\r\n *\r\n * Library for managing the interest rate and interest indexes of Solo\r\n */\r\nlibrary Interest {\r\n    using Math for uint256;\r\n    using SafeMath for uint256;\r\n\r\n    // ============ Constants ============\r\n\r\n    bytes32 constant FILE = \"Interest\";\r\n    uint64 constant BASE = 10**18;\r\n\r\n    // ============ Structs ============\r\n\r\n    struct Rate {\r\n        uint256 value;\r\n    }\r\n\r\n    struct Index {\r\n        uint96 borrow;\r\n        uint96 supply;\r\n        uint32 lastUpdate;\r\n    }\r\n\r\n    // ============ Library Functions ============\r\n\r\n    /**\r\n     * Get a new market Index based on the old index and market interest rate.\r\n     * Calculate interest for borrowers by using the formula rate * time. Approximates\r\n     * continuously-compounded interest when called frequently, but is much more\r\n     * gas-efficient to calculate. For suppliers, the interest rate is adjusted by the earningsRate,\r\n     * then prorated the across all suppliers.\r\n     *\r\n     * @param  index         The old index for a market\r\n     * @param  rate          The current interest rate of the market\r\n     * @param  totalPar      The total supply and borrow par values of the market\r\n     * @param  earningsRate  The portion of the interest that is forwarded to the suppliers\r\n     * @return               The updated index for a market\r\n     */\r\n    function calculateNewIndex(\r\n        Index memory index,\r\n        Rate memory rate,\r\n        Types.TotalPar memory totalPar,\r\n        Decimal.D256 memory earningsRate\r\n    )\r\n        internal\r\n        view\r\n        returns (Index memory)\r\n    {\r\n        (\r\n            Types.Wei memory supplyWei,\r\n            Types.Wei memory borrowWei\r\n        ) = totalParToWei(totalPar, index);\r\n\r\n        // get interest increase for borrowers\r\n        uint32 currentTime = Time.currentTime();\r\n        uint256 borrowInterest = rate.value.mul(uint256(currentTime).sub(index.lastUpdate));\r\n\r\n        // get interest increase for suppliers\r\n        uint256 supplyInterest;\r\n        if (Types.isZero(supplyWei)) {\r\n            supplyInterest = 0;\r\n        } else {\r\n            supplyInterest = Decimal.mul(borrowInterest, earningsRate);\r\n            if (borrowWei.value < supplyWei.value) {\r\n                supplyInterest = Math.getPartial(supplyInterest, borrowWei.value, supplyWei.value);\r\n            }\r\n        }\r\n        assert(supplyInterest <= borrowInterest);\r\n\r\n        return Index({\r\n            borrow: Math.getPartial(index.borrow, borrowInterest, BASE).add(index.borrow).to96(),\r\n            supply: Math.getPartial(index.supply, supplyInterest, BASE).add(index.supply).to96(),\r\n            lastUpdate: currentTime\r\n        });\r\n    }\r\n\r\n    function newIndex()\r\n        internal\r\n        view\r\n        returns (Index memory)\r\n    {\r\n        return Index({\r\n            borrow: BASE,\r\n            supply: BASE,\r\n            lastUpdate: Time.currentTime()\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Convert a principal amount to a token amount given an index.\r\n     */\r\n    function parToWei(\r\n        Types.Par memory input,\r\n        Index memory index\r\n    )\r\n        internal\r\n        pure\r\n        returns (Types.Wei memory)\r\n    {\r\n        uint256 inputValue = uint256(input.value);\r\n        if (input.sign) {\r\n            return Types.Wei({\r\n                sign: true,\r\n                value: inputValue.getPartial(index.supply, BASE)\r\n            });\r\n        } else {\r\n            return Types.Wei({\r\n                sign: false,\r\n                value: inputValue.getPartialRoundUp(index.borrow, BASE)\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Convert a token amount to a principal amount given an index.\r\n     */\r\n    function weiToPar(\r\n        Types.Wei memory input,\r\n        Index memory index\r\n    )\r\n        internal\r\n        pure\r\n        returns (Types.Par memory)\r\n    {\r\n        if (input.sign) {\r\n            return Types.Par({\r\n                sign: true,\r\n                value: input.value.getPartial(BASE, index.supply).to128()\r\n            });\r\n        } else {\r\n            return Types.Par({\r\n                sign: false,\r\n                value: input.value.getPartialRoundUp(BASE, index.borrow).to128()\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Convert the total supply and borrow principal amounts of a market to total supply and borrow\r\n     * token amounts.\r\n     */\r\n    function totalParToWei(\r\n        Types.TotalPar memory totalPar,\r\n        Index memory index\r\n    )\r\n        internal\r\n        pure\r\n        returns (Types.Wei memory, Types.Wei memory)\r\n    {\r\n        Types.Par memory supplyPar = Types.Par({\r\n            sign: true,\r\n            value: totalPar.supply\r\n        });\r\n        Types.Par memory borrowPar = Types.Par({\r\n            sign: false,\r\n            value: totalPar.borrow\r\n        });\r\n        Types.Wei memory supplyWei = parToWei(supplyPar, index);\r\n        Types.Wei memory borrowWei = parToWei(borrowPar, index);\r\n        return (supplyWei, borrowWei);\r\n    }\r\n}\r\n\r\n// File: contracts/protocol/interfaces/IInterestSetter.sol\r\n\r\n/**\r\n * @title IInterestSetter\r\n * @author dYdX\r\n *\r\n * Interface that Interest Setters for Solo must implement in order to report interest rates.\r\n */\r\ninterface IInterestSetter {\r\n\r\n    // ============ Public Functions ============\r\n\r\n    /**\r\n     * Get the interest rate of a token given some borrowed and supplied amounts\r\n     *\r\n     * @param  token        The address of the ERC20 token for the market\r\n     * @param  borrowWei    The total borrowed token amount for the market\r\n     * @param  supplyWei    The total supplied token amount for the market\r\n     * @return              The interest rate per second\r\n     */\r\n    function getInterestRate(\r\n        address token,\r\n        uint256 borrowWei,\r\n        uint256 supplyWei\r\n    )\r\n        external\r\n        view\r\n        returns (Interest.Rate memory);\r\n}\r\n\r\n// File: contracts/external/interestsetters/DoubleExponentInterestSetter.sol\r\n\r\n/**\r\n * @title DoubleExponentInterestSetter\r\n * @author dYdX\r\n *\r\n * Interest setter that sets interest based on a polynomial of the usage percentage of the market.\r\n * Interest = C_0 + C_1 * U^(2^0) + C_2 * U^(2^1) + C_3 * U^(2^2) ...\r\n */\r\ncontract DoubleExponentInterestSetter is\r\n    IInterestSetter\r\n{\r\n    using Math for uint256;\r\n    using SafeMath for uint256;\r\n\r\n    // ============ Constants ============\r\n\r\n    uint256 constant PERCENT = 100;\r\n\r\n    uint256 constant BASE = 10 ** 18;\r\n\r\n    uint256 constant SECONDS_IN_A_YEAR = 60 * 60 * 24 * 365;\r\n\r\n    uint256 constant BYTE = 8;\r\n\r\n    // ============ Structs ============\r\n\r\n    struct PolyStorage {\r\n        uint128 maxAPR;\r\n        uint128 coefficients;\r\n    }\r\n\r\n    // ============ Storage ============\r\n\r\n    PolyStorage g_storage;\r\n\r\n    // ============ Constructor ============\r\n\r\n    constructor(\r\n        PolyStorage memory params\r\n    )\r\n        public\r\n    {\r\n        // verify that all coefficients add up to 100%\r\n        uint256 sumOfCoefficients = 0;\r\n        for (\r\n            uint256 coefficients = params.coefficients;\r\n            coefficients != 0;\r\n            coefficients >>= BYTE\r\n        ) {\r\n            sumOfCoefficients += coefficients % 256;\r\n        }\r\n        require(\r\n            sumOfCoefficients == PERCENT,\r\n            \"Coefficients must sum to 100\"\r\n        );\r\n\r\n        // store the params\r\n        g_storage = params;\r\n    }\r\n\r\n    // ============ Public Functions ============\r\n\r\n    /**\r\n     * Get the interest rate given some borrowed and supplied amounts. The interest function is a\r\n     * polynomial function of the utilization (borrowWei / supplyWei) of the market.\r\n     *\r\n     *   - If borrowWei > supplyWei then the utilization is considered to be equal to 1.\r\n     *   - If both are zero, then the utilization is considered to be equal to 0.\r\n     *\r\n     * @return The interest rate per second (times 10 ** 18)\r\n     */\r\n    function getInterestRate(\r\n        address /* token */,\r\n        uint256 borrowWei,\r\n        uint256 supplyWei\r\n    )\r\n        external\r\n        view\r\n        returns (Interest.Rate memory)\r\n    {\r\n        if (borrowWei == 0) {\r\n            return Interest.Rate({\r\n                value: 0\r\n            });\r\n        }\r\n\r\n        PolyStorage memory s = g_storage;\r\n        uint256 maxAPR = s.maxAPR;\r\n\r\n        if (borrowWei >= supplyWei) {\r\n            return Interest.Rate({\r\n                value: maxAPR / SECONDS_IN_A_YEAR\r\n            });\r\n        }\r\n\r\n        // process the first coefficient\r\n        uint256 coefficients = s.coefficients;\r\n        uint256 result = uint8(coefficients) * BASE;\r\n        coefficients >>= BYTE;\r\n\r\n        // initialize polynomial as the utilization\r\n        // no safeDiv since supplyWei must be non-zero at this point\r\n        uint256 polynomial = BASE.mul(borrowWei) / supplyWei;\r\n\r\n        // for each non-zero coefficient...\r\n        while (true) {\r\n            // gets the lowest-order byte\r\n            uint256 coefficient = uint256(uint8(coefficients));\r\n\r\n            // if non-zero, add to result\r\n            if (coefficient != 0) {\r\n                // no safeAdd since there are at most 16 coefficients\r\n                // no safeMul since (coefficient < 256 && polynomial <= 10**18)\r\n                result += coefficient * polynomial;\r\n\r\n                // break if this is the last non-zero coefficient\r\n                if (coefficient == coefficients) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // double the order of the polynomial term\r\n            // no safeMul since polynomial <= 10^18\r\n            // no safeDiv since the divisor is a non-zero constant\r\n            polynomial = polynomial * polynomial / BASE;\r\n\r\n            // move to next coefficient\r\n            coefficients >>= BYTE;\r\n        }\r\n\r\n        // normalize the result\r\n        // no safeMul since result fits within 72 bits and maxAPR fits within 128 bits\r\n        // no safeDiv since the divisor is a non-zero constant\r\n        return Interest.Rate({\r\n            value: result * maxAPR / (SECONDS_IN_A_YEAR * BASE * PERCENT)\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get the maximum APR that this interestSetter will return. The actual APY may be higher\r\n     * depending on how often the interest is compounded.\r\n     *\r\n     * @return The maximum APR\r\n     */\r\n    function getMaxAPR()\r\n        external\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return g_storage.maxAPR;\r\n    }\r\n\r\n    /**\r\n     * Get all of the coefficients of the interest calculation, starting from the coefficient for\r\n     * the first-order utilization variable.\r\n     *\r\n     * @return The coefficients\r\n     */\r\n    function getCoefficients()\r\n        external\r\n        view\r\n        returns (uint256[] memory)\r\n    {\r\n        // allocate new array with maximum of 16 coefficients\r\n        uint256[] memory result = new uint256[](16);\r\n\r\n        // add the coefficients to the array\r\n        uint256 numCoefficients = 0;\r\n        for (\r\n            uint256 coefficients = g_storage.coefficients;\r\n            coefficients != 0;\r\n            coefficients >>= BYTE\r\n        ) {\r\n            result[numCoefficients] = coefficients % 256;\r\n            numCoefficients++;\r\n        }\r\n\r\n        // modify result.length to match numCoefficients\r\n        /* solium-disable-next-line security/no-inline-assembly */\r\n        assembly {\r\n            mstore(result, numCoefficients)\r\n        }\r\n\r\n        return result;\r\n    }\r\n}"}},{"errors":[{"sourceLocation":{"file":"Contract","start":716,"end":749},"type":"Warning","component":"general","severity":"warning","errorCode":null,"message":"Experimental features are turned on. Do not use experimental features on live deployments.","formattedMessage":"Contract:24:1: Warning: Experimental features are turned on. Do not use experimental features on live deployments.\npragma experimental ABIEncoderV2;\r\n^-------------------------------^\n"}],"sources":{"Contract":{"id":0,"ast":{"absolutePath":"Contract","id":1941,"exportedSymbols":{"Decimal":[892],"DoubleExponentInterestSetter":[1940],"IInterestSetter":[1682],"Interest":[1670],"Math":[818],"Require":[638],"SafeMath":[128],"Time":[905],"Types":[1367]},"nodeType":"SourceUnit","src":"692:30783:0","nodes":[{"id":1,"nodeType":"PragmaDirective","src":"692:22:0","nodes":[],"literals":["solidity","0.5",".7"]},{"id":2,"nodeType":"PragmaDirective","src":"716:33:0","nodes":[],"literals":["experimental","ABIEncoderV2"]},{"id":128,"nodeType":"ContractDefinition","src":"919:1784:0","nodes":[{"id":35,"nodeType":"FunctionDefinition","src":"1027:433:0","nodes":[],"body":{"id":34,"nodeType":"Block","src":"1094:366:0","nodes":[],"statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":13,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":11,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4,"src":"1329:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":12,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1329:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":17,"nodeType":"IfStatement","src":"1325:47:0","trueBody":{"id":16,"nodeType":"Block","src":"1337:35:0","statements":[{"expression":{"argumentTypes":null,"hexValue":"30","id":14,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1359:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":10,"id":15,"nodeType":"Return","src":"1352:8:0"}]}},{"assignments":[19],"declarations":[{"constant":false,"id":19,"name":"c","nodeType":"VariableDeclaration","scope":34,"src":"1384:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18,"name":"uint256","nodeType":"ElementaryTypeName","src":"1384:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":23,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":22,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":20,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4,"src":"1396:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"id":21,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"1400:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1384:17:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":29,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":25,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"1420:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"id":26,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4,"src":"1424:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1420:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":28,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"1429:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1420:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":24,"name":"require","nodeType":"Identifier","overloadedDeclarations":[1958,1959],"referencedDeclaration":1958,"src":"1412:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":30,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1412:19:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":31,"nodeType":"ExpressionStatement","src":"1412:19:0"},{"expression":{"argumentTypes":null,"id":32,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"1451:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10,"id":33,"nodeType":"Return","src":"1444:8:0"}]},"documentation":"@dev Multiplies two unsigned integers, reverts on overflow.\r","implemented":true,"kind":"function","modifiers":[],"name":"mul","parameters":{"id":7,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"name":"a","nodeType":"VariableDeclaration","scope":35,"src":"1040:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3,"name":"uint256","nodeType":"ElementaryTypeName","src":"1040:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":6,"name":"b","nodeType":"VariableDeclaration","scope":35,"src":"1051:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5,"name":"uint256","nodeType":"ElementaryTypeName","src":"1051:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1039:22:0"},"returnParameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"name":"","nodeType":"VariableDeclaration","scope":35,"src":"1085:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8,"name":"uint256","nodeType":"ElementaryTypeName","src":"1085:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1084:9:0"},"scope":128,"stateMutability":"pure","superFunction":null,"visibility":"internal"},{"id":59,"nodeType":"FunctionDefinition","src":"1593:303:0","nodes":[],"body":{"id":58,"nodeType":"Block","src":"1660:236:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":45,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"1746:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":46,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1750:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1746:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[1958,1959],"referencedDeclaration":1958,"src":"1738:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1738:14:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":49,"nodeType":"ExpressionStatement","src":"1738:14:0"},{"assignments":[51],"declarations":[{"constant":false,"id":51,"name":"c","nodeType":"VariableDeclaration","scope":58,"src":"1763:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":50,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":55,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":52,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"1775:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"id":53,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"1779:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1775:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1763:17:0"},{"expression":{"argumentTypes":null,"id":56,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"1887:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":43,"id":57,"nodeType":"Return","src":"1880:8:0"}]},"documentation":"@dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.\r","implemented":true,"kind":"function","modifiers":[],"name":"div","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"name":"a","nodeType":"VariableDeclaration","scope":59,"src":"1606:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36,"name":"uint256","nodeType":"ElementaryTypeName","src":"1606:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":39,"name":"b","nodeType":"VariableDeclaration","scope":59,"src":"1617:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"1617:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1605:22:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42,"name":"","nodeType":"VariableDeclaration","scope":59,"src":"1651:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41,"name":"uint256","nodeType":"ElementaryTypeName","src":"1651:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1650:9:0"},"scope":128,"stateMutability":"pure","superFunction":null,"visibility":"internal"},{"id":83,"nodeType":"FunctionDefinition","src":"2032:150:0","nodes":[],"body":{"id":82,"nodeType":"Block","src":"2099:83:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":71,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":69,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"2118:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"id":70,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61,"src":"2123:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2118:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":68,"name":"require","nodeType":"Identifier","overloadedDeclarations":[1958,1959],"referencedDeclaration":1958,"src":"2110:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2110:15:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":73,"nodeType":"ExpressionStatement","src":"2110:15:0"},{"assignments":[75],"declarations":[{"constant":false,"id":75,"name":"c","nodeType":"VariableDeclaration","scope":82,"src":"2136:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":74,"name":"uint256","nodeType":"ElementaryTypeName","src":"2136:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":79,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":76,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61,"src":"2148:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"id":77,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"2152:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2148:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2136:17:0"},{"expression":{"argumentTypes":null,"id":80,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":75,"src":"2173:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":67,"id":81,"nodeType":"Return","src":"2166:8:0"}]},"documentation":"@dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\r","implemented":true,"kind":"function","modifiers":[],"name":"sub","parameters":{"id":64,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61,"name":"a","nodeType":"VariableDeclaration","scope":83,"src":"2045:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60,"name":"uint256","nodeType":"ElementaryTypeName","src":"2045:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":63,"name":"b","nodeType":"VariableDeclaration","scope":83,"src":"2056:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62,"name":"uint256","nodeType":"ElementaryTypeName","src":"2056:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2044:22:0"},"returnParameters":{"id":67,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66,"name":"","nodeType":"VariableDeclaration","scope":83,"src":"2090:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":65,"name":"uint256","nodeType":"ElementaryTypeName","src":"2090:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2089:9:0"},"scope":128,"stateMutability":"pure","superFunction":null,"visibility":"internal"},{"id":107,"nodeType":"FunctionDefinition","src":"2268:150:0","nodes":[],"body":{"id":106,"nodeType":"Block","src":"2335:83:0","nodes":[],"statements":[{"assignments":[93],"declarations":[{"constant":false,"id":93,"name":"c","nodeType":"VariableDeclaration","scope":106,"src":"2346:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":92,"name":"uint256","nodeType":"ElementaryTypeName","src":"2346:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":97,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":96,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":94,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2358:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"id":95,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87,"src":"2362:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2358:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2346:17:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":99,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"2382:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"id":100,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2387:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2382:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":98,"name":"require","nodeType":"Identifier","overloadedDeclarations":[1958,1959],"referencedDeclaration":1958,"src":"2374:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2374:15:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":103,"nodeType":"ExpressionStatement","src":"2374:15:0"},{"expression":{"argumentTypes":null,"id":104,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"2409:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":91,"id":105,"nodeType":"Return","src":"2402:8:0"}]},"documentation":"@dev Adds two unsigned integers, reverts on overflow.\r","implemented":true,"kind":"function","modifiers":[],"name":"add","parameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":85,"name":"a","nodeType":"VariableDeclaration","scope":107,"src":"2281:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":84,"name":"uint256","nodeType":"ElementaryTypeName","src":"2281:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":87,"name":"b","nodeType":"VariableDeclaration","scope":107,"src":"2292:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":86,"name":"uint256","nodeType":"ElementaryTypeName","src":"2292:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2280:22:0"},"returnParameters":{"id":91,"nodeType":"ParameterList","parameters":[{"constant":false,"id":90,"name":"","nodeType":"VariableDeclaration","scope":107,"src":"2326:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":89,"name":"uint256","nodeType":"ElementaryTypeName","src":"2326:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2325:9:0"},"scope":128,"stateMutability":"pure","superFunction":null,"visibility":"internal"},{"id":127,"nodeType":"FunctionDefinition","src":"2576:124:0","nodes":[],"body":{"id":126,"nodeType":"Block","src":"2643:57:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":117,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2662:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2667:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2662:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":116,"name":"require","nodeType":"Identifier","overloadedDeclarations":[1958,1959],"referencedDeclaration":1958,"src":"2654:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2654:15:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":121,"nodeType":"ExpressionStatement","src":"2654:15:0"},{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":122,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"2687:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"argumentTypes":null,"id":123,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2691:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2687:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":115,"id":125,"nodeType":"Return","src":"2680:12:0"}]},"documentation":"@dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\r\nreverts when dividing by zero.\r","implemented":true,"kind":"function","modifiers":[],"name":"mod","parameters":{"id":112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"name":"a","nodeType":"VariableDeclaration","scope":127,"src":"2589:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":108,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":111,"name":"b","nodeType":"VariableDeclaration","scope":127,"src":"2600:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":110,"name":"uint256","nodeType":"ElementaryTypeName","src":"2600:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2588:22:0"},"returnParameters":{"id":115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":114,"name":"","nodeType":"VariableDeclaration","scope":127,"src":"2634:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":113,"name":"uint256","nodeType":"ElementaryTypeName","src":"2634:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2633:9:0"},"scope":128,"stateMutability":"pure","superFunction":null,"visibility":"internal"}],"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":"@title SafeMath\r\n@dev Unsigned math operations with safety checks that revert on error\r","fullyImplemented":true,"linearizedBaseContracts":[128],"name":"SafeMath","scope":1941},{"id":638,"nodeType":"ContractDefinition","src":"2902:7579:0","nodes":[{"id":131,"nodeType":"VariableDeclaration","src":"2973:32:0","nodes":[],"constant":true,"name":"ASCII_ZERO","scope":638,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":129,"name":"uint256","nodeType":"ElementaryTypeName","src":"2973:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"hexValue":"3438","id":130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3003:2:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"visibility":"internal"},{"id":134,"nodeType":"VariableDeclaration","src":"3019:41:0","nodes":[],"constant":true,"name":"ASCII_RELATIVE_ZERO","scope":638,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":132,"name":"uint256","nodeType":"ElementaryTypeName","src":"3019:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"hexValue":"3837","id":133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3058:2:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"visibility":"internal"},{"id":137,"nodeType":"VariableDeclaration","src":"3079:37:0","nodes":[],"constant":true,"name":"ASCII_LOWER_EX","scope":638,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":135,"name":"uint256","nodeType":"ElementaryTypeName","src":"3079:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"hexValue":"313230","id":136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3113:3:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},"visibility":"internal"},{"id":140,"nodeType":"VariableDeclaration","src":"3130:30:0","nodes":[],"constant":true,"name":"COLON","scope":638,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"typeName":{"id":138,"name":"bytes2","nodeType":"ElementaryTypeName","src":"3130:6:0","typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"value":{"argumentTypes":null,"hexValue":"307833613230","id":139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3154:6:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_14880_by_1","typeString":"int_const 14880"},"value":"0x3a20"},"visibility":"internal"},{"id":143,"nodeType":"VariableDeclaration","src":"3175:30:0","nodes":[],"constant":true,"name":"COMMA","scope":638,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"typeName":{"id":141,"name":"bytes2","nodeType":"ElementaryTypeName","src":"3175:6:0","typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"value":{"argumentTypes":null,"hexValue":"307832633230","id":142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3199:6:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_11296_by_1","typeString":"int_const 11296"},"value":"0x2c20"},"visibility":"internal"},{"id":146,"nodeType":"VariableDeclaration","src":"3220:31:0","nodes":[],"constant":true,"name":"LPAREN","scope":638,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"typeName":{"id":144,"name":"bytes2","nodeType":"ElementaryTypeName","src":"3220:6:0","typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"value":{"argumentTypes":null,"hexValue":"307832303363","id":145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3245:6:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8252_by_1","typeString":"int_const 8252"},"value":"0x203c"},"visibility":"internal"},{"id":149,"nodeType":"VariableDeclaration","src":"3266:27:0","nodes":[],"constant":true,"name":"RPAREN","scope":638,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":147,"name":"byte","nodeType":"ElementaryTypeName","src":"3266:4:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"value":{"argumentTypes":null,"hexValue":"30783365","id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3289:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_62_by_1","typeString":"int_const 62"},"value":"0x3e"},"visibility":"internal"},{"id":152,"nodeType":"VariableDeclaration","src":"3307:36:0","nodes":[],"constant":true,"name":"FOUR_BIT_MASK","scope":638,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":150,"name":"uint256","nodeType":"ElementaryTypeName","src":"3307:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"hexValue":"307866","id":151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3340:3:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"visibility":"internal"},{"id":181,"nodeType":"FunctionDefinition","src":"3406:427:0","nodes":[],"body":{"id":180,"nodeType":"Block","src":"3532:301:0","nodes":[],"statements":[{"condition":{"argumentTypes":null,"id":162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3547:5:0","subExpression":{"argumentTypes":null,"id":161,"name":"must","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"3548:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":179,"nodeType":"IfStatement","src":"3543:283:0","trueBody":{"id":178,"nodeType":"Block","src":"3554:272:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":168,"name":"file","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"3676:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":167,"name":"stringify","nodeType":"Identifier","overloadedDeclarations":[433,511,608],"referencedDeclaration":433,"src":"3666:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) pure returns (bytes memory)"}},"id":169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3666:15:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":170,"name":"COLON","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"3708:5:0","typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":172,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"3750:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":171,"name":"stringify","nodeType":"Identifier","overloadedDeclarations":[433,511,608],"referencedDeclaration":433,"src":"3740:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) pure returns (bytes memory)"}},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3740:17:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":165,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"3623:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3623:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3623:157:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3594:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":"string"},"id":175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3594:205:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":163,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[1960,1961],"referencedDeclaration":1961,"src":"3569:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3569:245:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":177,"nodeType":"ExpressionStatement","src":"3569:245:0"}]}}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"that","parameters":{"id":159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":154,"name":"must","nodeType":"VariableDeclaration","scope":181,"src":"3430:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":153,"name":"bool","nodeType":"ElementaryTypeName","src":"3430:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":156,"name":"file","nodeType":"VariableDeclaration","scope":181,"src":"3450:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":155,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3450:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":158,"name":"reason","nodeType":"VariableDeclaration","scope":181,"src":"3473:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":157,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3473:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"3419:75:0"},"returnParameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"3532:0:0"},"scope":638,"stateMutability":"pure","superFunction":null,"visibility":"internal"},{"id":217,"nodeType":"FunctionDefinition","src":"3841:566:0","nodes":[],"body":{"id":216,"nodeType":"Block","src":"3994:413:0","nodes":[],"statements":[{"condition":{"argumentTypes":null,"id":193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4009:5:0","subExpression":{"argumentTypes":null,"id":192,"name":"must","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"4010:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":215,"nodeType":"IfStatement","src":"4005:395:0","trueBody":{"id":214,"nodeType":"Block","src":"4016:384:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":199,"name":"file","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"4138:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":198,"name":"stringify","nodeType":"Identifier","overloadedDeclarations":[433,511,608],"referencedDeclaration":433,"src":"4128:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) pure returns (bytes memory)"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4128:15:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":201,"name":"COLON","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"4170:5:0","typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":203,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"4212:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":202,"name":"stringify","nodeType":"Identifier","overloadedDeclarations":[433,511,608],"referencedDeclaration":433,"src":"4202:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) pure returns (bytes memory)"}},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4202:17:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":205,"name":"LPAREN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"4246:6:0","typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":207,"name":"payloadA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"4289:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":206,"name":"stringify","nodeType":"Identifier","overloadedDeclarations":[433,511,608],"referencedDeclaration":511,"src":"4279:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4279:19:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":209,"name":"RPAREN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"4325:6:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"expression":{"argumentTypes":null,"id":196,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"4085:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4085:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4085:269:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4056:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":"string"},"id":211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4056:317:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":194,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[1960,1961],"referencedDeclaration":1961,"src":"4031:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4031:357:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":213,"nodeType":"ExpressionStatement","src":"4031:357:0"}]}}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"that","parameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":183,"name":"must","nodeType":"VariableDeclaration","scope":217,"src":"3865:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":182,"name":"bool","nodeType":"ElementaryTypeName","src":"3865:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":185,"name":"file","nodeType":"VariableDeclaration","scope":217,"src":"3885:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":184,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3885:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":187,"name":"reason","nodeType":"VariableDeclaration","scope":217,"src":"3908:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":186,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3908:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":189,"name":"payloadA","nodeType":"VariableDeclaration","scope":217,"src":"3933:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":188,"name":"uint256","nodeType":"ElementaryTypeName","src":"3933:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"3854:102:0"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[],"src":"3994:0:0"},"scope":638,"stateMutability":"pure","superFunction":null,"visibility":"internal"},{"id":259,"nodeType":"FunctionDefinition","src":"4415:671:0","nodes":[],"body":{"id":258,"nodeType":"Block","src":"4595:491:0","nodes":[],"statements":[{"condition":{"argumentTypes":null,"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4610:5:0","subExpression":{"argumentTypes":null,"id":230,"name":"must","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"4611:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":257,"nodeType":"IfStatement","src":"4606:473:0","trueBody":{"id":256,"nodeType":"Block","src":"4617:462:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":237,"name":"file","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"4739:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":236,"name":"stringify","nodeType":"Identifier","overloadedDeclarations":[433,511,608],"referencedDeclaration":433,"src":"4729:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) pure returns (bytes memory)"}},"id":238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4729:15:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":239,"name":"COLON","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"4771:5:0","typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":241,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"4813:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":240,"name":"stringify","nodeType":"Identifier","overloadedDeclarations":[433,511,608],"referencedDeclaration":433,"src":"4803:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) pure returns (bytes memory)"}},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4803:17:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":243,"name":"LPAREN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"4847:6:0","typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":245,"name":"payloadA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"4890:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":244,"name":"stringify","nodeType":"Identifier","overloadedDeclarations":[433,511,608],"referencedDeclaration":511,"src":"4880:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4880:19:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":247,"name":"COMMA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"4926:5:0","typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":249,"name":"payloadB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"4968:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":248,"name":"stringify","nodeType":"Identifier","overloadedDeclarations":[433,511,608],"referencedDeclaration":511,"src":"4958:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4958:19:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":251,"name":"RPAREN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"5004:6:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"expression":{"argumentTypes":null,"id":234,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"4686:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4686:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4686:347:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4657:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":"string"},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4657:395:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":232,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[1960,1961],"referencedDeclaration":1961,"src":"4632:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4632:435:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":255,"nodeType":"ExpressionStatement","src":"4632:435:0"}]}}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"that","parameters":{"id":228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"name":"must","nodeType":"VariableDeclaration","scope":259,"src":"4439:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":218,"name":"bool","nodeType":"ElementaryTypeName","src":"4439:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":221,"name":"file","nodeType":"VariableDeclaration","scope":259,"src":"4459:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4459:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":223,"name":"reason","nodeType":"VariableDeclaration","scope":259,"src":"4482:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":222,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4482:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":225,"name":"payloadA","nodeType":"VariableDeclaration","scope":259,"src":"4507:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":224,"name":"uint256","nodeType":"ElementaryTypeName","src":"4507:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":227,"name":"payloadB","nodeType":"VariableDeclaration","scope":259,"src":"4534:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":226,"name":"uint256","nodeType":"ElementaryTypeName","src":"4534:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4428:129:0"},"returnParameters":{"id":229,"nodeType":"ParameterList","parameters":[],"src":"4595:0:0"},"scope":638,"stateMutability":"pure","superFunction":null,"visibility":"internal"},{"id":295,"nodeType":"FunctionDefinition","src":"5094:566:0","nodes":[],"body":{"id":294,"nodeType":"Block","src":"5247:413:0","nodes":[],"statements":[{"condition":{"argumentTypes":null,"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5262:5:0","subExpression":{"argumentTypes":null,"id":270,"name":"must","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"5263:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":293,"nodeType":"IfStatement","src":"5258:395:0","trueBody":{"id":292,"nodeType":"Block","src":"5269:384:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":277,"name":"file","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"5391:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":276,"name":"stringify","nodeType":"Identifier","overloadedDeclarations":[433,511,608],"referencedDeclaration":433,"src":"5381:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) pure returns (bytes memory)"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5381:15:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":279,"name":"COLON","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"5423:5:0","typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":281,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"5465:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":280,"name":"stringify","nodeType":"Identifier","overloadedDeclarations":[433,511,608],"referencedDeclaration":433,"src":"5455:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) pure returns (bytes memory)"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5455:17:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":283,"name":"LPAREN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5499:6:0","typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":285,"name":"payloadA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"5542:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":284,"name":"stringify","nodeType":"Identifier","overloadedDeclarations":[433,511,608],"referencedDeclaration":608,"src":"5532:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bytes_memory_ptr_$","typeString":"function (address) pure returns (bytes memory)"}},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5532:19:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":287,"name":"RPAREN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"5578:6:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"expression":{"argumentTypes":null,"id":274,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"5338:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5338:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5338:269:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5309:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":"string"},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5309:317:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":272,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[1960,1961],"referencedDeclaration":1961,"src":"5284:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5284:357:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":291,"nodeType":"ExpressionStatement","src":"5284:357:0"}]}}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"that","parameters":{"id":268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":261,"name":"must","nodeType":"VariableDeclaration","scope":295,"src":"5118:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":260,"name":"bool","nodeType":"ElementaryTypeName","src":"5118:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":263,"name":"file","nodeType":"VariableDeclaration","scope":295,"src":"5138:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":262,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5138:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":265,"name":"reason","nodeType":"VariableDeclaration","scope":295,"src":"5161:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":264,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5161:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":267,"name":"payloadA","nodeType":"VariableDeclaration","scope":295,"src":"5186:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":266,"name":"address","nodeType":"ElementaryTypeName","src":"5186:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"5107:102:0"},"returnParameters":{"id":269,"nodeType":"ParameterList","parameters":[],"src":"5247:0:0"},"scope":638,"stateMutability":"pure","superFunction":null,"visibility":"internal"},{"id":337,"nodeType":"FunctionDefinition","src":"5668:671:0","nodes":[],"body":{"id":336,"nodeType":"Block","src":"5848:491:0","nodes":[],"statements":[{"condition":{"argumentTypes":null,"id":309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5863:5:0","subExpression":{"argumentTypes":null,"id":308,"name":"must","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"5864:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":335,"nodeType":"IfStatement","src":"5859:473:0","trueBody":{"id":334,"nodeType":"Block","src":"5870:462:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":315,"name":"file","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"5992:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":314,"name":"stringify","nodeType":"Identifier","overloadedDeclarations":[433,511,608],"referencedDeclaration":433,"src":"5982:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) pure returns (bytes memory)"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5982:15:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":317,"name":"COLON","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"6024:5:0","typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":319,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"6066:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":318,"name":"stringify","nodeType":"Identifier","overloadedDeclarations":[433,511,608],"referencedDeclaration":433,"src":"6056:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) pure returns (bytes memory)"}},"id":320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6056:17:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":321,"name":"LPAREN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"6100:6:0","typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":323,"name":"payloadA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"6143:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":322,"name":"stringify","nodeType":"Identifier","overloadedDeclarations":[433,511,608],"referencedDeclaration":608,"src":"6133:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bytes_memory_ptr_$","typeString":"function (address) pure returns (bytes memory)"}},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6133:19:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":325,"name":"COMMA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"6179:5:0","typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":327,"name":"payloadB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6221:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":326,"name":"stringify","nodeType":"Identifier","overloadedDeclarations":[433,511,608],"referencedDeclaration":511,"src":"6211:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6211:19:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":329,"name":"RPAREN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"6257:6:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"expression":{"argumentTypes":null,"id":312,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"5939:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5939:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5939:347:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5910:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":"string"},"id":331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5910:395:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":310,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[1960,1961],"referencedDeclaration":1961,"src":"5885:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5885:435:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":333,"nodeType":"ExpressionStatement","src":"5885:435:0"}]}}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"that","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":297,"name":"must","nodeType":"VariableDeclaration","scope":337,"src":"5692:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":296,"name":"bool","nodeType":"ElementaryTypeName","src":"5692:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":299,"name":"file","nodeType":"VariableDeclaration","scope":337,"src":"5712:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":298,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5712:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":301,"name":"reason","nodeType":"VariableDeclaration","scope":337,"src":"5735:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":300,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5735:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":303,"name":"payloadA","nodeType":"VariableDeclaration","scope":337,"src":"5760:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":302,"name":"address","nodeType":"ElementaryTypeName","src":"5760:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":305,"name":"payloadB","nodeType":"VariableDeclaration","scope":337,"src":"5787:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":304,"name":"uint256","nodeType":"ElementaryTypeName","src":"5787:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"5681:129:0"},"returnParameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"5848:0:0"},"scope":638,"stateMutability":"pure","superFunction":null,"visibility":"internal"},{"id":385,"nodeType":"FunctionDefinition","src":"6347:776:0","nodes":[],"body":{"id":384,"nodeType":"Block","src":"6554:569:0","nodes":[],"statements":[{"condition":{"argumentTypes":null,"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6569:5:0","subExpression":{"argumentTypes":null,"id":352,"name":"must","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"6570:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":383,"nodeType":"IfStatement","src":"6565:551:0","trueBody":{"id":382,"nodeType":"Block","src":"6576:540:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":359,"name":"file","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"6698:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":358,"name":"stringify","nodeType":"Identifier","overloadedDeclarations":[433,511,608],"referencedDeclaration":433,"src":"6688:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) pure returns (bytes memory)"}},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6688:15:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":361,"name":"COLON","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"6730:5:0","typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":363,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"6772:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":362,"name":"stringify","nodeType":"Identifier","overloadedDeclarations":[433,511,608],"referencedDeclaration":433,"src":"6762:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) pure returns (bytes memory)"}},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6762:17:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":365,"name":"LPAREN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"6806:6:0","typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":367,"name":"payloadA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"6849:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":366,"name":"stringify","nodeType":"Identifier","overloadedDeclarations":[433,511,608],"referencedDeclaration":608,"src":"6839:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bytes_memory_ptr_$","typeString":"function (address) pure returns (bytes memory)"}},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6839:19:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":369,"name":"COMMA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"6885:5:0","typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":371,"name":"payloadB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"6927:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":370,"name":"stringify","nodeType":"Identifier","overloadedDeclarations":[433,511,608],"referencedDeclaration":511,"src":"6917:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6917:19:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":373,"name":"COMMA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"6963:5:0","typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":375,"name":"payloadC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"7005:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":374,"name":"stringify","nodeType":"Identifier","overloadedDeclarations":[433,511,608],"referencedDeclaration":511,"src":"6995:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6995:19:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":377,"name":"RPAREN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"7041:6:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"expression":{"argumentTypes":null,"id":356,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"6645:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6645:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6645:425:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6616:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":"string"},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6616:473:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":354,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[1960,1961],"referencedDeclaration":1961,"src":"6591:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6591:513:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":381,"nodeType":"ExpressionStatement","src":"6591:513:0"}]}}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"that","parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"name":"must","nodeType":"VariableDeclaration","scope":385,"src":"6371:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":338,"name":"bool","nodeType":"ElementaryTypeName","src":"6371:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":341,"name":"file","nodeType":"VariableDeclaration","scope":385,"src":"6391:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":340,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6391:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":343,"name":"reason","nodeType":"VariableDeclaration","scope":385,"src":"6414:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":342,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6414:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":345,"name":"payloadA","nodeType":"VariableDeclaration","scope":385,"src":"6439:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":344,"name":"address","nodeType":"ElementaryTypeName","src":"6439:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":347,"name":"payloadB","nodeType":"VariableDeclaration","scope":385,"src":"6466:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":346,"name":"uint256","nodeType":"ElementaryTypeName","src":"6466:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":349,"name":"payloadC","nodeType":"VariableDeclaration","scope":385,"src":"6493:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":348,"name":"uint256","nodeType":"ElementaryTypeName","src":"6493:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6360:156:0"},"returnParameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"6554:0:0"},"scope":638,"stateMutability":"pure","superFunction":null,"visibility":"internal"},{"id":433,"nodeType":"FunctionDefinition","src":"7185:988:0","nodes":[],"body":{"id":432,"nodeType":"Block","src":"7303:870:0","nodes":[],"statements":[{"assignments":[393],"declarations":[{"constant":false,"id":393,"name":"result","nodeType":"VariableDeclaration","scope":432,"src":"7362:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":392,"name":"bytes","nodeType":"ElementaryTypeName","src":"7362:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"id":398,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":396,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"7401:5:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":394,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"7384:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7384:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7384:23:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"7362:45:0"},{"body":{"id":425,"nodeType":"Block","src":"7546:557:0","statements":[{"expression":{"argumentTypes":null,"id":407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"7693:3:0","subExpression":{"argumentTypes":null,"id":406,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"7693:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":408,"nodeType":"ExpressionStatement","src":"7693:3:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":409,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"7794:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":411,"indexExpression":{"argumentTypes":null,"id":410,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"7801:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7794:9:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7807:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7794:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":424,"nodeType":"IfStatement","src":"7790:302:0","trueBody":{"id":423,"nodeType":"Block","src":"7810:282:0","statements":[{"assignments":[415],"declarations":[{"constant":false,"id":415,"name":"length","nodeType":"VariableDeclaration","scope":423,"src":"7829:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":414,"name":"uint256","nodeType":"ElementaryTypeName","src":"7829:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":419,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":416,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"7846:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"hexValue":"31","id":417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7850:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7846:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7829:22:0"},{"externalReferences":[{"result":{"declaration":393,"isOffset":false,"isSlot":false,"src":"7987:6:0","valueSize":1}},{"length":{"declaration":415,"isOffset":false,"isSlot":false,"src":"7995:6:0","valueSize":1}}],"id":420,"nodeType":"InlineAssembly","operations":"{\n    mstore(result, length)\n}","src":"7948:121:0"},{"expression":{"argumentTypes":null,"id":421,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"8070:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":391,"id":422,"nodeType":"Return","src":"8063:13:0"}]}}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":403,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"7537:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7541:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7537:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":426,"initializationExpression":{"assignments":[400],"declarations":[{"constant":false,"id":400,"name":"i","nodeType":"VariableDeclaration","scope":426,"src":"7521:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":399,"name":"uint256","nodeType":"ElementaryTypeName","src":"7521:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":402,"initialValue":{"argumentTypes":null,"hexValue":"3332","id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7533:2:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"VariableDeclarationStatement","src":"7521:14:0"},"loopExpression":null,"nodeType":"ForStatement","src":"7516:587:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8163:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8153:9:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":427,"name":"bytes","nodeType":"ElementaryTypeName","src":"8157:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8153:12:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory","typeString":"bytes memory"}},"functionReturnParameters":391,"id":431,"nodeType":"Return","src":"8146:19:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"stringify","parameters":{"id":388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":387,"name":"input","nodeType":"VariableDeclaration","scope":433,"src":"7214:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":386,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7214:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"7203:31:0"},"returnParameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"name":"","nodeType":"VariableDeclaration","scope":433,"src":"7284:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":389,"name":"bytes","nodeType":"ElementaryTypeName","src":"7284:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"7283:14:0"},"scope":638,"stateMutability":"pure","superFunction":null,"visibility":"private"},{"id":511,"nodeType":"FunctionDefinition","src":"8181:949:0","nodes":[],"body":{"id":510,"nodeType":"Block","src":"8299:831:0","nodes":[],"statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":440,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"8314:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8314:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":446,"nodeType":"IfStatement","src":"8310:53:0","trueBody":{"id":445,"nodeType":"Block","src":"8326:37:0","statements":[{"expression":{"argumentTypes":null,"hexValue":"30","id":443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8348:3:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"functionReturnParameters":439,"id":444,"nodeType":"Return","src":"8341:10:0"}]}},{"assignments":[448],"declarations":[{"constant":false,"id":448,"name":"j","nodeType":"VariableDeclaration","scope":510,"src":"8415:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":447,"name":"uint256","nodeType":"ElementaryTypeName","src":"8415:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":450,"initialValue":{"argumentTypes":null,"id":449,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"8427:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8415:17:0"},{"assignments":[452],"declarations":[{"constant":false,"id":452,"name":"length","nodeType":"VariableDeclaration","scope":510,"src":"8443:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":451,"name":"uint256","nodeType":"ElementaryTypeName","src":"8443:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":453,"initialValue":null,"nodeType":"VariableDeclarationStatement","src":"8443:14:0"},{"body":{"id":464,"nodeType":"Block","src":"8483:57:0","statements":[{"expression":{"argumentTypes":null,"id":458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8498:8:0","subExpression":{"argumentTypes":null,"id":457,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"8498:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":459,"nodeType":"ExpressionStatement","src":"8498:8:0"},{"expression":{"argumentTypes":null,"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":460,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"8521:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"argumentTypes":null,"hexValue":"3130","id":461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8526:2:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"8521:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":463,"nodeType":"ExpressionStatement","src":"8521:7:0"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":454,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"8475:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8480:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8475:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":465,"nodeType":"WhileStatement","src":"8468:72:0"},{"assignments":[467],"declarations":[{"constant":false,"id":467,"name":"bstr","nodeType":"VariableDeclaration","scope":510,"src":"8584:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":466,"name":"bytes","nodeType":"ElementaryTypeName","src":"8584:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"id":472,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":470,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"8614:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8604:9:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":468,"name":"bytes","nodeType":"ElementaryTypeName","src":"8608:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8604:17:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"8584:37:0"},{"expression":{"argumentTypes":null,"id":475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":473,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"8712:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":474,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"8716:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8712:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":476,"nodeType":"ExpressionStatement","src":"8712:9:0"},{"body":{"id":506,"nodeType":"Block","src":"8766:333:0","statements":[{"expression":{"argumentTypes":null,"id":485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"8913:3:0","subExpression":{"argumentTypes":null,"id":484,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"8913:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":486,"nodeType":"ExpressionStatement","src":"8913:3:0"},{"expression":{"argumentTypes":null,"id":500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":487,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"8973:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":489,"indexExpression":{"argumentTypes":null,"id":488,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"8978:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8973:7:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":492,"name":"ASCII_ZERO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"8994:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":493,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"9008:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"argumentTypes":null,"hexValue":"3130","id":494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9012:2:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"9008:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":496,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9007:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8994:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8988:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":"uint8"},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8988:28:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8983:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":"byte"},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8983:34:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"8973:44:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":501,"nodeType":"ExpressionStatement","src":"8973:44:0"},{"expression":{"argumentTypes":null,"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":502,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"9080:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"argumentTypes":null,"hexValue":"3130","id":503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9085:2:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"9080:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":505,"nodeType":"ExpressionStatement","src":"9080:7:0"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":481,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"8757:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8761:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8757:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":507,"initializationExpression":{"assignments":[478],"declarations":[{"constant":false,"id":478,"name":"i","nodeType":"VariableDeclaration","scope":507,"src":"8737:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":477,"name":"uint256","nodeType":"ElementaryTypeName","src":"8737:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":480,"initialValue":{"argumentTypes":null,"id":479,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"8749:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8737:18:0"},"loopExpression":null,"nodeType":"ForStatement","src":"8732:367:0"},{"expression":{"argumentTypes":null,"id":508,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"9118:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":439,"id":509,"nodeType":"Return","src":"9111:11:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"stringify","parameters":{"id":436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":435,"name":"input","nodeType":"VariableDeclaration","scope":511,"src":"8210:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":434,"name":"uint256","nodeType":"ElementaryTypeName","src":"8210:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"8199:31:0"},"returnParameters":{"id":439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":438,"name":"","nodeType":"VariableDeclaration","scope":511,"src":"8280:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":437,"name":"bytes","nodeType":"ElementaryTypeName","src":"8280:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"8279:14:0"},"scope":638,"stateMutability":"pure","superFunction":null,"visibility":"private"},{"id":608,"nodeType":"FunctionDefinition","src":"9138:993:0","nodes":[],"body":{"id":607,"nodeType":"Block","src":"9256:875:0","nodes":[],"statements":[{"assignments":[519],"declarations":[{"constant":false,"id":519,"name":"z","nodeType":"VariableDeclaration","scope":607,"src":"9267:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":518,"name":"uint256","nodeType":"ElementaryTypeName","src":"9267:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":523,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":521,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"9287:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9279:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":"uint256"},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9279:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9267:26:0"},{"assignments":[525],"declarations":[{"constant":false,"id":525,"name":"result","nodeType":"VariableDeclaration","scope":607,"src":"9398:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":524,"name":"bytes","nodeType":"ElementaryTypeName","src":"9398:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"id":530,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"3432","id":528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9430:2:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_42_by_1","typeString":"int_const 42"},"value":"42"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_42_by_1","typeString":"int_const 42"}],"id":527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9420:9:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":526,"name":"bytes","nodeType":"ElementaryTypeName","src":"9424:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9420:13:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9398:35:0"},{"expression":{"argumentTypes":null,"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":531,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"9488:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":533,"indexExpression":{"argumentTypes":null,"hexValue":"30","id":532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9495:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9488:9:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":536,"name":"ASCII_ZERO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"9511:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9505:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":"uint8"},"id":537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9505:17:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9500:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":"byte"},"id":538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9500:23:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9488:35:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":540,"nodeType":"ExpressionStatement","src":"9488:35:0"},{"expression":{"argumentTypes":null,"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":541,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"9534:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":543,"indexExpression":{"argumentTypes":null,"hexValue":"31","id":542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9541:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9534:9:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":546,"name":"ASCII_LOWER_EX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":137,"src":"9557:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9551:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":"uint8"},"id":547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9551:21:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9546:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":"byte"},"id":548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9546:27:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9534:39:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":550,"nodeType":"ExpressionStatement","src":"9534:39:0"},{"body":{"id":603,"nodeType":"Block","src":"9718:380:0","statements":[{"assignments":[562],"declarations":[{"constant":false,"id":562,"name":"shift","nodeType":"VariableDeclaration","scope":603,"src":"9780:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":561,"name":"uint256","nodeType":"ElementaryTypeName","src":"9780:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":566,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":563,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"9796:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"hexValue":"32","id":564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9796:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9780:21:0"},{"expression":{"argumentTypes":null,"id":577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":567,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"9875:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":571,"indexExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"3431","id":568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9882:2:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"id":569,"name":"shift","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"9887:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9882:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9875:18:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":573,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9901:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"argumentTypes":null,"id":574,"name":"FOUR_BIT_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"9905:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9901:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":572,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9896:4:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes1_$","typeString":"function (uint256) pure returns (bytes1)"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9896:23:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9875:44:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":578,"nodeType":"ExpressionStatement","src":"9875:44:0"},{"expression":{"argumentTypes":null,"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":579,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9934:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":580,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9938:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"argumentTypes":null,"hexValue":"34","id":581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9943:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9938:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9934:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":584,"nodeType":"ExpressionStatement","src":"9934:10:0"},{"expression":{"argumentTypes":null,"id":595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":585,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"10017:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":589,"indexExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"3430","id":586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10024:2:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"id":587,"name":"shift","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"10029:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10024:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10017:18:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":591,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"10043:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"argumentTypes":null,"id":592,"name":"FOUR_BIT_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"10047:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10043:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":590,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"10038:4:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes1_$","typeString":"function (uint256) pure returns (bytes1)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10038:23:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10017:44:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":596,"nodeType":"ExpressionStatement","src":"10017:44:0"},{"expression":{"argumentTypes":null,"id":601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":597,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"10076:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":598,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"10080:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"argumentTypes":null,"hexValue":"34","id":599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10085:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10080:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10076:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":602,"nodeType":"ExpressionStatement","src":"10076:10:0"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":555,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"9705:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"hexValue":"3230","id":556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9709:2:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"9705:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":604,"initializationExpression":{"assignments":[552],"declarations":[{"constant":false,"id":552,"name":"i","nodeType":"VariableDeclaration","scope":604,"src":"9690:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":551,"name":"uint256","nodeType":"ElementaryTypeName","src":"9690:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":554,"initialValue":{"argumentTypes":null,"hexValue":"30","id":553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9702:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9690:13:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9713:3:0","subExpression":{"argumentTypes":null,"id":558,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"9713:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":560,"nodeType":"ExpressionStatement","src":"9713:3:0"},"nodeType":"ForStatement","src":"9685:413:0"},{"expression":{"argumentTypes":null,"id":605,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"10117:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":517,"id":606,"nodeType":"Return","src":"10110:13:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"stringify","parameters":{"id":514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":513,"name":"input","nodeType":"VariableDeclaration","scope":608,"src":"9167:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"9167:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"9156:31:0"},"returnParameters":{"id":517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"name":"","nodeType":"VariableDeclaration","scope":608,"src":"9237:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":515,"name":"bytes","nodeType":"ElementaryTypeName","src":"9237:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"9236:14:0"},"scope":638,"stateMutability":"pure","superFunction":null,"visibility":"private"},{"id":637,"nodeType":"FunctionDefinition","src":"10139:339:0","nodes":[],"body":{"id":636,"nodeType":"Block","src":"10244:234:0","nodes":[],"statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":615,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"10296:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"hexValue":"3130","id":616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10304:2:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"10296:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":627,"nodeType":"IfStatement","src":"10292:81:0","trueBody":{"id":626,"nodeType":"Block","src":"10308:65:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":620,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"10341:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"id":621,"name":"ASCII_ZERO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"10349:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10341:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10335:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":"uint8"},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10335:25:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10330:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":"byte"},"id":624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10330:31:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"functionReturnParameters":614,"id":625,"nodeType":"Return","src":"10323:38:0"}]}},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":630,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"10441:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"id":631,"name":"ASCII_RELATIVE_ZERO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"10449:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10441:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10435:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":"uint8"},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10435:34:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10430:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":"byte"},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10430:40:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"functionReturnParameters":614,"id":635,"nodeType":"Return","src":"10423:47:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"char","parameters":{"id":611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":610,"name":"input","nodeType":"VariableDeclaration","scope":637,"src":"10163:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":609,"name":"uint256","nodeType":"ElementaryTypeName","src":"10163:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"10152:31:0"},"returnParameters":{"id":614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":613,"name":"","nodeType":"VariableDeclaration","scope":637,"src":"10233:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":612,"name":"byte","nodeType":"ElementaryTypeName","src":"10233:4:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"value":null,"visibility":"internal"}],"src":"10232:6:0"},"scope":638,"stateMutability":"pure","superFunction":null,"visibility":"private"}],"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":"@title Require\r\n@author dYdX\r\n\n * Stringifies parameters to pretty-print revert messages. Costs more gas than regular require()\r","fullyImplemented":true,"linearizedBaseContracts":[638],"name":"Require","scope":1941},{"id":818,"nodeType":"ContractDefinition","src":"10620:2301:0","nodes":[{"id":641,"nodeType":"UsingForDirective","src":"10640:27:0","nodes":[],"libraryName":{"contractScope":null,"id":639,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":128,"src":"10646:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$128","typeString":"library SafeMath"}},"typeName":{"id":640,"name":"uint256","nodeType":"ElementaryTypeName","src":"10659:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":644,"nodeType":"VariableDeclaration","src":"10721:30:0","nodes":[],"constant":true,"name":"FILE","scope":818,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":642,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10721:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"argumentTypes":null,"hexValue":"4d617468","id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10745:6:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_19602d14acfdf1c8f04515d25ae0ffed7a19e56fe260950b488efb9ba564a438","typeString":"literal_string \"Math\""},"value":"Math"},"visibility":"internal"},{"id":664,"nodeType":"FunctionDefinition","src":"10882:238:0","nodes":[],"body":{"id":663,"nodeType":"Block","src":"11056:64:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":660,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"11100:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":657,"name":"numerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"11085:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":655,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"11074:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":35,"src":"11074:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11074:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":59,"src":"11074:25:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11074:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":654,"id":662,"nodeType":"Return","src":"11067:45:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"getPartial","parameters":{"id":651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":646,"name":"target","nodeType":"VariableDeclaration","scope":664,"src":"10912:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":645,"name":"uint256","nodeType":"ElementaryTypeName","src":"10912:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":648,"name":"numerator","nodeType":"VariableDeclaration","scope":664,"src":"10937:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":647,"name":"uint256","nodeType":"ElementaryTypeName","src":"10937:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":650,"name":"denominator","nodeType":"VariableDeclaration","scope":664,"src":"10965:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":649,"name":"uint256","nodeType":"ElementaryTypeName","src":"10965:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"10901:90:0"},"returnParameters":{"id":654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":653,"name":"","nodeType":"VariableDeclaration","scope":664,"src":"11042:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":652,"name":"uint256","nodeType":"ElementaryTypeName","src":"11042:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"11041:9:0"},"scope":818,"stateMutability":"pure","superFunction":null,"visibility":"internal"},{"id":705,"nodeType":"FunctionDefinition","src":"11212:423:0","nodes":[],"body":{"id":704,"nodeType":"Block","src":"11393:242:0","nodes":[],"statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":675,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"11408:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11418:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11408:11:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":678,"name":"numerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"11423:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11436:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11423:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11408:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":689,"nodeType":"IfStatement","src":"11404:154:0","trueBody":{"id":688,"nodeType":"Block","src":"11439:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11531:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"argumentTypes":null,"id":685,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"11534:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":682,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"11518:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeMath_$128_$","typeString":"type(library SafeMath)"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":59,"src":"11518:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11518:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":674,"id":687,"nodeType":"Return","src":"11511:35:0"}]}},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"31","id":701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11625:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":698,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"11608:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"31","id":695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11601:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":692,"name":"numerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"11586:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":690,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"11575:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":35,"src":"11575:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11575:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":83,"src":"11575:25:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11575:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":59,"src":"11575:32:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11575:45:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":107,"src":"11575:49:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11575:52:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":674,"id":703,"nodeType":"Return","src":"11568:59:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"getPartialRoundUp","parameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":666,"name":"target","nodeType":"VariableDeclaration","scope":705,"src":"11249:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":665,"name":"uint256","nodeType":"ElementaryTypeName","src":"11249:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":668,"name":"numerator","nodeType":"VariableDeclaration","scope":705,"src":"11274:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":667,"name":"uint256","nodeType":"ElementaryTypeName","src":"11274:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":670,"name":"denominator","nodeType":"VariableDeclaration","scope":705,"src":"11302:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":669,"name":"uint256","nodeType":"ElementaryTypeName","src":"11302:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"11238:90:0"},"returnParameters":{"id":674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":673,"name":"","nodeType":"VariableDeclaration","scope":705,"src":"11379:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":672,"name":"uint256","nodeType":"ElementaryTypeName","src":"11379:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"11378:9:0"},"scope":818,"stateMutability":"pure","superFunction":null,"visibility":"internal"},{"id":731,"nodeType":"FunctionDefinition","src":"11643:309:0","nodes":[],"body":{"id":730,"nodeType":"Block","src":"11754:198:0","nodes":[],"statements":[{"assignments":[713],"declarations":[{"constant":false,"id":713,"name":"result","nodeType":"VariableDeclaration","scope":730,"src":"11765:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":712,"name":"uint128","nodeType":"ElementaryTypeName","src":"11765:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"value":null,"visibility":"internal"}],"id":717,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":715,"name":"number","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"11790:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11782:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":"uint128"},"id":716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11782:15:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"VariableDeclarationStatement","src":"11765:32:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":721,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"11835:6:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":722,"name":"number","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"11845:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11835:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"id":724,"name":"FILE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"11866:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"hexValue":"556e73616665206361737420746f2075696e74313238","id":725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11885:24:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_b773ca07d29d4f08a3aecfdb977859672c8680bdca9b96e42a55dbf7d3440296","typeString":"literal_string \"Unsafe cast to uint128\""},"value":"Unsafe cast to uint128"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_stringliteral_b773ca07d29d4f08a3aecfdb977859672c8680bdca9b96e42a55dbf7d3440296","typeString":"literal_string \"Unsafe cast to uint128\""}],"expression":{"argumentTypes":null,"id":718,"name":"Require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"11808:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Require_$638_$","typeString":"type(library Require)"}},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"that","nodeType":"MemberAccess","referencedDeclaration":181,"src":"11808:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bool,bytes32,bytes32) pure"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11808:112:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":727,"nodeType":"ExpressionStatement","src":"11808:112:0"},{"expression":{"argumentTypes":null,"id":728,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"11938:6:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":711,"id":729,"nodeType":"Return","src":"11931:13:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"to128","parameters":{"id":708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":707,"name":"number","nodeType":"VariableDeclaration","scope":731,"src":"11668:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":706,"name":"uint256","nodeType":"ElementaryTypeName","src":"11668:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"11657:32:0"},"returnParameters":{"id":711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":710,"name":"","nodeType":"VariableDeclaration","scope":731,"src":"11740:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":709,"name":"uint128","nodeType":"ElementaryTypeName","src":"11740:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"value":null,"visibility":"internal"}],"src":"11739:9:0"},"scope":818,"stateMutability":"pure","superFunction":null,"visibility":"internal"},{"id":757,"nodeType":"FunctionDefinition","src":"11960:304:0","nodes":[],"body":{"id":756,"nodeType":"Block","src":"12069:195:0","nodes":[],"statements":[{"assignments":[739],"declarations":[{"constant":false,"id":739,"name":"result","nodeType":"VariableDeclaration","scope":756,"src":"12080:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":738,"name":"uint96","nodeType":"ElementaryTypeName","src":"12080:6:0","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"value":null,"visibility":"internal"}],"id":743,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":741,"name":"number","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"12103:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12096:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":"uint96"},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12096:14:0","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"12080:30:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":747,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"12148:6:0","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":748,"name":"number","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"12158:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12148:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"id":750,"name":"FILE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"12179:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"hexValue":"556e73616665206361737420746f2075696e743936","id":751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12198:23:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_85959ca09c014971366bdf41accb31e46e81b99f57d3a6fb1612fd6fb4693c09","typeString":"literal_string \"Unsafe cast to uint96\""},"value":"Unsafe cast to uint96"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_stringliteral_85959ca09c014971366bdf41accb31e46e81b99f57d3a6fb1612fd6fb4693c09","typeString":"literal_string \"Unsafe cast to uint96\""}],"expression":{"argumentTypes":null,"id":744,"name":"Require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"12121:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Require_$638_$","typeString":"type(library Require)"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"that","nodeType":"MemberAccess","referencedDeclaration":181,"src":"12121:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bool,bytes32,bytes32) pure"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12121:111:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":753,"nodeType":"ExpressionStatement","src":"12121:111:0"},{"expression":{"argumentTypes":null,"id":754,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"12250:6:0","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":737,"id":755,"nodeType":"Return","src":"12243:13:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"to96","parameters":{"id":734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":733,"name":"number","nodeType":"VariableDeclaration","scope":757,"src":"11984:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":732,"name":"uint256","nodeType":"ElementaryTypeName","src":"11984:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"11973:32:0"},"returnParameters":{"id":737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":736,"name":"","nodeType":"VariableDeclaration","scope":757,"src":"12056:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":735,"name":"uint96","nodeType":"ElementaryTypeName","src":"12056:6:0","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"value":null,"visibility":"internal"}],"src":"12055:8:0"},"scope":818,"stateMutability":"pure","superFunction":null,"visibility":"internal"},{"id":783,"nodeType":"FunctionDefinition","src":"12272:304:0","nodes":[],"body":{"id":782,"nodeType":"Block","src":"12381:195:0","nodes":[],"statements":[{"assignments":[765],"declarations":[{"constant":false,"id":765,"name":"result","nodeType":"VariableDeclaration","scope":782,"src":"12392:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":764,"name":"uint32","nodeType":"ElementaryTypeName","src":"12392:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":null,"visibility":"internal"}],"id":769,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":767,"name":"number","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"12415:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12408:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":"uint32"},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12408:14:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"12392:30:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":773,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"12460:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":774,"name":"number","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"12470:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12460:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"id":776,"name":"FILE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"12491:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"hexValue":"556e73616665206361737420746f2075696e743332","id":777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12510:23:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_9443def4723cd1251395a8581599c6060019cf3e6f977070a029f3ecbb1f9fc3","typeString":"literal_string \"Unsafe cast to uint32\""},"value":"Unsafe cast to uint32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_stringliteral_9443def4723cd1251395a8581599c6060019cf3e6f977070a029f3ecbb1f9fc3","typeString":"literal_string \"Unsafe cast to uint32\""}],"expression":{"argumentTypes":null,"id":770,"name":"Require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"12433:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Require_$638_$","typeString":"type(library Require)"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"that","nodeType":"MemberAccess","referencedDeclaration":181,"src":"12433:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bool,bytes32,bytes32) pure"}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12433:111:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":779,"nodeType":"ExpressionStatement","src":"12433:111:0"},{"expression":{"argumentTypes":null,"id":780,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"12562:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":763,"id":781,"nodeType":"Return","src":"12555:13:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"to32","parameters":{"id":760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":759,"name":"number","nodeType":"VariableDeclaration","scope":783,"src":"12296:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":758,"name":"uint256","nodeType":"ElementaryTypeName","src":"12296:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"12285:32:0"},"returnParameters":{"id":763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"name":"","nodeType":"VariableDeclaration","scope":783,"src":"12368:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":761,"name":"uint32","nodeType":"ElementaryTypeName","src":"12368:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":null,"visibility":"internal"}],"src":"12367:8:0"},"scope":818,"stateMutability":"pure","superFunction":null,"visibility":"internal"},{"id":800,"nodeType":"FunctionDefinition","src":"12584:163:0","nodes":[],"body":{"id":799,"nodeType":"Block","src":"12708:39:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":792,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"12726:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"id":793,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"12730:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12726:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"argumentTypes":null,"id":796,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"12738:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12726:13:0","trueExpression":{"argumentTypes":null,"id":795,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"12734:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":791,"id":798,"nodeType":"Return","src":"12719:20:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"min","parameters":{"id":788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":785,"name":"a","nodeType":"VariableDeclaration","scope":800,"src":"12607:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":784,"name":"uint256","nodeType":"ElementaryTypeName","src":"12607:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":787,"name":"b","nodeType":"VariableDeclaration","scope":800,"src":"12627:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":786,"name":"uint256","nodeType":"ElementaryTypeName","src":"12627:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"12596:47:0"},"returnParameters":{"id":791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":790,"name":"","nodeType":"VariableDeclaration","scope":800,"src":"12694:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":789,"name":"uint256","nodeType":"ElementaryTypeName","src":"12694:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"12693:9:0"},"scope":818,"stateMutability":"pure","superFunction":null,"visibility":"internal"},{"id":817,"nodeType":"FunctionDefinition","src":"12755:163:0","nodes":[],"body":{"id":816,"nodeType":"Block","src":"12879:39:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":809,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"12897:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"id":810,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"12901:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12897:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"argumentTypes":null,"id":813,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"12909:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12897:13:0","trueExpression":{"argumentTypes":null,"id":812,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"12905:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":808,"id":815,"nodeType":"Return","src":"12890:20:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"max","parameters":{"id":805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":802,"name":"a","nodeType":"VariableDeclaration","scope":817,"src":"12778:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":801,"name":"uint256","nodeType":"ElementaryTypeName","src":"12778:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":804,"name":"b","nodeType":"VariableDeclaration","scope":817,"src":"12798:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":803,"name":"uint256","nodeType":"ElementaryTypeName","src":"12798:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"12767:47:0"},"returnParameters":{"id":808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":807,"name":"","nodeType":"VariableDeclaration","scope":817,"src":"12865:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":806,"name":"uint256","nodeType":"ElementaryTypeName","src":"12865:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"12864:9:0"},"scope":818,"stateMutability":"pure","superFunction":null,"visibility":"internal"}],"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":"@title Math\r\n@author dYdX\r\n\n * Library for non-standard Math functions\r","fullyImplemented":true,"linearizedBaseContracts":[818],"name":"Math","scope":1941},{"id":892,"nodeType":"ContractDefinition","src":"13092:1012:0","nodes":[{"id":821,"nodeType":"UsingForDirective","src":"13115:27:0","nodes":[],"libraryName":{"contractScope":null,"id":819,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":128,"src":"13121:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$128","typeString":"library SafeMath"}},"typeName":{"id":820,"name":"uint256","nodeType":"ElementaryTypeName","src":"13134:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":826,"nodeType":"VariableDeclaration","src":"13196:30:0","nodes":[],"constant":true,"name":"BASE","scope":892,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":822,"name":"uint256","nodeType":"ElementaryTypeName","src":"13196:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"3130","id":823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13220:2:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"argumentTypes":null,"hexValue":"3138","id":824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13224:2:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"13220:6:0","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"visibility":"internal"},{"id":829,"nodeType":"StructDefinition","src":"13279:44:0","nodes":[],"canonicalName":"Decimal.D256","members":[{"constant":false,"id":828,"name":"value","nodeType":"VariableDeclaration","scope":829,"src":"13302:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":827,"name":"uint256","nodeType":"ElementaryTypeName","src":"13302:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"name":"D256","scope":892,"visibility":"public"},{"id":839,"nodeType":"FunctionDefinition","src":"13377:130:0","nodes":[],"body":{"id":838,"nodeType":"Block","src":"13460:47:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":835,"name":"BASE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"13492:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":834,"name":"D256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"13478:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_D256_$829_storage_ptr_$","typeString":"type(struct Decimal.D256 storage pointer)"}},"id":836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"names":["value"],"nodeType":"FunctionCall","src":"13478:21:0","typeDescriptions":{"typeIdentifier":"t_struct$_D256_$829_memory","typeString":"struct Decimal.D256 memory"}},"functionReturnParameters":833,"id":837,"nodeType":"Return","src":"13471:28:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"one","parameters":{"id":830,"nodeType":"ParameterList","parameters":[],"src":"13389:2:0"},"returnParameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":832,"name":"","nodeType":"VariableDeclaration","scope":839,"src":"13442:11:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_D256_$829_memory_ptr","typeString":"struct Decimal.D256"},"typeName":{"contractScope":null,"id":831,"name":"D256","nodeType":"UserDefinedTypeName","referencedDeclaration":829,"src":"13442:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_D256_$829_storage_ptr","typeString":"struct Decimal.D256"}},"value":null,"visibility":"internal"}],"src":"13441:13:0"},"scope":892,"stateMutability":"pure","superFunction":null,"visibility":"internal"},{"id":855,"nodeType":"FunctionDefinition","src":"13515:176:0","nodes":[],"body":{"id":854,"nodeType":"Block","src":"13631:60:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":850,"name":"BASE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"13675:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":847,"name":"d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"13663:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_D256_$829_memory_ptr","typeString":"struct Decimal.D256 memory"}},"id":848,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":828,"src":"13663:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":107,"src":"13663:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13663:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":846,"name":"D256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"13649:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_D256_$829_storage_ptr_$","typeString":"type(struct Decimal.D256 storage pointer)"}},"id":852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["value"],"nodeType":"FunctionCall","src":"13649:34:0","typeDescriptions":{"typeIdentifier":"t_struct$_D256_$829_memory","typeString":"struct Decimal.D256 memory"}},"functionReturnParameters":845,"id":853,"nodeType":"Return","src":"13642:41:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"onePlus","parameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":841,"name":"d","nodeType":"VariableDeclaration","scope":855,"src":"13542:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_D256_$829_memory_ptr","typeString":"struct Decimal.D256"},"typeName":{"contractScope":null,"id":840,"name":"D256","nodeType":"UserDefinedTypeName","referencedDeclaration":829,"src":"13542:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_D256_$829_storage_ptr","typeString":"struct Decimal.D256"}},"value":null,"visibility":"internal"}],"src":"13531:31:0"},"returnParameters":{"id":845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":844,"name":"","nodeType":"VariableDeclaration","scope":855,"src":"13613:11:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_D256_$829_memory_ptr","typeString":"struct Decimal.D256"},"typeName":{"contractScope":null,"id":843,"name":"D256","nodeType":"UserDefinedTypeName","referencedDeclaration":829,"src":"13613:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_D256_$829_storage_ptr","typeString":"struct Decimal.D256"}},"value":null,"visibility":"internal"}],"src":"13612:13:0"},"scope":892,"stateMutability":"pure","superFunction":null,"visibility":"internal"},{"id":873,"nodeType":"FunctionDefinition","src":"13699:197:0","nodes":[],"body":{"id":872,"nodeType":"Block","src":"13832:64:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":866,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"13866:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":867,"name":"d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"13874:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_D256_$829_memory_ptr","typeString":"struct Decimal.D256 memory"}},"id":868,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":828,"src":"13874:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":869,"name":"BASE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"13883:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":864,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"13850:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$818_$","typeString":"type(library Math)"}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPartial","nodeType":"MemberAccess","referencedDeclaration":664,"src":"13850:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13850:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":863,"id":871,"nodeType":"Return","src":"13843:45:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"mul","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"name":"target","nodeType":"VariableDeclaration","scope":873,"src":"13722:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":856,"name":"uint256","nodeType":"ElementaryTypeName","src":"13722:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":859,"name":"d","nodeType":"VariableDeclaration","scope":873,"src":"13747:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_D256_$829_memory_ptr","typeString":"struct Decimal.D256"},"typeName":{"contractScope":null,"id":858,"name":"D256","nodeType":"UserDefinedTypeName","referencedDeclaration":829,"src":"13747:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_D256_$829_storage_ptr","typeString":"struct Decimal.D256"}},"value":null,"visibility":"internal"}],"src":"13711:56:0"},"returnParameters":{"id":863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"name":"","nodeType":"VariableDeclaration","scope":873,"src":"13818:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":861,"name":"uint256","nodeType":"ElementaryTypeName","src":"13818:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"13817:9:0"},"scope":892,"stateMutability":"pure","superFunction":null,"visibility":"internal"},{"id":891,"nodeType":"FunctionDefinition","src":"13904:197:0","nodes":[],"body":{"id":890,"nodeType":"Block","src":"14037:64:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":884,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"14071:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":885,"name":"BASE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"14079:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":886,"name":"d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"14085:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_D256_$829_memory_ptr","typeString":"struct Decimal.D256 memory"}},"id":887,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":828,"src":"14085:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":882,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"14055:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$818_$","typeString":"type(library Math)"}},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPartial","nodeType":"MemberAccess","referencedDeclaration":664,"src":"14055:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14055:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":881,"id":889,"nodeType":"Return","src":"14048:45:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"div","parameters":{"id":878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":875,"name":"target","nodeType":"VariableDeclaration","scope":891,"src":"13927:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":874,"name":"uint256","nodeType":"ElementaryTypeName","src":"13927:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":877,"name":"d","nodeType":"VariableDeclaration","scope":891,"src":"13952:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_D256_$829_memory_ptr","typeString":"struct Decimal.D256"},"typeName":{"contractScope":null,"id":876,"name":"D256","nodeType":"UserDefinedTypeName","referencedDeclaration":829,"src":"13952:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_D256_$829_storage_ptr","typeString":"struct Decimal.D256"}},"value":null,"visibility":"internal"}],"src":"13916:56:0"},"returnParameters":{"id":881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":880,"name":"","nodeType":"VariableDeclaration","scope":891,"src":"14023:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":879,"name":"uint256","nodeType":"ElementaryTypeName","src":"14023:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"14022:9:0"},"scope":892,"stateMutability":"pure","superFunction":null,"visibility":"internal"}],"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":"@title Decimal\r\n@author dYdX\r\n\n * Library that defines a fixed-point number with 18 decimal places.\r","fullyImplemented":true,"linearizedBaseContracts":[892],"name":"Decimal","scope":1941},{"id":905,"nodeType":"ContractDefinition","src":"14297:217:0","nodes":[{"id":904,"nodeType":"FunctionDefinition","src":"14373:138:0","nodes":[],"body":{"id":903,"nodeType":"Block","src":"14459:52:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":899,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"14487:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14487:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":897,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"14477:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$818_$","typeString":"type(library Math)"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"to32","nodeType":"MemberAccess","referencedDeclaration":783,"src":"14477:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14477:26:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":896,"id":902,"nodeType":"Return","src":"14470:33:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"currentTime","parameters":{"id":893,"nodeType":"ParameterList","parameters":[],"src":"14393:2:0"},"returnParameters":{"id":896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":895,"name":"","nodeType":"VariableDeclaration","scope":904,"src":"14446:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":894,"name":"uint32","nodeType":"ElementaryTypeName","src":"14446:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":null,"visibility":"internal"}],"src":"14445:8:0"},"scope":905,"stateMutability":"view","superFunction":null,"visibility":"internal"}],"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":"@title Time\r\n@author dYdX\r\n\n * Library for dealing with time, assuming timestamps fit within 32 bits (valid until year 2106)\r","fullyImplemented":true,"linearizedBaseContracts":[905],"name":"Time","scope":1941},{"id":1367,"nodeType":"ContractDefinition","src":"14675:5235:0","nodes":[{"id":908,"nodeType":"UsingForDirective","src":"14696:23:0","nodes":[],"libraryName":{"contractScope":null,"id":906,"name":"Math","nodeType":"UserDefinedTypeName","referencedDeclaration":818,"src":"14702:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Math_$818","typeString":"library Math"}},"typeName":{"id":907,"name":"uint256","nodeType":"ElementaryTypeName","src":"14711:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":911,"nodeType":"EnumDefinition","src":"14775:131:0","nodes":[],"canonicalName":"Types.AssetDenomination","members":[{"id":909,"name":"Wei","nodeType":"EnumValue","src":"14809:3:0"},{"id":910,"name":"Par","nodeType":"EnumValue","src":"14859:3:0"}],"name":"AssetDenomination"},{"id":914,"nodeType":"EnumDefinition","src":"14914:172:0","nodes":[],"canonicalName":"Types.AssetReference","members":[{"id":912,"name":"Delta","nodeType":"EnumValue","src":"14945:5:0"},{"id":913,"name":"Target","nodeType":"EnumValue","src":"15018:6:0"}],"name":"AssetReference"},{"id":923,"nodeType":"StructDefinition","src":"15094:161:0","nodes":[],"canonicalName":"Types.AssetAmount","members":[{"constant":false,"id":916,"name":"sign","nodeType":"VariableDeclaration","scope":923,"src":"15124:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":915,"name":"bool","nodeType":"ElementaryTypeName","src":"15124:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":918,"name":"denomination","nodeType":"VariableDeclaration","scope":923,"src":"15164:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDenomination_$911","typeString":"enum Types.AssetDenomination"},"typeName":{"contractScope":null,"id":917,"name":"AssetDenomination","nodeType":"UserDefinedTypeName","referencedDeclaration":911,"src":"15164:17:0","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDenomination_$911","typeString":"enum Types.AssetDenomination"}},"value":null,"visibility":"internal"},{"constant":false,"id":920,"name":"ref","nodeType":"VariableDeclaration","scope":923,"src":"15205:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AssetReference_$914","typeString":"enum Types.AssetReference"},"typeName":{"contractScope":null,"id":919,"name":"AssetReference","nodeType":"UserDefinedTypeName","referencedDeclaration":914,"src":"15205:14:0","typeDescriptions":{"typeIdentifier":"t_enum$_AssetReference_$914","typeString":"enum Types.AssetReference"}},"value":null,"visibility":"internal"},{"constant":false,"id":922,"name":"value","nodeType":"VariableDeclaration","scope":923,"src":"15234:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":921,"name":"uint256","nodeType":"ElementaryTypeName","src":"15234:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"name":"AssetAmount","scope":1367,"visibility":"public"},{"id":928,"nodeType":"StructDefinition","src":"15374:74:0","nodes":[],"canonicalName":"Types.TotalPar","members":[{"constant":false,"id":925,"name":"borrow","nodeType":"VariableDeclaration","scope":928,"src":"15401:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":924,"name":"uint128","nodeType":"ElementaryTypeName","src":"15401:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"value":null,"visibility":"internal"},{"constant":false,"id":927,"name":"supply","nodeType":"VariableDeclaration","scope":928,"src":"15426:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":926,"name":"uint128","nodeType":"ElementaryTypeName","src":"15426:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"value":null,"visibility":"internal"}],"name":"TotalPar","scope":1367,"visibility":"public"},{"id":933,"nodeType":"StructDefinition","src":"15507:83:0","nodes":[],"canonicalName":"Types.Par","members":[{"constant":false,"id":930,"name":"sign","nodeType":"VariableDeclaration","scope":933,"src":"15529:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":929,"name":"bool","nodeType":"ElementaryTypeName","src":"15529:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":932,"name":"value","nodeType":"VariableDeclaration","scope":933,"src":"15569:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":931,"name":"uint128","nodeType":"ElementaryTypeName","src":"15569:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"value":null,"visibility":"internal"}],"name":"Par","scope":1367,"visibility":"public"},{"id":944,"nodeType":"FunctionDefinition","src":"15598:177:0","nodes":[],"body":{"id":943,"nodeType":"Block","src":"15684:91:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"66616c7365","id":939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15727:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"argumentTypes":null,"hexValue":"30","id":940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15754:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":938,"name":"Par","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"15702:3:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Par_$933_storage_ptr_$","typeString":"type(struct Types.Par storage pointer)"}},"id":941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"names":["sign","value"],"nodeType":"FunctionCall","src":"15702:65:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory","typeString":"struct Types.Par memory"}},"functionReturnParameters":937,"id":942,"nodeType":"Return","src":"15695:72:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"zeroPar","parameters":{"id":934,"nodeType":"ParameterList","parameters":[],"src":"15614:2:0"},"returnParameters":{"id":937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":936,"name":"","nodeType":"VariableDeclaration","scope":944,"src":"15667:10:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par"},"typeName":{"contractScope":null,"id":935,"name":"Par","nodeType":"UserDefinedTypeName","referencedDeclaration":933,"src":"15667:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_storage_ptr","typeString":"struct Types.Par"}},"value":null,"visibility":"internal"}],"src":"15666:12:0"},"scope":1367,"stateMutability":"pure","superFunction":null,"visibility":"internal"},{"id":961,"nodeType":"FunctionDefinition","src":"15783:178:0","nodes":[],"body":{"id":960,"nodeType":"Block","src":"15916:45:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":954,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"15938:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":956,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"15950:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}],"id":955,"name":"negative","nodeType":"Identifier","overloadedDeclarations":[1104,1320],"referencedDeclaration":1104,"src":"15941:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Par_$933_memory_ptr_$returns$_t_struct$_Par_$933_memory_ptr_$","typeString":"function (struct Types.Par memory) pure returns (struct Types.Par memory)"}},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15941:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"},{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}],"id":953,"name":"add","nodeType":"Identifier","overloadedDeclarations":[1055,1271],"referencedDeclaration":1055,"src":"15934:3:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Par_$933_memory_ptr_$_t_struct$_Par_$933_memory_ptr_$returns$_t_struct$_Par_$933_memory_ptr_$","typeString":"function (struct Types.Par memory,struct Types.Par memory) pure returns (struct Types.Par memory)"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15934:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}},"functionReturnParameters":952,"id":959,"nodeType":"Return","src":"15927:26:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"sub","parameters":{"id":949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":946,"name":"a","nodeType":"VariableDeclaration","scope":961,"src":"15806:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par"},"typeName":{"contractScope":null,"id":945,"name":"Par","nodeType":"UserDefinedTypeName","referencedDeclaration":933,"src":"15806:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_storage_ptr","typeString":"struct Types.Par"}},"value":null,"visibility":"internal"},{"constant":false,"id":948,"name":"b","nodeType":"VariableDeclaration","scope":961,"src":"15829:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par"},"typeName":{"contractScope":null,"id":947,"name":"Par","nodeType":"UserDefinedTypeName","referencedDeclaration":933,"src":"15829:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_storage_ptr","typeString":"struct Types.Par"}},"value":null,"visibility":"internal"}],"src":"15795:53:0"},"returnParameters":{"id":952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":951,"name":"","nodeType":"VariableDeclaration","scope":961,"src":"15899:10:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par"},"typeName":{"contractScope":null,"id":950,"name":"Par","nodeType":"UserDefinedTypeName","referencedDeclaration":933,"src":"15899:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_storage_ptr","typeString":"struct Types.Par"}},"value":null,"visibility":"internal"}],"src":"15898:12:0"},"scope":1367,"stateMutability":"pure","superFunction":null,"visibility":"internal"},{"id":1055,"nodeType":"FunctionDefinition","src":"15969:656:0","nodes":[],"body":{"id":1054,"nodeType":"Block","src":"16102:523:0","nodes":[],"statements":[{"assignments":[971],"declarations":[{"constant":false,"id":971,"name":"result","nodeType":"VariableDeclaration","scope":1054,"src":"16113:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par"},"typeName":{"contractScope":null,"id":970,"name":"Par","nodeType":"UserDefinedTypeName","referencedDeclaration":933,"src":"16113:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_storage_ptr","typeString":"struct Types.Par"}},"value":null,"visibility":"internal"}],"id":972,"initialValue":null,"nodeType":"VariableDeclarationStatement","src":"16113:17:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":973,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"16145:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}},"id":974,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sign","nodeType":"MemberAccess","referencedDeclaration":930,"src":"16145:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":975,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"16155:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}},"id":976,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sign","nodeType":"MemberAccess","referencedDeclaration":930,"src":"16155:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16145:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1050,"nodeType":"Block","src":"16284:310:0","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1000,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"16303:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}},"id":1001,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":932,"src":"16303:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1002,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"16314:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}},"id":1003,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":932,"src":"16314:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"16303:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1048,"nodeType":"Block","src":"16456:127:0","statements":[{"expression":{"argumentTypes":null,"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1027,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"16475:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}},"id":1029,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"sign","nodeType":"MemberAccess","referencedDeclaration":930,"src":"16475:11:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1030,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"16489:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}},"id":1031,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sign","nodeType":"MemberAccess","referencedDeclaration":930,"src":"16489:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16475:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1033,"nodeType":"ExpressionStatement","src":"16475:20:0"},{"expression":{"argumentTypes":null,"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1034,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"16514:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}},"id":1036,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":932,"src":"16514:12:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1039,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"16542:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}},"id":1040,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":932,"src":"16542:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1041,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"16551:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}},"id":1042,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":932,"src":"16551:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"argumentTypes":null,"id":1037,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"16529:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeMath_$128_$","typeString":"type(library SafeMath)"}},"id":1038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":83,"src":"16529:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16529:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"to128","nodeType":"MemberAccess","referencedDeclaration":731,"src":"16529:36:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint128_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint128)"}},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16529:38:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"16514:53:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":1047,"nodeType":"ExpressionStatement","src":"16514:53:0"}]},"id":1049,"nodeType":"IfStatement","src":"16299:284:0","trueBody":{"id":1026,"nodeType":"Block","src":"16323:127:0","statements":[{"expression":{"argumentTypes":null,"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1005,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"16342:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}},"id":1007,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"sign","nodeType":"MemberAccess","referencedDeclaration":930,"src":"16342:11:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1008,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"16356:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}},"id":1009,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sign","nodeType":"MemberAccess","referencedDeclaration":930,"src":"16356:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16342:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1011,"nodeType":"ExpressionStatement","src":"16342:20:0"},{"expression":{"argumentTypes":null,"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1012,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"16381:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}},"id":1014,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":932,"src":"16381:12:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1017,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"16409:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}},"id":1018,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":932,"src":"16409:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1019,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"16418:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}},"id":1020,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":932,"src":"16418:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"argumentTypes":null,"id":1015,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"16396:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeMath_$128_$","typeString":"type(library SafeMath)"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":83,"src":"16396:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16396:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"to128","nodeType":"MemberAccess","referencedDeclaration":731,"src":"16396:36:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint128_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint128)"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16396:38:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"16381:53:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":1025,"nodeType":"ExpressionStatement","src":"16381:53:0"}]}}]},"id":1051,"nodeType":"IfStatement","src":"16141:453:0","trueBody":{"id":999,"nodeType":"Block","src":"16163:115:0","statements":[{"expression":{"argumentTypes":null,"id":983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":978,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"16178:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}},"id":980,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"sign","nodeType":"MemberAccess","referencedDeclaration":930,"src":"16178:11:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":981,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"16192:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}},"id":982,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sign","nodeType":"MemberAccess","referencedDeclaration":930,"src":"16192:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16178:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":984,"nodeType":"ExpressionStatement","src":"16178:20:0"},{"expression":{"argumentTypes":null,"id":997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":985,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"16213:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}},"id":987,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":932,"src":"16213:12:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":990,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"16241:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}},"id":991,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":932,"src":"16241:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":992,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"16250:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}},"id":993,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":932,"src":"16250:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"argumentTypes":null,"id":988,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"16228:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeMath_$128_$","typeString":"type(library SafeMath)"}},"id":989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":107,"src":"16228:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16228:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"to128","nodeType":"MemberAccess","referencedDeclaration":731,"src":"16228:36:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint128_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint128)"}},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16228:38:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"16213:53:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":998,"nodeType":"ExpressionStatement","src":"16213:53:0"}]}},{"expression":{"argumentTypes":null,"id":1052,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"16611:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}},"functionReturnParameters":969,"id":1053,"nodeType":"Return","src":"16604:13:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"add","parameters":{"id":966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":963,"name":"a","nodeType":"VariableDeclaration","scope":1055,"src":"15992:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par"},"typeName":{"contractScope":null,"id":962,"name":"Par","nodeType":"UserDefinedTypeName","referencedDeclaration":933,"src":"15992:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_storage_ptr","typeString":"struct Types.Par"}},"value":null,"visibility":"internal"},{"constant":false,"id":965,"name":"b","nodeType":"VariableDeclaration","scope":1055,"src":"16015:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par"},"typeName":{"contractScope":null,"id":964,"name":"Par","nodeType":"UserDefinedTypeName","referencedDeclaration":933,"src":"16015:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_storage_ptr","typeString":"struct Types.Par"}},"value":null,"visibility":"internal"}],"src":"15981:53:0"},"returnParameters":{"id":969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":968,"name":"","nodeType":"VariableDeclaration","scope":1055,"src":"16085:10:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par"},"typeName":{"contractScope":null,"id":967,"name":"Par","nodeType":"UserDefinedTypeName","referencedDeclaration":933,"src":"16085:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_storage_ptr","typeString":"struct Types.Par"}},"value":null,"visibility":"internal"}],"src":"16084:12:0"},"scope":1367,"stateMutability":"pure","superFunction":null,"visibility":"internal"},{"id":1088,"nodeType":"FunctionDefinition","src":"16633:323:0","nodes":[],"body":{"id":1087,"nodeType":"Block","src":"16763:193:0","nodes":[],"statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1064,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"16778:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}},"id":1065,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":932,"src":"16778:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1066,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"16789:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}},"id":1067,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":932,"src":"16789:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"16778:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1084,"nodeType":"IfStatement","src":"16774:152:0","trueBody":{"id":1083,"nodeType":"Block","src":"16798:128:0","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1069,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"16817:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}},"id":1070,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":932,"src":"16817:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16828:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16817:12:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1076,"nodeType":"IfStatement","src":"16813:64:0","trueBody":{"id":1075,"nodeType":"Block","src":"16831:46:0","statements":[{"expression":{"argumentTypes":null,"hexValue":"74727565","id":1073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16857:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1063,"id":1074,"nodeType":"Return","src":"16850:11:0"}]}},{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1077,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"16898:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}},"id":1078,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sign","nodeType":"MemberAccess","referencedDeclaration":930,"src":"16898:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1079,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"16908:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}},"id":1080,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sign","nodeType":"MemberAccess","referencedDeclaration":930,"src":"16908:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16898:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1063,"id":1082,"nodeType":"Return","src":"16891:23:0"}]}},{"expression":{"argumentTypes":null,"hexValue":"66616c7365","id":1085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16943:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1063,"id":1086,"nodeType":"Return","src":"16936:12:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"equals","parameters":{"id":1060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1057,"name":"a","nodeType":"VariableDeclaration","scope":1088,"src":"16659:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par"},"typeName":{"contractScope":null,"id":1056,"name":"Par","nodeType":"UserDefinedTypeName","referencedDeclaration":933,"src":"16659:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_storage_ptr","typeString":"struct Types.Par"}},"value":null,"visibility":"internal"},{"constant":false,"id":1059,"name":"b","nodeType":"VariableDeclaration","scope":1088,"src":"16682:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par"},"typeName":{"contractScope":null,"id":1058,"name":"Par","nodeType":"UserDefinedTypeName","referencedDeclaration":933,"src":"16682:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_storage_ptr","typeString":"struct Types.Par"}},"value":null,"visibility":"internal"}],"src":"16648:53:0"},"returnParameters":{"id":1063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1062,"name":"","nodeType":"VariableDeclaration","scope":1088,"src":"16752:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1061,"name":"bool","nodeType":"ElementaryTypeName","src":"16752:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"16751:6:0"},"scope":1367,"stateMutability":"pure","superFunction":null,"visibility":"internal"},{"id":1104,"nodeType":"FunctionDefinition","src":"16964:214:0","nodes":[],"body":{"id":1103,"nodeType":"Block","src":"17079:99:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"17122:7:0","subExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1096,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"17123:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}},"id":1097,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sign","nodeType":"MemberAccess","referencedDeclaration":930,"src":"17123:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1099,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"17151:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}},"id":1100,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":932,"src":"17151:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":1095,"name":"Par","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"17097:3:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Par_$933_storage_ptr_$","typeString":"type(struct Types.Par storage pointer)"}},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["sign","value"],"nodeType":"FunctionCall","src":"17097:73:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory","typeString":"struct Types.Par memory"}},"functionReturnParameters":1094,"id":1102,"nodeType":"Return","src":"17090:80:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"negative","parameters":{"id":1091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1090,"name":"a","nodeType":"VariableDeclaration","scope":1104,"src":"16992:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par"},"typeName":{"contractScope":null,"id":1089,"name":"Par","nodeType":"UserDefinedTypeName","referencedDeclaration":933,"src":"16992:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_storage_ptr","typeString":"struct Types.Par"}},"value":null,"visibility":"internal"}],"src":"16981:30:0"},"returnParameters":{"id":1094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1093,"name":"","nodeType":"VariableDeclaration","scope":1104,"src":"17062:10:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par"},"typeName":{"contractScope":null,"id":1092,"name":"Par","nodeType":"UserDefinedTypeName","referencedDeclaration":933,"src":"17062:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_storage_ptr","typeString":"struct Types.Par"}},"value":null,"visibility":"internal"}],"src":"17061:12:0"},"scope":1367,"stateMutability":"pure","superFunction":null,"visibility":"internal"},{"id":1121,"nodeType":"FunctionDefinition","src":"17186:159:0","nodes":[],"body":{"id":1120,"nodeType":"Block","src":"17297:48:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"17315:7:0","subExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1111,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"17316:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}},"id":1112,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sign","nodeType":"MemberAccess","referencedDeclaration":930,"src":"17316:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1114,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"17326:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}},"id":1115,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":932,"src":"17326:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17336:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17326:11:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17315:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1110,"id":1119,"nodeType":"Return","src":"17308:29:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"isNegative","parameters":{"id":1107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1106,"name":"a","nodeType":"VariableDeclaration","scope":1121,"src":"17216:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par"},"typeName":{"contractScope":null,"id":1105,"name":"Par","nodeType":"UserDefinedTypeName","referencedDeclaration":933,"src":"17216:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_storage_ptr","typeString":"struct Types.Par"}},"value":null,"visibility":"internal"}],"src":"17205:30:0"},"returnParameters":{"id":1110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1109,"name":"","nodeType":"VariableDeclaration","scope":1121,"src":"17286:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1108,"name":"bool","nodeType":"ElementaryTypeName","src":"17286:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"17285:6:0"},"scope":1367,"stateMutability":"pure","superFunction":null,"visibility":"internal"},{"id":1137,"nodeType":"FunctionDefinition","src":"17353:158:0","nodes":[],"body":{"id":1136,"nodeType":"Block","src":"17464:47:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1128,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"17482:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}},"id":1129,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sign","nodeType":"MemberAccess","referencedDeclaration":930,"src":"17482:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1130,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"17492:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}},"id":1131,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":932,"src":"17492:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17502:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17492:11:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17482:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1127,"id":1135,"nodeType":"Return","src":"17475:28:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"isPositive","parameters":{"id":1124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1123,"name":"a","nodeType":"VariableDeclaration","scope":1137,"src":"17383:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par"},"typeName":{"contractScope":null,"id":1122,"name":"Par","nodeType":"UserDefinedTypeName","referencedDeclaration":933,"src":"17383:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_storage_ptr","typeString":"struct Types.Par"}},"value":null,"visibility":"internal"}],"src":"17372:30:0"},"returnParameters":{"id":1127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1126,"name":"","nodeType":"VariableDeclaration","scope":1137,"src":"17453:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1125,"name":"bool","nodeType":"ElementaryTypeName","src":"17453:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"17452:6:0"},"scope":1367,"stateMutability":"pure","superFunction":null,"visibility":"internal"},{"id":1150,"nodeType":"FunctionDefinition","src":"17519:145:0","nodes":[],"body":{"id":1149,"nodeType":"Block","src":"17626:38:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1144,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"17644:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}},"id":1145,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":932,"src":"17644:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17655:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17644:12:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1143,"id":1148,"nodeType":"Return","src":"17637:19:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"isZero","parameters":{"id":1140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1139,"name":"a","nodeType":"VariableDeclaration","scope":1150,"src":"17545:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par"},"typeName":{"contractScope":null,"id":1138,"name":"Par","nodeType":"UserDefinedTypeName","referencedDeclaration":933,"src":"17545:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_storage_ptr","typeString":"struct Types.Par"}},"value":null,"visibility":"internal"}],"src":"17534:30:0"},"returnParameters":{"id":1143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1142,"name":"","nodeType":"VariableDeclaration","scope":1150,"src":"17615:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1141,"name":"bool","nodeType":"ElementaryTypeName","src":"17615:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"17614:6:0"},"scope":1367,"stateMutability":"pure","superFunction":null,"visibility":"internal"},{"id":1155,"nodeType":"StructDefinition","src":"17774:83:0","nodes":[],"canonicalName":"Types.Wei","members":[{"constant":false,"id":1152,"name":"sign","nodeType":"VariableDeclaration","scope":1155,"src":"17796:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1151,"name":"bool","nodeType":"ElementaryTypeName","src":"17796:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":1154,"name":"value","nodeType":"VariableDeclaration","scope":1155,"src":"17836:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1153,"name":"uint256","nodeType":"ElementaryTypeName","src":"17836:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"name":"Wei","scope":1367,"visibility":"public"},{"id":1166,"nodeType":"FunctionDefinition","src":"17865:177:0","nodes":[],"body":{"id":1165,"nodeType":"Block","src":"17951:91:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"66616c7365","id":1161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17994:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"argumentTypes":null,"hexValue":"30","id":1162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18021:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1160,"name":"Wei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"17969:3:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Wei_$1155_storage_ptr_$","typeString":"type(struct Types.Wei storage pointer)"}},"id":1163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"names":["sign","value"],"nodeType":"FunctionCall","src":"17969:65:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory","typeString":"struct Types.Wei memory"}},"functionReturnParameters":1159,"id":1164,"nodeType":"Return","src":"17962:72:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"zeroWei","parameters":{"id":1156,"nodeType":"ParameterList","parameters":[],"src":"17881:2:0"},"returnParameters":{"id":1159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1158,"name":"","nodeType":"VariableDeclaration","scope":1166,"src":"17934:10:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei"},"typeName":{"contractScope":null,"id":1157,"name":"Wei","nodeType":"UserDefinedTypeName","referencedDeclaration":1155,"src":"17934:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_storage_ptr","typeString":"struct Types.Wei"}},"value":null,"visibility":"internal"}],"src":"17933:12:0"},"scope":1367,"stateMutability":"pure","superFunction":null,"visibility":"internal"},{"id":1183,"nodeType":"FunctionDefinition","src":"18050:178:0","nodes":[],"body":{"id":1182,"nodeType":"Block","src":"18183:45:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1176,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"18205:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1178,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"18217:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}],"id":1177,"name":"negative","nodeType":"Identifier","overloadedDeclarations":[1104,1320],"referencedDeclaration":1320,"src":"18208:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Wei_$1155_memory_ptr_$returns$_t_struct$_Wei_$1155_memory_ptr_$","typeString":"function (struct Types.Wei memory) pure returns (struct Types.Wei memory)"}},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18208:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"},{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}],"id":1175,"name":"add","nodeType":"Identifier","overloadedDeclarations":[1055,1271],"referencedDeclaration":1271,"src":"18201:3:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Wei_$1155_memory_ptr_$_t_struct$_Wei_$1155_memory_ptr_$returns$_t_struct$_Wei_$1155_memory_ptr_$","typeString":"function (struct Types.Wei memory,struct Types.Wei memory) pure returns (struct Types.Wei memory)"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18201:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"functionReturnParameters":1174,"id":1181,"nodeType":"Return","src":"18194:26:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"sub","parameters":{"id":1171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1168,"name":"a","nodeType":"VariableDeclaration","scope":1183,"src":"18073:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei"},"typeName":{"contractScope":null,"id":1167,"name":"Wei","nodeType":"UserDefinedTypeName","referencedDeclaration":1155,"src":"18073:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_storage_ptr","typeString":"struct Types.Wei"}},"value":null,"visibility":"internal"},{"constant":false,"id":1170,"name":"b","nodeType":"VariableDeclaration","scope":1183,"src":"18096:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei"},"typeName":{"contractScope":null,"id":1169,"name":"Wei","nodeType":"UserDefinedTypeName","referencedDeclaration":1155,"src":"18096:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_storage_ptr","typeString":"struct Types.Wei"}},"value":null,"visibility":"internal"}],"src":"18062:53:0"},"returnParameters":{"id":1174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1173,"name":"","nodeType":"VariableDeclaration","scope":1183,"src":"18166:10:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei"},"typeName":{"contractScope":null,"id":1172,"name":"Wei","nodeType":"UserDefinedTypeName","referencedDeclaration":1155,"src":"18166:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_storage_ptr","typeString":"struct Types.Wei"}},"value":null,"visibility":"internal"}],"src":"18165:12:0"},"scope":1367,"stateMutability":"pure","superFunction":null,"visibility":"internal"},{"id":1271,"nodeType":"FunctionDefinition","src":"18236:632:0","nodes":[],"body":{"id":1270,"nodeType":"Block","src":"18369:499:0","nodes":[],"statements":[{"assignments":[1193],"declarations":[{"constant":false,"id":1193,"name":"result","nodeType":"VariableDeclaration","scope":1270,"src":"18380:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei"},"typeName":{"contractScope":null,"id":1192,"name":"Wei","nodeType":"UserDefinedTypeName","referencedDeclaration":1155,"src":"18380:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_storage_ptr","typeString":"struct Types.Wei"}},"value":null,"visibility":"internal"}],"id":1194,"initialValue":null,"nodeType":"VariableDeclarationStatement","src":"18380:17:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1195,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"18412:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"id":1196,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sign","nodeType":"MemberAccess","referencedDeclaration":1152,"src":"18412:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1197,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"18422:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"id":1198,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sign","nodeType":"MemberAccess","referencedDeclaration":1152,"src":"18422:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18412:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1266,"nodeType":"Block","src":"18543:294:0","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1220,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"18562:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"id":1221,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1154,"src":"18562:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1222,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"18573:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"id":1223,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1154,"src":"18573:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18562:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1264,"nodeType":"Block","src":"18707:119:0","statements":[{"expression":{"argumentTypes":null,"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1245,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"18726:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"id":1247,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"sign","nodeType":"MemberAccess","referencedDeclaration":1152,"src":"18726:11:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1248,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"18740:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"id":1249,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sign","nodeType":"MemberAccess","referencedDeclaration":1152,"src":"18740:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18726:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1251,"nodeType":"ExpressionStatement","src":"18726:20:0"},{"expression":{"argumentTypes":null,"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1252,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"18765:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"id":1254,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1154,"src":"18765:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1257,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"18793:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"id":1258,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1154,"src":"18793:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1259,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"18802:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"id":1260,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1154,"src":"18802:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1255,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"18780:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeMath_$128_$","typeString":"type(library SafeMath)"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":83,"src":"18780:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18780:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18765:45:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1263,"nodeType":"ExpressionStatement","src":"18765:45:0"}]},"id":1265,"nodeType":"IfStatement","src":"18558:268:0","trueBody":{"id":1244,"nodeType":"Block","src":"18582:119:0","statements":[{"expression":{"argumentTypes":null,"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1225,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"18601:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"id":1227,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"sign","nodeType":"MemberAccess","referencedDeclaration":1152,"src":"18601:11:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1228,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"18615:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"id":1229,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sign","nodeType":"MemberAccess","referencedDeclaration":1152,"src":"18615:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18601:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1231,"nodeType":"ExpressionStatement","src":"18601:20:0"},{"expression":{"argumentTypes":null,"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1232,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"18640:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"id":1234,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1154,"src":"18640:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1237,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"18668:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"id":1238,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1154,"src":"18668:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1239,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"18677:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"id":1240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1154,"src":"18677:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1235,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"18655:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeMath_$128_$","typeString":"type(library SafeMath)"}},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":83,"src":"18655:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18655:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18640:45:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1243,"nodeType":"ExpressionStatement","src":"18640:45:0"}]}}]},"id":1267,"nodeType":"IfStatement","src":"18408:429:0","trueBody":{"id":1219,"nodeType":"Block","src":"18430:107:0","statements":[{"expression":{"argumentTypes":null,"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1200,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"18445:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"id":1202,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"sign","nodeType":"MemberAccess","referencedDeclaration":1152,"src":"18445:11:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1203,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"18459:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"id":1204,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sign","nodeType":"MemberAccess","referencedDeclaration":1152,"src":"18459:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18445:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1206,"nodeType":"ExpressionStatement","src":"18445:20:0"},{"expression":{"argumentTypes":null,"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1207,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"18480:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"id":1209,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1154,"src":"18480:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1212,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"18508:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"id":1213,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1154,"src":"18508:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1214,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"18517:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"id":1215,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1154,"src":"18517:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1210,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"18495:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeMath_$128_$","typeString":"type(library SafeMath)"}},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":107,"src":"18495:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18495:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18480:45:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1218,"nodeType":"ExpressionStatement","src":"18480:45:0"}]}},{"expression":{"argumentTypes":null,"id":1268,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"18854:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"functionReturnParameters":1191,"id":1269,"nodeType":"Return","src":"18847:13:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"add","parameters":{"id":1188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1185,"name":"a","nodeType":"VariableDeclaration","scope":1271,"src":"18259:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei"},"typeName":{"contractScope":null,"id":1184,"name":"Wei","nodeType":"UserDefinedTypeName","referencedDeclaration":1155,"src":"18259:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_storage_ptr","typeString":"struct Types.Wei"}},"value":null,"visibility":"internal"},{"constant":false,"id":1187,"name":"b","nodeType":"VariableDeclaration","scope":1271,"src":"18282:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei"},"typeName":{"contractScope":null,"id":1186,"name":"Wei","nodeType":"UserDefinedTypeName","referencedDeclaration":1155,"src":"18282:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_storage_ptr","typeString":"struct Types.Wei"}},"value":null,"visibility":"internal"}],"src":"18248:53:0"},"returnParameters":{"id":1191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1190,"name":"","nodeType":"VariableDeclaration","scope":1271,"src":"18352:10:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei"},"typeName":{"contractScope":null,"id":1189,"name":"Wei","nodeType":"UserDefinedTypeName","referencedDeclaration":1155,"src":"18352:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_storage_ptr","typeString":"struct Types.Wei"}},"value":null,"visibility":"internal"}],"src":"18351:12:0"},"scope":1367,"stateMutability":"pure","superFunction":null,"visibility":"internal"},{"id":1304,"nodeType":"FunctionDefinition","src":"18876:323:0","nodes":[],"body":{"id":1303,"nodeType":"Block","src":"19006:193:0","nodes":[],"statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1280,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"19021:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"id":1281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1154,"src":"19021:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1282,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"19032:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"id":1283,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1154,"src":"19032:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19021:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1300,"nodeType":"IfStatement","src":"19017:152:0","trueBody":{"id":1299,"nodeType":"Block","src":"19041:128:0","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1285,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"19060:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"id":1286,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1154,"src":"19060:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19071:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19060:12:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1292,"nodeType":"IfStatement","src":"19056:64:0","trueBody":{"id":1291,"nodeType":"Block","src":"19074:46:0","statements":[{"expression":{"argumentTypes":null,"hexValue":"74727565","id":1289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19100:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1279,"id":1290,"nodeType":"Return","src":"19093:11:0"}]}},{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1293,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"19141:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"id":1294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sign","nodeType":"MemberAccess","referencedDeclaration":1152,"src":"19141:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1295,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"19151:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"id":1296,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sign","nodeType":"MemberAccess","referencedDeclaration":1152,"src":"19151:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19141:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1279,"id":1298,"nodeType":"Return","src":"19134:23:0"}]}},{"expression":{"argumentTypes":null,"hexValue":"66616c7365","id":1301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19186:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1279,"id":1302,"nodeType":"Return","src":"19179:12:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"equals","parameters":{"id":1276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1273,"name":"a","nodeType":"VariableDeclaration","scope":1304,"src":"18902:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei"},"typeName":{"contractScope":null,"id":1272,"name":"Wei","nodeType":"UserDefinedTypeName","referencedDeclaration":1155,"src":"18902:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_storage_ptr","typeString":"struct Types.Wei"}},"value":null,"visibility":"internal"},{"constant":false,"id":1275,"name":"b","nodeType":"VariableDeclaration","scope":1304,"src":"18925:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei"},"typeName":{"contractScope":null,"id":1274,"name":"Wei","nodeType":"UserDefinedTypeName","referencedDeclaration":1155,"src":"18925:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_storage_ptr","typeString":"struct Types.Wei"}},"value":null,"visibility":"internal"}],"src":"18891:53:0"},"returnParameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"name":"","nodeType":"VariableDeclaration","scope":1304,"src":"18995:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1277,"name":"bool","nodeType":"ElementaryTypeName","src":"18995:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"18994:6:0"},"scope":1367,"stateMutability":"pure","superFunction":null,"visibility":"internal"},{"id":1320,"nodeType":"FunctionDefinition","src":"19207:214:0","nodes":[],"body":{"id":1319,"nodeType":"Block","src":"19322:99:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"19365:7:0","subExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1312,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"19366:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"id":1313,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sign","nodeType":"MemberAccess","referencedDeclaration":1152,"src":"19366:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1315,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"19394:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"id":1316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1154,"src":"19394:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1311,"name":"Wei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"19340:3:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Wei_$1155_storage_ptr_$","typeString":"type(struct Types.Wei storage pointer)"}},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["sign","value"],"nodeType":"FunctionCall","src":"19340:73:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory","typeString":"struct Types.Wei memory"}},"functionReturnParameters":1310,"id":1318,"nodeType":"Return","src":"19333:80:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"negative","parameters":{"id":1307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1306,"name":"a","nodeType":"VariableDeclaration","scope":1320,"src":"19235:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei"},"typeName":{"contractScope":null,"id":1305,"name":"Wei","nodeType":"UserDefinedTypeName","referencedDeclaration":1155,"src":"19235:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_storage_ptr","typeString":"struct Types.Wei"}},"value":null,"visibility":"internal"}],"src":"19224:30:0"},"returnParameters":{"id":1310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1309,"name":"","nodeType":"VariableDeclaration","scope":1320,"src":"19305:10:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei"},"typeName":{"contractScope":null,"id":1308,"name":"Wei","nodeType":"UserDefinedTypeName","referencedDeclaration":1155,"src":"19305:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_storage_ptr","typeString":"struct Types.Wei"}},"value":null,"visibility":"internal"}],"src":"19304:12:0"},"scope":1367,"stateMutability":"pure","superFunction":null,"visibility":"internal"},{"id":1337,"nodeType":"FunctionDefinition","src":"19429:159:0","nodes":[],"body":{"id":1336,"nodeType":"Block","src":"19540:48:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"19558:7:0","subExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1327,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"19559:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"id":1328,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sign","nodeType":"MemberAccess","referencedDeclaration":1152,"src":"19559:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1330,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"19569:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"id":1331,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1154,"src":"19569:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19579:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19569:11:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19558:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1326,"id":1335,"nodeType":"Return","src":"19551:29:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"isNegative","parameters":{"id":1323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1322,"name":"a","nodeType":"VariableDeclaration","scope":1337,"src":"19459:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei"},"typeName":{"contractScope":null,"id":1321,"name":"Wei","nodeType":"UserDefinedTypeName","referencedDeclaration":1155,"src":"19459:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_storage_ptr","typeString":"struct Types.Wei"}},"value":null,"visibility":"internal"}],"src":"19448:30:0"},"returnParameters":{"id":1326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1325,"name":"","nodeType":"VariableDeclaration","scope":1337,"src":"19529:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1324,"name":"bool","nodeType":"ElementaryTypeName","src":"19529:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"19528:6:0"},"scope":1367,"stateMutability":"pure","superFunction":null,"visibility":"internal"},{"id":1353,"nodeType":"FunctionDefinition","src":"19596:158:0","nodes":[],"body":{"id":1352,"nodeType":"Block","src":"19707:47:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1344,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"19725:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"id":1345,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sign","nodeType":"MemberAccess","referencedDeclaration":1152,"src":"19725:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1346,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"19735:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"id":1347,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1154,"src":"19735:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19745:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19735:11:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19725:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1343,"id":1351,"nodeType":"Return","src":"19718:28:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"isPositive","parameters":{"id":1340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1339,"name":"a","nodeType":"VariableDeclaration","scope":1353,"src":"19626:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei"},"typeName":{"contractScope":null,"id":1338,"name":"Wei","nodeType":"UserDefinedTypeName","referencedDeclaration":1155,"src":"19626:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_storage_ptr","typeString":"struct Types.Wei"}},"value":null,"visibility":"internal"}],"src":"19615:30:0"},"returnParameters":{"id":1343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1342,"name":"","nodeType":"VariableDeclaration","scope":1353,"src":"19696:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1341,"name":"bool","nodeType":"ElementaryTypeName","src":"19696:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"19695:6:0"},"scope":1367,"stateMutability":"pure","superFunction":null,"visibility":"internal"},{"id":1366,"nodeType":"FunctionDefinition","src":"19762:145:0","nodes":[],"body":{"id":1365,"nodeType":"Block","src":"19869:38:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1360,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"19887:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"id":1361,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1154,"src":"19887:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19887:12:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1359,"id":1364,"nodeType":"Return","src":"19880:19:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"isZero","parameters":{"id":1356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1355,"name":"a","nodeType":"VariableDeclaration","scope":1366,"src":"19788:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei"},"typeName":{"contractScope":null,"id":1354,"name":"Wei","nodeType":"UserDefinedTypeName","referencedDeclaration":1155,"src":"19788:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_storage_ptr","typeString":"struct Types.Wei"}},"value":null,"visibility":"internal"}],"src":"19777:30:0"},"returnParameters":{"id":1359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1358,"name":"","nodeType":"VariableDeclaration","scope":1366,"src":"19858:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1357,"name":"bool","nodeType":"ElementaryTypeName","src":"19858:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"19857:6:0"},"scope":1367,"stateMutability":"pure","superFunction":null,"visibility":"internal"}],"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":"@title Types\r\n@author dYdX\r\n\n * Library for interacting with the basic structs used in Solo\r","fullyImplemented":true,"linearizedBaseContracts":[1367],"name":"Types","scope":1941},{"id":1670,"nodeType":"ContractDefinition","src":"20085:4903:0","nodes":[{"id":1370,"nodeType":"UsingForDirective","src":"20109:23:0","nodes":[],"libraryName":{"contractScope":null,"id":1368,"name":"Math","nodeType":"UserDefinedTypeName","referencedDeclaration":818,"src":"20115:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Math_$818","typeString":"library Math"}},"typeName":{"id":1369,"name":"uint256","nodeType":"ElementaryTypeName","src":"20124:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":1373,"nodeType":"UsingForDirective","src":"20138:27:0","nodes":[],"libraryName":{"contractScope":null,"id":1371,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":128,"src":"20144:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$128","typeString":"library SafeMath"}},"typeName":{"id":1372,"name":"uint256","nodeType":"ElementaryTypeName","src":"20157:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":1376,"nodeType":"VariableDeclaration","src":"20219:34:0","nodes":[],"constant":true,"name":"FILE","scope":1670,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1374,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20219:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"argumentTypes":null,"hexValue":"496e746572657374","id":1375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20243:10:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_a9e726a46bb6b75baa5e96d97ac792fcb6c8bafb4da60c63703a1462f1ea04e0","typeString":"literal_string \"Interest\""},"value":"Interest"},"visibility":"internal"},{"id":1381,"nodeType":"VariableDeclaration","src":"20260:29:0","nodes":[],"constant":true,"name":"BASE","scope":1670,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1377,"name":"uint64","nodeType":"ElementaryTypeName","src":"20260:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":1380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"3130","id":1378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20283:2:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"argumentTypes":null,"hexValue":"3138","id":1379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20287:2:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"20283:6:0","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"visibility":"internal"},{"id":1384,"nodeType":"StructDefinition","src":"20342:44:0","nodes":[],"canonicalName":"Interest.Rate","members":[{"constant":false,"id":1383,"name":"value","nodeType":"VariableDeclaration","scope":1384,"src":"20365:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1382,"name":"uint256","nodeType":"ElementaryTypeName","src":"20365:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"name":"Rate","scope":1670,"visibility":"public"},{"id":1391,"nodeType":"StructDefinition","src":"20394:97:0","nodes":[],"canonicalName":"Interest.Index","members":[{"constant":false,"id":1386,"name":"borrow","nodeType":"VariableDeclaration","scope":1391,"src":"20418:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1385,"name":"uint96","nodeType":"ElementaryTypeName","src":"20418:6:0","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"value":null,"visibility":"internal"},{"constant":false,"id":1388,"name":"supply","nodeType":"VariableDeclaration","scope":1391,"src":"20442:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1387,"name":"uint96","nodeType":"ElementaryTypeName","src":"20442:6:0","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"value":null,"visibility":"internal"},{"constant":false,"id":1390,"name":"lastUpdate","nodeType":"VariableDeclaration","scope":1391,"src":"20466:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1389,"name":"uint32","nodeType":"ElementaryTypeName","src":"20466:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":null,"visibility":"internal"}],"name":"Index","scope":1670,"visibility":"public"},{"id":1512,"nodeType":"FunctionDefinition","src":"21343:1335:0","nodes":[],"body":{"id":1511,"nodeType":"Block","src":"21586:1092:0","nodes":[],"statements":[{"assignments":[1407,1409],"declarations":[{"constant":false,"id":1407,"name":"supplyWei","nodeType":"VariableDeclaration","scope":1511,"src":"21612:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei"},"typeName":{"contractScope":null,"id":1406,"name":"Types.Wei","nodeType":"UserDefinedTypeName","referencedDeclaration":1155,"src":"21612:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_storage_ptr","typeString":"struct Types.Wei"}},"value":null,"visibility":"internal"},{"constant":false,"id":1409,"name":"borrowWei","nodeType":"VariableDeclaration","scope":1511,"src":"21653:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei"},"typeName":{"contractScope":null,"id":1408,"name":"Types.Wei","nodeType":"UserDefinedTypeName","referencedDeclaration":1155,"src":"21653:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_storage_ptr","typeString":"struct Types.Wei"}},"value":null,"visibility":"internal"}],"id":1414,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1411,"name":"totalPar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"21707:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_TotalPar_$928_memory_ptr","typeString":"struct Types.TotalPar memory"}},{"argumentTypes":null,"id":1412,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"21717:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Index_$1391_memory_ptr","typeString":"struct Interest.Index memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TotalPar_$928_memory_ptr","typeString":"struct Types.TotalPar memory"},{"typeIdentifier":"t_struct$_Index_$1391_memory_ptr","typeString":"struct Interest.Index memory"}],"id":1410,"name":"totalParToWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"21693:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_TotalPar_$928_memory_ptr_$_t_struct$_Index_$1391_memory_ptr_$returns$_t_struct$_Wei_$1155_memory_ptr_$_t_struct$_Wei_$1155_memory_ptr_$","typeString":"function (struct Types.TotalPar memory,struct Interest.Index memory) pure returns (struct Types.Wei memory,struct Types.Wei memory)"}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21693:30:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$_Wei_$1155_memory_ptr_$_t_struct$_Wei_$1155_memory_ptr_$","typeString":"tuple(struct Types.Wei memory,struct Types.Wei memory)"}},"nodeType":"VariableDeclarationStatement","src":"21597:126:0"},{"assignments":[1416],"declarations":[{"constant":false,"id":1416,"name":"currentTime","nodeType":"VariableDeclaration","scope":1511,"src":"21784:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1415,"name":"uint32","nodeType":"ElementaryTypeName","src":"21784:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":null,"visibility":"internal"}],"id":1420,"initialValue":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"id":1417,"name":"Time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"21805:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Time_$905_$","typeString":"type(library Time)"}},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"currentTime","nodeType":"MemberAccess","referencedDeclaration":904,"src":"21805:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint32_$","typeString":"function () view returns (uint32)"}},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21805:18:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"21784:39:0"},{"assignments":[1422],"declarations":[{"constant":false,"id":1422,"name":"borrowInterest","nodeType":"VariableDeclaration","scope":1511,"src":"21834:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1421,"name":"uint256","nodeType":"ElementaryTypeName","src":"21834:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1434,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1430,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"21899:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Index_$1391_memory_ptr","typeString":"struct Interest.Index memory"}},"id":1431,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lastUpdate","nodeType":"MemberAccess","referencedDeclaration":1390,"src":"21899:16:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1427,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"21882:11:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":1426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21874:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":"uint256"},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21874:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":83,"src":"21874:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21874:42:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1423,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"21859:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Rate_$1384_memory_ptr","typeString":"struct Interest.Rate memory"}},"id":1424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1383,"src":"21859:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":35,"src":"21859:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21859:58:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21834:83:0"},{"assignments":[1436],"declarations":[{"constant":false,"id":1436,"name":"supplyInterest","nodeType":"VariableDeclaration","scope":1511,"src":"21978:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1435,"name":"uint256","nodeType":"ElementaryTypeName","src":"21978:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1437,"initialValue":null,"nodeType":"VariableDeclarationStatement","src":"21978:22:0"},{"condition":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1440,"name":"supplyWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"22028:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}],"expression":{"argumentTypes":null,"id":1438,"name":"Types","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"22015:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Types_$1367_$","typeString":"type(library Types)"}},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isZero","nodeType":"MemberAccess","referencedDeclaration":1366,"src":"22015:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Wei_$1155_memory_ptr_$returns$_t_bool_$","typeString":"function (struct Types.Wei memory) pure returns (bool)"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22015:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1473,"nodeType":"Block","src":"22091:255:0","statements":[{"expression":{"argumentTypes":null,"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1447,"name":"supplyInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"22106:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1450,"name":"borrowInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"22135:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1451,"name":"earningsRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"22151:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_D256_$829_memory_ptr","typeString":"struct Decimal.D256 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_D256_$829_memory_ptr","typeString":"struct Decimal.D256 memory"}],"expression":{"argumentTypes":null,"id":1448,"name":"Decimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"22123:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Decimal_$892_$","typeString":"type(library Decimal)"}},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":873,"src":"22123:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_struct$_D256_$829_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,struct Decimal.D256 memory) pure returns (uint256)"}},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22123:41:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22106:58:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1454,"nodeType":"ExpressionStatement","src":"22106:58:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1455,"name":"borrowWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"22183:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"id":1456,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1154,"src":"22183:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1457,"name":"supplyWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"22201:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"id":1458,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1154,"src":"22201:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22183:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1472,"nodeType":"IfStatement","src":"22179:156:0","trueBody":{"id":1471,"nodeType":"Block","src":"22218:117:0","statements":[{"expression":{"argumentTypes":null,"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1460,"name":"supplyInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"22237:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1463,"name":"supplyInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"22270:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1464,"name":"borrowWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"22286:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"id":1465,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1154,"src":"22286:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1466,"name":"supplyWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"22303:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"id":1467,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1154,"src":"22303:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1461,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"22254:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$818_$","typeString":"type(library Math)"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPartial","nodeType":"MemberAccess","referencedDeclaration":664,"src":"22254:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22254:65:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22237:82:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1470,"nodeType":"ExpressionStatement","src":"22237:82:0"}]}}]},"id":1474,"nodeType":"IfStatement","src":"22011:335:0","trueBody":{"id":1446,"nodeType":"Block","src":"22040:45:0","statements":[{"expression":{"argumentTypes":null,"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1442,"name":"supplyInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"22055:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"30","id":1443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22072:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22055:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1445,"nodeType":"ExpressionStatement","src":"22055:18:0"}]}},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1476,"name":"supplyInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"22363:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"id":1477,"name":"borrowInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"22381:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22363:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1475,"name":"assert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"22356:6:0","typeDescriptions":{"typeIdentifier":"t_function_assert_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22356:40:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1480,"nodeType":"ExpressionStatement","src":"22356:40:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1490,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"22501:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Index_$1391_memory_ptr","typeString":"struct Interest.Index memory"}},"id":1491,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"borrow","nodeType":"MemberAccess","referencedDeclaration":1386,"src":"22501:12:0","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1484,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"22461:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Index_$1391_memory_ptr","typeString":"struct Interest.Index memory"}},"id":1485,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"borrow","nodeType":"MemberAccess","referencedDeclaration":1386,"src":"22461:12:0","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"argumentTypes":null,"id":1486,"name":"borrowInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"22475:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1487,"name":"BASE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"22491:4:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"argumentTypes":null,"id":1482,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"22445:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$818_$","typeString":"type(library Math)"}},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPartial","nodeType":"MemberAccess","referencedDeclaration":664,"src":"22445:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22445:51:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":107,"src":"22445:55:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22445:69:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"to96","nodeType":"MemberAccess","referencedDeclaration":757,"src":"22445:74:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint96_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint96)"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22445:76:0","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1503,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"22600:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Index_$1391_memory_ptr","typeString":"struct Interest.Index memory"}},"id":1504,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"supply","nodeType":"MemberAccess","referencedDeclaration":1388,"src":"22600:12:0","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1497,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"22560:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Index_$1391_memory_ptr","typeString":"struct Interest.Index memory"}},"id":1498,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"supply","nodeType":"MemberAccess","referencedDeclaration":1388,"src":"22560:12:0","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"argumentTypes":null,"id":1499,"name":"supplyInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"22574:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1500,"name":"BASE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"22590:4:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"argumentTypes":null,"id":1495,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"22544:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$818_$","typeString":"type(library Math)"}},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPartial","nodeType":"MemberAccess","referencedDeclaration":664,"src":"22544:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22544:51:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":107,"src":"22544:55:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22544:69:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"to96","nodeType":"MemberAccess","referencedDeclaration":757,"src":"22544:74:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint96_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint96)"}},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22544:76:0","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"argumentTypes":null,"id":1508,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"22647:11:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":1481,"name":"Index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"22416:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Index_$1391_storage_ptr_$","typeString":"type(struct Interest.Index storage pointer)"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["borrow","supply","lastUpdate"],"nodeType":"FunctionCall","src":"22416:254:0","typeDescriptions":{"typeIdentifier":"t_struct$_Index_$1391_memory","typeString":"struct Interest.Index memory"}},"functionReturnParameters":1403,"id":1510,"nodeType":"Return","src":"22409:261:0"}]},"documentation":"Get a new market Index based on the old index and market interest rate.\r\nCalculate interest for borrowers by using the formula rate * time. Approximates\r\ncontinuously-compounded interest when called frequently, but is much more\r\ngas-efficient to calculate. For suppliers, the interest rate is adjusted by the earningsRate,\r\nthen prorated the across all suppliers.\r\n\n     * @param  index         The old index for a market\r\n@param  rate          The current interest rate of the market\r\n@param  totalPar      The total supply and borrow par values of the market\r\n@param  earningsRate  The portion of the interest that is forwarded to the suppliers\r\n@return               The updated index for a market\r","implemented":true,"kind":"function","modifiers":[],"name":"calculateNewIndex","parameters":{"id":1400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1393,"name":"index","nodeType":"VariableDeclaration","scope":1512,"src":"21380:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Index_$1391_memory_ptr","typeString":"struct Interest.Index"},"typeName":{"contractScope":null,"id":1392,"name":"Index","nodeType":"UserDefinedTypeName","referencedDeclaration":1391,"src":"21380:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Index_$1391_storage_ptr","typeString":"struct Interest.Index"}},"value":null,"visibility":"internal"},{"constant":false,"id":1395,"name":"rate","nodeType":"VariableDeclaration","scope":1512,"src":"21409:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Rate_$1384_memory_ptr","typeString":"struct Interest.Rate"},"typeName":{"contractScope":null,"id":1394,"name":"Rate","nodeType":"UserDefinedTypeName","referencedDeclaration":1384,"src":"21409:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Rate_$1384_storage_ptr","typeString":"struct Interest.Rate"}},"value":null,"visibility":"internal"},{"constant":false,"id":1397,"name":"totalPar","nodeType":"VariableDeclaration","scope":1512,"src":"21436:30:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TotalPar_$928_memory_ptr","typeString":"struct Types.TotalPar"},"typeName":{"contractScope":null,"id":1396,"name":"Types.TotalPar","nodeType":"UserDefinedTypeName","referencedDeclaration":928,"src":"21436:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_TotalPar_$928_storage_ptr","typeString":"struct Types.TotalPar"}},"value":null,"visibility":"internal"},{"constant":false,"id":1399,"name":"earningsRate","nodeType":"VariableDeclaration","scope":1512,"src":"21477:32:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_D256_$829_memory_ptr","typeString":"struct Decimal.D256"},"typeName":{"contractScope":null,"id":1398,"name":"Decimal.D256","nodeType":"UserDefinedTypeName","referencedDeclaration":829,"src":"21477:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_D256_$829_storage_ptr","typeString":"struct Decimal.D256"}},"value":null,"visibility":"internal"}],"src":"21369:147:0"},"returnParameters":{"id":1403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1402,"name":"","nodeType":"VariableDeclaration","scope":1512,"src":"21567:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Index_$1391_memory_ptr","typeString":"struct Interest.Index"},"typeName":{"contractScope":null,"id":1401,"name":"Index","nodeType":"UserDefinedTypeName","referencedDeclaration":1391,"src":"21567:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Index_$1391_storage_ptr","typeString":"struct Interest.Index"}},"value":null,"visibility":"internal"}],"src":"21566:14:0"},"scope":1670,"stateMutability":"view","superFunction":null,"visibility":"internal"},{"id":1526,"nodeType":"FunctionDefinition","src":"22686:232:0","nodes":[],"body":{"id":1525,"nodeType":"Block","src":"22775:143:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1518,"name":"BASE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"22822:4:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":1519,"name":"BASE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"22849:4:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"id":1520,"name":"Time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"22880:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Time_$905_$","typeString":"type(library Time)"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"currentTime","nodeType":"MemberAccess","referencedDeclaration":904,"src":"22880:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint32_$","typeString":"function () view returns (uint32)"}},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22880:18:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":1517,"name":"Index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"22793:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Index_$1391_storage_ptr_$","typeString":"type(struct Interest.Index storage pointer)"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["borrow","supply","lastUpdate"],"nodeType":"FunctionCall","src":"22793:117:0","typeDescriptions":{"typeIdentifier":"t_struct$_Index_$1391_memory","typeString":"struct Interest.Index memory"}},"functionReturnParameters":1516,"id":1524,"nodeType":"Return","src":"22786:124:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"newIndex","parameters":{"id":1513,"nodeType":"ParameterList","parameters":[],"src":"22703:2:0"},"returnParameters":{"id":1516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1515,"name":"","nodeType":"VariableDeclaration","scope":1526,"src":"22756:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Index_$1391_memory_ptr","typeString":"struct Interest.Index"},"typeName":{"contractScope":null,"id":1514,"name":"Index","nodeType":"UserDefinedTypeName","referencedDeclaration":1391,"src":"22756:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Index_$1391_storage_ptr","typeString":"struct Interest.Index"}},"value":null,"visibility":"internal"}],"src":"22755:14:0"},"scope":1670,"stateMutability":"view","superFunction":null,"visibility":"internal"},{"id":1570,"nodeType":"FunctionDefinition","src":"23012:572:0","nodes":[],"body":{"id":1569,"nodeType":"Block","src":"23172:412:0","nodes":[],"statements":[{"assignments":[1536],"declarations":[{"constant":false,"id":1536,"name":"inputValue","nodeType":"VariableDeclaration","scope":1569,"src":"23183:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1535,"name":"uint256","nodeType":"ElementaryTypeName","src":"23183:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1541,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1538,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"23212:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}},"id":1539,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":932,"src":"23212:11:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":1537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23204:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":"uint256"},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23204:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23183:41:0"},{"condition":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1542,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"23239:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}},"id":1543,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sign","nodeType":"MemberAccess","referencedDeclaration":930,"src":"23239:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1567,"nodeType":"Block","src":"23413:164:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"66616c7365","id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"23470:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1561,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"23530:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Index_$1391_memory_ptr","typeString":"struct Interest.Index memory"}},"id":1562,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"borrow","nodeType":"MemberAccess","referencedDeclaration":1386,"src":"23530:12:0","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"argumentTypes":null,"id":1563,"name":"BASE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"23544:4:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"argumentTypes":null,"id":1559,"name":"inputValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"23501:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPartialRoundUp","nodeType":"MemberAccess","referencedDeclaration":705,"src":"23501:28:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23501:48:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1556,"name":"Types","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"23435:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Types_$1367_$","typeString":"type(library Types)"}},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Wei","nodeType":"MemberAccess","referencedDeclaration":1155,"src":"23435:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Wei_$1155_storage_ptr_$","typeString":"type(struct Types.Wei storage pointer)"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["sign","value"],"nodeType":"FunctionCall","src":"23435:130:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory","typeString":"struct Types.Wei memory"}},"functionReturnParameters":1534,"id":1566,"nodeType":"Return","src":"23428:137:0"}]},"id":1568,"nodeType":"IfStatement","src":"23235:342:0","trueBody":{"id":1555,"nodeType":"Block","src":"23251:156:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"74727565","id":1546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"23308:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1549,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"23360:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Index_$1391_memory_ptr","typeString":"struct Interest.Index memory"}},"id":1550,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"supply","nodeType":"MemberAccess","referencedDeclaration":1388,"src":"23360:12:0","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"argumentTypes":null,"id":1551,"name":"BASE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"23374:4:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"argumentTypes":null,"id":1547,"name":"inputValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"23338:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPartial","nodeType":"MemberAccess","referencedDeclaration":664,"src":"23338:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23338:41:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1544,"name":"Types","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"23273:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Types_$1367_$","typeString":"type(library Types)"}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Wei","nodeType":"MemberAccess","referencedDeclaration":1155,"src":"23273:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Wei_$1155_storage_ptr_$","typeString":"type(struct Types.Wei storage pointer)"}},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["sign","value"],"nodeType":"FunctionCall","src":"23273:122:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory","typeString":"struct Types.Wei memory"}},"functionReturnParameters":1534,"id":1554,"nodeType":"Return","src":"23266:129:0"}]}}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"parToWei","parameters":{"id":1531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1528,"name":"input","nodeType":"VariableDeclaration","scope":1570,"src":"23040:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par"},"typeName":{"contractScope":null,"id":1527,"name":"Types.Par","nodeType":"UserDefinedTypeName","referencedDeclaration":933,"src":"23040:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_storage_ptr","typeString":"struct Types.Par"}},"value":null,"visibility":"internal"},{"constant":false,"id":1530,"name":"index","nodeType":"VariableDeclaration","scope":1570,"src":"23073:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Index_$1391_memory_ptr","typeString":"struct Interest.Index"},"typeName":{"contractScope":null,"id":1529,"name":"Index","nodeType":"UserDefinedTypeName","referencedDeclaration":1391,"src":"23073:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Index_$1391_storage_ptr","typeString":"struct Interest.Index"}},"value":null,"visibility":"internal"}],"src":"23029:69:0"},"returnParameters":{"id":1534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1533,"name":"","nodeType":"VariableDeclaration","scope":1570,"src":"23149:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei"},"typeName":{"contractScope":null,"id":1532,"name":"Types.Wei","nodeType":"UserDefinedTypeName","referencedDeclaration":1155,"src":"23149:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_storage_ptr","typeString":"struct Types.Wei"}},"value":null,"visibility":"internal"}],"src":"23148:18:0"},"scope":1670,"stateMutability":"pure","superFunction":null,"visibility":"internal"},{"id":1613,"nodeType":"FunctionDefinition","src":"23678:538:0","nodes":[],"body":{"id":1612,"nodeType":"Block","src":"23838:378:0","nodes":[],"statements":[{"condition":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1579,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"23853:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"id":1580,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sign","nodeType":"MemberAccess","referencedDeclaration":1152,"src":"23853:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1610,"nodeType":"Block","src":"24036:173:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"66616c7365","id":1598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"24093:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1602,"name":"BASE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"24154:4:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1603,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"24160:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Index_$1391_memory_ptr","typeString":"struct Interest.Index memory"}},"id":1604,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"borrow","nodeType":"MemberAccess","referencedDeclaration":1386,"src":"24160:12:0","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1599,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"24124:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"id":1600,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1154,"src":"24124:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPartialRoundUp","nodeType":"MemberAccess","referencedDeclaration":705,"src":"24124:29:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24124:49:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"to128","nodeType":"MemberAccess","referencedDeclaration":731,"src":"24124:55:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint128_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint128)"}},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24124:57:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"argumentTypes":null,"id":1596,"name":"Types","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"24058:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Types_$1367_$","typeString":"type(library Types)"}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Par","nodeType":"MemberAccess","referencedDeclaration":933,"src":"24058:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Par_$933_storage_ptr_$","typeString":"type(struct Types.Par storage pointer)"}},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["sign","value"],"nodeType":"FunctionCall","src":"24058:139:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory","typeString":"struct Types.Par memory"}},"functionReturnParameters":1578,"id":1609,"nodeType":"Return","src":"24051:146:0"}]},"id":1611,"nodeType":"IfStatement","src":"23849:360:0","trueBody":{"id":1595,"nodeType":"Block","src":"23865:165:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"74727565","id":1583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"23922:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1587,"name":"BASE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"23975:4:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1588,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"23981:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Index_$1391_memory_ptr","typeString":"struct Interest.Index memory"}},"id":1589,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"supply","nodeType":"MemberAccess","referencedDeclaration":1388,"src":"23981:12:0","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1584,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"23952:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"id":1585,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1154,"src":"23952:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPartial","nodeType":"MemberAccess","referencedDeclaration":664,"src":"23952:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23952:42:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"to128","nodeType":"MemberAccess","referencedDeclaration":731,"src":"23952:48:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint128_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint128)"}},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23952:50:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"argumentTypes":null,"id":1581,"name":"Types","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"23887:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Types_$1367_$","typeString":"type(library Types)"}},"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Par","nodeType":"MemberAccess","referencedDeclaration":933,"src":"23887:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Par_$933_storage_ptr_$","typeString":"type(struct Types.Par storage pointer)"}},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["sign","value"],"nodeType":"FunctionCall","src":"23887:131:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory","typeString":"struct Types.Par memory"}},"functionReturnParameters":1578,"id":1594,"nodeType":"Return","src":"23880:138:0"}]}}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"weiToPar","parameters":{"id":1575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1572,"name":"input","nodeType":"VariableDeclaration","scope":1613,"src":"23706:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei"},"typeName":{"contractScope":null,"id":1571,"name":"Types.Wei","nodeType":"UserDefinedTypeName","referencedDeclaration":1155,"src":"23706:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_storage_ptr","typeString":"struct Types.Wei"}},"value":null,"visibility":"internal"},{"constant":false,"id":1574,"name":"index","nodeType":"VariableDeclaration","scope":1613,"src":"23739:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Index_$1391_memory_ptr","typeString":"struct Interest.Index"},"typeName":{"contractScope":null,"id":1573,"name":"Index","nodeType":"UserDefinedTypeName","referencedDeclaration":1391,"src":"23739:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Index_$1391_storage_ptr","typeString":"struct Interest.Index"}},"value":null,"visibility":"internal"}],"src":"23695:69:0"},"returnParameters":{"id":1578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1577,"name":"","nodeType":"VariableDeclaration","scope":1613,"src":"23815:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par"},"typeName":{"contractScope":null,"id":1576,"name":"Types.Par","nodeType":"UserDefinedTypeName","referencedDeclaration":933,"src":"23815:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_storage_ptr","typeString":"struct Types.Par"}},"value":null,"visibility":"internal"}],"src":"23814:18:0"},"scope":1670,"stateMutability":"pure","superFunction":null,"visibility":"internal"},{"id":1669,"nodeType":"FunctionDefinition","src":"24365:620:0","nodes":[],"body":{"id":1668,"nodeType":"Block","src":"24556:429:0","nodes":[],"statements":[{"assignments":[1627],"declarations":[{"constant":false,"id":1627,"name":"supplyPar","nodeType":"VariableDeclaration","scope":1668,"src":"24567:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par"},"typeName":{"contractScope":null,"id":1626,"name":"Types.Par","nodeType":"UserDefinedTypeName","referencedDeclaration":933,"src":"24567:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_storage_ptr","typeString":"struct Types.Par"}},"value":null,"visibility":"internal"}],"id":1634,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"74727565","id":1630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"24627:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1631,"name":"totalPar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"24653:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_TotalPar_$928_memory_ptr","typeString":"struct Types.TotalPar memory"}},"id":1632,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"supply","nodeType":"MemberAccess","referencedDeclaration":927,"src":"24653:15:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"argumentTypes":null,"id":1628,"name":"Types","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"24596:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Types_$1367_$","typeString":"type(library Types)"}},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Par","nodeType":"MemberAccess","referencedDeclaration":933,"src":"24596:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Par_$933_storage_ptr_$","typeString":"type(struct Types.Par storage pointer)"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["sign","value"],"nodeType":"FunctionCall","src":"24596:84:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory","typeString":"struct Types.Par memory"}},"nodeType":"VariableDeclarationStatement","src":"24567:113:0"},{"assignments":[1638],"declarations":[{"constant":false,"id":1638,"name":"borrowPar","nodeType":"VariableDeclaration","scope":1668,"src":"24691:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par"},"typeName":{"contractScope":null,"id":1637,"name":"Types.Par","nodeType":"UserDefinedTypeName","referencedDeclaration":933,"src":"24691:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_storage_ptr","typeString":"struct Types.Par"}},"value":null,"visibility":"internal"}],"id":1645,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"66616c7365","id":1641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"24751:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1642,"name":"totalPar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"24778:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_TotalPar_$928_memory_ptr","typeString":"struct Types.TotalPar memory"}},"id":1643,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"borrow","nodeType":"MemberAccess","referencedDeclaration":925,"src":"24778:15:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"argumentTypes":null,"id":1639,"name":"Types","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"24720:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Types_$1367_$","typeString":"type(library Types)"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Par","nodeType":"MemberAccess","referencedDeclaration":933,"src":"24720:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Par_$933_storage_ptr_$","typeString":"type(struct Types.Par storage pointer)"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["sign","value"],"nodeType":"FunctionCall","src":"24720:85:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory","typeString":"struct Types.Par memory"}},"nodeType":"VariableDeclarationStatement","src":"24691:114:0"},{"assignments":[1649],"declarations":[{"constant":false,"id":1649,"name":"supplyWei","nodeType":"VariableDeclaration","scope":1668,"src":"24816:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei"},"typeName":{"contractScope":null,"id":1648,"name":"Types.Wei","nodeType":"UserDefinedTypeName","referencedDeclaration":1155,"src":"24816:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_storage_ptr","typeString":"struct Types.Wei"}},"value":null,"visibility":"internal"}],"id":1654,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1651,"name":"supplyPar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"24854:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}},{"argumentTypes":null,"id":1652,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"24865:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Index_$1391_memory_ptr","typeString":"struct Interest.Index memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"},{"typeIdentifier":"t_struct$_Index_$1391_memory_ptr","typeString":"struct Interest.Index memory"}],"id":1650,"name":"parToWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"24845:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Par_$933_memory_ptr_$_t_struct$_Index_$1391_memory_ptr_$returns$_t_struct$_Wei_$1155_memory_ptr_$","typeString":"function (struct Types.Par memory,struct Interest.Index memory) pure returns (struct Types.Wei memory)"}},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24845:26:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"nodeType":"VariableDeclarationStatement","src":"24816:55:0"},{"assignments":[1658],"declarations":[{"constant":false,"id":1658,"name":"borrowWei","nodeType":"VariableDeclaration","scope":1668,"src":"24882:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei"},"typeName":{"contractScope":null,"id":1657,"name":"Types.Wei","nodeType":"UserDefinedTypeName","referencedDeclaration":1155,"src":"24882:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_storage_ptr","typeString":"struct Types.Wei"}},"value":null,"visibility":"internal"}],"id":1663,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1660,"name":"borrowPar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"24920:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"}},{"argumentTypes":null,"id":1661,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"24931:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Index_$1391_memory_ptr","typeString":"struct Interest.Index memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Par_$933_memory_ptr","typeString":"struct Types.Par memory"},{"typeIdentifier":"t_struct$_Index_$1391_memory_ptr","typeString":"struct Interest.Index memory"}],"id":1659,"name":"parToWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"24911:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Par_$933_memory_ptr_$_t_struct$_Index_$1391_memory_ptr_$returns$_t_struct$_Wei_$1155_memory_ptr_$","typeString":"function (struct Types.Par memory,struct Interest.Index memory) pure returns (struct Types.Wei memory)"}},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24911:26:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},"nodeType":"VariableDeclarationStatement","src":"24882:55:0"},{"expression":{"argumentTypes":null,"components":[{"argumentTypes":null,"id":1664,"name":"supplyWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"24956:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}},{"argumentTypes":null,"id":1665,"name":"borrowWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"24967:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei memory"}}],"id":1666,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24955:22:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$_Wei_$1155_memory_ptr_$_t_struct$_Wei_$1155_memory_ptr_$","typeString":"tuple(struct Types.Wei memory,struct Types.Wei memory)"}},"functionReturnParameters":1623,"id":1667,"nodeType":"Return","src":"24948:29:0"}]},"documentation":null,"implemented":true,"kind":"function","modifiers":[],"name":"totalParToWei","parameters":{"id":1618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1615,"name":"totalPar","nodeType":"VariableDeclaration","scope":1669,"src":"24398:30:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TotalPar_$928_memory_ptr","typeString":"struct Types.TotalPar"},"typeName":{"contractScope":null,"id":1614,"name":"Types.TotalPar","nodeType":"UserDefinedTypeName","referencedDeclaration":928,"src":"24398:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_TotalPar_$928_storage_ptr","typeString":"struct Types.TotalPar"}},"value":null,"visibility":"internal"},{"constant":false,"id":1617,"name":"index","nodeType":"VariableDeclaration","scope":1669,"src":"24439:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Index_$1391_memory_ptr","typeString":"struct Interest.Index"},"typeName":{"contractScope":null,"id":1616,"name":"Index","nodeType":"UserDefinedTypeName","referencedDeclaration":1391,"src":"24439:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Index_$1391_storage_ptr","typeString":"struct Interest.Index"}},"value":null,"visibility":"internal"}],"src":"24387:77:0"},"returnParameters":{"id":1623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1620,"name":"","nodeType":"VariableDeclaration","scope":1669,"src":"24515:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei"},"typeName":{"contractScope":null,"id":1619,"name":"Types.Wei","nodeType":"UserDefinedTypeName","referencedDeclaration":1155,"src":"24515:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_storage_ptr","typeString":"struct Types.Wei"}},"value":null,"visibility":"internal"},{"constant":false,"id":1622,"name":"","nodeType":"VariableDeclaration","scope":1669,"src":"24533:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_memory_ptr","typeString":"struct Types.Wei"},"typeName":{"contractScope":null,"id":1621,"name":"Types.Wei","nodeType":"UserDefinedTypeName","referencedDeclaration":1155,"src":"24533:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_Wei_$1155_storage_ptr","typeString":"struct Types.Wei"}},"value":null,"visibility":"internal"}],"src":"24514:36:0"},"scope":1670,"stateMutability":"pure","superFunction":null,"visibility":"internal"}],"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":"@title Interest\r\n@author dYdX\r\n\n * Library for managing the interest rate and interest indexes of Solo\r","fullyImplemented":true,"linearizedBaseContracts":[1670],"name":"Interest","scope":1941},{"id":1682,"nodeType":"ContractDefinition","src":"25207:668:0","nodes":[{"id":1681,"nodeType":"FunctionDefinition","src":"25688:184:0","nodes":[],"documentation":"Get the interest rate of a token given some borrowed and supplied amounts\r\n\n     * @param  token        The address of the ERC20 token for the market\r\n@param  borrowWei    The total borrowed token amount for the market\r\n@param  supplyWei    The total supplied token amount for the market\r\n@return              The interest rate per second\r","implemented":false,"kind":"function","modifiers":[],"name":"getInterestRate","parameters":{"id":1677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1672,"name":"token","nodeType":"VariableDeclaration","scope":1681,"src":"25723:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1671,"name":"address","nodeType":"ElementaryTypeName","src":"25723:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1674,"name":"borrowWei","nodeType":"VariableDeclaration","scope":1681,"src":"25747:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1673,"name":"uint256","nodeType":"ElementaryTypeName","src":"25747:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1676,"name":"supplyWei","nodeType":"VariableDeclaration","scope":1681,"src":"25775:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1675,"name":"uint256","nodeType":"ElementaryTypeName","src":"25775:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"25712:87:0"},"returnParameters":{"id":1680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1679,"name":"","nodeType":"VariableDeclaration","scope":1681,"src":"25850:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Rate_$1384_memory_ptr","typeString":"struct Interest.Rate"},"typeName":{"contractScope":null,"id":1678,"name":"Interest.Rate","nodeType":"UserDefinedTypeName","referencedDeclaration":1384,"src":"25850:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_Rate_$1384_storage_ptr","typeString":"struct Interest.Rate"}},"value":null,"visibility":"internal"}],"src":"25849:22:0"},"scope":1682,"stateMutability":"view","superFunction":null,"visibility":"external"}],"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":"@title IInterestSetter\r\n@author dYdX\r\n\n * Interface that Interest Setters for Solo must implement in order to report interest rates.\r","fullyImplemented":false,"linearizedBaseContracts":[1682],"name":"IInterestSetter","scope":1941},{"id":1940,"nodeType":"ContractDefinition","src":"26201:5274:0","nodes":[{"id":1687,"nodeType":"UsingForDirective","src":"26271:23:0","nodes":[],"libraryName":{"contractScope":null,"id":1685,"name":"Math","nodeType":"UserDefinedTypeName","referencedDeclaration":818,"src":"26277:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Math_$818","typeString":"library Math"}},"typeName":{"id":1686,"name":"uint256","nodeType":"ElementaryTypeName","src":"26286:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":1690,"nodeType":"UsingForDirective","src":"26300:27:0","nodes":[],"libraryName":{"contractScope":null,"id":1688,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":128,"src":"26306:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$128","typeString":"library SafeMath"}},"typeName":{"id":1689,"name":"uint256","nodeType":"ElementaryTypeName","src":"26319:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":1693,"nodeType":"VariableDeclaration","src":"26381:30:0","nodes":[],"constant":true,"name":"PERCENT","scope":1940,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1691,"name":"uint256","nodeType":"ElementaryTypeName","src":"26381:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"hexValue":"313030","id":1692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26408:3:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"internal"},{"id":1698,"nodeType":"VariableDeclaration","src":"26420:32:0","nodes":[],"constant":true,"name":"BASE","scope":1940,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1694,"name":"uint256","nodeType":"ElementaryTypeName","src":"26420:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":1697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"3130","id":1695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26444:2:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"argumentTypes":null,"hexValue":"3138","id":1696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26450:2:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"26444:8:0","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"visibility":"internal"},{"id":1707,"nodeType":"VariableDeclaration","src":"26461:55:0","nodes":[],"constant":true,"name":"SECONDS_IN_A_YEAR","scope":1940,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1699,"name":"uint256","nodeType":"ElementaryTypeName","src":"26461:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_31536000_by_1","typeString":"int_const 31536000"},"id":1706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"id":1704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_3600_by_1","typeString":"int_const 3600"},"id":1702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"3630","id":1700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26498:2:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"hexValue":"3630","id":1701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26503:2:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"src":"26498:7:0","typeDescriptions":{"typeIdentifier":"t_rational_3600_by_1","typeString":"int_const 3600"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"hexValue":"3234","id":1703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26508:2:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"src":"26498:12:0","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"hexValue":"333635","id":1705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26513:3:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_365_by_1","typeString":"int_const 365"},"value":"365"},"src":"26498:18:0","typeDescriptions":{"typeIdentifier":"t_rational_31536000_by_1","typeString":"int_const 31536000"}},"visibility":"internal"},{"id":1710,"nodeType":"VariableDeclaration","src":"26525:25:0","nodes":[],"constant":true,"name":"BYTE","scope":1940,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1708,"name":"uint256","nodeType":"ElementaryTypeName","src":"26525:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"hexValue":"38","id":1709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26549:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"visibility":"internal"},{"id":1715,"nodeType":"StructDefinition","src":"26603:83:0","nodes":[],"canonicalName":"DoubleExponentInterestSetter.PolyStorage","members":[{"constant":false,"id":1712,"name":"maxAPR","nodeType":"VariableDeclaration","scope":1715,"src":"26633:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1711,"name":"uint128","nodeType":"ElementaryTypeName","src":"26633:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"value":null,"visibility":"internal"},{"constant":false,"id":1714,"name":"coefficients","nodeType":"VariableDeclaration","scope":1715,"src":"26658:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1713,"name":"uint128","nodeType":"ElementaryTypeName","src":"26658:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"value":null,"visibility":"internal"}],"name":"PolyStorage","scope":1940,"visibility":"public"},{"id":1717,"nodeType":"VariableDeclaration","src":"26738:21:0","nodes":[],"constant":false,"name":"g_storage","scope":1940,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_PolyStorage_$1715_storage","typeString":"struct DoubleExponentInterestSetter.PolyStorage"},"typeName":{"contractScope":null,"id":1716,"name":"PolyStorage","nodeType":"UserDefinedTypeName","referencedDeclaration":1715,"src":"26738:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolyStorage_$1715_storage_ptr","typeString":"struct DoubleExponentInterestSetter.PolyStorage"}},"value":null,"visibility":"internal"},{"id":1758,"nodeType":"FunctionDefinition","src":"26816:574:0","nodes":[],"body":{"id":1757,"nodeType":"Block","src":"26892:498:0","nodes":[],"statements":[{"assignments":[1723],"declarations":[{"constant":false,"id":1723,"name":"sumOfCoefficients","nodeType":"VariableDeclaration","scope":1757,"src":"26959:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1722,"name":"uint256","nodeType":"ElementaryTypeName","src":"26959:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1725,"initialValue":{"argumentTypes":null,"hexValue":"30","id":1724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26987:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26959:29:0"},{"body":{"id":1744,"nodeType":"Block","src":"27140:66:0","statements":[{"expression":{"argumentTypes":null,"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1738,"name":"sumOfCoefficients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"27155:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1739,"name":"coefficients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"27176:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"argumentTypes":null,"hexValue":"323536","id":1740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27191:3:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"src":"27176:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27155:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1743,"nodeType":"ExpressionStatement","src":"27155:39:0"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1731,"name":"coefficients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"27075:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27091:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"27075:17:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1745,"initializationExpression":{"assignments":[1727],"declarations":[{"constant":false,"id":1727,"name":"coefficients","nodeType":"VariableDeclaration","scope":1745,"src":"27018:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1726,"name":"uint256","nodeType":"ElementaryTypeName","src":"27018:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1730,"initialValue":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1728,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"27041:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolyStorage_$1715_memory_ptr","typeString":"struct DoubleExponentInterestSetter.PolyStorage memory"}},"id":1729,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"coefficients","nodeType":"MemberAccess","referencedDeclaration":1714,"src":"27041:19:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"VariableDeclarationStatement","src":"27018:42:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1734,"name":"coefficients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"27107:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"argumentTypes":null,"id":1735,"name":"BYTE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"27124:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27107:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1737,"nodeType":"ExpressionStatement","src":"27107:21:0"},"nodeType":"ForStatement","src":"26999:207:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1747,"name":"sumOfCoefficients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"27238:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":1748,"name":"PERCENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"27259:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27238:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"436f656666696369656e7473206d7573742073756d20746f20313030","id":1750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27281:30:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_7690294e25bf8a3c9dda119abadc2475cba47684e8a9fdce932b0523f3050539","typeString":"literal_string \"Coefficients must sum to 100\""},"value":"Coefficients must sum to 100"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7690294e25bf8a3c9dda119abadc2475cba47684e8a9fdce932b0523f3050539","typeString":"literal_string \"Coefficients must sum to 100\""}],"id":1746,"name":"require","nodeType":"Identifier","overloadedDeclarations":[1958,1959],"referencedDeclaration":1959,"src":"27216:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27216:106:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1752,"nodeType":"ExpressionStatement","src":"27216:106:0"},{"expression":{"argumentTypes":null,"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1753,"name":"g_storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"27364:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolyStorage_$1715_storage","typeString":"struct DoubleExponentInterestSetter.PolyStorage storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1754,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"27376:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolyStorage_$1715_memory_ptr","typeString":"struct DoubleExponentInterestSetter.PolyStorage memory"}},"src":"27364:18:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolyStorage_$1715_storage","typeString":"struct DoubleExponentInterestSetter.PolyStorage storage ref"}},"id":1756,"nodeType":"ExpressionStatement","src":"27364:18:0"}]},"documentation":null,"implemented":true,"kind":"constructor","modifiers":[],"name":"","parameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"name":"params","nodeType":"VariableDeclaration","scope":1758,"src":"26838:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PolyStorage_$1715_memory_ptr","typeString":"struct DoubleExponentInterestSetter.PolyStorage"},"typeName":{"contractScope":null,"id":1718,"name":"PolyStorage","nodeType":"UserDefinedTypeName","referencedDeclaration":1715,"src":"26838:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolyStorage_$1715_storage_ptr","typeString":"struct DoubleExponentInterestSetter.PolyStorage"}},"value":null,"visibility":"internal"}],"src":"26827:43:0"},"returnParameters":{"id":1721,"nodeType":"ParameterList","parameters":[],"src":"26892:0:0"},"scope":1940,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"id":1881,"nodeType":"FunctionDefinition","src":"27905:2210:0","nodes":[],"body":{"id":1880,"nodeType":"Block","src":"28100:2015:0","nodes":[],"statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1769,"name":"borrowWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"28115:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28128:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"28115:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1778,"nodeType":"IfStatement","src":"28111:111:0","trueBody":{"id":1777,"nodeType":"Block","src":"28131:91:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":1774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28193:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"argumentTypes":null,"id":1772,"name":"Interest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"28153:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Interest_$1670_$","typeString":"type(library Interest)"}},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Rate","nodeType":"MemberAccess","referencedDeclaration":1384,"src":"28153:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Rate_$1384_storage_ptr_$","typeString":"type(struct Interest.Rate storage pointer)"}},"id":1775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"names":["value"],"nodeType":"FunctionCall","src":"28153:57:0","typeDescriptions":{"typeIdentifier":"t_struct$_Rate_$1384_memory","typeString":"struct Interest.Rate memory"}},"functionReturnParameters":1768,"id":1776,"nodeType":"Return","src":"28146:64:0"}]}},{"assignments":[1780],"declarations":[{"constant":false,"id":1780,"name":"s","nodeType":"VariableDeclaration","scope":1880,"src":"28234:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PolyStorage_$1715_memory_ptr","typeString":"struct DoubleExponentInterestSetter.PolyStorage"},"typeName":{"contractScope":null,"id":1779,"name":"PolyStorage","nodeType":"UserDefinedTypeName","referencedDeclaration":1715,"src":"28234:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolyStorage_$1715_storage_ptr","typeString":"struct DoubleExponentInterestSetter.PolyStorage"}},"value":null,"visibility":"internal"}],"id":1782,"initialValue":{"argumentTypes":null,"id":1781,"name":"g_storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"28257:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolyStorage_$1715_storage","typeString":"struct DoubleExponentInterestSetter.PolyStorage storage ref"}},"nodeType":"VariableDeclarationStatement","src":"28234:32:0"},{"assignments":[1784],"declarations":[{"constant":false,"id":1784,"name":"maxAPR","nodeType":"VariableDeclaration","scope":1880,"src":"28277:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1783,"name":"uint256","nodeType":"ElementaryTypeName","src":"28277:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1787,"initialValue":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1785,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"28294:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolyStorage_$1715_memory_ptr","typeString":"struct DoubleExponentInterestSetter.PolyStorage memory"}},"id":1786,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"maxAPR","nodeType":"MemberAccess","referencedDeclaration":1712,"src":"28294:8:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"VariableDeclarationStatement","src":"28277:25:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1788,"name":"borrowWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"28319:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"id":1789,"name":"supplyWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"28332:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28319:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1799,"nodeType":"IfStatement","src":"28315:144:0","trueBody":{"id":1798,"nodeType":"Block","src":"28343:116:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1793,"name":"maxAPR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"28405:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"id":1794,"name":"SECONDS_IN_A_YEAR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"28414:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28405:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1791,"name":"Interest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"28365:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Interest_$1670_$","typeString":"type(library Interest)"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Rate","nodeType":"MemberAccess","referencedDeclaration":1384,"src":"28365:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Rate_$1384_storage_ptr_$","typeString":"type(struct Interest.Rate storage pointer)"}},"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["value"],"nodeType":"FunctionCall","src":"28365:82:0","typeDescriptions":{"typeIdentifier":"t_struct$_Rate_$1384_memory","typeString":"struct Interest.Rate memory"}},"functionReturnParameters":1768,"id":1797,"nodeType":"Return","src":"28358:89:0"}]}},{"assignments":[1801],"declarations":[{"constant":false,"id":1801,"name":"coefficients","nodeType":"VariableDeclaration","scope":1880,"src":"28513:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1800,"name":"uint256","nodeType":"ElementaryTypeName","src":"28513:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1804,"initialValue":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1802,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"28536:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolyStorage_$1715_memory_ptr","typeString":"struct DoubleExponentInterestSetter.PolyStorage memory"}},"id":1803,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"coefficients","nodeType":"MemberAccess","referencedDeclaration":1714,"src":"28536:14:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"VariableDeclarationStatement","src":"28513:37:0"},{"assignments":[1806],"declarations":[{"constant":false,"id":1806,"name":"result","nodeType":"VariableDeclaration","scope":1880,"src":"28561:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1805,"name":"uint256","nodeType":"ElementaryTypeName","src":"28561:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1812,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1808,"name":"coefficients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"28584:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28578:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":"uint8"},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28578:19:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"id":1810,"name":"BASE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"28600:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28578:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28561:43:0"},{"expression":{"argumentTypes":null,"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1813,"name":"coefficients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"28615:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"argumentTypes":null,"id":1814,"name":"BYTE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"28632:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28615:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1816,"nodeType":"ExpressionStatement","src":"28615:21:0"},{"assignments":[1818],"declarations":[{"constant":false,"id":1818,"name":"polynomial","nodeType":"VariableDeclaration","scope":1880,"src":"28772:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1817,"name":"uint256","nodeType":"ElementaryTypeName","src":"28772:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1825,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1821,"name":"borrowWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"28802:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1819,"name":"BASE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"28793:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":35,"src":"28793:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28793:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"id":1823,"name":"supplyWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"28815:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28793:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28772:52:0"},{"body":{"id":1864,"nodeType":"Block","src":"28895:906:0","statements":[{"assignments":[1828],"declarations":[{"constant":false,"id":1828,"name":"coefficient","nodeType":"VariableDeclaration","scope":1864,"src":"28953:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1827,"name":"uint256","nodeType":"ElementaryTypeName","src":"28953:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1834,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1831,"name":"coefficients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"28989:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28983:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":"uint8"},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28983:19:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28975:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":"uint256"},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28975:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28953:50:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1835,"name":"coefficient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"29067:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29082:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"29067:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1851,"nodeType":"IfStatement","src":"29063:411:0","trueBody":{"id":1850,"nodeType":"Block","src":"29085:389:0","statements":[{"expression":{"argumentTypes":null,"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1838,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"29256:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1839,"name":"coefficient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"29266:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"id":1840,"name":"polynomial","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"29280:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29266:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29256:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1843,"nodeType":"ExpressionStatement","src":"29256:34:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1844,"name":"coefficient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"29382:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":1845,"name":"coefficients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"29397:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29382:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1849,"nodeType":"IfStatement","src":"29378:81:0","trueBody":{"id":1848,"nodeType":"Block","src":"29411:48:0","statements":[{"id":1847,"nodeType":"Break","src":"29434:5:0"}]}}]}},{"expression":{"argumentTypes":null,"id":1858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1852,"name":"polynomial","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"29667:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1853,"name":"polynomial","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"29680:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"id":1854,"name":"polynomial","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"29693:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29680:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"id":1856,"name":"BASE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"29706:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29680:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29667:43:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1859,"nodeType":"ExpressionStatement","src":"29667:43:0"},{"expression":{"argumentTypes":null,"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1860,"name":"coefficients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"29768:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"argumentTypes":null,"id":1861,"name":"BYTE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"29785:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29768:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1863,"nodeType":"ExpressionStatement","src":"29768:21:0"}]},"condition":{"argumentTypes":null,"hexValue":"74727565","id":1826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"28889:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1865,"nodeType":"WhileStatement","src":"28882:919:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1868,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"30041:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"id":1869,"name":"maxAPR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"30050:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30041:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1871,"name":"SECONDS_IN_A_YEAR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"30060:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"id":1872,"name":"BASE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"30080:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30060:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"id":1874,"name":"PERCENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"30087:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30060:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1876,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"30059:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30041:54:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1866,"name":"Interest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"30005:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Interest_$1670_$","typeString":"type(library Interest)"}},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Rate","nodeType":"MemberAccess","referencedDeclaration":1384,"src":"30005:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Rate_$1384_storage_ptr_$","typeString":"type(struct Interest.Rate storage pointer)"}},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["value"],"nodeType":"FunctionCall","src":"30005:102:0","typeDescriptions":{"typeIdentifier":"t_struct$_Rate_$1384_memory","typeString":"struct Interest.Rate memory"}},"functionReturnParameters":1768,"id":1879,"nodeType":"Return","src":"29998:109:0"}]},"documentation":"Get the interest rate given some borrowed and supplied amounts. The interest function is a\r\npolynomial function of the utilization (borrowWei / supplyWei) of the market.\r\n\n     *   - If borrowWei > supplyWei then the utilization is considered to be equal to 1.\r\n  - If both are zero, then the utilization is considered to be equal to 0.\r\n\n     * @return The interest rate per second (times 10 ** 18)\r","implemented":true,"kind":"function","modifiers":[],"name":"getInterestRate","parameters":{"id":1765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1760,"name":"","nodeType":"VariableDeclaration","scope":1881,"src":"27940:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1759,"name":"address","nodeType":"ElementaryTypeName","src":"27940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1762,"name":"borrowWei","nodeType":"VariableDeclaration","scope":1881,"src":"27970:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1761,"name":"uint256","nodeType":"ElementaryTypeName","src":"27970:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1764,"name":"supplyWei","nodeType":"VariableDeclaration","scope":1881,"src":"27998:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1763,"name":"uint256","nodeType":"ElementaryTypeName","src":"27998:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"27929:93:0"},"returnParameters":{"id":1768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1767,"name":"","nodeType":"VariableDeclaration","scope":1881,"src":"28073:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Rate_$1384_memory_ptr","typeString":"struct Interest.Rate"},"typeName":{"contractScope":null,"id":1766,"name":"Interest.Rate","nodeType":"UserDefinedTypeName","referencedDeclaration":1384,"src":"28073:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_Rate_$1384_storage_ptr","typeString":"struct Interest.Rate"}},"value":null,"visibility":"internal"}],"src":"28072:22:0"},"scope":1940,"stateMutability":"view","superFunction":1681,"visibility":"external"},{"id":1890,"nodeType":"FunctionDefinition","src":"30335:127:0","nodes":[],"body":{"id":1889,"nodeType":"Block","src":"30420:42:0","nodes":[],"statements":[{"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1886,"name":"g_storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"30438:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolyStorage_$1715_storage","typeString":"struct DoubleExponentInterestSetter.PolyStorage storage ref"}},"id":1887,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"maxAPR","nodeType":"MemberAccess","referencedDeclaration":1712,"src":"30438:16:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":1885,"id":1888,"nodeType":"Return","src":"30431:23:0"}]},"documentation":"Get the maximum APR that this interestSetter will return. The actual APY may be higher\r\ndepending on how often the interest is compounded.\r\n\n     * @return The maximum APR\r","implemented":true,"kind":"function","modifiers":[],"name":"getMaxAPR","parameters":{"id":1882,"nodeType":"ParameterList","parameters":[],"src":"30353:2:0"},"returnParameters":{"id":1885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1884,"name":"","nodeType":"VariableDeclaration","scope":1890,"src":"30406:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1883,"name":"uint256","nodeType":"ElementaryTypeName","src":"30406:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"30405:9:0"},"scope":1940,"stateMutability":"view","superFunction":null,"visibility":"external"},{"id":1939,"nodeType":"FunctionDefinition","src":"30674:798:0","nodes":[],"body":{"id":1938,"nodeType":"Block","src":"30774:698:0","nodes":[],"statements":[{"assignments":[1899],"declarations":[{"constant":false,"id":1899,"name":"result","nodeType":"VariableDeclaration","scope":1938,"src":"30848:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1897,"name":"uint256","nodeType":"ElementaryTypeName","src":"30848:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1898,"length":null,"nodeType":"ArrayTypeName","src":"30848:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"id":1905,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"3136","id":1903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30888:2:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}],"id":1902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"30874:13:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1900,"name":"uint256","nodeType":"ElementaryTypeName","src":"30878:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1901,"length":null,"nodeType":"ArrayTypeName","src":"30878:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30874:17:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"30848:43:0"},{"assignments":[1907],"declarations":[{"constant":false,"id":1907,"name":"numCoefficients","nodeType":"VariableDeclaration","scope":1938,"src":"30950:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1906,"name":"uint256","nodeType":"ElementaryTypeName","src":"30950:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1909,"initialValue":{"argumentTypes":null,"hexValue":"30","id":1908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30976:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"30950:27:0"},{"body":{"id":1933,"nodeType":"Block","src":"31132:103:0","statements":[{"expression":{"argumentTypes":null,"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1922,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"31147:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1924,"indexExpression":{"argumentTypes":null,"id":1923,"name":"numCoefficients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"31154:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"31147:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1925,"name":"coefficients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"31173:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"argumentTypes":null,"hexValue":"323536","id":1926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31188:3:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"src":"31173:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31147:44:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1929,"nodeType":"ExpressionStatement","src":"31147:44:0"},{"expression":{"argumentTypes":null,"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"31206:17:0","subExpression":{"argumentTypes":null,"id":1930,"name":"numCoefficients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"31206:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1932,"nodeType":"ExpressionStatement","src":"31206:17:0"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1915,"name":"coefficients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"31067:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31083:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"31067:17:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1934,"initializationExpression":{"assignments":[1911],"declarations":[{"constant":false,"id":1911,"name":"coefficients","nodeType":"VariableDeclaration","scope":1934,"src":"31007:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1910,"name":"uint256","nodeType":"ElementaryTypeName","src":"31007:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1914,"initialValue":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1912,"name":"g_storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"31030:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolyStorage_$1715_storage","typeString":"struct DoubleExponentInterestSetter.PolyStorage storage ref"}},"id":1913,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"coefficients","nodeType":"MemberAccess","referencedDeclaration":1714,"src":"31030:22:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"VariableDeclarationStatement","src":"31007:45:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1918,"name":"coefficients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"31099:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"argumentTypes":null,"id":1919,"name":"BYTE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"31116:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31099:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1921,"nodeType":"ExpressionStatement","src":"31099:21:0"},"nodeType":"ForStatement","src":"30988:247:0"},{"externalReferences":[{"result":{"declaration":1899,"isOffset":false,"isSlot":false,"src":"31404:6:0","valueSize":1}},{"numCoefficients":{"declaration":1907,"isOffset":false,"isSlot":false,"src":"31412:15:0","valueSize":1}}],"id":1935,"nodeType":"InlineAssembly","operations":"{\n    mstore(result, numCoefficients)\n}","src":"31373:84:0"},{"expression":{"argumentTypes":null,"id":1936,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"31458:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1895,"id":1937,"nodeType":"Return","src":"31451:13:0"}]},"documentation":"Get all of the coefficients of the interest calculation, starting from the coefficient for\r\nthe first-order utilization variable.\r\n\n     * @return The coefficients\r","implemented":true,"kind":"function","modifiers":[],"name":"getCoefficients","parameters":{"id":1891,"nodeType":"ParameterList","parameters":[],"src":"30698:2:0"},"returnParameters":{"id":1895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1894,"name":"","nodeType":"VariableDeclaration","scope":1939,"src":"30751:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1892,"name":"uint256","nodeType":"ElementaryTypeName","src":"30751:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1893,"length":null,"nodeType":"ArrayTypeName","src":"30751:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"30750:18:0"},"scope":1940,"stateMutability":"view","superFunction":null,"visibility":"external"}],"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":1683,"name":"IInterestSetter","nodeType":"UserDefinedTypeName","referencedDeclaration":1682,"src":"26247:15:0","typeDescriptions":{"typeIdentifier":"t_contract$_IInterestSetter_$1682","typeString":"contract IInterestSetter"}},"id":1684,"nodeType":"InheritanceSpecifier","src":"26247:15:0"}],"contractDependencies":[1682],"contractKind":"contract","documentation":"@title DoubleExponentInterestSetter\r\n@author dYdX\r\n\n * Interest setter that sets interest based on a polynomial of the usage percentage of the market.\r\nInterest = C_0 + C_1 * U^(2^0) + C_2 * U^(2^1) + C_3 * U^(2^2) ...\r","fullyImplemented":true,"linearizedBaseContracts":[1940,1682],"name":"DoubleExponentInterestSetter","scope":1941}]}}},"contracts":{"Contract":{"Decimal":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"dYdX\\r  * Library that defines a fixed-point number with 18 decimal places.\\r\",\"methods\":{},\"title\":\"Decimal\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Contract\":\"Decimal\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"Contract\":{\"keccak256\":\"0xa4d5c897f307febf8d2fe07b1aa14f65cc305283ff9f7c6bb9e5e37f955d463c\",\"urls\":[\"bzzr://e27b159b490604a18c2028782112408e68b98c093c6e4802224b11475994d5c7\"]}},\"version\":1}","userdoc":{},"devdoc":{"author":"dYdX\r  * Library that defines a fixed-point number with 18 decimal places.\r","title":"Decimal\r"},"evm":{"assembly":"    /* \"Contract\":13092:14104  library Decimal {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contract\":13092:14104  library Decimal {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72305820e38c0045ee3f1c05debc1d389dcbe632693e731dcd6fb68d8f071c998e7ea31f6c6578706572696d656e74616cf50037\n}\n","legacyAssembly":{".code":[{"begin":13092,"end":14104,"name":"PUSH #[$]","value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":13092,"end":14104,"name":"PUSH [$]","value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":132,"end":134,"name":"PUSH","value":"B"},{"begin":166,"end":173,"name":"DUP3"},{"begin":155,"end":164,"name":"DUP3"},{"begin":146,"end":153,"name":"DUP3"},{"begin":137,"end":174,"name":"CODECOPY"},{"begin":255,"end":262,"name":"DUP1"},{"begin":249,"end":263,"name":"MLOAD"},{"begin":246,"end":247,"name":"PUSH","value":"0"},{"begin":241,"end":264,"name":"BYTE"},{"begin":235,"end":239,"name":"PUSH","value":"73"},{"begin":232,"end":265,"name":"EQ"},{"begin":222,"end":224,"name":"PUSH [tag]","value":"1"},{"begin":222,"end":224,"name":"JUMPI"},{"begin":269,"end":278,"name":"INVALID"},{"begin":222,"end":224,"name":"tag","value":"1"},{"begin":222,"end":224,"name":"JUMPDEST"},{"begin":293,"end":302,"name":"ADDRESS"},{"begin":290,"end":291,"name":"PUSH","value":"0"},{"begin":283,"end":303,"name":"MSTORE"},{"begin":323,"end":327,"name":"PUSH","value":"73"},{"begin":314,"end":321,"name":"DUP2"},{"begin":306,"end":328,"name":"MSTORE8"},{"begin":347,"end":354,"name":"DUP3"},{"begin":338,"end":345,"name":"DUP2"},{"begin":331,"end":355,"name":"RETURN"}],".data":{"0":{".auxdata":"a265627a7a72305820e38c0045ee3f1c05debc1d389dcbe632693e731dcd6fb68d8f071c998e7ea31f6c6578706572696d656e74616cf50037",".code":[{"begin":13092,"end":14104,"name":"PUSHDEPLOYADDRESS"},{"begin":13092,"end":14104,"name":"ADDRESS"},{"begin":13092,"end":14104,"name":"EQ"},{"begin":13092,"end":14104,"name":"PUSH","value":"80"},{"begin":13092,"end":14104,"name":"PUSH","value":"40"},{"begin":13092,"end":14104,"name":"MSTORE"},{"begin":13092,"end":14104,"name":"PUSH","value":"0"},{"begin":13092,"end":14104,"name":"DUP1"},{"begin":13092,"end":14104,"name":"REVERT"}]}}},"bytecode":{"object":"605a6023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72305820e38c0045ee3f1c05debc1d389dcbe632693e731dcd6fb68d8f071c998e7ea31f6c6578706572696d656e74616cf50037","opcodes":"PUSH1 0x5A PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 0xe3 DUP13 STOP GASLIMIT 0xee EXTCODEHASH SHR SDIV 0xde 0xbc SAR CODESIZE SWAP14 0xcb 0xe6 ORIGIN PUSH10 0x3E731DCD6FB68D8F071C SWAP10 DUP15 PUSH31 0xA31F6C6578706572696D656E74616CF5003700000000000000000000000000 ","sourceMap":"13092:1012:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24","linkReferences":{}},"deployedBytecode":{"object":"73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72305820e38c0045ee3f1c05debc1d389dcbe632693e731dcd6fb68d8f071c998e7ea31f6c6578706572696d656e74616cf50037","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 0xe3 DUP13 STOP GASLIMIT 0xee EXTCODEHASH SHR SDIV 0xde 0xbc SAR CODESIZE SWAP14 0xcb 0xe6 ORIGIN PUSH10 0x3E731DCD6FB68D8F071C SWAP10 DUP15 PUSH31 0xA31F6C6578706572696D656E74616CF5003700000000000000000000000000 ","sourceMap":"13092:1012:0:-;;;;;;;;","linkReferences":{}},"gasEstimates":{"creation":{"codeDepositCost":"18000","executionCost":"97","totalCost":"18097"},"external":{},"internal":{"div(uint256,struct Decimal.D256 memory)":"infinite","mul(uint256,struct Decimal.D256 memory)":"infinite","one()":"infinite","onePlus(struct Decimal.D256 memory)":"infinite"}}}},"DoubleExponentInterestSetter":{"abi":[{"type":"constructor","inputs":[{"name":"params","type":"tuple","components":[{"name":"maxAPR","type":"uint128"},{"name":"coefficients","type":"uint128"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"getCoefficients","inputs":[],"outputs":[{"name":"","type":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"getInterestRate","inputs":[{"name":"","type":"address"},{"name":"borrowWei","type":"uint256"},{"name":"supplyWei","type":"uint256"}],"outputs":[{"name":"","type":"tuple","components":[{"name":"value","type":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getMaxAPR","inputs":[],"outputs":[{"name":"","type":"uint256"}],"stateMutability":"view"}],"metadata":"{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"getMaxAPR\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCoefficients\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"borrowWei\",\"type\":\"uint256\"},{\"name\":\"supplyWei\",\"type\":\"uint256\"}],\"name\":\"getInterestRate\",\"outputs\":[{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"name\":\"maxAPR\",\"type\":\"uint128\"},{\"name\":\"coefficients\",\"type\":\"uint128\"}],\"name\":\"params\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"author\":\"dYdX\\r  * Interest setter that sets interest based on a polynomial of the usage percentage of the market.\\r Interest = C_0 + C_1 * U^(2^0) + C_2 * U^(2^1) + C_3 * U^(2^2) ...\\r\",\"methods\":{\"getCoefficients()\":{\"return\":\"The coefficients\\r\"},\"getInterestRate(address,uint256,uint256)\":{\"return\":\"The interest rate per second (times 10 ** 18)\\r\"},\"getMaxAPR()\":{\"return\":\"The maximum APR\\r\"}},\"title\":\"DoubleExponentInterestSetter\\r\"},\"userdoc\":{\"methods\":{\"getCoefficients()\":{\"notice\":\"Get all of the coefficients of the interest calculation, starting from the coefficient for\\r the first-order utilization variable.\\r \"},\"getInterestRate(address,uint256,uint256)\":{\"notice\":\"Get the interest rate given some borrowed and supplied amounts. The interest function is a\\r polynomial function of the utilization (borrowWei / supplyWei) of the market.\\r      *   - If borrowWei > supplyWei then the utilization is considered to be equal to 1.\\r  - If both are zero, then the utilization is considered to be equal to 0.\\r \"},\"getMaxAPR()\":{\"notice\":\"Get the maximum APR that this interestSetter will return. The actual APY may be higher\\r depending on how often the interest is compounded.\\r \"}}}},\"settings\":{\"compilationTarget\":{\"Contract\":\"DoubleExponentInterestSetter\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"Contract\":{\"keccak256\":\"0xa4d5c897f307febf8d2fe07b1aa14f65cc305283ff9f7c6bb9e5e37f955d463c\",\"urls\":[\"bzzr://e27b159b490604a18c2028782112408e68b98c093c6e4802224b11475994d5c7\"]}},\"version\":1}","userdoc":{"methods":{"getCoefficients()":{"notice":"Get all of the coefficients of the interest calculation, starting from the coefficient for\r the first-order utilization variable.\r "},"getInterestRate(address,uint256,uint256)":{"notice":"Get the interest rate given some borrowed and supplied amounts. The interest function is a\r polynomial function of the utilization (borrowWei / supplyWei) of the market.\r      *   - If borrowWei > supplyWei then the utilization is considered to be equal to 1.\r  - If both are zero, then the utilization is considered to be equal to 0.\r "},"getMaxAPR()":{"notice":"Get the maximum APR that this interestSetter will return. The actual APY may be higher\r depending on how often the interest is compounded.\r "}}},"devdoc":{"author":"dYdX\r  * Interest setter that sets interest based on a polynomial of the usage percentage of the market.\r Interest = C_0 + C_1 * U^(2^0) + C_2 * U^(2^1) + C_3 * U^(2^2) ...\r","methods":{"getCoefficients()":{},"getInterestRate(address,uint256,uint256)":{},"getMaxAPR()":{}},"title":"DoubleExponentInterestSetter\r"},"evm":{"assembly":"    /* \"Contract\":26201:31475  contract DoubleExponentInterestSetter is\r... */\n  mstore(0x40, 0x80)\n    /* \"Contract\":26816:27390  constructor(\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"Contract\":26816:27390  constructor(\r... */\n  pop\n  mload(0x40)\n  0x40\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  dup1\n  0x40\n  mstore\n  tag_2\n  swap2\n  swap1\n  dup2\n  add\n  swap1\n  jump(tag_3)\ntag_2:\n    /* \"Contract\":27041:27060  params.coefficients */\n  0x20\n  dup2\n  add\n  mload\n    /* \"Contract\":26959:26984  uint256 sumOfCoefficients */\n  0x00\n  swap1\n  sub(shl(0x80, 0x01), 0x01)\n    /* \"Contract\":27018:27060  uint256 coefficients = params.coefficients */\n  and\n    /* \"Contract\":26999:27206  for (\r... */\ntag_6:\n    /* \"Contract\":27075:27092  coefficients != 0 */\n  dup1\n  iszero\n    /* \"Contract\":26999:27206  for (\r... */\n  tag_7\n  jumpi\n    /* \"Contract\":27191:27194  256 */\n  0x0100\n    /* \"Contract\":27176:27188  coefficients */\n  dup2\n    /* \"Contract\":27176:27194  coefficients % 256 */\n  mod\n    /* \"Contract\":27155:27194  sumOfCoefficients += coefficients % 256 */\n  swap2\n  swap1\n  swap2\n  add\n  swap1\n    /* \"Contract\":26549:26550  8 */\n  0x08\n    /* \"Contract\":27107:27128  coefficients >>= BYTE */\n  shr\n    /* \"Contract\":26999:27206  for (\r... */\n  jump(tag_6)\ntag_7:\n  pop\n    /* \"Contract\":26408:26411  100 */\n  0x64\n    /* \"Contract\":27238:27255  sumOfCoefficients */\n  dup2\n    /* \"Contract\":27238:27266  sumOfCoefficients == PERCENT */\n  eq\n    /* \"Contract\":27216:27322  require(\r... */\n  tag_10\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_11\n  swap1\n  jump(tag_12)\ntag_11:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_10:\n  pop\n    /* \"Contract\":27364:27382  g_storage = params */\n  dup1\n  mload\n    /* \"Contract\":27364:27373  g_storage */\n  0x00\n    /* \"Contract\":27364:27382  g_storage = params */\n  dup1\n  sload\n  0x20\n  swap1\n  swap4\n  add\n  mload\n  sub(shl(0x80, 0x01), 0x01)\n  swap1\n  dup2\n  and\n  0x0100000000000000000000000000000000\n  mul\n  swap3\n  dup2\n  and\n  not(sub(shl(0x80, 0x01), 0x01))\n  swap1\n  swap5\n  and\n  swap4\n  swap1\n  swap4\n  or\n  swap1\n  swap3\n  and\n  or\n  swap1\n  sstore\n    /* \"Contract\":26201:31475  contract DoubleExponentInterestSetter is\r... */\n  jump(tag_37)\n    /* \"--CODEGEN--\":59:572   */\ntag_15:\n  0x00\n    /* \"--CODEGEN--\":188:192   */\n  0x40\n    /* \"--CODEGEN--\":176:185   */\n  dup3\n    /* \"--CODEGEN--\":171:174   */\n  dup5\n    /* \"--CODEGEN--\":167:186   */\n  sub\n    /* \"--CODEGEN--\":163:193   */\n  slt\n    /* \"--CODEGEN--\":160:162   */\n  iszero\n  tag_16\n  jumpi\n    /* \"--CODEGEN--\":206:207   */\n  0x00\n    /* \"--CODEGEN--\":203:204   */\n  dup1\n    /* \"--CODEGEN--\":196:208   */\n  revert\n    /* \"--CODEGEN--\":160:162   */\ntag_16:\n    /* \"--CODEGEN--\":224:244   */\n  tag_17\n    /* \"--CODEGEN--\":239:243   */\n  0x40\n    /* \"--CODEGEN--\":224:244   */\n  jump(tag_18)\ntag_17:\n    /* \"--CODEGEN--\":215:244   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":296:297   */\n  0x00\n    /* \"--CODEGEN--\":327:387   */\n  tag_19\n    /* \"--CODEGEN--\":383:386   */\n  dup5\n    /* \"--CODEGEN--\":363:372   */\n  dup5\n    /* \"--CODEGEN--\":327:387   */\n  jump(tag_20)\ntag_19:\n    /* \"--CODEGEN--\":303:388   */\n  dup3\n  mstore\n  pop\n    /* \"--CODEGEN--\":457:459   */\n  0x20\n    /* \"--CODEGEN--\":490:550   */\n  tag_21\n    /* \"--CODEGEN--\":546:549   */\n  dup5\n    /* \"--CODEGEN--\":522:544   */\n  dup5\n  dup4\n  add\n    /* \"--CODEGEN--\":490:550   */\n  jump(tag_20)\ntag_21:\n    /* \"--CODEGEN--\":483:487   */\n  0x20\n    /* \"--CODEGEN--\":476:481   */\n  dup4\n    /* \"--CODEGEN--\":472:488   */\n  add\n    /* \"--CODEGEN--\":465:551   */\n  mstore\n    /* \"--CODEGEN--\":409:562   */\n  pop\n    /* \"--CODEGEN--\":154:572   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\n    /* \"--CODEGEN--\":579:701   */\ntag_20:\n  0x00\n    /* \"--CODEGEN--\":657:696   */\n  tag_23\n    /* \"--CODEGEN--\":688:694   */\n  dup3\n    /* \"--CODEGEN--\":682:695   */\n  mload\n    /* \"--CODEGEN--\":657:696   */\n  jump(tag_24)\ntag_23:\n    /* \"--CODEGEN--\":648:696   */\n  swap4\n    /* \"--CODEGEN--\":642:701   */\n  swap3\n  pop\n  pop\n  pop\n  jump\n    /* \"--CODEGEN--\":708:1029   */\ntag_3:\n  0x00\n    /* \"--CODEGEN--\":852:854   */\n  0x40\n    /* \"--CODEGEN--\":840:849   */\n  dup3\n    /* \"--CODEGEN--\":831:838   */\n  dup5\n    /* \"--CODEGEN--\":827:850   */\n  sub\n    /* \"--CODEGEN--\":823:855   */\n  slt\n    /* \"--CODEGEN--\":820:822   */\n  iszero\n  tag_26\n  jumpi\n    /* \"--CODEGEN--\":868:869   */\n  0x00\n    /* \"--CODEGEN--\":865:866   */\n  dup1\n    /* \"--CODEGEN--\":858:870   */\n  revert\n    /* \"--CODEGEN--\":820:822   */\ntag_26:\n    /* \"--CODEGEN--\":903:904   */\n  0x00\n    /* \"--CODEGEN--\":920:1013   */\n  tag_27\n    /* \"--CODEGEN--\":1005:1012   */\n  dup5\n    /* \"--CODEGEN--\":985:994   */\n  dup5\n    /* \"--CODEGEN--\":920:1013   */\n  jump(tag_15)\ntag_27:\n    /* \"--CODEGEN--\":910:1013   */\n  swap5\n    /* \"--CODEGEN--\":814:1029   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\n    /* \"--CODEGEN--\":1037:1401   */\ntag_29:\n  0x00\n    /* \"--CODEGEN--\":1197:1264   */\n  tag_30\n    /* \"--CODEGEN--\":1261:1263   */\n  0x1c\n    /* \"--CODEGEN--\":1256:1259   */\n  dup4\n    /* \"--CODEGEN--\":1197:1264   */\n  jump(tag_31)\ntag_30:\n    /* \"--CODEGEN--\":1297:1363   */\n  0x436f656666696369656e7473206d7573742073756d20746f2031303000000000\n    /* \"--CODEGEN--\":1277:1364   */\n  dup2\n  mstore\n    /* \"--CODEGEN--\":1392:1394   */\n  0x20\n    /* \"--CODEGEN--\":1383:1395   */\n  add\n  swap3\n    /* \"--CODEGEN--\":1183:1401   */\n  swap2\n  pop\n  pop\n  jump\n    /* \"--CODEGEN--\":1409:1816   */\ntag_12:\n    /* \"--CODEGEN--\":1600:1602   */\n  0x20\n    /* \"--CODEGEN--\":1614:1661   */\n  dup1\n  dup3\n  mstore\n    /* \"--CODEGEN--\":1585:1603   */\n  dup2\n  add\n    /* \"--CODEGEN--\":1675:1806   */\n  tag_33\n    /* \"--CODEGEN--\":1585:1603   */\n  dup2\n    /* \"--CODEGEN--\":1675:1806   */\n  jump(tag_29)\ntag_33:\n    /* \"--CODEGEN--\":1667:1806   */\n  swap3\n    /* \"--CODEGEN--\":1571:1816   */\n  swap2\n  pop\n  pop\n  jump\n    /* \"--CODEGEN--\":1823:2079   */\ntag_18:\n    /* \"--CODEGEN--\":1885:1887   */\n  0x40\n    /* \"--CODEGEN--\":1879:1888   */\n  mload\n    /* \"--CODEGEN--\":1911:1928   */\n  dup2\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"--CODEGEN--\":1971:2005   */\n  dup2\n  gt\n    /* \"--CODEGEN--\":2007:2029   */\n  dup3\n  dup3\n  lt\n    /* \"--CODEGEN--\":1968:2030   */\n  or\n    /* \"--CODEGEN--\":1965:1967   */\n  iszero\n  tag_35\n  jumpi\n    /* \"--CODEGEN--\":2043:2044   */\n  0x00\n    /* \"--CODEGEN--\":2040:2041   */\n  dup1\n    /* \"--CODEGEN--\":2033:2045   */\n  revert\n    /* \"--CODEGEN--\":1965:1967   */\ntag_35:\n    /* \"--CODEGEN--\":2059:2061   */\n  0x40\n    /* \"--CODEGEN--\":2052:2074   */\n  mstore\n    /* \"--CODEGEN--\":1863:2079   */\n  swap2\n  swap1\n  pop\n  jump\n    /* \"--CODEGEN--\":2087:2250   */\ntag_31:\n    /* \"--CODEGEN--\":2190:2209   */\n  swap1\n  dup2\n  mstore\n    /* \"--CODEGEN--\":2239:2243   */\n  0x20\n    /* \"--CODEGEN--\":2230:2244   */\n  add\n  swap1\n    /* \"--CODEGEN--\":2183:2250   */\n  jump\n    /* \"--CODEGEN--\":2258:2378   */\ntag_24:\n  sub(shl(0x80, 0x01), 0x01)\n    /* \"--CODEGEN--\":2327:2373   */\n  and\n  swap1\n    /* \"--CODEGEN--\":2310:2378   */\n  jump\ntag_37:\n    /* \"Contract\":26201:31475  contract DoubleExponentInterestSetter is\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contract\":26201:31475  contract DoubleExponentInterestSetter is\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"Contract\":26201:31475  contract DoubleExponentInterestSetter is\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1e68607a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xafd4c8d6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe8177dcf\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Contract\":30335:30462  function getMaxAPR()\r... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      jump(tag_9)\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contract\":30674:31472  function getCoefficients()\r... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      jump(tag_13)\n        /* \"Contract\":27905:30115  function getInterestRate(\r... */\n    tag_5:\n      tag_14\n      tag_15\n      calldatasize\n      0x04\n      jump(tag_16)\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      jump(tag_19)\n        /* \"Contract\":30335:30462  function getMaxAPR()\r... */\n    tag_7:\n        /* \"Contract\":30406:30413  uint256 */\n      0x00\n        /* \"Contract\":30438:30454  g_storage.maxAPR */\n      sload\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"Contract\":30335:30462  function getMaxAPR()\r... */\n      swap1\n      jump\t// out\n        /* \"Contract\":30674:31472  function getCoefficients()\r... */\n    tag_11:\n        /* \"Contract\":30874:30891  new uint256[](16) */\n      0x40\n      dup1\n      mload\n        /* \"Contract\":30888:30890  16 */\n      0x10\n        /* \"Contract\":30874:30891  new uint256[](16) */\n      dup1\n      dup3\n      mstore\n      0x0220\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n        /* \"Contract\":30751:30767  uint256[] memory */\n      0x60\n      swap2\n      dup3\n      swap2\n        /* \"Contract\":30874:30891  new uint256[](16) */\n      swap1\n      0x20\n      dup3\n      add\n        /* \"--CODEGEN--\":17:32   */\n      0x0200\n      dup1\n        /* \"--CODEGEN--\":105:115   */\n      codesize\n        /* \"Contract\":30874:30891  new uint256[](16) */\n      dup4\n        /* \"--CODEGEN--\":88:122   */\n      codecopy\n      pop\n      pop\n        /* \"Contract\":30950:30973  uint256 numCoefficients */\n      0x00\n        /* \"Contract\":31030:31052  g_storage.coefficients */\n      dup1\n      sload\n        /* \"Contract\":30848:30891  uint256[] memory result = new uint256[](16) */\n      swap3\n      swap4\n      pop\n        /* \"Contract\":30950:30973  uint256 numCoefficients */\n      swap2\n        /* \"Contract\":31030:31052  g_storage.coefficients */\n      0x0100000000000000000000000000000000\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n        /* \"Contract\":30988:31235  for (\r... */\n    tag_23:\n        /* \"Contract\":31067:31084  coefficients != 0 */\n      dup1\n      iszero\n        /* \"Contract\":30988:31235  for (\r... */\n      tag_24\n      jumpi\n        /* \"Contract\":31188:31191  256 */\n      0x0100\n        /* \"Contract\":31173:31185  coefficients */\n      dup2\n        /* \"Contract\":31173:31191  coefficients % 256 */\n      mod\n        /* \"Contract\":31147:31153  result */\n      dup4\n        /* \"Contract\":31154:31169  numCoefficients */\n      dup4\n        /* \"Contract\":31147:31170  result[numCoefficients] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_27\n      jumpi\n      invalid\n    tag_27:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"Contract\":31147:31191  result[numCoefficients] = coefficients % 256 */\n      mstore\n        /* \"Contract\":31206:31223  numCoefficients++ */\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n        /* \"Contract\":26549:26550  8 */\n      0x08\n        /* \"Contract\":31099:31120  coefficients >>= BYTE */\n      shr\n        /* \"Contract\":30988:31235  for (\r... */\n      jump(tag_23)\n    tag_24:\n      pop\n        /* \"Contract\":31397:31428  mstore(result, numCoefficients) */\n      dup2\n      mstore\n        /* \"Contract\":31404:31410  result */\n      swap1\n      pop\n        /* \"Contract\":30674:31472  function getCoefficients()\r... */\n      swap1\n      jump\t// out\n        /* \"Contract\":27905:30115  function getInterestRate(\r... */\n    tag_17:\n        /* \"Contract\":28073:28093  Interest.Rate memory */\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n        /* \"Contract\":28115:28129  borrowWei == 0 */\n      dup3\n        /* \"Contract\":28111:28222  if (borrowWei == 0) {\r... */\n      tag_31\n      jumpi\n      pop\n        /* \"Contract\":28153:28210  Interest.Rate({\r... */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n        /* \"Contract\":28146:28210  return Interest.Rate({\r... */\n      jump(tag_30)\n        /* \"Contract\":28111:28222  if (borrowWei == 0) {\r... */\n    tag_31:\n        /* \"Contract\":28234:28254  PolyStorage memory s */\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      pop\n        /* \"Contract\":28234:28266  PolyStorage memory s = g_storage */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n        /* \"Contract\":28257:28266  g_storage */\n      0x00\n        /* \"Contract\":28234:28266  PolyStorage memory s = g_storage */\n      sload\n      0xffffffffffffffffffffffffffffffff\n      dup1\n      dup3\n      and\n      dup1\n      dup5\n      mstore\n      0x0100000000000000000000000000000000\n      swap1\n      swap3\n      div\n      and\n      0x20\n      dup4\n      add\n      mstore\n        /* \"Contract\":28319:28341  borrowWei >= supplyWei */\n      dup4\n      dup6\n      lt\n        /* \"Contract\":28315:28459  if (borrowWei >= supplyWei) {\r... */\n      tag_34\n      jumpi\n        /* \"Contract\":28365:28447  Interest.Rate({\r... */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Contract\":26498:26516  60 * 60 * 24 * 365 */\n      0x01e13380\n        /* \"Contract\":28405:28411  maxAPR */\n      dup4\n        /* \"Contract\":28405:28431  maxAPR / SECONDS_IN_A_YEAR */\n      dup2\n      tag_35\n      jumpi\n      invalid\n    tag_35:\n      div\n        /* \"Contract\":28365:28447  Interest.Rate({\r... */\n      dup2\n      mstore\n      pop\n        /* \"Contract\":28358:28447  return Interest.Rate({\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_30)\n        /* \"Contract\":28315:28459  if (borrowWei >= supplyWei) {\r... */\n    tag_34:\n        /* \"Contract\":28536:28550  s.coefficients */\n      0x20\n      dup3\n      add\n      mload\n        /* \"Contract\":28513:28550  uint256 coefficients = s.coefficients */\n      0xffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"Contract\":26549:26550  8 */\n      0x08\n        /* \"Contract\":28615:28636  coefficients >>= BYTE */\n      shr\n      swap1\n        /* \"Contract\":28578:28604  uint8(coefficients) * BASE */\n      0xff\n      and\n        /* \"Contract\":26444:26452  10 ** 18 */\n      0x0de0b6b3a7640000\n        /* \"Contract\":28578:28604  uint8(coefficients) * BASE */\n      swap1\n      dup2\n      mul\n      swap1\n        /* \"Contract\":28513:28533  uint256 coefficients */\n      0x00\n      swap1\n        /* \"Contract\":28815:28824  supplyWei */\n      dup8\n      swap1\n        /* \"Contract\":28793:28812  BASE.mul(borrowWei) */\n      tag_36\n      swap1\n        /* \"Contract\":28802:28811  borrowWei */\n      dup11\n        /* \"Contract\":28793:28812  BASE.mul(borrowWei) */\n      0xffffffff\n        /* \"Contract\":28793:28801  BASE.mul */\n      tag_37\n        /* \"Contract\":28793:28812  BASE.mul(borrowWei) */\n      and\n      jump\t// in\n    tag_36:\n        /* \"Contract\":28793:28824  BASE.mul(borrowWei) / supplyWei */\n      dup2\n      tag_38\n      jumpi\n      invalid\n    tag_38:\n      div\n        /* \"Contract\":28772:28824  uint256 polynomial = BASE.mul(borrowWei) / supplyWei */\n      swap1\n      pop\n        /* \"Contract\":28882:29801  while (true) {\r... */\n    tag_39:\n        /* \"Contract\":28975:29003  uint256(uint8(coefficients)) */\n      0xff\n      dup4\n      and\n        /* \"Contract\":29067:29083  coefficient != 0 */\n      dup1\n      iszero\n        /* \"Contract\":29063:29474  if (coefficient != 0) {\r... */\n      tag_42\n      jumpi\n        /* \"Contract\":29280:29290  polynomial */\n      dup2\n        /* \"Contract\":29266:29277  coefficient */\n      dup2\n        /* \"Contract\":29266:29290  coefficient * polynomial */\n      mul\n        /* \"Contract\":29256:29290  result += coefficient * polynomial */\n      dup4\n      add\n      swap3\n      pop\n        /* \"Contract\":29397:29409  coefficients */\n      dup4\n        /* \"Contract\":29382:29393  coefficient */\n      dup2\n        /* \"Contract\":29382:29409  coefficient == coefficients */\n      eq\n        /* \"Contract\":29378:29459  if (coefficient == coefficients) {\r... */\n      iszero\n      tag_42\n      jumpi\n        /* \"Contract\":29434:29439  break */\n      pop\n      jump(tag_40)\n        /* \"Contract\":29378:29459  if (coefficient == coefficients) {\r... */\n    tag_42:\n      pop\n        /* \"Contract\":26549:26550  8 */\n      0x08\n        /* \"Contract\":29768:29789  coefficients >>= BYTE */\n      swap3\n      swap1\n      swap3\n      shr\n      swap2\n        /* \"Contract\":26444:26452  10 ** 18 */\n      0x0de0b6b3a7640000\n        /* \"Contract\":29680:29703  polynomial * polynomial */\n      swap1\n      dup1\n      mul\n        /* \"Contract\":29680:29710  polynomial * polynomial / BASE */\n      div\n        /* \"Contract\":28882:29801  while (true) {\r... */\n      jump(tag_39)\n    tag_40:\n        /* \"Contract\":30005:30107  Interest.Rate({\r... */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      dup1\n        /* \"Contract\":30060:30094  SECONDS_IN_A_YEAR * BASE * PERCENT */\n      0x0a3098c68eb9427db8000000\n        /* \"Contract\":30041:30056  result * maxAPR */\n      dup5\n      dup8\n      mul\n        /* \"Contract\":30041:30095  result * maxAPR / (SECONDS_IN_A_YEAR * BASE * PERCENT) */\n      div\n        /* \"Contract\":30005:30107  Interest.Rate({\r... */\n      swap1\n      mstore\n        /* \"Contract\":29998:30107  return Interest.Rate({\r... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Contract\":27905:30115  function getInterestRate(\r... */\n    tag_30:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contract\":1027:1460  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_37:\n        /* \"Contract\":1085:1092  uint256 */\n      0x00\n        /* \"Contract\":1329:1335  a == 0 */\n      dup3\n        /* \"Contract\":1325:1372  if (a == 0) {\r... */\n      tag_46\n      jumpi\n      pop\n        /* \"Contract\":1359:1360  0 */\n      0x00\n        /* \"Contract\":1352:1360  return 0 */\n      jump(tag_45)\n        /* \"Contract\":1325:1372  if (a == 0) {\r... */\n    tag_46:\n        /* \"Contract\":1396:1401  a * b */\n      dup3\n      dup3\n      mul\n        /* \"Contract\":1400:1401  b */\n      dup3\n        /* \"Contract\":1396:1397  a */\n      dup5\n        /* \"Contract\":1396:1401  a * b */\n      dup3\n        /* \"Contract\":1396:1397  a */\n      dup2\n        /* \"Contract\":1420:1425  c / a */\n      tag_47\n      jumpi\n      invalid\n    tag_47:\n      div\n        /* \"Contract\":1420:1430  c / a == b */\n      eq\n        /* \"Contract\":1412:1431  require(c / a == b) */\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n        /* \"Contract\":1451:1452  c */\n      swap1\n      pop\n        /* \"Contract\":1027:1460  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_45:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Contract\":26201:31475  contract DoubleExponentInterestSetter is\r... */\n    tag_29:\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_33:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n      jump\t// out\n        /* \"--CODEGEN--\":5:123   */\n    tag_50:\n      0x00\n        /* \"--CODEGEN--\":72:118   */\n      tag_30\n        /* \"--CODEGEN--\":110:116   */\n      dup3\n        /* \"--CODEGEN--\":97:117   */\n      calldataload\n        /* \"--CODEGEN--\":72:118   */\n      jump(tag_52)\n        /* \"--CODEGEN--\":130:248   */\n    tag_54:\n      0x00\n        /* \"--CODEGEN--\":197:243   */\n      tag_30\n        /* \"--CODEGEN--\":235:241   */\n      dup3\n        /* \"--CODEGEN--\":222:242   */\n      calldataload\n        /* \"--CODEGEN--\":197:243   */\n      jump(tag_85)\n        /* \"--CODEGEN--\":255:746   */\n    tag_16:\n      0x00\n      dup1\n      0x00\n        /* \"--CODEGEN--\":393:395   */\n      0x60\n        /* \"--CODEGEN--\":381:390   */\n      dup5\n        /* \"--CODEGEN--\":372:379   */\n      dup7\n        /* \"--CODEGEN--\":368:391   */\n      sub\n        /* \"--CODEGEN--\":364:396   */\n      slt\n        /* \"--CODEGEN--\":361:363   */\n      iszero\n      tag_58\n      jumpi\n        /* \"--CODEGEN--\":409:410   */\n      0x00\n        /* \"--CODEGEN--\":406:407   */\n      dup1\n        /* \"--CODEGEN--\":399:411   */\n      revert\n        /* \"--CODEGEN--\":361:363   */\n    tag_58:\n        /* \"--CODEGEN--\":444:445   */\n      0x00\n        /* \"--CODEGEN--\":461:514   */\n      tag_59\n        /* \"--CODEGEN--\":506:513   */\n      dup7\n        /* \"--CODEGEN--\":486:495   */\n      dup7\n        /* \"--CODEGEN--\":461:514   */\n      jump(tag_50)\n    tag_59:\n        /* \"--CODEGEN--\":451:514   */\n      swap4\n      pop\n        /* \"--CODEGEN--\":423:520   */\n      pop\n        /* \"--CODEGEN--\":551:553   */\n      0x20\n        /* \"--CODEGEN--\":569:622   */\n      tag_60\n        /* \"--CODEGEN--\":614:621   */\n      dup7\n        /* \"--CODEGEN--\":605:611   */\n      dup3\n        /* \"--CODEGEN--\":594:603   */\n      dup8\n        /* \"--CODEGEN--\":590:612   */\n      add\n        /* \"--CODEGEN--\":569:622   */\n      jump(tag_54)\n    tag_60:\n        /* \"--CODEGEN--\":559:622   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":530:628   */\n      pop\n        /* \"--CODEGEN--\":659:661   */\n      0x40\n        /* \"--CODEGEN--\":677:730   */\n      tag_61\n        /* \"--CODEGEN--\":722:729   */\n      dup7\n        /* \"--CODEGEN--\":713:719   */\n      dup3\n        /* \"--CODEGEN--\":702:711   */\n      dup8\n        /* \"--CODEGEN--\":698:720   */\n      add\n        /* \"--CODEGEN--\":677:730   */\n      jump(tag_54)\n    tag_61:\n        /* \"--CODEGEN--\":667:730   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":638:736   */\n      pop\n        /* \"--CODEGEN--\":355:746   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\n        /* \"--CODEGEN--\":754:927   */\n    tag_63:\n      0x00\n        /* \"--CODEGEN--\":841:887   */\n      tag_64\n        /* \"--CODEGEN--\":883:886   */\n      dup4\n        /* \"--CODEGEN--\":875:881   */\n      dup4\n        /* \"--CODEGEN--\":841:887   */\n      jump(tag_65)\n    tag_64:\n      pop\n      pop\n        /* \"--CODEGEN--\":916:920   */\n      0x20\n        /* \"--CODEGEN--\":907:921   */\n      add\n      swap1\n        /* \"--CODEGEN--\":834:927   */\n      jump\n        /* \"--CODEGEN--\":966:1587   */\n    tag_67:\n      0x00\n        /* \"--CODEGEN--\":1111:1165   */\n      tag_68\n        /* \"--CODEGEN--\":1159:1164   */\n      dup3\n        /* \"--CODEGEN--\":1111:1165   */\n      jump(tag_69)\n    tag_68:\n        /* \"--CODEGEN--\":1178:1264   */\n      tag_70\n        /* \"--CODEGEN--\":1257:1263   */\n      dup2\n        /* \"--CODEGEN--\":1252:1255   */\n      dup6\n        /* \"--CODEGEN--\":1178:1264   */\n      jump(tag_71)\n    tag_70:\n        /* \"--CODEGEN--\":1171:1264   */\n      swap4\n      pop\n        /* \"--CODEGEN--\":1284:1340   */\n      tag_72\n        /* \"--CODEGEN--\":1334:1339   */\n      dup4\n        /* \"--CODEGEN--\":1284:1340   */\n      jump(tag_73)\n    tag_72:\n        /* \"--CODEGEN--\":1361:1362   */\n      0x00\n        /* \"--CODEGEN--\":1346:1565   */\n    tag_74:\n        /* \"--CODEGEN--\":1371:1377   */\n      dup3\n        /* \"--CODEGEN--\":1368:1369   */\n      dup2\n        /* \"--CODEGEN--\":1365:1378   */\n      lt\n        /* \"--CODEGEN--\":1346:1565   */\n      iszero\n      tag_76\n      jumpi\n        /* \"--CODEGEN--\":1418:1481   */\n      tag_77\n        /* \"--CODEGEN--\":1477:1480   */\n      dup7\n        /* \"--CODEGEN--\":1468:1474   */\n      dup4\n        /* \"--CODEGEN--\":1462:1475   */\n      mload\n        /* \"--CODEGEN--\":1418:1481   */\n      jump(tag_63)\n    tag_77:\n        /* \"--CODEGEN--\":1411:1481   */\n      swap6\n      pop\n        /* \"--CODEGEN--\":1498:1558   */\n      tag_78\n        /* \"--CODEGEN--\":1551:1557   */\n      dup3\n        /* \"--CODEGEN--\":1498:1558   */\n      jump(tag_73)\n    tag_78:\n        /* \"--CODEGEN--\":1488:1558   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":1393:1394   */\n      0x01\n        /* \"--CODEGEN--\":1386:1395   */\n      add\n        /* \"--CODEGEN--\":1346:1565   */\n      jump(tag_74)\n    tag_76:\n      pop\n        /* \"--CODEGEN--\":1578:1581   */\n      swap4\n      swap5\n        /* \"--CODEGEN--\":1090:1587   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":1646:1959   */\n    tag_81:\n        /* \"--CODEGEN--\":1849:1871   */\n      dup1\n      mload\n        /* \"--CODEGEN--\":1783:1787   */\n      0x20\n        /* \"--CODEGEN--\":1774:1788   */\n      dup4\n      add\n      swap1\n        /* \"--CODEGEN--\":1877:1938   */\n      tag_82\n        /* \"--CODEGEN--\":1778:1781   */\n      dup5\n        /* \"--CODEGEN--\":1849:1871   */\n      dup3\n        /* \"--CODEGEN--\":1877:1938   */\n      jump(tag_65)\n    tag_82:\n        /* \"--CODEGEN--\":1803:1944   */\n      pop\n        /* \"--CODEGEN--\":1756:1959   */\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":1966:2076   */\n    tag_65:\n        /* \"--CODEGEN--\":2039:2070   */\n      tag_84\n        /* \"--CODEGEN--\":2064:2069   */\n      dup2\n        /* \"--CODEGEN--\":2039:2070   */\n      jump(tag_85)\n    tag_84:\n        /* \"--CODEGEN--\":2034:2037   */\n      dup3\n        /* \"--CODEGEN--\":2027:2071   */\n      mstore\n        /* \"--CODEGEN--\":2021:2076   */\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":2210:2571   */\n    tag_13:\n        /* \"--CODEGEN--\":2378:2380   */\n      0x20\n        /* \"--CODEGEN--\":2392:2439   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":2363:2381   */\n      dup2\n      add\n        /* \"--CODEGEN--\":2453:2561   */\n      tag_30\n        /* \"--CODEGEN--\":2363:2381   */\n      dup2\n        /* \"--CODEGEN--\":2547:2553   */\n      dup5\n        /* \"--CODEGEN--\":2453:2561   */\n      jump(tag_67)\n        /* \"--CODEGEN--\":2578:2879   */\n    tag_19:\n        /* \"--CODEGEN--\":2740:2742   */\n      0x20\n        /* \"--CODEGEN--\":2725:2743   */\n      dup2\n      add\n        /* \"--CODEGEN--\":2754:2869   */\n      tag_45\n        /* \"--CODEGEN--\":2729:2738   */\n      dup3\n        /* \"--CODEGEN--\":2842:2848   */\n      dup5\n        /* \"--CODEGEN--\":2754:2869   */\n      jump(tag_81)\n        /* \"--CODEGEN--\":2886:3099   */\n    tag_9:\n        /* \"--CODEGEN--\":3004:3006   */\n      0x20\n        /* \"--CODEGEN--\":2989:3007   */\n      dup2\n      add\n        /* \"--CODEGEN--\":3018:3089   */\n      tag_45\n        /* \"--CODEGEN--\":2993:3002   */\n      dup3\n        /* \"--CODEGEN--\":3062:3068   */\n      dup5\n        /* \"--CODEGEN--\":3018:3089   */\n      jump(tag_65)\n        /* \"--CODEGEN--\":3108:3229   */\n    tag_73:\n        /* \"--CODEGEN--\":3217:3221   */\n      0x20\n        /* \"--CODEGEN--\":3205:3222   */\n      add\n      swap1\n        /* \"--CODEGEN--\":3186:3229   */\n      jump\n        /* \"--CODEGEN--\":3238:3345   */\n    tag_69:\n        /* \"--CODEGEN--\":3328:3340   */\n      mload\n      swap1\n        /* \"--CODEGEN--\":3312:3345   */\n      jump\n        /* \"--CODEGEN--\":3484:3662   */\n    tag_71:\n        /* \"--CODEGEN--\":3602:3621   */\n      swap1\n      dup2\n      mstore\n        /* \"--CODEGEN--\":3651:3655   */\n      0x20\n        /* \"--CODEGEN--\":3642:3656   */\n      add\n      swap1\n        /* \"--CODEGEN--\":3595:3662   */\n      jump\n        /* \"--CODEGEN--\":3670:3749   */\n    tag_85:\n        /* \"--CODEGEN--\":3739:3744   */\n      swap1\n        /* \"--CODEGEN--\":3722:3749   */\n      jump\n        /* \"--CODEGEN--\":3756:3861   */\n    tag_52:\n      0x00\n        /* \"--CODEGEN--\":3948:3990   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":3937:3991   */\n      dup3\n      and\n        /* \"--CODEGEN--\":3825:3856   */\n      tag_45\n        /* \"--CODEGEN--\":3920:3996   */\n      jump\n\n    auxdata: 0xa265627a7a723058206f9bdf24393ad27887ec9ba3ad7575f7ef2b9af05445c22c2dcc1c7ba03082f76c6578706572696d656e74616cf50037\n}\n","legacyAssembly":{".code":[{"begin":26201,"end":31475,"name":"PUSH","value":"80"},{"begin":26201,"end":31475,"name":"PUSH","value":"40"},{"begin":26201,"end":31475,"name":"MSTORE"},{"begin":26816,"end":27390,"name":"CALLVALUE"},{"begin":8,"end":17,"name":"DUP1"},{"begin":5,"end":7,"name":"ISZERO"},{"begin":5,"end":7,"name":"PUSH [tag]","value":"1"},{"begin":5,"end":7,"name":"JUMPI"},{"begin":30,"end":31,"name":"PUSH","value":"0"},{"begin":27,"end":28,"name":"DUP1"},{"begin":20,"end":32,"name":"REVERT"},{"begin":5,"end":7,"name":"tag","value":"1"},{"begin":5,"end":7,"name":"JUMPDEST"},{"begin":26816,"end":27390,"name":"POP"},{"begin":26816,"end":27390,"name":"PUSH","value":"40"},{"begin":26816,"end":27390,"name":"MLOAD"},{"begin":26816,"end":27390,"name":"PUSH","value":"40"},{"begin":26816,"end":27390,"name":"DUP1"},{"begin":26816,"end":27390,"name":"PUSHSIZE"},{"begin":26816,"end":27390,"name":"DUP4"},{"begin":26816,"end":27390,"name":"CODECOPY"},{"begin":26816,"end":27390,"name":"DUP2"},{"begin":26816,"end":27390,"name":"ADD"},{"begin":26816,"end":27390,"name":"DUP1"},{"begin":26816,"end":27390,"name":"PUSH","value":"40"},{"begin":26816,"end":27390,"name":"MSTORE"},{"begin":26816,"end":27390,"name":"PUSH [tag]","value":"2"},{"begin":26816,"end":27390,"name":"SWAP2"},{"begin":26816,"end":27390,"name":"SWAP1"},{"begin":26816,"end":27390,"name":"DUP2"},{"begin":26816,"end":27390,"name":"ADD"},{"begin":26816,"end":27390,"name":"SWAP1"},{"begin":26816,"end":27390,"name":"PUSH [tag]","value":"3"},{"begin":26816,"end":27390,"name":"JUMP"},{"begin":26816,"end":27390,"name":"tag","value":"2"},{"begin":26816,"end":27390,"name":"JUMPDEST"},{"begin":27041,"end":27060,"name":"PUSH","value":"20"},{"begin":27041,"end":27060,"name":"DUP2"},{"begin":27041,"end":27060,"name":"ADD"},{"begin":27041,"end":27060,"name":"MLOAD"},{"begin":26959,"end":26984,"name":"PUSH","value":"0"},{"begin":26959,"end":26984,"name":"SWAP1"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"80"},{"begin":-1,"end":-1,"name":"SHL"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":27018,"end":27060,"name":"AND"},{"begin":26999,"end":27206,"name":"tag","value":"6"},{"begin":26999,"end":27206,"name":"JUMPDEST"},{"begin":27075,"end":27092,"name":"DUP1"},{"begin":27075,"end":27092,"name":"ISZERO"},{"begin":26999,"end":27206,"name":"PUSH [tag]","value":"7"},{"begin":26999,"end":27206,"name":"JUMPI"},{"begin":27191,"end":27194,"name":"PUSH","value":"100"},{"begin":27176,"end":27188,"name":"DUP2"},{"begin":27176,"end":27194,"name":"MOD"},{"begin":27155,"end":27194,"name":"SWAP2"},{"begin":27155,"end":27194,"name":"SWAP1"},{"begin":27155,"end":27194,"name":"SWAP2"},{"begin":27155,"end":27194,"name":"ADD"},{"begin":27155,"end":27194,"name":"SWAP1"},{"begin":26549,"end":26550,"name":"PUSH","value":"8"},{"begin":27107,"end":27128,"name":"SHR"},{"begin":26999,"end":27206,"name":"PUSH [tag]","value":"6"},{"begin":26999,"end":27206,"name":"JUMP"},{"begin":26999,"end":27206,"name":"tag","value":"7"},{"begin":26999,"end":27206,"name":"JUMPDEST"},{"begin":26999,"end":27206,"name":"POP"},{"begin":26408,"end":26411,"name":"PUSH","value":"64"},{"begin":27238,"end":27255,"name":"DUP2"},{"begin":27238,"end":27266,"name":"EQ"},{"begin":27216,"end":27322,"name":"PUSH [tag]","value":"10"},{"begin":27216,"end":27322,"name":"JUMPI"},{"begin":27216,"end":27322,"name":"PUSH","value":"40"},{"begin":27216,"end":27322,"name":"MLOAD"},{"begin":27216,"end":27322,"name":"PUSH","value":"8C379A000000000000000000000000000000000000000000000000000000000"},{"begin":27216,"end":27322,"name":"DUP2"},{"begin":27216,"end":27322,"name":"MSTORE"},{"begin":27216,"end":27322,"name":"PUSH","value":"4"},{"begin":27216,"end":27322,"name":"ADD"},{"begin":27216,"end":27322,"name":"PUSH [tag]","value":"11"},{"begin":27216,"end":27322,"name":"SWAP1"},{"begin":27216,"end":27322,"name":"PUSH [tag]","value":"12"},{"begin":27216,"end":27322,"name":"JUMP"},{"begin":27216,"end":27322,"name":"tag","value":"11"},{"begin":27216,"end":27322,"name":"JUMPDEST"},{"begin":27216,"end":27322,"name":"PUSH","value":"40"},{"begin":27216,"end":27322,"name":"MLOAD"},{"begin":27216,"end":27322,"name":"DUP1"},{"begin":27216,"end":27322,"name":"SWAP2"},{"begin":27216,"end":27322,"name":"SUB"},{"begin":27216,"end":27322,"name":"SWAP1"},{"begin":27216,"end":27322,"name":"REVERT"},{"begin":27216,"end":27322,"name":"tag","value":"10"},{"begin":27216,"end":27322,"name":"JUMPDEST"},{"begin":-1,"end":-1,"name":"POP"},{"begin":27364,"end":27382,"name":"DUP1"},{"begin":27364,"end":27382,"name":"MLOAD"},{"begin":27364,"end":27373,"name":"PUSH","value":"0"},{"begin":27364,"end":27382,"name":"DUP1"},{"begin":27364,"end":27382,"name":"SLOAD"},{"begin":27364,"end":27382,"name":"PUSH","value":"20"},{"begin":27364,"end":27382,"name":"SWAP1"},{"begin":27364,"end":27382,"name":"SWAP4"},{"begin":27364,"end":27382,"name":"ADD"},{"begin":27364,"end":27382,"name":"MLOAD"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"80"},{"begin":-1,"end":-1,"name":"SHL"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":27364,"end":27382,"name":"SWAP1"},{"begin":27364,"end":27382,"name":"DUP2"},{"begin":27364,"end":27382,"name":"AND"},{"begin":27364,"end":27382,"name":"PUSH","value":"100000000000000000000000000000000"},{"begin":27364,"end":27382,"name":"MUL"},{"begin":27364,"end":27382,"name":"SWAP3"},{"begin":27364,"end":27382,"name":"DUP2"},{"begin":27364,"end":27382,"name":"AND"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"80"},{"begin":-1,"end":-1,"name":"SHL"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":-1,"end":-1,"name":"NOT"},{"begin":27364,"end":27382,"name":"SWAP1"},{"begin":27364,"end":27382,"name":"SWAP5"},{"begin":27364,"end":27382,"name":"AND"},{"begin":27364,"end":27382,"name":"SWAP4"},{"begin":27364,"end":27382,"name":"SWAP1"},{"begin":27364,"end":27382,"name":"SWAP4"},{"begin":27364,"end":27382,"name":"OR"},{"begin":27364,"end":27382,"name":"SWAP1"},{"begin":27364,"end":27382,"name":"SWAP3"},{"begin":27364,"end":27382,"name":"AND"},{"begin":27364,"end":27382,"name":"OR"},{"begin":27364,"end":27382,"name":"SWAP1"},{"begin":27364,"end":27382,"name":"SSTORE"},{"begin":26201,"end":31475,"name":"PUSH [tag]","value":"37"},{"begin":26201,"end":31475,"name":"JUMP"},{"begin":59,"end":572,"name":"tag","value":"15"},{"begin":59,"end":572,"name":"JUMPDEST"},{"begin":59,"end":572,"name":"PUSH","value":"0"},{"begin":188,"end":192,"name":"PUSH","value":"40"},{"begin":176,"end":185,"name":"DUP3"},{"begin":171,"end":174,"name":"DUP5"},{"begin":167,"end":186,"name":"SUB"},{"begin":163,"end":193,"name":"SLT"},{"begin":160,"end":162,"name":"ISZERO"},{"begin":160,"end":162,"name":"PUSH [tag]","value":"16"},{"begin":160,"end":162,"name":"JUMPI"},{"begin":206,"end":207,"name":"PUSH","value":"0"},{"begin":203,"end":204,"name":"DUP1"},{"begin":196,"end":208,"name":"REVERT"},{"begin":160,"end":162,"name":"tag","value":"16"},{"begin":160,"end":162,"name":"JUMPDEST"},{"begin":224,"end":244,"name":"PUSH [tag]","value":"17"},{"begin":239,"end":243,"name":"PUSH","value":"40"},{"begin":224,"end":244,"name":"PUSH [tag]","value":"18"},{"begin":224,"end":244,"name":"JUMP"},{"begin":224,"end":244,"name":"tag","value":"17"},{"begin":224,"end":244,"name":"JUMPDEST"},{"begin":215,"end":244,"name":"SWAP1"},{"begin":-1,"end":-1,"name":"POP"},{"begin":296,"end":297,"name":"PUSH","value":"0"},{"begin":327,"end":387,"name":"PUSH [tag]","value":"19"},{"begin":383,"end":386,"name":"DUP5"},{"begin":363,"end":372,"name":"DUP5"},{"begin":327,"end":387,"name":"PUSH [tag]","value":"20"},{"begin":327,"end":387,"name":"JUMP"},{"begin":327,"end":387,"name":"tag","value":"19"},{"begin":327,"end":387,"name":"JUMPDEST"},{"begin":303,"end":388,"name":"DUP3"},{"begin":303,"end":388,"name":"MSTORE"},{"begin":-1,"end":-1,"name":"POP"},{"begin":457,"end":459,"name":"PUSH","value":"20"},{"begin":490,"end":550,"name":"PUSH [tag]","value":"21"},{"begin":546,"end":549,"name":"DUP5"},{"begin":522,"end":544,"name":"DUP5"},{"begin":522,"end":544,"name":"DUP4"},{"begin":522,"end":544,"name":"ADD"},{"begin":490,"end":550,"name":"PUSH [tag]","value":"20"},{"begin":490,"end":550,"name":"JUMP"},{"begin":490,"end":550,"name":"tag","value":"21"},{"begin":490,"end":550,"name":"JUMPDEST"},{"begin":483,"end":487,"name":"PUSH","value":"20"},{"begin":476,"end":481,"name":"DUP4"},{"begin":472,"end":488,"name":"ADD"},{"begin":465,"end":551,"name":"MSTORE"},{"begin":409,"end":562,"name":"POP"},{"begin":154,"end":572,"name":"SWAP3"},{"begin":154,"end":572,"name":"SWAP2"},{"begin":154,"end":572,"name":"POP"},{"begin":154,"end":572,"name":"POP"},{"begin":154,"end":572,"name":"JUMP"},{"begin":579,"end":701,"name":"tag","value":"20"},{"begin":579,"end":701,"name":"JUMPDEST"},{"begin":579,"end":701,"name":"PUSH","value":"0"},{"begin":657,"end":696,"name":"PUSH [tag]","value":"23"},{"begin":688,"end":694,"name":"DUP3"},{"begin":682,"end":695,"name":"MLOAD"},{"begin":657,"end":696,"name":"PUSH [tag]","value":"24"},{"begin":657,"end":696,"name":"JUMP"},{"begin":657,"end":696,"name":"tag","value":"23"},{"begin":657,"end":696,"name":"JUMPDEST"},{"begin":648,"end":696,"name":"SWAP4"},{"begin":642,"end":701,"name":"SWAP3"},{"begin":-1,"end":-1,"name":"POP"},{"begin":-1,"end":-1,"name":"POP"},{"begin":-1,"end":-1,"name":"POP"},{"begin":642,"end":701,"name":"JUMP"},{"begin":708,"end":1029,"name":"tag","value":"3"},{"begin":708,"end":1029,"name":"JUMPDEST"},{"begin":708,"end":1029,"name":"PUSH","value":"0"},{"begin":852,"end":854,"name":"PUSH","value":"40"},{"begin":840,"end":849,"name":"DUP3"},{"begin":831,"end":838,"name":"DUP5"},{"begin":827,"end":850,"name":"SUB"},{"begin":823,"end":855,"name":"SLT"},{"begin":820,"end":822,"name":"ISZERO"},{"begin":820,"end":822,"name":"PUSH [tag]","value":"26"},{"begin":820,"end":822,"name":"JUMPI"},{"begin":868,"end":869,"name":"PUSH","value":"0"},{"begin":865,"end":866,"name":"DUP1"},{"begin":858,"end":870,"name":"REVERT"},{"begin":820,"end":822,"name":"tag","value":"26"},{"begin":820,"end":822,"name":"JUMPDEST"},{"begin":903,"end":904,"name":"PUSH","value":"0"},{"begin":920,"end":1013,"name":"PUSH [tag]","value":"27"},{"begin":1005,"end":1012,"name":"DUP5"},{"begin":985,"end":994,"name":"DUP5"},{"begin":920,"end":1013,"name":"PUSH [tag]","value":"15"},{"begin":920,"end":1013,"name":"JUMP"},{"begin":920,"end":1013,"name":"tag","value":"27"},{"begin":920,"end":1013,"name":"JUMPDEST"},{"begin":910,"end":1013,"name":"SWAP5"},{"begin":814,"end":1029,"name":"SWAP4"},{"begin":-1,"end":-1,"name":"POP"},{"begin":-1,"end":-1,"name":"POP"},{"begin":-1,"end":-1,"name":"POP"},{"begin":-1,"end":-1,"name":"POP"},{"begin":814,"end":1029,"name":"JUMP"},{"begin":1037,"end":1401,"name":"tag","value":"29"},{"begin":1037,"end":1401,"name":"JUMPDEST"},{"begin":1037,"end":1401,"name":"PUSH","value":"0"},{"begin":1197,"end":1264,"name":"PUSH [tag]","value":"30"},{"begin":1261,"end":1263,"name":"PUSH","value":"1C"},{"begin":1256,"end":1259,"name":"DUP4"},{"begin":1197,"end":1264,"name":"PUSH [tag]","value":"31"},{"begin":1197,"end":1264,"name":"JUMP"},{"begin":1197,"end":1264,"name":"tag","value":"30"},{"begin":1197,"end":1264,"name":"JUMPDEST"},{"begin":1297,"end":1363,"name":"PUSH","value":"436F656666696369656E7473206D7573742073756D20746F2031303000000000"},{"begin":1277,"end":1364,"name":"DUP2"},{"begin":1277,"end":1364,"name":"MSTORE"},{"begin":1392,"end":1394,"name":"PUSH","value":"20"},{"begin":1383,"end":1395,"name":"ADD"},{"begin":1383,"end":1395,"name":"SWAP3"},{"begin":1183,"end":1401,"name":"SWAP2"},{"begin":-1,"end":-1,"name":"POP"},{"begin":-1,"end":-1,"name":"POP"},{"begin":1183,"end":1401,"name":"JUMP"},{"begin":1409,"end":1816,"name":"tag","value":"12"},{"begin":1409,"end":1816,"name":"JUMPDEST"},{"begin":1600,"end":1602,"name":"PUSH","value":"20"},{"begin":1614,"end":1661,"name":"DUP1"},{"begin":1614,"end":1661,"name":"DUP3"},{"begin":1614,"end":1661,"name":"MSTORE"},{"begin":1585,"end":1603,"name":"DUP2"},{"begin":1585,"end":1603,"name":"ADD"},{"begin":1675,"end":1806,"name":"PUSH [tag]","value":"33"},{"begin":1585,"end":1603,"name":"DUP2"},{"begin":1675,"end":1806,"name":"PUSH [tag]","value":"29"},{"begin":1675,"end":1806,"name":"JUMP"},{"begin":1675,"end":1806,"name":"tag","value":"33"},{"begin":1675,"end":1806,"name":"JUMPDEST"},{"begin":1667,"end":1806,"name":"SWAP3"},{"begin":1571,"end":1816,"name":"SWAP2"},{"begin":-1,"end":-1,"name":"POP"},{"begin":-1,"end":-1,"name":"POP"},{"begin":1571,"end":1816,"name":"JUMP"},{"begin":1823,"end":2079,"name":"tag","value":"18"},{"begin":1823,"end":2079,"name":"JUMPDEST"},{"begin":1885,"end":1887,"name":"PUSH","value":"40"},{"begin":1879,"end":1888,"name":"MLOAD"},{"begin":1911,"end":1928,"name":"DUP2"},{"begin":1911,"end":1928,"name":"DUP2"},{"begin":1911,"end":1928,"name":"ADD"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"40"},{"begin":-1,"end":-1,"name":"SHL"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":1971,"end":2005,"name":"DUP2"},{"begin":1971,"end":2005,"name":"GT"},{"begin":2007,"end":2029,"name":"DUP3"},{"begin":2007,"end":2029,"name":"DUP3"},{"begin":2007,"end":2029,"name":"LT"},{"begin":1968,"end":2030,"name":"OR"},{"begin":1965,"end":1967,"name":"ISZERO"},{"begin":1965,"end":1967,"name":"PUSH [tag]","value":"35"},{"begin":1965,"end":1967,"name":"JUMPI"},{"begin":2043,"end":2044,"name":"PUSH","value":"0"},{"begin":2040,"end":2041,"name":"DUP1"},{"begin":2033,"end":2045,"name":"REVERT"},{"begin":1965,"end":1967,"name":"tag","value":"35"},{"begin":1965,"end":1967,"name":"JUMPDEST"},{"begin":2059,"end":2061,"name":"PUSH","value":"40"},{"begin":2052,"end":2074,"name":"MSTORE"},{"begin":1863,"end":2079,"name":"SWAP2"},{"begin":1863,"end":2079,"name":"SWAP1"},{"begin":-1,"end":-1,"name":"POP"},{"begin":1863,"end":2079,"name":"JUMP"},{"begin":2087,"end":2250,"name":"tag","value":"31"},{"begin":2087,"end":2250,"name":"JUMPDEST"},{"begin":2190,"end":2209,"name":"SWAP1"},{"begin":2190,"end":2209,"name":"DUP2"},{"begin":2190,"end":2209,"name":"MSTORE"},{"begin":2239,"end":2243,"name":"PUSH","value":"20"},{"begin":2230,"end":2244,"name":"ADD"},{"begin":2230,"end":2244,"name":"SWAP1"},{"begin":2183,"end":2250,"name":"JUMP"},{"begin":2258,"end":2378,"name":"tag","value":"24"},{"begin":2258,"end":2378,"name":"JUMPDEST"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"1"},{"begin":-1,"end":-1,"name":"PUSH","value":"80"},{"begin":-1,"end":-1,"name":"SHL"},{"begin":-1,"end":-1,"name":"SUB"},{"begin":2327,"end":2373,"name":"AND"},{"begin":2327,"end":2373,"name":"SWAP1"},{"begin":2310,"end":2378,"name":"JUMP"},{"begin":2310,"end":2378,"name":"tag","value":"37"},{"begin":2310,"end":2378,"name":"JUMPDEST"},{"begin":26201,"end":31475,"name":"PUSH #[$]","value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":26201,"end":31475,"name":"DUP1"},{"begin":26201,"end":31475,"name":"PUSH [$]","value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":26201,"end":31475,"name":"PUSH","value":"0"},{"begin":26201,"end":31475,"name":"CODECOPY"},{"begin":26201,"end":31475,"name":"PUSH","value":"0"},{"begin":26201,"end":31475,"name":"RETURN"}],".data":{"0":{".auxdata":"a265627a7a723058206f9bdf24393ad27887ec9ba3ad7575f7ef2b9af05445c22c2dcc1c7ba03082f76c6578706572696d656e74616cf50037",".code":[{"begin":26201,"end":31475,"name":"PUSH","value":"80"},{"begin":26201,"end":31475,"name":"PUSH","value":"40"},{"begin":26201,"end":31475,"name":"MSTORE"},{"begin":26201,"end":31475,"name":"CALLVALUE"},{"begin":8,"end":17,"name":"DUP1"},{"begin":5,"end":7,"name":"ISZERO"},{"begin":5,"end":7,"name":"PUSH [tag]","value":"1"},{"begin":5,"end":7,"name":"JUMPI"},{"begin":30,"end":31,"name":"PUSH","value":"0"},{"begin":27,"end":28,"name":"DUP1"},{"begin":20,"end":32,"name":"REVERT"},{"begin":5,"end":7,"name":"tag","value":"1"},{"begin":5,"end":7,"name":"JUMPDEST"},{"begin":26201,"end":31475,"name":"POP"},{"begin":26201,"end":31475,"name":"PUSH","value":"4"},{"begin":26201,"end":31475,"name":"CALLDATASIZE"},{"begin":26201,"end":31475,"name":"LT"},{"begin":26201,"end":31475,"name":"PUSH [tag]","value":"2"},{"begin":26201,"end":31475,"name":"JUMPI"},{"begin":26201,"end":31475,"name":"PUSH","value":"0"},{"begin":26201,"end":31475,"name":"CALLDATALOAD"},{"begin":26201,"end":31475,"name":"PUSH","value":"E0"},{"begin":26201,"end":31475,"name":"SHR"},{"begin":26201,"end":31475,"name":"DUP1"},{"begin":26201,"end":31475,"name":"PUSH","value":"1E68607A"},{"begin":26201,"end":31475,"name":"EQ"},{"begin":26201,"end":31475,"name":"PUSH [tag]","value":"3"},{"begin":26201,"end":31475,"name":"JUMPI"},{"begin":26201,"end":31475,"name":"DUP1"},{"begin":26201,"end":31475,"name":"PUSH","value":"AFD4C8D6"},{"begin":26201,"end":31475,"name":"EQ"},{"begin":26201,"end":31475,"name":"PUSH [tag]","value":"4"},{"begin":26201,"end":31475,"name":"JUMPI"},{"begin":26201,"end":31475,"name":"DUP1"},{"begin":26201,"end":31475,"name":"PUSH","value":"E8177DCF"},{"begin":26201,"end":31475,"name":"EQ"},{"begin":26201,"end":31475,"name":"PUSH [tag]","value":"5"},{"begin":26201,"end":31475,"name":"JUMPI"},{"begin":26201,"end":31475,"name":"tag","value":"2"},{"begin":26201,"end":31475,"name":"JUMPDEST"},{"begin":26201,"end":31475,"name":"PUSH","value":"0"},{"begin":26201,"end":31475,"name":"DUP1"},{"begin":26201,"end":31475,"name":"REVERT"},{"begin":30335,"end":30462,"name":"tag","value":"3"},{"begin":30335,"end":30462,"name":"JUMPDEST"},{"begin":30335,"end":30462,"name":"PUSH [tag]","value":"6"},{"begin":30335,"end":30462,"name":"PUSH [tag]","value":"7"},{"begin":30335,"end":30462,"name":"JUMP","value":"[in]"},{"begin":30335,"end":30462,"name":"tag","value":"6"},{"begin":30335,"end":30462,"name":"JUMPDEST"},{"begin":30335,"end":30462,"name":"PUSH","value":"40"},{"begin":30335,"end":30462,"name":"MLOAD"},{"begin":30335,"end":30462,"name":"PUSH [tag]","value":"8"},{"begin":30335,"end":30462,"name":"SWAP2"},{"begin":30335,"end":30462,"name":"SWAP1"},{"begin":30335,"end":30462,"name":"PUSH [tag]","value":"9"},{"begin":30335,"end":30462,"name":"JUMP"},{"begin":30335,"end":30462,"name":"tag","value":"8"},{"begin":30335,"end":30462,"name":"JUMPDEST"},{"begin":30335,"end":30462,"name":"PUSH","value":"40"},{"begin":30335,"end":30462,"name":"MLOAD"},{"begin":30335,"end":30462,"name":"DUP1"},{"begin":30335,"end":30462,"name":"SWAP2"},{"begin":30335,"end":30462,"name":"SUB"},{"begin":30335,"end":30462,"name":"SWAP1"},{"begin":30335,"end":30462,"name":"RETURN"},{"begin":30674,"end":31472,"name":"tag","value":"4"},{"begin":30674,"end":31472,"name":"JUMPDEST"},{"begin":30674,"end":31472,"name":"PUSH [tag]","value":"10"},{"begin":30674,"end":31472,"name":"PUSH [tag]","value":"11"},{"begin":30674,"end":31472,"name":"JUMP","value":"[in]"},{"begin":30674,"end":31472,"name":"tag","value":"10"},{"begin":30674,"end":31472,"name":"JUMPDEST"},{"begin":30674,"end":31472,"name":"PUSH","value":"40"},{"begin":30674,"end":31472,"name":"MLOAD"},{"begin":30674,"end":31472,"name":"PUSH [tag]","value":"8"},{"begin":30674,"end":31472,"name":"SWAP2"},{"begin":30674,"end":31472,"name":"SWAP1"},{"begin":30674,"end":31472,"name":"PUSH [tag]","value":"13"},{"begin":30674,"end":31472,"name":"JUMP"},{"begin":27905,"end":30115,"name":"tag","value":"5"},{"begin":27905,"end":30115,"name":"JUMPDEST"},{"begin":27905,"end":30115,"name":"PUSH [tag]","value":"14"},{"begin":27905,"end":30115,"name":"PUSH [tag]","value":"15"},{"begin":27905,"end":30115,"name":"CALLDATASIZE"},{"begin":27905,"end":30115,"name":"PUSH","value":"4"},{"begin":27905,"end":30115,"name":"PUSH [tag]","value":"16"},{"begin":27905,"end":30115,"name":"JUMP"},{"begin":27905,"end":30115,"name":"tag","value":"15"},{"begin":27905,"end":30115,"name":"JUMPDEST"},{"begin":27905,"end":30115,"name":"PUSH [tag]","value":"17"},{"begin":27905,"end":30115,"name":"JUMP","value":"[in]"},{"begin":27905,"end":30115,"name":"tag","value":"14"},{"begin":27905,"end":30115,"name":"JUMPDEST"},{"begin":27905,"end":30115,"name":"PUSH","value":"40"},{"begin":27905,"end":30115,"name":"MLOAD"},{"begin":27905,"end":30115,"name":"PUSH [tag]","value":"8"},{"begin":27905,"end":30115,"name":"SWAP2"},{"begin":27905,"end":30115,"name":"SWAP1"},{"begin":27905,"end":30115,"name":"PUSH [tag]","value":"19"},{"begin":27905,"end":30115,"name":"JUMP"},{"begin":30335,"end":30462,"name":"tag","value":"7"},{"begin":30335,"end":30462,"name":"JUMPDEST"},{"begin":30406,"end":30413,"name":"PUSH","value":"0"},{"begin":30438,"end":30454,"name":"SLOAD"},{"begin":30438,"end":30454,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":30438,"end":30454,"name":"AND"},{"begin":30335,"end":30462,"name":"SWAP1"},{"begin":30335,"end":30462,"name":"JUMP","value":"[out]"},{"begin":30674,"end":31472,"name":"tag","value":"11"},{"begin":30674,"end":31472,"name":"JUMPDEST"},{"begin":30874,"end":30891,"name":"PUSH","value":"40"},{"begin":30874,"end":30891,"name":"DUP1"},{"begin":30874,"end":30891,"name":"MLOAD"},{"begin":30888,"end":30890,"name":"PUSH","value":"10"},{"begin":30874,"end":30891,"name":"DUP1"},{"begin":30874,"end":30891,"name":"DUP3"},{"begin":30874,"end":30891,"name":"MSTORE"},{"begin":30874,"end":30891,"name":"PUSH","value":"220"},{"begin":30874,"end":30891,"name":"DUP3"},{"begin":30874,"end":30891,"name":"ADD"},{"begin":30874,"end":30891,"name":"SWAP1"},{"begin":30874,"end":30891,"name":"SWAP3"},{"begin":30874,"end":30891,"name":"MSTORE"},{"begin":30751,"end":30767,"name":"PUSH","value":"60"},{"begin":30751,"end":30767,"name":"SWAP2"},{"begin":30751,"end":30767,"name":"DUP3"},{"begin":30751,"end":30767,"name":"SWAP2"},{"begin":30874,"end":30891,"name":"SWAP1"},{"begin":30874,"end":30891,"name":"PUSH","value":"20"},{"begin":30874,"end":30891,"name":"DUP3"},{"begin":30874,"end":30891,"name":"ADD"},{"begin":17,"end":32,"name":"PUSH","value":"200"},{"begin":17,"end":32,"name":"DUP1"},{"begin":105,"end":115,"name":"CODESIZE"},{"begin":30874,"end":30891,"name":"DUP4"},{"begin":88,"end":122,"name":"CODECOPY"},{"begin":-1,"end":-1,"name":"POP"},{"begin":-1,"end":-1,"name":"POP"},{"begin":30950,"end":30973,"name":"PUSH","value":"0"},{"begin":31030,"end":31052,"name":"DUP1"},{"begin":31030,"end":31052,"name":"SLOAD"},{"begin":30848,"end":30891,"name":"SWAP3"},{"begin":30848,"end":30891,"name":"SWAP4"},{"begin":-1,"end":-1,"name":"POP"},{"begin":30950,"end":30973,"name":"SWAP2"},{"begin":31030,"end":31052,"name":"PUSH","value":"100000000000000000000000000000000"},{"begin":31030,"end":31052,"name":"SWAP1"},{"begin":31030,"end":31052,"name":"DIV"},{"begin":31030,"end":31052,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":31030,"end":31052,"name":"AND"},{"begin":31030,"end":31052,"name":"SWAP1"},{"begin":-1,"end":-1,"name":"POP"},{"begin":30988,"end":31235,"name":"tag","value":"23"},{"begin":30988,"end":31235,"name":"JUMPDEST"},{"begin":31067,"end":31084,"name":"DUP1"},{"begin":31067,"end":31084,"name":"ISZERO"},{"begin":30988,"end":31235,"name":"PUSH [tag]","value":"24"},{"begin":30988,"end":31235,"name":"JUMPI"},{"begin":31188,"end":31191,"name":"PUSH","value":"100"},{"begin":31173,"end":31185,"name":"DUP2"},{"begin":31173,"end":31191,"name":"MOD"},{"begin":31147,"end":31153,"name":"DUP4"},{"begin":31154,"end":31169,"name":"DUP4"},{"begin":31147,"end":31170,"name":"DUP2"},{"begin":31147,"end":31170,"name":"MLOAD"},{"begin":31147,"end":31170,"name":"DUP2"},{"begin":31147,"end":31170,"name":"LT"},{"begin":31147,"end":31170,"name":"PUSH [tag]","value":"27"},{"begin":31147,"end":31170,"name":"JUMPI"},{"begin":31147,"end":31170,"name":"INVALID"},{"begin":31147,"end":31170,"name":"tag","value":"27"},{"begin":31147,"end":31170,"name":"JUMPDEST"},{"begin":31147,"end":31170,"name":"PUSH","value":"20"},{"begin":31147,"end":31170,"name":"SWAP1"},{"begin":31147,"end":31170,"name":"DUP2"},{"begin":31147,"end":31170,"name":"MUL"},{"begin":31147,"end":31170,"name":"SWAP2"},{"begin":31147,"end":31170,"name":"SWAP1"},{"begin":31147,"end":31170,"name":"SWAP2"},{"begin":31147,"end":31170,"name":"ADD"},{"begin":31147,"end":31170,"name":"ADD"},{"begin":31147,"end":31191,"name":"MSTORE"},{"begin":31206,"end":31223,"name":"PUSH","value":"1"},{"begin":31206,"end":31223,"name":"SWAP1"},{"begin":31206,"end":31223,"name":"SWAP2"},{"begin":31206,"end":31223,"name":"ADD"},{"begin":31206,"end":31223,"name":"SWAP1"},{"begin":26549,"end":26550,"name":"PUSH","value":"8"},{"begin":31099,"end":31120,"name":"SHR"},{"begin":30988,"end":31235,"name":"PUSH [tag]","value":"23"},{"begin":30988,"end":31235,"name":"JUMP"},{"begin":30988,"end":31235,"name":"tag","value":"24"},{"begin":30988,"end":31235,"name":"JUMPDEST"},{"begin":-1,"end":-1,"name":"POP"},{"begin":31397,"end":31428,"name":"DUP2"},{"begin":31397,"end":31428,"name":"MSTORE"},{"begin":31404,"end":31410,"name":"SWAP1"},{"begin":-1,"end":-1,"name":"POP"},{"begin":30674,"end":31472,"name":"SWAP1"},{"begin":30674,"end":31472,"name":"JUMP","value":"[out]"},{"begin":27905,"end":30115,"name":"tag","value":"17"},{"begin":27905,"end":30115,"name":"JUMPDEST"},{"begin":28073,"end":28093,"name":"PUSH [tag]","value":"28"},{"begin":28073,"end":28093,"name":"PUSH [tag]","value":"29"},{"begin":28073,"end":28093,"name":"JUMP","value":"[in]"},{"begin":28073,"end":28093,"name":"tag","value":"28"},{"begin":28073,"end":28093,"name":"JUMPDEST"},{"begin":28115,"end":28129,"name":"DUP3"},{"begin":28111,"end":28222,"name":"PUSH [tag]","value":"31"},{"begin":28111,"end":28222,"name":"JUMPI"},{"begin":-1,"end":-1,"name":"POP"},{"begin":28153,"end":28210,"name":"PUSH","value":"40"},{"begin":28153,"end":28210,"name":"DUP1"},{"begin":28153,"end":28210,"name":"MLOAD"},{"begin":28153,"end":28210,"name":"PUSH","value":"20"},{"begin":28153,"end":28210,"name":"DUP2"},{"begin":28153,"end":28210,"name":"ADD"},{"begin":28153,"end":28210,"name":"SWAP1"},{"begin":28153,"end":28210,"name":"SWAP2"},{"begin":28153,"end":28210,"name":"MSTORE"},{"begin":-1,"end":-1,"name":"PUSH","value":"0"},{"begin":28153,"end":28210,"name":"DUP2"},{"begin":28153,"end":28210,"name":"MSTORE"},{"begin":28146,"end":28210,"name":"PUSH [tag]","value":"30"},{"begin":28146,"end":28210,"name":"JUMP"},{"begin":28111,"end":28222,"name":"tag","value":"31"},{"begin":28111,"end":28222,"name":"JUMPDEST"},{"begin":28234,"end":28254,"name":"PUSH [tag]","value":"32"},{"begin":28234,"end":28254,"name":"PUSH [tag]","value":"33"},{"begin":28234,"end":28254,"name":"JUMP","value":"[in]"},{"begin":28234,"end":28254,"name":"tag","value":"32"},{"begin":28234,"end":28254,"name":"JUMPDEST"},{"begin":-1,"end":-1,"name":"POP"},{"begin":28234,"end":28266,"name":"PUSH","value":"40"},{"begin":28234,"end":28266,"name":"DUP1"},{"begin":28234,"end":28266,"name":"MLOAD"},{"begin":28234,"end":28266,"name":"DUP1"},{"begin":28234,"end":28266,"name":"DUP3"},{"begin":28234,"end":28266,"name":"ADD"},{"begin":28234,"end":28266,"name":"SWAP1"},{"begin":28234,"end":28266,"name":"SWAP2"},{"begin":28234,"end":28266,"name":"MSTORE"},{"begin":28257,"end":28266,"name":"PUSH","value":"0"},{"begin":28234,"end":28266,"name":"SLOAD"},{"begin":28234,"end":28266,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":28234,"end":28266,"name":"DUP1"},{"begin":28234,"end":28266,"name":"DUP3"},{"begin":28234,"end":28266,"name":"AND"},{"begin":28234,"end":28266,"name":"DUP1"},{"begin":28234,"end":28266,"name":"DUP5"},{"begin":28234,"end":28266,"name":"MSTORE"},{"begin":28234,"end":28266,"name":"PUSH","value":"100000000000000000000000000000000"},{"begin":28234,"end":28266,"name":"SWAP1"},{"begin":28234,"end":28266,"name":"SWAP3"},{"begin":28234,"end":28266,"name":"DIV"},{"begin":28234,"end":28266,"name":"AND"},{"begin":28234,"end":28266,"name":"PUSH","value":"20"},{"begin":28234,"end":28266,"name":"DUP4"},{"begin":28234,"end":28266,"name":"ADD"},{"begin":28234,"end":28266,"name":"MSTORE"},{"begin":28319,"end":28341,"name":"DUP4"},{"begin":28319,"end":28341,"name":"DUP6"},{"begin":28319,"end":28341,"name":"LT"},{"begin":28315,"end":28459,"name":"PUSH [tag]","value":"34"},{"begin":28315,"end":28459,"name":"JUMPI"},{"begin":28365,"end":28447,"name":"PUSH","value":"40"},{"begin":28365,"end":28447,"name":"MLOAD"},{"begin":28365,"end":28447,"name":"DUP1"},{"begin":28365,"end":28447,"name":"PUSH","value":"20"},{"begin":28365,"end":28447,"name":"ADD"},{"begin":28365,"end":28447,"name":"PUSH","value":"40"},{"begin":28365,"end":28447,"name":"MSTORE"},{"begin":28365,"end":28447,"name":"DUP1"},{"begin":26498,"end":26516,"name":"PUSH","value":"1E13380"},{"begin":28405,"end":28411,"name":"DUP4"},{"begin":28405,"end":28431,"name":"DUP2"},{"begin":28405,"end":28431,"name":"PUSH [tag]","value":"35"},{"begin":28405,"end":28431,"name":"JUMPI"},{"begin":28405,"end":28431,"name":"INVALID"},{"begin":28405,"end":28431,"name":"tag","value":"35"},{"begin":28405,"end":28431,"name":"JUMPDEST"},{"begin":28405,"end":28431,"name":"DIV"},{"begin":28365,"end":28447,"name":"DUP2"},{"begin":28365,"end":28447,"name":"MSTORE"},{"begin":28365,"end":28447,"name":"POP"},{"begin":28358,"end":28447,"name":"SWAP3"},{"begin":28358,"end":28447,"name":"POP"},{"begin":28358,"end":28447,"name":"POP"},{"begin":28358,"end":28447,"name":"POP"},{"begin":28358,"end":28447,"name":"PUSH [tag]","value":"30"},{"begin":28358,"end":28447,"name":"JUMP"},{"begin":28315,"end":28459,"name":"tag","value":"34"},{"begin":28315,"end":28459,"name":"JUMPDEST"},{"begin":28536,"end":28550,"name":"PUSH","value":"20"},{"begin":28536,"end":28550,"name":"DUP3"},{"begin":28536,"end":28550,"name":"ADD"},{"begin":28536,"end":28550,"name":"MLOAD"},{"begin":28513,"end":28550,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":28513,"end":28550,"name":"DUP2"},{"begin":28513,"end":28550,"name":"AND"},{"begin":26549,"end":26550,"name":"PUSH","value":"8"},{"begin":28615,"end":28636,"name":"SHR"},{"begin":28615,"end":28636,"name":"SWAP1"},{"begin":28578,"end":28604,"name":"PUSH","value":"FF"},{"begin":28578,"end":28604,"name":"AND"},{"begin":26444,"end":26452,"name":"PUSH","value":"DE0B6B3A7640000"},{"begin":28578,"end":28604,"name":"SWAP1"},{"begin":28578,"end":28604,"name":"DUP2"},{"begin":28578,"end":28604,"name":"MUL"},{"begin":28578,"end":28604,"name":"SWAP1"},{"begin":28513,"end":28533,"name":"PUSH","value":"0"},{"begin":28513,"end":28533,"name":"SWAP1"},{"begin":28815,"end":28824,"name":"DUP8"},{"begin":28815,"end":28824,"name":"SWAP1"},{"begin":28793,"end":28812,"name":"PUSH [tag]","value":"36"},{"begin":28793,"end":28812,"name":"SWAP1"},{"begin":28802,"end":28811,"name":"DUP11"},{"begin":28793,"end":28812,"name":"PUSH","value":"FFFFFFFF"},{"begin":28793,"end":28801,"name":"PUSH [tag]","value":"37"},{"begin":28793,"end":28812,"name":"AND"},{"begin":28793,"end":28812,"name":"JUMP","value":"[in]"},{"begin":28793,"end":28812,"name":"tag","value":"36"},{"begin":28793,"end":28812,"name":"JUMPDEST"},{"begin":28793,"end":28824,"name":"DUP2"},{"begin":28793,"end":28824,"name":"PUSH [tag]","value":"38"},{"begin":28793,"end":28824,"name":"JUMPI"},{"begin":28793,"end":28824,"name":"INVALID"},{"begin":28793,"end":28824,"name":"tag","value":"38"},{"begin":28793,"end":28824,"name":"JUMPDEST"},{"begin":28793,"end":28824,"name":"DIV"},{"begin":28772,"end":28824,"name":"SWAP1"},{"begin":28772,"end":28824,"name":"POP"},{"begin":28882,"end":29801,"name":"tag","value":"39"},{"begin":28882,"end":29801,"name":"JUMPDEST"},{"begin":28975,"end":29003,"name":"PUSH","value":"FF"},{"begin":28975,"end":29003,"name":"DUP4"},{"begin":28975,"end":29003,"name":"AND"},{"begin":29067,"end":29083,"name":"DUP1"},{"begin":29067,"end":29083,"name":"ISZERO"},{"begin":29063,"end":29474,"name":"PUSH [tag]","value":"42"},{"begin":29063,"end":29474,"name":"JUMPI"},{"begin":29280,"end":29290,"name":"DUP2"},{"begin":29266,"end":29277,"name":"DUP2"},{"begin":29266,"end":29290,"name":"MUL"},{"begin":29256,"end":29290,"name":"DUP4"},{"begin":29256,"end":29290,"name":"ADD"},{"begin":29256,"end":29290,"name":"SWAP3"},{"begin":29256,"end":29290,"name":"POP"},{"begin":29397,"end":29409,"name":"DUP4"},{"begin":29382,"end":29393,"name":"DUP2"},{"begin":29382,"end":29409,"name":"EQ"},{"begin":29378,"end":29459,"name":"ISZERO"},{"begin":29378,"end":29459,"name":"PUSH [tag]","value":"42"},{"begin":29378,"end":29459,"name":"JUMPI"},{"begin":29434,"end":29439,"name":"POP"},{"begin":29434,"end":29439,"name":"PUSH [tag]","value":"40"},{"begin":29434,"end":29439,"name":"JUMP"},{"begin":29378,"end":29459,"name":"tag","value":"42"},{"begin":29378,"end":29459,"name":"JUMPDEST"},{"begin":-1,"end":-1,"name":"POP"},{"begin":26549,"end":26550,"name":"PUSH","value":"8"},{"begin":29768,"end":29789,"name":"SWAP3"},{"begin":29768,"end":29789,"name":"SWAP1"},{"begin":29768,"end":29789,"name":"SWAP3"},{"begin":29768,"end":29789,"name":"SHR"},{"begin":29768,"end":29789,"name":"SWAP2"},{"begin":26444,"end":26452,"name":"PUSH","value":"DE0B6B3A7640000"},{"begin":29680,"end":29703,"name":"SWAP1"},{"begin":29680,"end":29703,"name":"DUP1"},{"begin":29680,"end":29703,"name":"MUL"},{"begin":29680,"end":29710,"name":"DIV"},{"begin":28882,"end":29801,"name":"PUSH [tag]","value":"39"},{"begin":28882,"end":29801,"name":"JUMP"},{"begin":28882,"end":29801,"name":"tag","value":"40"},{"begin":28882,"end":29801,"name":"JUMPDEST"},{"begin":30005,"end":30107,"name":"PUSH","value":"40"},{"begin":30005,"end":30107,"name":"DUP1"},{"begin":30005,"end":30107,"name":"MLOAD"},{"begin":30005,"end":30107,"name":"PUSH","value":"20"},{"begin":30005,"end":30107,"name":"DUP2"},{"begin":30005,"end":30107,"name":"ADD"},{"begin":30005,"end":30107,"name":"SWAP1"},{"begin":30005,"end":30107,"name":"SWAP2"},{"begin":30005,"end":30107,"name":"MSTORE"},{"begin":30005,"end":30107,"name":"DUP1"},{"begin":30060,"end":30094,"name":"PUSH","value":"A3098C68EB9427DB8000000"},{"begin":30041,"end":30056,"name":"DUP5"},{"begin":30041,"end":30056,"name":"DUP8"},{"begin":30041,"end":30056,"name":"MUL"},{"begin":30041,"end":30095,"name":"DIV"},{"begin":30005,"end":30107,"name":"SWAP1"},{"begin":30005,"end":30107,"name":"MSTORE"},{"begin":29998,"end":30107,"name":"SWAP6"},{"begin":-1,"end":-1,"name":"POP"},{"begin":-1,"end":-1,"name":"POP"},{"begin":-1,"end":-1,"name":"POP"},{"begin":-1,"end":-1,"name":"POP"},{"begin":-1,"end":-1,"name":"POP"},{"begin":-1,"end":-1,"name":"POP"},{"begin":27905,"end":30115,"name":"tag","value":"30"},{"begin":27905,"end":30115,"name":"JUMPDEST"},{"begin":27905,"end":30115,"name":"SWAP4"},{"begin":27905,"end":30115,"name":"SWAP3"},{"begin":27905,"end":30115,"name":"POP"},{"begin":27905,"end":30115,"name":"POP"},{"begin":27905,"end":30115,"name":"POP"},{"begin":27905,"end":30115,"name":"JUMP","value":"[out]"},{"begin":1027,"end":1460,"name":"tag","value":"37"},{"begin":1027,"end":1460,"name":"JUMPDEST"},{"begin":1085,"end":1092,"name":"PUSH","value":"0"},{"begin":1329,"end":1335,"name":"DUP3"},{"begin":1325,"end":1372,"name":"PUSH [tag]","value":"46"},{"begin":1325,"end":1372,"name":"JUMPI"},{"begin":-1,"end":-1,"name":"POP"},{"begin":1359,"end":1360,"name":"PUSH","value":"0"},{"begin":1352,"end":1360,"name":"PUSH [tag]","value":"45"},{"begin":1352,"end":1360,"name":"JUMP"},{"begin":1325,"end":1372,"name":"tag","value":"46"},{"begin":1325,"end":1372,"name":"JUMPDEST"},{"begin":1396,"end":1401,"name":"DUP3"},{"begin":1396,"end":1401,"name":"DUP3"},{"begin":1396,"end":1401,"name":"MUL"},{"begin":1400,"end":1401,"name":"DUP3"},{"begin":1396,"end":1397,"name":"DUP5"},{"begin":1396,"end":1401,"name":"DUP3"},{"begin":1396,"end":1397,"name":"DUP2"},{"begin":1420,"end":1425,"name":"PUSH [tag]","value":"47"},{"begin":1420,"end":1425,"name":"JUMPI"},{"begin":1420,"end":1425,"name":"INVALID"},{"begin":1420,"end":1425,"name":"tag","value":"47"},{"begin":1420,"end":1425,"name":"JUMPDEST"},{"begin":1420,"end":1425,"name":"DIV"},{"begin":1420,"end":1430,"name":"EQ"},{"begin":1412,"end":1431,"name":"PUSH [tag]","value":"48"},{"begin":1412,"end":1431,"name":"JUMPI"},{"begin":1412,"end":1431,"name":"PUSH","value":"0"},{"begin":1412,"end":1431,"name":"DUP1"},{"begin":1412,"end":1431,"name":"REVERT"},{"begin":1412,"end":1431,"name":"tag","value":"48"},{"begin":1412,"end":1431,"name":"JUMPDEST"},{"begin":1451,"end":1452,"name":"SWAP1"},{"begin":-1,"end":-1,"name":"POP"},{"begin":1027,"end":1460,"name":"tag","value":"45"},{"begin":1027,"end":1460,"name":"JUMPDEST"},{"begin":1027,"end":1460,"name":"SWAP3"},{"begin":1027,"end":1460,"name":"SWAP2"},{"begin":1027,"end":1460,"name":"POP"},{"begin":1027,"end":1460,"name":"POP"},{"begin":1027,"end":1460,"name":"JUMP","value":"[out]"},{"begin":26201,"end":31475,"name":"tag","value":"29"},{"begin":26201,"end":31475,"name":"JUMPDEST"},{"begin":26201,"end":31475,"name":"PUSH","value":"40"},{"begin":26201,"end":31475,"name":"MLOAD"},{"begin":26201,"end":31475,"name":"DUP1"},{"begin":26201,"end":31475,"name":"PUSH","value":"20"},{"begin":26201,"end":31475,"name":"ADD"},{"begin":26201,"end":31475,"name":"PUSH","value":"40"},{"begin":26201,"end":31475,"name":"MSTORE"},{"begin":26201,"end":31475,"name":"DUP1"},{"begin":26201,"end":31475,"name":"PUSH","value":"0"},{"begin":26201,"end":31475,"name":"DUP2"},{"begin":26201,"end":31475,"name":"MSTORE"},{"begin":26201,"end":31475,"name":"POP"},{"begin":26201,"end":31475,"name":"SWAP1"},{"begin":26201,"end":31475,"name":"JUMP","value":"[out]"},{"begin":26201,"end":31475,"name":"tag","value":"33"},{"begin":26201,"end":31475,"name":"JUMPDEST"},{"begin":26201,"end":31475,"name":"PUSH","value":"40"},{"begin":26201,"end":31475,"name":"DUP1"},{"begin":26201,"end":31475,"name":"MLOAD"},{"begin":26201,"end":31475,"name":"DUP1"},{"begin":26201,"end":31475,"name":"DUP3"},{"begin":26201,"end":31475,"name":"ADD"},{"begin":26201,"end":31475,"name":"SWAP1"},{"begin":26201,"end":31475,"name":"SWAP2"},{"begin":26201,"end":31475,"name":"MSTORE"},{"begin":-1,"end":-1,"name":"PUSH","value":"0"},{"begin":26201,"end":31475,"name":"DUP1"},{"begin":26201,"end":31475,"name":"DUP3"},{"begin":26201,"end":31475,"name":"MSTORE"},{"begin":26201,"end":31475,"name":"PUSH","value":"20"},{"begin":26201,"end":31475,"name":"DUP3"},{"begin":26201,"end":31475,"name":"ADD"},{"begin":26201,"end":31475,"name":"MSTORE"},{"begin":26201,"end":31475,"name":"SWAP1"},{"begin":26201,"end":31475,"name":"JUMP","value":"[out]"},{"begin":5,"end":123,"name":"tag","value":"50"},{"begin":5,"end":123,"name":"JUMPDEST"},{"begin":5,"end":123,"name":"PUSH","value":"0"},{"begin":72,"end":118,"name":"PUSH [tag]","value":"30"},{"begin":110,"end":116,"name":"DUP3"},{"begin":97,"end":117,"name":"CALLDATALOAD"},{"begin":72,"end":118,"name":"PUSH [tag]","value":"52"},{"begin":72,"end":118,"name":"JUMP"},{"begin":130,"end":248,"name":"tag","value":"54"},{"begin":130,"end":248,"name":"JUMPDEST"},{"begin":130,"end":248,"name":"PUSH","value":"0"},{"begin":197,"end":243,"name":"PUSH [tag]","value":"30"},{"begin":235,"end":241,"name":"DUP3"},{"begin":222,"end":242,"name":"CALLDATALOAD"},{"begin":197,"end":243,"name":"PUSH [tag]","value":"85"},{"begin":197,"end":243,"name":"JUMP"},{"begin":255,"end":746,"name":"tag","value":"16"},{"begin":255,"end":746,"name":"JUMPDEST"},{"begin":255,"end":746,"name":"PUSH","value":"0"},{"begin":255,"end":746,"name":"DUP1"},{"begin":255,"end":746,"name":"PUSH","value":"0"},{"begin":393,"end":395,"name":"PUSH","value":"60"},{"begin":381,"end":390,"name":"DUP5"},{"begin":372,"end":379,"name":"DUP7"},{"begin":368,"end":391,"name":"SUB"},{"begin":364,"end":396,"name":"SLT"},{"begin":361,"end":363,"name":"ISZERO"},{"begin":361,"end":363,"name":"PUSH [tag]","value":"58"},{"begin":361,"end":363,"name":"JUMPI"},{"begin":409,"end":410,"name":"PUSH","value":"0"},{"begin":406,"end":407,"name":"DUP1"},{"begin":399,"end":411,"name":"REVERT"},{"begin":361,"end":363,"name":"tag","value":"58"},{"begin":361,"end":363,"name":"JUMPDEST"},{"begin":444,"end":445,"name":"PUSH","value":"0"},{"begin":461,"end":514,"name":"PUSH [tag]","value":"59"},{"begin":506,"end":513,"name":"DUP7"},{"begin":486,"end":495,"name":"DUP7"},{"begin":461,"end":514,"name":"PUSH [tag]","value":"50"},{"begin":461,"end":514,"name":"JUMP"},{"begin":461,"end":514,"name":"tag","value":"59"},{"begin":461,"end":514,"name":"JUMPDEST"},{"begin":451,"end":514,"name":"SWAP4"},{"begin":451,"end":514,"name":"POP"},{"begin":423,"end":520,"name":"POP"},{"begin":551,"end":553,"name":"PUSH","value":"20"},{"begin":569,"end":622,"name":"PUSH [tag]","value":"60"},{"begin":614,"end":621,"name":"DUP7"},{"begin":605,"end":611,"name":"DUP3"},{"begin":594,"end":603,"name":"DUP8"},{"begin":590,"end":612,"name":"ADD"},{"begin":569,"end":622,"name":"PUSH [tag]","value":"54"},{"begin":569,"end":622,"name":"JUMP"},{"begin":569,"end":622,"name":"tag","value":"60"},{"begin":569,"end":622,"name":"JUMPDEST"},{"begin":559,"end":622,"name":"SWAP3"},{"begin":559,"end":622,"name":"POP"},{"begin":530,"end":628,"name":"POP"},{"begin":659,"end":661,"name":"PUSH","value":"40"},{"begin":677,"end":730,"name":"PUSH [tag]","value":"61"},{"begin":722,"end":729,"name":"DUP7"},{"begin":713,"end":719,"name":"DUP3"},{"begin":702,"end":711,"name":"DUP8"},{"begin":698,"end":720,"name":"ADD"},{"begin":677,"end":730,"name":"PUSH [tag]","value":"54"},{"begin":677,"end":730,"name":"JUMP"},{"begin":677,"end":730,"name":"tag","value":"61"},{"begin":677,"end":730,"name":"JUMPDEST"},{"begin":667,"end":730,"name":"SWAP2"},{"begin":667,"end":730,"name":"POP"},{"begin":638,"end":736,"name":"POP"},{"begin":355,"end":746,"name":"SWAP3"},{"begin":355,"end":746,"name":"POP"},{"begin":355,"end":746,"name":"SWAP3"},{"begin":355,"end":746,"name":"POP"},{"begin":355,"end":746,"name":"SWAP3"},{"begin":355,"end":746,"name":"JUMP"},{"begin":754,"end":927,"name":"tag","value":"63"},{"begin":754,"end":927,"name":"JUMPDEST"},{"begin":754,"end":927,"name":"PUSH","value":"0"},{"begin":841,"end":887,"name":"PUSH [tag]","value":"64"},{"begin":883,"end":886,"name":"DUP4"},{"begin":875,"end":881,"name":"DUP4"},{"begin":841,"end":887,"name":"PUSH [tag]","value":"65"},{"begin":841,"end":887,"name":"JUMP"},{"begin":841,"end":887,"name":"tag","value":"64"},{"begin":841,"end":887,"name":"JUMPDEST"},{"begin":-1,"end":-1,"name":"POP"},{"begin":-1,"end":-1,"name":"POP"},{"begin":916,"end":920,"name":"PUSH","value":"20"},{"begin":907,"end":921,"name":"ADD"},{"begin":907,"end":921,"name":"SWAP1"},{"begin":834,"end":927,"name":"JUMP"},{"begin":966,"end":1587,"name":"tag","value":"67"},{"begin":966,"end":1587,"name":"JUMPDEST"},{"begin":966,"end":1587,"name":"PUSH","value":"0"},{"begin":1111,"end":1165,"name":"PUSH [tag]","value":"68"},{"begin":1159,"end":1164,"name":"DUP3"},{"begin":1111,"end":1165,"name":"PUSH [tag]","value":"69"},{"begin":1111,"end":1165,"name":"JUMP"},{"begin":1111,"end":1165,"name":"tag","value":"68"},{"begin":1111,"end":1165,"name":"JUMPDEST"},{"begin":1178,"end":1264,"name":"PUSH [tag]","value":"70"},{"begin":1257,"end":1263,"name":"DUP2"},{"begin":1252,"end":1255,"name":"DUP6"},{"begin":1178,"end":1264,"name":"PUSH [tag]","value":"71"},{"begin":1178,"end":1264,"name":"JUMP"},{"begin":1178,"end":1264,"name":"tag","value":"70"},{"begin":1178,"end":1264,"name":"JUMPDEST"},{"begin":1171,"end":1264,"name":"SWAP4"},{"begin":1171,"end":1264,"name":"POP"},{"begin":1284,"end":1340,"name":"PUSH [tag]","value":"72"},{"begin":1334,"end":1339,"name":"DUP4"},{"begin":1284,"end":1340,"name":"PUSH [tag]","value":"73"},{"begin":1284,"end":1340,"name":"JUMP"},{"begin":1284,"end":1340,"name":"tag","value":"72"},{"begin":1284,"end":1340,"name":"JUMPDEST"},{"begin":1361,"end":1362,"name":"PUSH","value":"0"},{"begin":1346,"end":1565,"name":"tag","value":"74"},{"begin":1346,"end":1565,"name":"JUMPDEST"},{"begin":1371,"end":1377,"name":"DUP3"},{"begin":1368,"end":1369,"name":"DUP2"},{"begin":1365,"end":1378,"name":"LT"},{"begin":1346,"end":1565,"name":"ISZERO"},{"begin":1346,"end":1565,"name":"PUSH [tag]","value":"76"},{"begin":1346,"end":1565,"name":"JUMPI"},{"begin":1418,"end":1481,"name":"PUSH [tag]","value":"77"},{"begin":1477,"end":1480,"name":"DUP7"},{"begin":1468,"end":1474,"name":"DUP4"},{"begin":1462,"end":1475,"name":"MLOAD"},{"begin":1418,"end":1481,"name":"PUSH [tag]","value":"63"},{"begin":1418,"end":1481,"name":"JUMP"},{"begin":1418,"end":1481,"name":"tag","value":"77"},{"begin":1418,"end":1481,"name":"JUMPDEST"},{"begin":1411,"end":1481,"name":"SWAP6"},{"begin":1411,"end":1481,"name":"POP"},{"begin":1498,"end":1558,"name":"PUSH [tag]","value":"78"},{"begin":1551,"end":1557,"name":"DUP3"},{"begin":1498,"end":1558,"name":"PUSH [tag]","value":"73"},{"begin":1498,"end":1558,"name":"JUMP"},{"begin":1498,"end":1558,"name":"tag","value":"78"},{"begin":1498,"end":1558,"name":"JUMPDEST"},{"begin":1488,"end":1558,"name":"SWAP2"},{"begin":-1,"end":-1,"name":"POP"},{"begin":1393,"end":1394,"name":"PUSH","value":"1"},{"begin":1386,"end":1395,"name":"ADD"},{"begin":1346,"end":1565,"name":"PUSH [tag]","value":"74"},{"begin":1346,"end":1565,"name":"JUMP"},{"begin":1346,"end":1565,"name":"tag","value":"76"},{"begin":1346,"end":1565,"name":"JUMPDEST"},{"begin":-1,"end":-1,"name":"POP"},{"begin":1578,"end":1581,"name":"SWAP4"},{"begin":1578,"end":1581,"name":"SWAP5"},{"begin":1090,"end":1587,"name":"SWAP4"},{"begin":-1,"end":-1,"name":"POP"},{"begin":-1,"end":-1,"name":"POP"},{"begin":-1,"end":-1,"name":"POP"},{"begin":-1,"end":-1,"name":"POP"},{"begin":1090,"end":1587,"name":"JUMP"},{"begin":1646,"end":1959,"name":"tag","value":"81"},{"begin":1646,"end":1959,"name":"JUMPDEST"},{"begin":1849,"end":1871,"name":"DUP1"},{"begin":1849,"end":1871,"name":"MLOAD"},{"begin":1783,"end":1787,"name":"PUSH","value":"20"},{"begin":1774,"end":1788,"name":"DUP4"},{"begin":1774,"end":1788,"name":"ADD"},{"begin":1774,"end":1788,"name":"SWAP1"},{"begin":1877,"end":1938,"name":"PUSH [tag]","value":"82"},{"begin":1778,"end":1781,"name":"DUP5"},{"begin":1849,"end":1871,"name":"DUP3"},{"begin":1877,"end":1938,"name":"PUSH [tag]","value":"65"},{"begin":1877,"end":1938,"name":"JUMP"},{"begin":1877,"end":1938,"name":"tag","value":"82"},{"begin":1877,"end":1938,"name":"JUMPDEST"},{"begin":1803,"end":1944,"name":"POP"},{"begin":1756,"end":1959,"name":"POP"},{"begin":1756,"end":1959,"name":"POP"},{"begin":1756,"end":1959,"name":"POP"},{"begin":1756,"end":1959,"name":"JUMP"},{"begin":1966,"end":2076,"name":"tag","value":"65"},{"begin":1966,"end":2076,"name":"JUMPDEST"},{"begin":2039,"end":2070,"name":"PUSH [tag]","value":"84"},{"begin":2064,"end":2069,"name":"DUP2"},{"begin":2039,"end":2070,"name":"PUSH [tag]","value":"85"},{"begin":2039,"end":2070,"name":"JUMP"},{"begin":2039,"end":2070,"name":"tag","value":"84"},{"begin":2039,"end":2070,"name":"JUMPDEST"},{"begin":2034,"end":2037,"name":"DUP3"},{"begin":2027,"end":2071,"name":"MSTORE"},{"begin":2021,"end":2076,"name":"POP"},{"begin":2021,"end":2076,"name":"POP"},{"begin":2021,"end":2076,"name":"JUMP"},{"begin":2210,"end":2571,"name":"tag","value":"13"},{"begin":2210,"end":2571,"name":"JUMPDEST"},{"begin":2378,"end":2380,"name":"PUSH","value":"20"},{"begin":2392,"end":2439,"name":"DUP1"},{"begin":2392,"end":2439,"name":"DUP3"},{"begin":2392,"end":2439,"name":"MSTORE"},{"begin":2363,"end":2381,"name":"DUP2"},{"begin":2363,"end":2381,"name":"ADD"},{"begin":2453,"end":2561,"name":"PUSH [tag]","value":"30"},{"begin":2363,"end":2381,"name":"DUP2"},{"begin":2547,"end":2553,"name":"DUP5"},{"begin":2453,"end":2561,"name":"PUSH [tag]","value":"67"},{"begin":2453,"end":2561,"name":"JUMP"},{"begin":2578,"end":2879,"name":"tag","value":"19"},{"begin":2578,"end":2879,"name":"JUMPDEST"},{"begin":2740,"end":2742,"name":"PUSH","value":"20"},{"begin":2725,"end":2743,"name":"DUP2"},{"begin":2725,"end":2743,"name":"ADD"},{"begin":2754,"end":2869,"name":"PUSH [tag]","value":"45"},{"begin":2729,"end":2738,"name":"DUP3"},{"begin":2842,"end":2848,"name":"DUP5"},{"begin":2754,"end":2869,"name":"PUSH [tag]","value":"81"},{"begin":2754,"end":2869,"name":"JUMP"},{"begin":2886,"end":3099,"name":"tag","value":"9"},{"begin":2886,"end":3099,"name":"JUMPDEST"},{"begin":3004,"end":3006,"name":"PUSH","value":"20"},{"begin":2989,"end":3007,"name":"DUP2"},{"begin":2989,"end":3007,"name":"ADD"},{"begin":3018,"end":3089,"name":"PUSH [tag]","value":"45"},{"begin":2993,"end":3002,"name":"DUP3"},{"begin":3062,"end":3068,"name":"DUP5"},{"begin":3018,"end":3089,"name":"PUSH [tag]","value":"65"},{"begin":3018,"end":3089,"name":"JUMP"},{"begin":3108,"end":3229,"name":"tag","value":"73"},{"begin":3108,"end":3229,"name":"JUMPDEST"},{"begin":3217,"end":3221,"name":"PUSH","value":"20"},{"begin":3205,"end":3222,"name":"ADD"},{"begin":3205,"end":3222,"name":"SWAP1"},{"begin":3186,"end":3229,"name":"JUMP"},{"begin":3238,"end":3345,"name":"tag","value":"69"},{"begin":3238,"end":3345,"name":"JUMPDEST"},{"begin":3328,"end":3340,"name":"MLOAD"},{"begin":3328,"end":3340,"name":"SWAP1"},{"begin":3312,"end":3345,"name":"JUMP"},{"begin":3484,"end":3662,"name":"tag","value":"71"},{"begin":3484,"end":3662,"name":"JUMPDEST"},{"begin":3602,"end":3621,"name":"SWAP1"},{"begin":3602,"end":3621,"name":"DUP2"},{"begin":3602,"end":3621,"name":"MSTORE"},{"begin":3651,"end":3655,"name":"PUSH","value":"20"},{"begin":3642,"end":3656,"name":"ADD"},{"begin":3642,"end":3656,"name":"SWAP1"},{"begin":3595,"end":3662,"name":"JUMP"},{"begin":3670,"end":3749,"name":"tag","value":"85"},{"begin":3670,"end":3749,"name":"JUMPDEST"},{"begin":3739,"end":3744,"name":"SWAP1"},{"begin":3722,"end":3749,"name":"JUMP"},{"begin":3756,"end":3861,"name":"tag","value":"52"},{"begin":3756,"end":3861,"name":"JUMPDEST"},{"begin":3756,"end":3861,"name":"PUSH","value":"0"},{"begin":3948,"end":3990,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":3937,"end":3991,"name":"DUP3"},{"begin":3937,"end":3991,"name":"AND"},{"begin":3825,"end":3856,"name":"PUSH [tag]","value":"45"},{"begin":3920,"end":3996,"name":"JUMP"}]}}},"bytecode":{"object":"608060405234801561001057600080fd5b5060405160408061066f833981018060405261002f9190810190610140565b60208101516000906001600160801b03165b8015610059576101008106919091019060081c610041565b506064811461009d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100949061019f565b60405180910390fd5b508051600080546020909301516001600160801b03908116700100000000000000000000000000000000029281166001600160801b0319909416939093179092161790556101f0565b6000604082840312156100f857600080fd5b61010260406101b5565b90506000610110848461012d565b82525060206101218484830161012d565b60208301525092915050565b600061013982516101e4565b9392505050565b60006040828403121561015257600080fd5b600061015e84846100e6565b949350505050565b6000610173601c836101db565b7f436f656666696369656e7473206d7573742073756d20746f2031303000000000815260200192915050565b602080825281016101af81610166565b92915050565b6040518181016001600160401b03811182821017156101d357600080fd5b604052919050565b90815260200190565b6001600160801b031690565b610470806101ff6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631e68607a14610046578063afd4c8d614610064578063e8177dcf14610079575b600080fd5b61004e610099565b60405161005b91906103f4565b60405180910390f35b61006c6100b1565b60405161005b91906103d5565b61008c6100873660046102f9565b61013e565b60405161005b91906103e6565b6000546fffffffffffffffffffffffffffffffff1690565b604080516010808252610220820190925260609182919060208201610200803883395050600080549293509170010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1690505b801561013657610100810683838151811061011d57fe5b602090810291909101015260019091019060081c610106565b508152905090565b6101466102b7565b826101605750604080516020810190915260008152610280565b6101686102ca565b50604080518082019091526000546fffffffffffffffffffffffffffffffff8082168084527001000000000000000000000000000000009092041660208301528385106101d45760405180602001604052806301e1338083816101c757fe5b0481525092505050610280565b60208201516fffffffffffffffffffffffffffffffff811660081c9060ff16670de0b6b3a7640000908102906000908790610215908a63ffffffff61028716565b8161021c57fe5b0490505b60ff8316801561023f57818102830192508381141561023f5750610259565b5060089290921c91670de0b6b3a764000090800204610220565b6040805160208101909152806b0a3098c68eb9427db8000000848702049052955050505050505b9392505050565b600082610296575060006102b1565b828202828482816102a357fe5b04146102ae57600080fd5b90505b92915050565b6040518060200160405280600081525090565b604080518082019091526000808252602082015290565b60006102808235610418565b60006102808235610415565b60008060006060848603121561030e57600080fd5b600061031a86866102e1565b935050602061032b868287016102ed565b925050604061033c868287016102ed565b9150509250925092565b600061035283836103c6565b505060200190565b600061036582610408565b61036f818561040c565b935061037a83610402565b60005b828110156103a557610390868351610346565b955061039b82610402565b915060010161037d565b5093949350505050565b805160208301906103c084826103c6565b50505050565b6103cf81610415565b82525050565b60208082528101610280818461035a565b602081016102b182846103af565b602081016102b182846103c6565b60200190565b5190565b90815260200190565b90565b600073ffffffffffffffffffffffffffffffffffffffff82166102b156fea265627a7a723058206f9bdf24393ad27887ec9ba3ad7575f7ef2b9af05445c22c2dcc1c7ba03082f76c6578706572696d656e74616cf50037","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x40 DUP1 PUSH2 0x66F DUP4 CODECOPY DUP2 ADD DUP1 PUSH1 0x40 MSTORE PUSH2 0x2F SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x140 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND JUMPDEST DUP1 ISZERO PUSH2 0x59 JUMPI PUSH2 0x100 DUP2 MOD SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x8 SHR PUSH2 0x41 JUMP JUMPDEST POP PUSH1 0x64 DUP2 EQ PUSH2 0x9D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94 SWAP1 PUSH2 0x19F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x20 SWAP1 SWAP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH17 0x100000000000000000000000000000000 MUL SWAP3 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH2 0x1F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH1 0x40 PUSH2 0x1B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x110 DUP5 DUP5 PUSH2 0x12D JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x20 PUSH2 0x121 DUP5 DUP5 DUP4 ADD PUSH2 0x12D JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x139 DUP3 MLOAD PUSH2 0x1E4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x15E DUP5 DUP5 PUSH2 0xE6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x173 PUSH1 0x1C DUP4 PUSH2 0x1DB JUMP JUMPDEST PUSH32 0x436F656666696369656E7473206D7573742073756D20746F2031303000000000 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1AF DUP2 PUSH2 0x166 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x470 DUP1 PUSH2 0x1FF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1E68607A EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xAFD4C8D6 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xE8177DCF EQ PUSH2 0x79 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0xB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x3D5 JUMP JUMPDEST PUSH2 0x8C PUSH2 0x87 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F9 JUMP JUMPDEST PUSH2 0x13E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x10 DUP1 DUP3 MSTORE PUSH2 0x220 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD PUSH2 0x200 DUP1 CODESIZE DUP4 CODECOPY POP POP PUSH1 0x0 DUP1 SLOAD SWAP3 SWAP4 POP SWAP2 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP JUMPDEST DUP1 ISZERO PUSH2 0x136 JUMPI PUSH2 0x100 DUP2 MOD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x11D JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x8 SHR PUSH2 0x106 JUMP JUMPDEST POP DUP2 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x146 PUSH2 0x2B7 JUMP JUMPDEST DUP3 PUSH2 0x160 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH2 0x280 JUMP JUMPDEST PUSH2 0x168 PUSH2 0x2CA JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND DUP1 DUP5 MSTORE PUSH17 0x100000000000000000000000000000000 SWAP1 SWAP3 DIV AND PUSH1 0x20 DUP4 ADD MSTORE DUP4 DUP6 LT PUSH2 0x1D4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH4 0x1E13380 DUP4 DUP2 PUSH2 0x1C7 JUMPI INVALID JUMPDEST DIV DUP2 MSTORE POP SWAP3 POP POP POP PUSH2 0x280 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x8 SHR SWAP1 PUSH1 0xFF AND PUSH8 0xDE0B6B3A7640000 SWAP1 DUP2 MUL SWAP1 PUSH1 0x0 SWAP1 DUP8 SWAP1 PUSH2 0x215 SWAP1 DUP11 PUSH4 0xFFFFFFFF PUSH2 0x287 AND JUMP JUMPDEST DUP2 PUSH2 0x21C JUMPI INVALID JUMPDEST DIV SWAP1 POP JUMPDEST PUSH1 0xFF DUP4 AND DUP1 ISZERO PUSH2 0x23F JUMPI DUP2 DUP2 MUL DUP4 ADD SWAP3 POP DUP4 DUP2 EQ ISZERO PUSH2 0x23F JUMPI POP PUSH2 0x259 JUMP JUMPDEST POP PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHR SWAP2 PUSH8 0xDE0B6B3A7640000 SWAP1 DUP1 MUL DIV PUSH2 0x220 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH12 0xA3098C68EB9427DB8000000 DUP5 DUP8 MUL DIV SWAP1 MSTORE SWAP6 POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x296 JUMPI POP PUSH1 0x0 PUSH2 0x2B1 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x2A3 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x280 DUP3 CALLDATALOAD PUSH2 0x418 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x280 DUP3 CALLDATALOAD PUSH2 0x415 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x31A DUP7 DUP7 PUSH2 0x2E1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x32B DUP7 DUP3 DUP8 ADD PUSH2 0x2ED JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x33C DUP7 DUP3 DUP8 ADD PUSH2 0x2ED JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x352 DUP4 DUP4 PUSH2 0x3C6 JUMP JUMPDEST POP POP PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x365 DUP3 PUSH2 0x408 JUMP JUMPDEST PUSH2 0x36F DUP2 DUP6 PUSH2 0x40C JUMP JUMPDEST SWAP4 POP PUSH2 0x37A DUP4 PUSH2 0x402 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3A5 JUMPI PUSH2 0x390 DUP7 DUP4 MLOAD PUSH2 0x346 JUMP JUMPDEST SWAP6 POP PUSH2 0x39B DUP3 PUSH2 0x402 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x37D JUMP JUMPDEST POP SWAP4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x3C0 DUP5 DUP3 PUSH2 0x3C6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3CF DUP2 PUSH2 0x415 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x280 DUP2 DUP5 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x2B1 DUP3 DUP5 PUSH2 0x3AF JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x2B1 DUP3 DUP5 PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x2B1 JUMP INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 PUSH16 0x9BDF24393AD27887EC9BA3AD7575F7EF 0x2b SWAP11 CREATE SLOAD GASLIMIT 0xc2 0x2c 0x2d 0xcc SHR PUSH28 0xA03082F76C6578706572696D656E74616CF500370000000000000000 ","sourceMap":"26201:5274:0:-;;;26816:574;8:9:-1;5:2;;;30:1;27;20:12;5:2;26816:574:0;;;;;;;;;;;;;;;;;;;;;;27041:19;;;;26959:25;;-1:-1:-1;;;;;27018:42:0;26999:207;27075:17;;26999:207;;27191:3;27176:12;:18;27155:39;;;;;26549:1;27107:21;26999:207;;;;26408:3;27238:17;:28;27216:106;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27364:18:0;;:9;:18;;;;;;;-1:-1:-1;;;;;27364:18:0;;;;;;;;-1:-1:-1;;;;;;27364:18:0;;;;;;;;;;;;;26201:5274;;59:513:-1;;188:4;176:9;171:3;167:19;163:30;160:2;;;206:1;203;196:12;160:2;224:20;239:4;224:20;;;215:29;-1:-1;296:1;327:60;383:3;363:9;327:60;;;303:85;;-1:-1;457:2;490:60;546:3;522:22;;;490:60;;;483:4;476:5;472:16;465:86;409:153;154:418;;;;;579:122;;657:39;688:6;682:13;657:39;;;648:48;642:59;-1:-1;;;642:59;708:321;;852:2;840:9;831:7;827:23;823:32;820:2;;;868:1;865;858:12;820:2;903:1;920:93;1005:7;985:9;920:93;;;910:103;814:215;-1:-1;;;;814:215;1037:364;;1197:67;1261:2;1256:3;1197:67;;;1297:66;1277:87;;1392:2;1383:12;;1183:218;-1:-1;;1183:218;1409:407;1600:2;1614:47;;;1585:18;;1675:131;1585:18;1675:131;;;1667:139;1571:245;-1:-1;;1571:245;1823:256;1885:2;1879:9;1911:17;;;-1:-1;;;;;1971:34;;2007:22;;;1968:62;1965:2;;;2043:1;2040;2033:12;1965:2;2059;2052:22;1863:216;;-1:-1;1863:216;2087:163;2190:19;;;2239:4;2230:14;;2183:67;2258:120;-1:-1;;;;;2327:46;;2310:68;;26201:5274:0;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c80631e68607a14610046578063afd4c8d614610064578063e8177dcf14610079575b600080fd5b61004e610099565b60405161005b91906103f4565b60405180910390f35b61006c6100b1565b60405161005b91906103d5565b61008c6100873660046102f9565b61013e565b60405161005b91906103e6565b6000546fffffffffffffffffffffffffffffffff1690565b604080516010808252610220820190925260609182919060208201610200803883395050600080549293509170010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1690505b801561013657610100810683838151811061011d57fe5b602090810291909101015260019091019060081c610106565b508152905090565b6101466102b7565b826101605750604080516020810190915260008152610280565b6101686102ca565b50604080518082019091526000546fffffffffffffffffffffffffffffffff8082168084527001000000000000000000000000000000009092041660208301528385106101d45760405180602001604052806301e1338083816101c757fe5b0481525092505050610280565b60208201516fffffffffffffffffffffffffffffffff811660081c9060ff16670de0b6b3a7640000908102906000908790610215908a63ffffffff61028716565b8161021c57fe5b0490505b60ff8316801561023f57818102830192508381141561023f5750610259565b5060089290921c91670de0b6b3a764000090800204610220565b6040805160208101909152806b0a3098c68eb9427db8000000848702049052955050505050505b9392505050565b600082610296575060006102b1565b828202828482816102a357fe5b04146102ae57600080fd5b90505b92915050565b6040518060200160405280600081525090565b604080518082019091526000808252602082015290565b60006102808235610418565b60006102808235610415565b60008060006060848603121561030e57600080fd5b600061031a86866102e1565b935050602061032b868287016102ed565b925050604061033c868287016102ed565b9150509250925092565b600061035283836103c6565b505060200190565b600061036582610408565b61036f818561040c565b935061037a83610402565b60005b828110156103a557610390868351610346565b955061039b82610402565b915060010161037d565b5093949350505050565b805160208301906103c084826103c6565b50505050565b6103cf81610415565b82525050565b60208082528101610280818461035a565b602081016102b182846103af565b602081016102b182846103c6565b60200190565b5190565b90815260200190565b90565b600073ffffffffffffffffffffffffffffffffffffffff82166102b156fea265627a7a723058206f9bdf24393ad27887ec9ba3ad7575f7ef2b9af05445c22c2dcc1c7ba03082f76c6578706572696d656e74616cf50037","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1E68607A EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xAFD4C8D6 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xE8177DCF EQ PUSH2 0x79 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0xB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x3D5 JUMP JUMPDEST PUSH2 0x8C PUSH2 0x87 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F9 JUMP JUMPDEST PUSH2 0x13E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x10 DUP1 DUP3 MSTORE PUSH2 0x220 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD PUSH2 0x200 DUP1 CODESIZE DUP4 CODECOPY POP POP PUSH1 0x0 DUP1 SLOAD SWAP3 SWAP4 POP SWAP2 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP JUMPDEST DUP1 ISZERO PUSH2 0x136 JUMPI PUSH2 0x100 DUP2 MOD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x11D JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x8 SHR PUSH2 0x106 JUMP JUMPDEST POP DUP2 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x146 PUSH2 0x2B7 JUMP JUMPDEST DUP3 PUSH2 0x160 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH2 0x280 JUMP JUMPDEST PUSH2 0x168 PUSH2 0x2CA JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND DUP1 DUP5 MSTORE PUSH17 0x100000000000000000000000000000000 SWAP1 SWAP3 DIV AND PUSH1 0x20 DUP4 ADD MSTORE DUP4 DUP6 LT PUSH2 0x1D4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH4 0x1E13380 DUP4 DUP2 PUSH2 0x1C7 JUMPI INVALID JUMPDEST DIV DUP2 MSTORE POP SWAP3 POP POP POP PUSH2 0x280 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x8 SHR SWAP1 PUSH1 0xFF AND PUSH8 0xDE0B6B3A7640000 SWAP1 DUP2 MUL SWAP1 PUSH1 0x0 SWAP1 DUP8 SWAP1 PUSH2 0x215 SWAP1 DUP11 PUSH4 0xFFFFFFFF PUSH2 0x287 AND JUMP JUMPDEST DUP2 PUSH2 0x21C JUMPI INVALID JUMPDEST DIV SWAP1 POP JUMPDEST PUSH1 0xFF DUP4 AND DUP1 ISZERO PUSH2 0x23F JUMPI DUP2 DUP2 MUL DUP4 ADD SWAP3 POP DUP4 DUP2 EQ ISZERO PUSH2 0x23F JUMPI POP PUSH2 0x259 JUMP JUMPDEST POP PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHR SWAP2 PUSH8 0xDE0B6B3A7640000 SWAP1 DUP1 MUL DIV PUSH2 0x220 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH12 0xA3098C68EB9427DB8000000 DUP5 DUP8 MUL DIV SWAP1 MSTORE SWAP6 POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x296 JUMPI POP PUSH1 0x0 PUSH2 0x2B1 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x2A3 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x280 DUP3 CALLDATALOAD PUSH2 0x418 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x280 DUP3 CALLDATALOAD PUSH2 0x415 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x31A DUP7 DUP7 PUSH2 0x2E1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x32B DUP7 DUP3 DUP8 ADD PUSH2 0x2ED JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x33C DUP7 DUP3 DUP8 ADD PUSH2 0x2ED JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x352 DUP4 DUP4 PUSH2 0x3C6 JUMP JUMPDEST POP POP PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x365 DUP3 PUSH2 0x408 JUMP JUMPDEST PUSH2 0x36F DUP2 DUP6 PUSH2 0x40C JUMP JUMPDEST SWAP4 POP PUSH2 0x37A DUP4 PUSH2 0x402 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3A5 JUMPI PUSH2 0x390 DUP7 DUP4 MLOAD PUSH2 0x346 JUMP JUMPDEST SWAP6 POP PUSH2 0x39B DUP3 PUSH2 0x402 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x37D JUMP JUMPDEST POP SWAP4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x3C0 DUP5 DUP3 PUSH2 0x3C6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3CF DUP2 PUSH2 0x415 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x280 DUP2 DUP5 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x2B1 DUP3 DUP5 PUSH2 0x3AF JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x2B1 DUP3 DUP5 PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x2B1 JUMP INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 PUSH16 0x9BDF24393AD27887EC9BA3AD7575F7EF 0x2b SWAP11 CREATE SLOAD GASLIMIT 0xc2 0x2c 0x2d 0xcc SHR PUSH28 0xA03082F76C6578706572696D656E74616CF500370000000000000000 ","sourceMap":"26201:5274:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26201:5274:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30335:127;;;:::i;:::-;;;;;;;;;;;;;;;;30674:798;;;:::i;:::-;;;;;;;;27905:2210;;;;;;;;;:::i;:::-;;;;;;;;30335:127;30406:7;30438:16;;;30335:127;:::o;30674:798::-;30874:17;;;30888:2;30874:17;;;;;;;;;30751:16;;;;30874:17;;;;17:15:-1;;105:10;30874:17:0;88:34:-1;-1:-1;;30950:23:0;31030:22;;30848:43;;-1:-1:-1;30950:23:0;31030:22;;;;;;-1:-1:-1;30988:247:0;31067:17;;30988:247;;31188:3;31173:12;:18;31147:6;31154:15;31147:23;;;;;;;;;;;;;;;;;:44;31206:17;;;;;26549:1;31099:21;30988:247;;;-1:-1:-1;31397:31:0;;31404:6;-1:-1:-1;30674:798:0;:::o;27905:2210::-;28073:20;;:::i;:::-;28115:14;28111:111;;-1:-1:-1;28153:57:0;;;;;;;;;-1:-1:-1;28153:57:0;;28146:64;;28111:111;28234:20;;:::i;:::-;-1:-1:-1;28234:32:0;;;;;;;;;28257:9;28234:32;;;;;;;;;;;;;;;;;28319:22;;;28315:144;;28365:82;;;;;;;;26498:18;28405:6;:26;;;;;;28365:82;;;28358:89;;;;;;28315:144;28536:14;;;;28513:37;;;26549:1;28615:21;;28578:26;;26444:8;28578:26;;;;28513:20;;28815:9;;28793:19;;28802:9;28793:19;:8;:19;:::i;:::-;:31;;;;;;28772:52;;28882:919;28975:28;;;29067:16;;29063:411;;29280:10;29266:11;:24;29256:34;;;;29397:12;29382:11;:27;29378:81;;;29434:5;;;29378:81;-1:-1:-1;26549:1:0;29768:21;;;;;26444:8;29680:23;;;:30;28882:919;;;30005:102;;;;;;;;;;30060:34;30041:15;;;:54;30005:102;;29998:109;-1:-1:-1;;;;;;27905:2210:0;;;;;;:::o;1027:433::-;1085:7;1329:6;1325:47;;-1:-1:-1;1359:1:0;1352:8;;1325:47;1396:5;;;1400:1;1396;:5;:1;1420:5;;;;;:10;1412:19;;;;;;1451:1;-1:-1:-1;1027:433:0;;;;;:::o;26201:5274::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;26201:5274:0;;;;;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;130:118;;197:46;235:6;222:20;197:46;;255:491;;;;393:2;381:9;372:7;368:23;364:32;361:2;;;409:1;406;399:12;361:2;444:1;461:53;506:7;486:9;461:53;;;451:63;;423:97;551:2;569:53;614:7;605:6;594:9;590:22;569:53;;;559:63;;530:98;659:2;677:53;722:7;713:6;702:9;698:22;677:53;;;667:63;;638:98;355:391;;;;;;754:173;;841:46;883:3;875:6;841:46;;;-1:-1;;916:4;907:14;;834:93;966:621;;1111:54;1159:5;1111:54;;;1178:86;1257:6;1252:3;1178:86;;;1171:93;;1284:56;1334:5;1284:56;;;1361:1;1346:219;1371:6;1368:1;1365:13;1346:219;;;1418:63;1477:3;1468:6;1462:13;1418:63;;;1411:70;;1498:60;1551:6;1498:60;;;1488:70;-1:-1;1393:1;1386:9;1346:219;;;-1:-1;1578:3;;1090:497;-1:-1;;;;1090:497;1646:313;1849:22;;1783:4;1774:14;;;1877:61;1778:3;1849:22;1877:61;;;1803:141;1756:203;;;;1966:110;2039:31;2064:5;2039:31;;;2034:3;2027:44;2021:55;;;2210:361;2378:2;2392:47;;;2363:18;;2453:108;2363:18;2547:6;2453:108;;2578:301;2740:2;2725:18;;2754:115;2729:9;2842:6;2754:115;;2886:213;3004:2;2989:18;;3018:71;2993:9;3062:6;3018:71;;3108:121;3217:4;3205:17;;3186:43;3238:107;3328:12;;3312:33;3484:178;3602:19;;;3651:4;3642:14;;3595:67;3670:79;3739:5;3722:27;3756:105;;3948:42;3937:54;;3825:31;3920:76","linkReferences":{}},"methodIdentifiers":{"getCoefficients()":"afd4c8d6","getInterestRate(address,uint256,uint256)":"e8177dcf","getMaxAPR()":"1e68607a"},"gasEstimates":{"creation":{"codeDepositCost":"227200","executionCost":"infinite","totalCost":"infinite"},"external":{"getCoefficients()":"infinite","getInterestRate(address,uint256,uint256)":"infinite","getMaxAPR()":"483"},"internal":{}}}},"IInterestSetter":{"abi":[{"type":"function","name":"getInterestRate","inputs":[{"name":"token","type":"address"},{"name":"borrowWei","type":"uint256"},{"name":"supplyWei","type":"uint256"}],"outputs":[{"name":"","type":"tuple","components":[{"name":"value","type":"uint256"}]}],"stateMutability":"view"}],"metadata":"{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"borrowWei\",\"type\":\"uint256\"},{\"name\":\"supplyWei\",\"type\":\"uint256\"}],\"name\":\"getInterestRate\",\"outputs\":[{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"dYdX\\r  * Interface that Interest Setters for Solo must implement in order to report interest rates.\\r\",\"methods\":{\"getInterestRate(address,uint256,uint256)\":{\"params\":{\"borrowWei\":\"The total borrowed token amount for the market\\r\",\"supplyWei\":\"The total supplied token amount for the market\\r\",\"token\":\"The address of the ERC20 token for the market\\r\"},\"return\":\"The interest rate per second\\r\"}},\"title\":\"IInterestSetter\\r\"},\"userdoc\":{\"methods\":{\"getInterestRate(address,uint256,uint256)\":{\"notice\":\"Get the interest rate of a token given some borrowed and supplied amounts\\r \"}}}},\"settings\":{\"compilationTarget\":{\"Contract\":\"IInterestSetter\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"Contract\":{\"keccak256\":\"0xa4d5c897f307febf8d2fe07b1aa14f65cc305283ff9f7c6bb9e5e37f955d463c\",\"urls\":[\"bzzr://e27b159b490604a18c2028782112408e68b98c093c6e4802224b11475994d5c7\"]}},\"version\":1}","userdoc":{"methods":{"getInterestRate(address,uint256,uint256)":{"notice":"Get the interest rate of a token given some borrowed and supplied amounts\r "}}},"devdoc":{"author":"dYdX\r  * Interface that Interest Setters for Solo must implement in order to report interest rates.\r","methods":{"getInterestRate(address,uint256,uint256)":{"params":{"borrowWei":"The total borrowed token amount for the market\r","supplyWei":"The total supplied token amount for the market\r","token":"The address of the ERC20 token for the market\r"}}},"title":"IInterestSetter\r"},"evm":{"assembly":"","bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getInterestRate(address,uint256,uint256)":"e8177dcf"}}},"Interest":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"dYdX\\r  * Library for managing the interest rate and interest indexes of Solo\\r\",\"methods\":{},\"title\":\"Interest\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Contract\":\"Interest\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"Contract\":{\"keccak256\":\"0xa4d5c897f307febf8d2fe07b1aa14f65cc305283ff9f7c6bb9e5e37f955d463c\",\"urls\":[\"bzzr://e27b159b490604a18c2028782112408e68b98c093c6e4802224b11475994d5c7\"]}},\"version\":1}","userdoc":{},"devdoc":{"author":"dYdX\r  * Library for managing the interest rate and interest indexes of Solo\r","title":"Interest\r"},"evm":{"assembly":"    /* \"Contract\":20085:24988  library Interest {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contract\":20085:24988  library Interest {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72305820dd70bd1ec1238020d4391e5018adc1488cfb656a9aebdce36d1f8e7ab488a3446c6578706572696d656e74616cf50037\n}\n","legacyAssembly":{".code":[{"begin":20085,"end":24988,"name":"PUSH #[$]","value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":20085,"end":24988,"name":"PUSH [$]","value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":132,"end":134,"name":"PUSH","value":"B"},{"begin":166,"end":173,"name":"DUP3"},{"begin":155,"end":164,"name":"DUP3"},{"begin":146,"end":153,"name":"DUP3"},{"begin":137,"end":174,"name":"CODECOPY"},{"begin":255,"end":262,"name":"DUP1"},{"begin":249,"end":263,"name":"MLOAD"},{"begin":246,"end":247,"name":"PUSH","value":"0"},{"begin":241,"end":264,"name":"BYTE"},{"begin":235,"end":239,"name":"PUSH","value":"73"},{"begin":232,"end":265,"name":"EQ"},{"begin":222,"end":224,"name":"PUSH [tag]","value":"1"},{"begin":222,"end":224,"name":"JUMPI"},{"begin":269,"end":278,"name":"INVALID"},{"begin":222,"end":224,"name":"tag","value":"1"},{"begin":222,"end":224,"name":"JUMPDEST"},{"begin":293,"end":302,"name":"ADDRESS"},{"begin":290,"end":291,"name":"PUSH","value":"0"},{"begin":283,"end":303,"name":"MSTORE"},{"begin":323,"end":327,"name":"PUSH","value":"73"},{"begin":314,"end":321,"name":"DUP2"},{"begin":306,"end":328,"name":"MSTORE8"},{"begin":347,"end":354,"name":"DUP3"},{"begin":338,"end":345,"name":"DUP2"},{"begin":331,"end":355,"name":"RETURN"}],".data":{"0":{".auxdata":"a265627a7a72305820dd70bd1ec1238020d4391e5018adc1488cfb656a9aebdce36d1f8e7ab488a3446c6578706572696d656e74616cf50037",".code":[{"begin":20085,"end":24988,"name":"PUSHDEPLOYADDRESS"},{"begin":20085,"end":24988,"name":"ADDRESS"},{"begin":20085,"end":24988,"name":"EQ"},{"begin":20085,"end":24988,"name":"PUSH","value":"80"},{"begin":20085,"end":24988,"name":"PUSH","value":"40"},{"begin":20085,"end":24988,"name":"MSTORE"},{"begin":20085,"end":24988,"name":"PUSH","value":"0"},{"begin":20085,"end":24988,"name":"DUP1"},{"begin":20085,"end":24988,"name":"REVERT"}]}}},"bytecode":{"object":"605a6023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72305820dd70bd1ec1238020d4391e5018adc1488cfb656a9aebdce36d1f8e7ab488a3446c6578706572696d656e74616cf50037","opcodes":"PUSH1 0x5A PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 0xdd PUSH17 0xBD1EC1238020D4391E5018ADC1488CFB65 PUSH11 0x9AEBDCE36D1F8E7AB488A3 DIFFICULTY PUSH13 0x6578706572696D656E74616CF5 STOP CALLDATACOPY ","sourceMap":"20085:4903:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24","linkReferences":{}},"deployedBytecode":{"object":"73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72305820dd70bd1ec1238020d4391e5018adc1488cfb656a9aebdce36d1f8e7ab488a3446c6578706572696d656e74616cf50037","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 0xdd PUSH17 0xBD1EC1238020D4391E5018ADC1488CFB65 PUSH11 0x9AEBDCE36D1F8E7AB488A3 DIFFICULTY PUSH13 0x6578706572696D656E74616CF5 STOP CALLDATACOPY ","sourceMap":"20085:4903:0:-;;;;;;;;","linkReferences":{}},"gasEstimates":{"creation":{"codeDepositCost":"18000","executionCost":"97","totalCost":"18097"},"external":{},"internal":{"calculateNewIndex(struct Interest.Index memory,struct Interest.Rate memory,struct Types.TotalPar memory,struct Decimal.D256 memory)":"infinite","newIndex()":"infinite","parToWei(struct Types.Par memory,struct Interest.Index memory)":"infinite","totalParToWei(struct Types.TotalPar memory,struct Interest.Index memory)":"infinite","weiToPar(struct Types.Wei memory,struct Interest.Index memory)":"infinite"}}}},"Math":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"dYdX\\r  * Library for non-standard Math functions\\r\",\"methods\":{},\"title\":\"Math\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Contract\":\"Math\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"Contract\":{\"keccak256\":\"0xa4d5c897f307febf8d2fe07b1aa14f65cc305283ff9f7c6bb9e5e37f955d463c\",\"urls\":[\"bzzr://e27b159b490604a18c2028782112408e68b98c093c6e4802224b11475994d5c7\"]}},\"version\":1}","userdoc":{},"devdoc":{"author":"dYdX\r  * Library for non-standard Math functions\r","title":"Math\r"},"evm":{"assembly":"    /* \"Contract\":10620:12921  library Math {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contract\":10620:12921  library Math {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723058201b085823823aa9e2ba9eaa2682fa4d55616867b7f4a24cec075b0f6e7718c4666c6578706572696d656e74616cf50037\n}\n","legacyAssembly":{".code":[{"begin":10620,"end":12921,"name":"PUSH #[$]","value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":10620,"end":12921,"name":"PUSH [$]","value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":132,"end":134,"name":"PUSH","value":"B"},{"begin":166,"end":173,"name":"DUP3"},{"begin":155,"end":164,"name":"DUP3"},{"begin":146,"end":153,"name":"DUP3"},{"begin":137,"end":174,"name":"CODECOPY"},{"begin":255,"end":262,"name":"DUP1"},{"begin":249,"end":263,"name":"MLOAD"},{"begin":246,"end":247,"name":"PUSH","value":"0"},{"begin":241,"end":264,"name":"BYTE"},{"begin":235,"end":239,"name":"PUSH","value":"73"},{"begin":232,"end":265,"name":"EQ"},{"begin":222,"end":224,"name":"PUSH [tag]","value":"1"},{"begin":222,"end":224,"name":"JUMPI"},{"begin":269,"end":278,"name":"INVALID"},{"begin":222,"end":224,"name":"tag","value":"1"},{"begin":222,"end":224,"name":"JUMPDEST"},{"begin":293,"end":302,"name":"ADDRESS"},{"begin":290,"end":291,"name":"PUSH","value":"0"},{"begin":283,"end":303,"name":"MSTORE"},{"begin":323,"end":327,"name":"PUSH","value":"73"},{"begin":314,"end":321,"name":"DUP2"},{"begin":306,"end":328,"name":"MSTORE8"},{"begin":347,"end":354,"name":"DUP3"},{"begin":338,"end":345,"name":"DUP2"},{"begin":331,"end":355,"name":"RETURN"}],".data":{"0":{".auxdata":"a265627a7a723058201b085823823aa9e2ba9eaa2682fa4d55616867b7f4a24cec075b0f6e7718c4666c6578706572696d656e74616cf50037",".code":[{"begin":10620,"end":12921,"name":"PUSHDEPLOYADDRESS"},{"begin":10620,"end":12921,"name":"ADDRESS"},{"begin":10620,"end":12921,"name":"EQ"},{"begin":10620,"end":12921,"name":"PUSH","value":"80"},{"begin":10620,"end":12921,"name":"PUSH","value":"40"},{"begin":10620,"end":12921,"name":"MSTORE"},{"begin":10620,"end":12921,"name":"PUSH","value":"0"},{"begin":10620,"end":12921,"name":"DUP1"},{"begin":10620,"end":12921,"name":"REVERT"}]}}},"bytecode":{"object":"605a6023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723058201b085823823aa9e2ba9eaa2682fa4d55616867b7f4a24cec075b0f6e7718c4666c6578706572696d656e74616cf50037","opcodes":"PUSH1 0x5A PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 SHL ADDMOD PC 0x23 DUP3 GASPRICE 0xa9 0xe2 0xba SWAP15 0xaa 0x26 DUP3 STATICCALL 0x4d SSTORE PUSH2 0x6867 0xb7 DELEGATECALL LOG2 0x4c 0xec SMOD JUMPDEST 0xf PUSH15 0x7718C4666C6578706572696D656E74 PUSH2 0x6CF5 STOP CALLDATACOPY ","sourceMap":"10620:2301:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24","linkReferences":{}},"deployedBytecode":{"object":"73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723058201b085823823aa9e2ba9eaa2682fa4d55616867b7f4a24cec075b0f6e7718c4666c6578706572696d656e74616cf50037","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 SHL ADDMOD PC 0x23 DUP3 GASPRICE 0xa9 0xe2 0xba SWAP15 0xaa 0x26 DUP3 STATICCALL 0x4d SSTORE PUSH2 0x6867 0xb7 DELEGATECALL LOG2 0x4c 0xec SMOD JUMPDEST 0xf PUSH15 0x7718C4666C6578706572696D656E74 PUSH2 0x6CF5 STOP CALLDATACOPY ","sourceMap":"10620:2301:0:-;;;;;;;;","linkReferences":{}},"gasEstimates":{"creation":{"codeDepositCost":"18000","executionCost":"97","totalCost":"18097"},"external":{},"internal":{"getPartial(uint256,uint256,uint256)":"infinite","getPartialRoundUp(uint256,uint256,uint256)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","to128(uint256)":"infinite","to32(uint256)":"infinite","to96(uint256)":"infinite"}}}},"Require":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"dYdX\\r  * Stringifies parameters to pretty-print revert messages. Costs more gas than regular require()\\r\",\"methods\":{},\"title\":\"Require\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Contract\":\"Require\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"Contract\":{\"keccak256\":\"0xa4d5c897f307febf8d2fe07b1aa14f65cc305283ff9f7c6bb9e5e37f955d463c\",\"urls\":[\"bzzr://e27b159b490604a18c2028782112408e68b98c093c6e4802224b11475994d5c7\"]}},\"version\":1}","userdoc":{},"devdoc":{"author":"dYdX\r  * Stringifies parameters to pretty-print revert messages. Costs more gas than regular require()\r","title":"Require\r"},"evm":{"assembly":"    /* \"Contract\":2902:10481  library Require {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contract\":2902:10481  library Require {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723058206b8c33f27a86f41fb0abfb08263b2743a20ce901136641c146a10d579c2ba80b6c6578706572696d656e74616cf50037\n}\n","legacyAssembly":{".code":[{"begin":2902,"end":10481,"name":"PUSH #[$]","value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":2902,"end":10481,"name":"PUSH [$]","value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":132,"end":134,"name":"PUSH","value":"B"},{"begin":166,"end":173,"name":"DUP3"},{"begin":155,"end":164,"name":"DUP3"},{"begin":146,"end":153,"name":"DUP3"},{"begin":137,"end":174,"name":"CODECOPY"},{"begin":255,"end":262,"name":"DUP1"},{"begin":249,"end":263,"name":"MLOAD"},{"begin":246,"end":247,"name":"PUSH","value":"0"},{"begin":241,"end":264,"name":"BYTE"},{"begin":235,"end":239,"name":"PUSH","value":"73"},{"begin":232,"end":265,"name":"EQ"},{"begin":222,"end":224,"name":"PUSH [tag]","value":"1"},{"begin":222,"end":224,"name":"JUMPI"},{"begin":269,"end":278,"name":"INVALID"},{"begin":222,"end":224,"name":"tag","value":"1"},{"begin":222,"end":224,"name":"JUMPDEST"},{"begin":293,"end":302,"name":"ADDRESS"},{"begin":290,"end":291,"name":"PUSH","value":"0"},{"begin":283,"end":303,"name":"MSTORE"},{"begin":323,"end":327,"name":"PUSH","value":"73"},{"begin":314,"end":321,"name":"DUP2"},{"begin":306,"end":328,"name":"MSTORE8"},{"begin":347,"end":354,"name":"DUP3"},{"begin":338,"end":345,"name":"DUP2"},{"begin":331,"end":355,"name":"RETURN"}],".data":{"0":{".auxdata":"a265627a7a723058206b8c33f27a86f41fb0abfb08263b2743a20ce901136641c146a10d579c2ba80b6c6578706572696d656e74616cf50037",".code":[{"begin":2902,"end":10481,"name":"PUSHDEPLOYADDRESS"},{"begin":2902,"end":10481,"name":"ADDRESS"},{"begin":2902,"end":10481,"name":"EQ"},{"begin":2902,"end":10481,"name":"PUSH","value":"80"},{"begin":2902,"end":10481,"name":"PUSH","value":"40"},{"begin":2902,"end":10481,"name":"MSTORE"},{"begin":2902,"end":10481,"name":"PUSH","value":"0"},{"begin":2902,"end":10481,"name":"DUP1"},{"begin":2902,"end":10481,"name":"REVERT"}]}}},"bytecode":{"object":"605a6023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723058206b8c33f27a86f41fb0abfb08263b2743a20ce901136641c146a10d579c2ba80b6c6578706572696d656e74616cf50037","opcodes":"PUSH1 0x5A PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 PUSH12 0x8C33F27A86F41FB0ABFB0826 EXTCODESIZE 0x27 NUMBER LOG2 0xc 0xe9 ADD SGT PUSH7 0x41C146A10D579C 0x2b 0xa8 SIGNEXTEND PUSH13 0x6578706572696D656E74616CF5 STOP CALLDATACOPY ","sourceMap":"2902:7579:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24","linkReferences":{}},"deployedBytecode":{"object":"73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723058206b8c33f27a86f41fb0abfb08263b2743a20ce901136641c146a10d579c2ba80b6c6578706572696d656e74616cf50037","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 PUSH12 0x8C33F27A86F41FB0ABFB0826 EXTCODESIZE 0x27 NUMBER LOG2 0xc 0xe9 ADD SGT PUSH7 0x41C146A10D579C 0x2b 0xa8 SIGNEXTEND PUSH13 0x6578706572696D656E74616CF5 STOP CALLDATACOPY ","sourceMap":"2902:7579:0:-;;;;;;;;","linkReferences":{}},"gasEstimates":{"creation":{"codeDepositCost":"18000","executionCost":"97","totalCost":"18097"},"external":{},"internal":{"char(uint256)":"infinite","stringify(address)":"infinite","stringify(bytes32)":"infinite","stringify(uint256)":"infinite","that(bool,bytes32,bytes32)":"infinite","that(bool,bytes32,bytes32,address)":"infinite","that(bool,bytes32,bytes32,address,uint256)":"infinite","that(bool,bytes32,bytes32,address,uint256,uint256)":"infinite","that(bool,bytes32,bytes32,uint256)":"infinite","that(bool,bytes32,bytes32,uint256,uint256)":"infinite"}}}},"SafeMath":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Unsigned math operations with safety checks that revert on error\\r\",\"methods\":{},\"title\":\"SafeMath\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Contract\":\"SafeMath\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"Contract\":{\"keccak256\":\"0xa4d5c897f307febf8d2fe07b1aa14f65cc305283ff9f7c6bb9e5e37f955d463c\",\"urls\":[\"bzzr://e27b159b490604a18c2028782112408e68b98c093c6e4802224b11475994d5c7\"]}},\"version\":1}","userdoc":{},"devdoc":{"details":"Unsigned math operations with safety checks that revert on error\r","title":"SafeMath\r"},"evm":{"assembly":"    /* \"Contract\":919:2703  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contract\":919:2703  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72305820010ff5d9d2aed6e5c51d089c933543f2c9bea6d8d1feac75366f8e4d486d74cd6c6578706572696d656e74616cf50037\n}\n","legacyAssembly":{".code":[{"begin":919,"end":2703,"name":"PUSH #[$]","value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":919,"end":2703,"name":"PUSH [$]","value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":132,"end":134,"name":"PUSH","value":"B"},{"begin":166,"end":173,"name":"DUP3"},{"begin":155,"end":164,"name":"DUP3"},{"begin":146,"end":153,"name":"DUP3"},{"begin":137,"end":174,"name":"CODECOPY"},{"begin":255,"end":262,"name":"DUP1"},{"begin":249,"end":263,"name":"MLOAD"},{"begin":246,"end":247,"name":"PUSH","value":"0"},{"begin":241,"end":264,"name":"BYTE"},{"begin":235,"end":239,"name":"PUSH","value":"73"},{"begin":232,"end":265,"name":"EQ"},{"begin":222,"end":224,"name":"PUSH [tag]","value":"1"},{"begin":222,"end":224,"name":"JUMPI"},{"begin":269,"end":278,"name":"INVALID"},{"begin":222,"end":224,"name":"tag","value":"1"},{"begin":222,"end":224,"name":"JUMPDEST"},{"begin":293,"end":302,"name":"ADDRESS"},{"begin":290,"end":291,"name":"PUSH","value":"0"},{"begin":283,"end":303,"name":"MSTORE"},{"begin":323,"end":327,"name":"PUSH","value":"73"},{"begin":314,"end":321,"name":"DUP2"},{"begin":306,"end":328,"name":"MSTORE8"},{"begin":347,"end":354,"name":"DUP3"},{"begin":338,"end":345,"name":"DUP2"},{"begin":331,"end":355,"name":"RETURN"}],".data":{"0":{".auxdata":"a265627a7a72305820010ff5d9d2aed6e5c51d089c933543f2c9bea6d8d1feac75366f8e4d486d74cd6c6578706572696d656e74616cf50037",".code":[{"begin":919,"end":2703,"name":"PUSHDEPLOYADDRESS"},{"begin":919,"end":2703,"name":"ADDRESS"},{"begin":919,"end":2703,"name":"EQ"},{"begin":919,"end":2703,"name":"PUSH","value":"80"},{"begin":919,"end":2703,"name":"PUSH","value":"40"},{"begin":919,"end":2703,"name":"MSTORE"},{"begin":919,"end":2703,"name":"PUSH","value":"0"},{"begin":919,"end":2703,"name":"DUP1"},{"begin":919,"end":2703,"name":"REVERT"}]}}},"bytecode":{"object":"605a6023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72305820010ff5d9d2aed6e5c51d089c933543f2c9bea6d8d1feac75366f8e4d486d74cd6c6578706572696d656e74616cf50037","opcodes":"PUSH1 0x5A PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 ADD 0xf CREATE2 0xd9 0xd2 0xae 0xd6 0xe5 0xc5 SAR ADDMOD SWAP13 SWAP4 CALLDATALOAD NUMBER CALLCODE 0xc9 0xbe 0xa6 0xd8 0xd1 INVALID 0xac PUSH22 0x366F8E4D486D74CD6C6578706572696D656E74616CF5 STOP CALLDATACOPY ","sourceMap":"919:1784:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24","linkReferences":{}},"deployedBytecode":{"object":"73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72305820010ff5d9d2aed6e5c51d089c933543f2c9bea6d8d1feac75366f8e4d486d74cd6c6578706572696d656e74616cf50037","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 ADD 0xf CREATE2 0xd9 0xd2 0xae 0xd6 0xe5 0xc5 SAR ADDMOD SWAP13 SWAP4 CALLDATALOAD NUMBER CALLCODE 0xc9 0xbe 0xa6 0xd8 0xd1 INVALID 0xac PUSH22 0x366F8E4D486D74CD6C6578706572696D656E74616CF5 STOP CALLDATACOPY ","sourceMap":"919:1784:0:-;;;;;;;;","linkReferences":{}},"gasEstimates":{"creation":{"codeDepositCost":"18000","executionCost":"97","totalCost":"18097"},"external":{},"internal":{"add(uint256,uint256)":"infinite","div(uint256,uint256)":"infinite","mod(uint256,uint256)":"infinite","mul(uint256,uint256)":"infinite","sub(uint256,uint256)":"infinite"}}}},"Time":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"dYdX\\r  * Library for dealing with time, assuming timestamps fit within 32 bits (valid until year 2106)\\r\",\"methods\":{},\"title\":\"Time\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Contract\":\"Time\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"Contract\":{\"keccak256\":\"0xa4d5c897f307febf8d2fe07b1aa14f65cc305283ff9f7c6bb9e5e37f955d463c\",\"urls\":[\"bzzr://e27b159b490604a18c2028782112408e68b98c093c6e4802224b11475994d5c7\"]}},\"version\":1}","userdoc":{},"devdoc":{"author":"dYdX\r  * Library for dealing with time, assuming timestamps fit within 32 bits (valid until year 2106)\r","title":"Time\r"},"evm":{"assembly":"    /* \"Contract\":14297:14514  library Time {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contract\":14297:14514  library Time {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723058207ea10aad2410c8e4d64c9f0f79aa218369bd026e46c6f28b5fd30d270562e45f6c6578706572696d656e74616cf50037\n}\n","legacyAssembly":{".code":[{"begin":14297,"end":14514,"name":"PUSH #[$]","value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":14297,"end":14514,"name":"PUSH [$]","value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":132,"end":134,"name":"PUSH","value":"B"},{"begin":166,"end":173,"name":"DUP3"},{"begin":155,"end":164,"name":"DUP3"},{"begin":146,"end":153,"name":"DUP3"},{"begin":137,"end":174,"name":"CODECOPY"},{"begin":255,"end":262,"name":"DUP1"},{"begin":249,"end":263,"name":"MLOAD"},{"begin":246,"end":247,"name":"PUSH","value":"0"},{"begin":241,"end":264,"name":"BYTE"},{"begin":235,"end":239,"name":"PUSH","value":"73"},{"begin":232,"end":265,"name":"EQ"},{"begin":222,"end":224,"name":"PUSH [tag]","value":"1"},{"begin":222,"end":224,"name":"JUMPI"},{"begin":269,"end":278,"name":"INVALID"},{"begin":222,"end":224,"name":"tag","value":"1"},{"begin":222,"end":224,"name":"JUMPDEST"},{"begin":293,"end":302,"name":"ADDRESS"},{"begin":290,"end":291,"name":"PUSH","value":"0"},{"begin":283,"end":303,"name":"MSTORE"},{"begin":323,"end":327,"name":"PUSH","value":"73"},{"begin":314,"end":321,"name":"DUP2"},{"begin":306,"end":328,"name":"MSTORE8"},{"begin":347,"end":354,"name":"DUP3"},{"begin":338,"end":345,"name":"DUP2"},{"begin":331,"end":355,"name":"RETURN"}],".data":{"0":{".auxdata":"a265627a7a723058207ea10aad2410c8e4d64c9f0f79aa218369bd026e46c6f28b5fd30d270562e45f6c6578706572696d656e74616cf50037",".code":[{"begin":14297,"end":14514,"name":"PUSHDEPLOYADDRESS"},{"begin":14297,"end":14514,"name":"ADDRESS"},{"begin":14297,"end":14514,"name":"EQ"},{"begin":14297,"end":14514,"name":"PUSH","value":"80"},{"begin":14297,"end":14514,"name":"PUSH","value":"40"},{"begin":14297,"end":14514,"name":"MSTORE"},{"begin":14297,"end":14514,"name":"PUSH","value":"0"},{"begin":14297,"end":14514,"name":"DUP1"},{"begin":14297,"end":14514,"name":"REVERT"}]}}},"bytecode":{"object":"605a6023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723058207ea10aad2410c8e4d64c9f0f79aa218369bd026e46c6f28b5fd30d270562e45f6c6578706572696d656e74616cf50037","opcodes":"PUSH1 0x5A PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 PUSH31 0xA10AAD2410C8E4D64C9F0F79AA218369BD026E46C6F28B5FD30D270562E45F PUSH13 0x6578706572696D656E74616CF5 STOP CALLDATACOPY ","sourceMap":"14297:217:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24","linkReferences":{}},"deployedBytecode":{"object":"73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723058207ea10aad2410c8e4d64c9f0f79aa218369bd026e46c6f28b5fd30d270562e45f6c6578706572696d656e74616cf50037","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 PUSH31 0xA10AAD2410C8E4D64C9F0F79AA218369BD026E46C6F28B5FD30D270562E45F PUSH13 0x6578706572696D656E74616CF5 STOP CALLDATACOPY ","sourceMap":"14297:217:0:-;;;;;;;;","linkReferences":{}},"gasEstimates":{"creation":{"codeDepositCost":"18000","executionCost":"97","totalCost":"18097"},"external":{},"internal":{"currentTime()":"infinite"}}}},"Types":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"dYdX\\r  * Library for interacting with the basic structs used in Solo\\r\",\"methods\":{},\"title\":\"Types\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Contract\":\"Types\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"Contract\":{\"keccak256\":\"0xa4d5c897f307febf8d2fe07b1aa14f65cc305283ff9f7c6bb9e5e37f955d463c\",\"urls\":[\"bzzr://e27b159b490604a18c2028782112408e68b98c093c6e4802224b11475994d5c7\"]}},\"version\":1}","userdoc":{},"devdoc":{"author":"dYdX\r  * Library for interacting with the basic structs used in Solo\r","title":"Types\r"},"evm":{"assembly":"    /* \"Contract\":14675:19910  library Types {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contract\":14675:19910  library Types {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72305820641a37da8b695f474fd92276ad9db2137af336e20aefefbc8b89bbddea4592596c6578706572696d656e74616cf50037\n}\n","legacyAssembly":{".code":[{"begin":14675,"end":19910,"name":"PUSH #[$]","value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":14675,"end":19910,"name":"PUSH [$]","value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":132,"end":134,"name":"PUSH","value":"B"},{"begin":166,"end":173,"name":"DUP3"},{"begin":155,"end":164,"name":"DUP3"},{"begin":146,"end":153,"name":"DUP3"},{"begin":137,"end":174,"name":"CODECOPY"},{"begin":255,"end":262,"name":"DUP1"},{"begin":249,"end":263,"name":"MLOAD"},{"begin":246,"end":247,"name":"PUSH","value":"0"},{"begin":241,"end":264,"name":"BYTE"},{"begin":235,"end":239,"name":"PUSH","value":"73"},{"begin":232,"end":265,"name":"EQ"},{"begin":222,"end":224,"name":"PUSH [tag]","value":"1"},{"begin":222,"end":224,"name":"JUMPI"},{"begin":269,"end":278,"name":"INVALID"},{"begin":222,"end":224,"name":"tag","value":"1"},{"begin":222,"end":224,"name":"JUMPDEST"},{"begin":293,"end":302,"name":"ADDRESS"},{"begin":290,"end":291,"name":"PUSH","value":"0"},{"begin":283,"end":303,"name":"MSTORE"},{"begin":323,"end":327,"name":"PUSH","value":"73"},{"begin":314,"end":321,"name":"DUP2"},{"begin":306,"end":328,"name":"MSTORE8"},{"begin":347,"end":354,"name":"DUP3"},{"begin":338,"end":345,"name":"DUP2"},{"begin":331,"end":355,"name":"RETURN"}],".data":{"0":{".auxdata":"a265627a7a72305820641a37da8b695f474fd92276ad9db2137af336e20aefefbc8b89bbddea4592596c6578706572696d656e74616cf50037",".code":[{"begin":14675,"end":19910,"name":"PUSHDEPLOYADDRESS"},{"begin":14675,"end":19910,"name":"ADDRESS"},{"begin":14675,"end":19910,"name":"EQ"},{"begin":14675,"end":19910,"name":"PUSH","value":"80"},{"begin":14675,"end":19910,"name":"PUSH","value":"40"},{"begin":14675,"end":19910,"name":"MSTORE"},{"begin":14675,"end":19910,"name":"PUSH","value":"0"},{"begin":14675,"end":19910,"name":"DUP1"},{"begin":14675,"end":19910,"name":"REVERT"}]}}},"bytecode":{"object":"605a6023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72305820641a37da8b695f474fd92276ad9db2137af336e20aefefbc8b89bbddea4592596c6578706572696d656e74616cf50037","opcodes":"PUSH1 0x5A PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 PUSH5 0x1A37DA8B69 0x5f 0x47 0x4f 0xd9 0x22 PUSH23 0xAD9DB2137AF336E20AEFEFBC8B89BBDDEA4592596C6578 PUSH17 0x6572696D656E74616CF500370000000000 ","sourceMap":"14675:5235:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24","linkReferences":{}},"deployedBytecode":{"object":"73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72305820641a37da8b695f474fd92276ad9db2137af336e20aefefbc8b89bbddea4592596c6578706572696d656e74616cf50037","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 PUSH5 0x1A37DA8B69 0x5f 0x47 0x4f 0xd9 0x22 PUSH23 0xAD9DB2137AF336E20AEFEFBC8B89BBDDEA4592596C6578 PUSH17 0x6572696D656E74616CF500370000000000 ","sourceMap":"14675:5235:0:-;;;;;;;;","linkReferences":{}},"gasEstimates":{"creation":{"codeDepositCost":"18000","executionCost":"97","totalCost":"18097"},"external":{},"internal":{"add(struct Types.Par memory,struct Types.Par memory)":"infinite","add(struct Types.Wei memory,struct Types.Wei memory)":"infinite","equals(struct Types.Par memory,struct Types.Par memory)":"infinite","equals(struct Types.Wei memory,struct Types.Wei memory)":"infinite","isNegative(struct Types.Par memory)":"infinite","isNegative(struct Types.Wei memory)":"infinite","isPositive(struct Types.Par memory)":"infinite","isPositive(struct Types.Wei memory)":"infinite","isZero(struct Types.Par memory)":"infinite","isZero(struct Types.Wei memory)":"infinite","negative(struct Types.Par memory)":"infinite","negative(struct Types.Wei memory)":"infinite","sub(struct Types.Par memory,struct Types.Par memory)":"infinite","sub(struct Types.Wei memory,struct Types.Wei memory)":"infinite","zeroPar()":"infinite","zeroWei()":"infinite"}}}}}}}],"expires_at":18446744073709551615}