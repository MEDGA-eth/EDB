{"data":[{"SourceCode":{"language":"Solidity","sources":{"@aave/aave-stake/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.7.5;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n * From https://github.com/OpenZeppelin/openzeppelin-contracts\n */\ninterface IERC20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(\n    address sender,\n    address recipient,\n    uint256 amount\n  ) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"},"contracts/interfaces/IAaveIncentivesController.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\n\npragma experimental ABIEncoderV2;\n\nimport {IAaveDistributionManager} from '../interfaces/IAaveDistributionManager.sol';\n\ninterface IAaveIncentivesController is IAaveDistributionManager {\n  \n  event RewardsAccrued(address indexed user, uint256 amount);\n  \n  event RewardsClaimed(\n    address indexed user,\n    address indexed to,\n    address indexed claimer,\n    uint256 amount\n  );\n\n  event ClaimerSet(address indexed user, address indexed claimer);\n\n  /**\n   * @dev Whitelists an address to claim the rewards on behalf of another address\n   * @param user The address of the user\n   * @param claimer The address of the claimer\n   */\n  function setClaimer(address user, address claimer) external;\n\n  /**\n   * @dev Returns the whitelisted claimer for a certain address (0x0 if not set)\n   * @param user The address of the user\n   * @return The claimer address\n   */\n  function getClaimer(address user) external view returns (address);\n\n  /**\n   * @dev Configure assets for a certain rewards emission\n   * @param assets The assets to incentivize\n   * @param emissionsPerSecond The emission for each asset\n   */\n  function configureAssets(address[] calldata assets, uint256[] calldata emissionsPerSecond)\n    external;\n\n\n  /**\n   * @dev Called by the corresponding asset on any update that affects the rewards distribution\n   * @param asset The address of the user\n   * @param userBalance The balance of the user of the asset in the lending pool\n   * @param totalSupply The total supply of the asset in the lending pool\n   **/\n  function handleAction(\n    address asset,\n    uint256 userBalance,\n    uint256 totalSupply\n  ) external;\n\n  /**\n   * @dev Returns the total of rewards of an user, already accrued + not yet accrued\n   * @param user The address of the user\n   * @return The rewards\n   **/\n  function getRewardsBalance(address[] calldata assets, address user)\n    external\n    view\n    returns (uint256);\n\n  /**\n   * @dev Claims reward for an user, on all the assets of the lending pool, accumulating the pending rewards\n   * @param amount Amount of rewards to claim\n   * @param to Address that will be receiving the rewards\n   * @return Rewards claimed\n   **/\n  function claimRewards(\n    address[] calldata assets,\n    uint256 amount,\n    address to\n  ) external returns (uint256);\n\n  /**\n   * @dev Claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards. The caller must\n   * be whitelisted via \"allowClaimOnBehalf\" function by the RewardsAdmin role manager\n   * @param amount Amount of rewards to claim\n   * @param user Address to check and claim rewards\n   * @param to Address that will be receiving the rewards\n   * @return Rewards claimed\n   **/\n  function claimRewardsOnBehalf(\n    address[] calldata assets,\n    uint256 amount,\n    address user,\n    address to\n  ) external returns (uint256);\n\n  /**\n   * @dev returns the unclaimed rewards of the user\n   * @param user the address of the user\n   * @return the unclaimed user rewards\n   */\n  function getUserUnclaimedRewards(address user) external view returns (uint256);\n\n  /**\n  * @dev for backward compatibility with previous implementation of the Incentives controller\n  */\n  function REWARD_TOKEN() external view returns (address);\n}\n"},"@aave/aave-stake/contracts/lib/SafeMath.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\n\n/**\n * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\n * Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n  /**\n   * @dev Returns the addition of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `+` operator.\n   *\n   * Requirements:\n   * - Addition cannot overflow.\n   */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a, 'SafeMath: addition overflow');\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    return sub(a, b, 'SafeMath: subtraction overflow');\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(\n    uint256 a,\n    uint256 b,\n    string memory errorMessage\n  ) internal pure returns (uint256) {\n    require(b <= a, errorMessage);\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the multiplication of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `*` operator.\n   *\n   * Requirements:\n   * - Multiplication cannot overflow.\n   */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b, 'SafeMath: multiplication overflow');\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    return div(a, b, 'SafeMath: division by zero');\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(\n    uint256 a,\n    uint256 b,\n    string memory errorMessage\n  ) internal pure returns (uint256) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, errorMessage);\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    return mod(a, b, 'SafeMath: modulo by zero');\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts with custom message when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(\n    uint256 a,\n    uint256 b,\n    string memory errorMessage\n  ) internal pure returns (uint256) {\n    require(b != 0, errorMessage);\n    return a % b;\n  }\n}\n"},"@aave/aave-stake/contracts/utils/VersionedInitializable.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\n\n/**\n * @title VersionedInitializable\n *\n * @dev Helper contract to support initializer functions. To use it, replace\n * the constructor with a function that has the `initializer` modifier.\n * WARNING: Unlike constructors, initializer functions must be manually\n * invoked. This applies both to deploying an Initializable contract, as well\n * as extending an Initializable contract via inheritance.\n * WARNING: When used with inheritance, manual care must be taken to not invoke\n * a parent initializer twice, or ensure that all initializers are idempotent,\n * because this is not dealt with automatically as with constructors.\n *\n * @author Aave, inspired by the OpenZeppelin Initializable contract\n */\nabstract contract VersionedInitializable {\n  /**\n   * @dev Indicates that the contract has been initialized.\n   */\n  uint256 internal lastInitializedRevision = 0;\n\n  /**\n   * @dev Modifier to use in the initializer function of a contract.\n   */\n  modifier initializer() {\n    uint256 revision = getRevision();\n    require(revision > lastInitializedRevision, 'Contract instance has already been initialized');\n\n    lastInitializedRevision = revision;\n\n    _;\n  }\n\n  /// @dev returns the revision number of the contract.\n  /// Needs to be defined in the inherited class as a constant.\n  function getRevision() internal pure virtual returns (uint256);\n\n  // Reserved storage space to allow for layout changes in the future.\n  uint256[50] private ______gap;\n}\n"},"contracts/incentives/DistributionManager.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\npragma experimental ABIEncoderV2;\n\nimport {IAaveDistributionManager} from '../interfaces/IAaveDistributionManager.sol';\nimport {SafeMath} from '../lib/SafeMath.sol';\nimport {DistributionTypes} from '../lib/DistributionTypes.sol';\n\n/**\n * @title DistributionManager\n * @notice Accounting contract to manage multiple staking distributions\n * @author Aave\n **/\ncontract DistributionManager is IAaveDistributionManager {\n  using SafeMath for uint256;\n\n  struct AssetData {\n    uint104 emissionPerSecond;\n    uint104 index;\n    uint40 lastUpdateTimestamp;\n    mapping(address => uint256) users;\n  }\n\n  address public immutable EMISSION_MANAGER;\n\n  uint8 public constant PRECISION = 18;\n\n  mapping(address => AssetData) public assets;\n\n  uint256 internal _distributionEnd;\n\n  modifier onlyEmissionManager() {\n    require(msg.sender == EMISSION_MANAGER, 'ONLY_EMISSION_MANAGER');\n    _;\n  }\n\n  constructor(address emissionManager) {\n    EMISSION_MANAGER = emissionManager;\n  }\n\n  /// @inheritdoc IAaveDistributionManager\n  function setDistributionEnd(uint256 distributionEnd) external override onlyEmissionManager {\n    _distributionEnd = distributionEnd;\n    emit DistributionEndUpdated(distributionEnd);\n  }\n\n  /// @inheritdoc IAaveDistributionManager\n  function getDistributionEnd() external view override returns (uint256) {\n    return _distributionEnd;\n  }\n\n  /// @inheritdoc IAaveDistributionManager\n  function DISTRIBUTION_END() external view override returns (uint256) {\n    return _distributionEnd;\n  }\n\n  /// @inheritdoc IAaveDistributionManager\n  function getUserAssetData(address user, address asset) public view override returns (uint256) {\n    return assets[asset].users[user];\n  }\n\n  /// @inheritdoc IAaveDistributionManager\n  function getAssetData(address asset) public view override returns (uint256, uint256, uint256) {\n    return (assets[asset].index, assets[asset].emissionPerSecond, assets[asset].lastUpdateTimestamp);\n  }\n\n  /**\n   * @dev Configure the assets for a specific emission\n   * @param assetsConfigInput The array of each asset configuration\n   **/\n  function _configureAssets(DistributionTypes.AssetConfigInput[] memory assetsConfigInput)\n    internal\n  {\n    for (uint256 i = 0; i < assetsConfigInput.length; i++) {\n      AssetData storage assetConfig = assets[assetsConfigInput[i].underlyingAsset];\n\n      _updateAssetStateInternal(\n        assetsConfigInput[i].underlyingAsset,\n        assetConfig,\n        assetsConfigInput[i].totalStaked\n      );\n\n      assetConfig.emissionPerSecond = assetsConfigInput[i].emissionPerSecond;\n\n      emit AssetConfigUpdated(\n        assetsConfigInput[i].underlyingAsset,\n        assetsConfigInput[i].emissionPerSecond\n      );\n    }\n  }\n\n  /**\n   * @dev Updates the state of one distribution, mainly rewards index and timestamp\n   * @param asset The address of the asset being updated\n   * @param assetConfig Storage pointer to the distribution's config\n   * @param totalStaked Current total of staked assets for this distribution\n   * @return The new distribution index\n   **/\n  function _updateAssetStateInternal(\n    address asset,\n    AssetData storage assetConfig,\n    uint256 totalStaked\n  ) internal returns (uint256) {\n    uint256 oldIndex = assetConfig.index;\n    uint256 emissionPerSecond = assetConfig.emissionPerSecond;\n    uint128 lastUpdateTimestamp = assetConfig.lastUpdateTimestamp;\n\n    if (block.timestamp == lastUpdateTimestamp) {\n      return oldIndex;\n    }\n\n    uint256 newIndex =\n      _getAssetIndex(oldIndex, emissionPerSecond, lastUpdateTimestamp, totalStaked);\n\n    if (newIndex != oldIndex) {\n      require(uint104(newIndex) == newIndex, 'Index overflow');\n      //optimization: storing one after another saves one SSTORE\n      assetConfig.index = uint104(newIndex);\n      assetConfig.lastUpdateTimestamp = uint40(block.timestamp);\n      emit AssetIndexUpdated(asset, newIndex);\n    } else {\n      assetConfig.lastUpdateTimestamp = uint40(block.timestamp);\n    }\n\n    return newIndex;\n  }\n\n  /**\n   * @dev Updates the state of an user in a distribution\n   * @param user The user's address\n   * @param asset The address of the reference asset of the distribution\n   * @param stakedByUser Amount of tokens staked by the user in the distribution at the moment\n   * @param totalStaked Total tokens staked in the distribution\n   * @return The accrued rewards for the user until the moment\n   **/\n  function _updateUserAssetInternal(\n    address user,\n    address asset,\n    uint256 stakedByUser,\n    uint256 totalStaked\n  ) internal returns (uint256) {\n    AssetData storage assetData = assets[asset];\n    uint256 userIndex = assetData.users[user];\n    uint256 accruedRewards = 0;\n\n    uint256 newIndex = _updateAssetStateInternal(asset, assetData, totalStaked);\n\n    if (userIndex != newIndex) {\n      if (stakedByUser != 0) {\n        accruedRewards = _getRewards(stakedByUser, newIndex, userIndex);\n      }\n\n      assetData.users[user] = newIndex;\n      emit UserIndexUpdated(user, asset, newIndex);\n    }\n\n    return accruedRewards;\n  }\n\n  /**\n   * @dev Used by \"frontend\" stake contracts to update the data of an user when claiming rewards from there\n   * @param user The address of the user\n   * @param stakes List of structs of the user data related with his stake\n   * @return The accrued rewards for the user until the moment\n   **/\n  function _claimRewards(address user, DistributionTypes.UserStakeInput[] memory stakes)\n    internal\n    returns (uint256)\n  {\n    uint256 accruedRewards = 0;\n\n    for (uint256 i = 0; i < stakes.length; i++) {\n      accruedRewards = accruedRewards.add(\n        _updateUserAssetInternal(\n          user,\n          stakes[i].underlyingAsset,\n          stakes[i].stakedByUser,\n          stakes[i].totalStaked\n        )\n      );\n    }\n\n    return accruedRewards;\n  }\n\n  /**\n   * @dev Return the accrued rewards for an user over a list of distribution\n   * @param user The address of the user\n   * @param stakes List of structs of the user data related with his stake\n   * @return The accrued rewards for the user until the moment\n   **/\n  function _getUnclaimedRewards(address user, DistributionTypes.UserStakeInput[] memory stakes)\n    internal\n    view\n    returns (uint256)\n  {\n    uint256 accruedRewards = 0;\n\n    for (uint256 i = 0; i < stakes.length; i++) {\n      AssetData storage assetConfig = assets[stakes[i].underlyingAsset];\n      uint256 assetIndex =\n        _getAssetIndex(\n          assetConfig.index,\n          assetConfig.emissionPerSecond,\n          assetConfig.lastUpdateTimestamp,\n          stakes[i].totalStaked\n        );\n\n      accruedRewards = accruedRewards.add(\n        _getRewards(stakes[i].stakedByUser, assetIndex, assetConfig.users[user])\n      );\n    }\n    return accruedRewards;\n  }\n\n  /**\n   * @dev Internal function for the calculation of user's rewards on a distribution\n   * @param principalUserBalance Amount staked by the user on a distribution\n   * @param reserveIndex Current index of the distribution\n   * @param userIndex Index stored for the user, representation his staking moment\n   * @return The rewards\n   **/\n  function _getRewards(\n    uint256 principalUserBalance,\n    uint256 reserveIndex,\n    uint256 userIndex\n  ) internal pure returns (uint256) {\n    return principalUserBalance.mul(reserveIndex.sub(userIndex)) / 10**uint256(PRECISION);\n  }\n\n  /**\n   * @dev Calculates the next value of an specific distribution index, with validations\n   * @param currentIndex Current index of the distribution\n   * @param emissionPerSecond Representing the total rewards distributed per second per asset unit, on the distribution\n   * @param lastUpdateTimestamp Last moment this distribution was updated\n   * @param totalBalance of tokens considered for the distribution\n   * @return The new index.\n   **/\n  function _getAssetIndex(\n    uint256 currentIndex,\n    uint256 emissionPerSecond,\n    uint128 lastUpdateTimestamp,\n    uint256 totalBalance\n  ) internal view returns (uint256) {\n    uint256 distributionEnd = _distributionEnd;\n    if (\n      emissionPerSecond == 0 ||\n      totalBalance == 0 ||\n      lastUpdateTimestamp == block.timestamp ||\n      lastUpdateTimestamp >= distributionEnd\n    ) {\n      return currentIndex;\n    }\n\n    uint256 currentTimestamp =\n      block.timestamp > distributionEnd ? distributionEnd : block.timestamp;\n    uint256 timeDelta = currentTimestamp.sub(lastUpdateTimestamp);\n    return\n      emissionPerSecond.mul(timeDelta).mul(10**uint256(PRECISION)).div(totalBalance).add(\n        currentIndex\n      );\n  }\n}\n"},"contracts/interfaces/IScaledBalanceToken.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\n\ninterface IScaledBalanceToken {\n  /**\n   * @dev Returns the scaled balance of the user. The scaled balance is the sum of all the\n   * updated stored balance divided by the reserve's liquidity index at the moment of the update\n   * @param user The user whose balance is calculated\n   * @return The scaled balance of the user\n   **/\n  function scaledBalanceOf(address user) external view returns (uint256);\n\n  /**\n   * @dev Returns the scaled balance of the user and the scaled total supply.\n   * @param user The address of the user\n   * @return The scaled balance of the user\n   * @return The scaled balance and the scaled total supply\n   **/\n  function getScaledUserBalanceAndSupply(address user) external view returns (uint256, uint256);\n\n  /**\n   * @dev Returns the scaled total supply of the token. Represents sum(debt/index)\n   * @return The scaled total supply\n   **/\n  function scaledTotalSupply() external view returns (uint256);\n}\n"},"contracts/lib/DistributionTypes.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\npragma experimental ABIEncoderV2;\n\nlibrary DistributionTypes {\n  struct AssetConfigInput {\n    uint104 emissionPerSecond;\n    uint256 totalStaked;\n    address underlyingAsset;\n  }\n\n  struct UserStakeInput {\n    address underlyingAsset;\n    uint256 stakedByUser;\n    uint256 totalStaked;\n  }\n}\n"},"contracts/incentives/StakedTokenIncentivesController.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\npragma experimental ABIEncoderV2;\n\nimport {SafeERC20} from '@aave/aave-stake/contracts/lib/SafeERC20.sol';\nimport {SafeMath} from '../lib/SafeMath.sol';\nimport {DistributionTypes} from '../lib/DistributionTypes.sol';\nimport {VersionedInitializable} from '@aave/aave-stake/contracts/utils/VersionedInitializable.sol';\nimport {DistributionManager} from './DistributionManager.sol';\nimport {IStakedTokenWithConfig} from '../interfaces/IStakedTokenWithConfig.sol';\nimport {IERC20} from '@aave/aave-stake/contracts/interfaces/IERC20.sol';\nimport {IScaledBalanceToken} from '../interfaces/IScaledBalanceToken.sol';\nimport {IAaveIncentivesController} from '../interfaces/IAaveIncentivesController.sol';\n\n/**\n * @title StakedTokenIncentivesController\n * @notice Distributor contract for rewards to the Aave protocol, using a staked token as rewards asset.\n * The contract stakes the rewards before redistributing them to the Aave protocol participants.\n * The reference staked token implementation is at https://github.com/aave/aave-stake-v2\n * @author Aave\n **/\ncontract StakedTokenIncentivesController is\n  IAaveIncentivesController,\n  VersionedInitializable,\n  DistributionManager\n{\n  using SafeMath for uint256;\n  using SafeERC20 for IERC20;\n\n  uint256 public constant REVISION = 1;\n\n  IStakedTokenWithConfig public immutable STAKE_TOKEN;\n\n  mapping(address => uint256) internal _usersUnclaimedRewards;\n\n  // this mapping allows whitelisted addresses to claim on behalf of others\n  // useful for contracts that hold tokens to be rewarded but don't have any native logic to claim Liquidity Mining rewards\n  mapping(address => address) internal _authorizedClaimers;\n\n  modifier onlyAuthorizedClaimers(address claimer, address user) {\n    require(_authorizedClaimers[user] == claimer, 'CLAIMER_UNAUTHORIZED');\n    _;\n  }\n\n  constructor(IStakedTokenWithConfig stakeToken, address emissionManager)\n    DistributionManager(emissionManager)\n  {\n    STAKE_TOKEN = stakeToken;\n  }\n\n  /**\n   * @dev Initialize IStakedTokenIncentivesController\n   * @param addressesProvider the address of the corresponding addresses provider\n   **/\n  function initialize(address addressesProvider) external initializer {\n    //approves the safety module to allow staking\n    IERC20(STAKE_TOKEN.STAKED_TOKEN()).safeApprove(address(STAKE_TOKEN), type(uint256).max);\n  }\n\n  /// @inheritdoc IAaveIncentivesController\n  function configureAssets(address[] calldata assets, uint256[] calldata emissionsPerSecond)\n    external\n    override\n    onlyEmissionManager\n  {\n    require(assets.length == emissionsPerSecond.length, 'INVALID_CONFIGURATION');\n\n    DistributionTypes.AssetConfigInput[] memory assetsConfig =\n      new DistributionTypes.AssetConfigInput[](assets.length);\n\n    for (uint256 i = 0; i < assets.length; i++) {\n      assetsConfig[i].underlyingAsset = assets[i];\n      assetsConfig[i].emissionPerSecond = uint104(emissionsPerSecond[i]);\n\n      require(assetsConfig[i].emissionPerSecond == emissionsPerSecond[i], 'INVALID_CONFIGURATION');\n\n      assetsConfig[i].totalStaked = IScaledBalanceToken(assets[i]).scaledTotalSupply();\n    }\n    _configureAssets(assetsConfig);\n  }\n\n  /// @inheritdoc IAaveIncentivesController\n  function handleAction(\n    address user,\n    uint256 totalSupply,\n    uint256 userBalance\n  ) external override {\n    uint256 accruedRewards = _updateUserAssetInternal(user, msg.sender, userBalance, totalSupply);\n    if (accruedRewards != 0) {\n      _usersUnclaimedRewards[user] = _usersUnclaimedRewards[user].add(accruedRewards);\n      emit RewardsAccrued(user, accruedRewards);\n    }\n  }\n\n  /// @inheritdoc IAaveIncentivesController\n  function getRewardsBalance(address[] calldata assets, address user)\n    external\n    view\n    override\n    returns (uint256)\n  {\n    uint256 unclaimedRewards = _usersUnclaimedRewards[user];\n\n    DistributionTypes.UserStakeInput[] memory userState =\n      new DistributionTypes.UserStakeInput[](assets.length);\n    for (uint256 i = 0; i < assets.length; i++) {\n      userState[i].underlyingAsset = assets[i];\n      (userState[i].stakedByUser, userState[i].totalStaked) = IScaledBalanceToken(assets[i])\n        .getScaledUserBalanceAndSupply(user);\n    }\n    unclaimedRewards = unclaimedRewards.add(_getUnclaimedRewards(user, userState));\n    return unclaimedRewards;\n  }\n\n  /// @inheritdoc IAaveIncentivesController\n  function claimRewards(\n    address[] calldata assets,\n    uint256 amount,\n    address to\n  ) external override returns (uint256) {\n    require(to != address(0), 'INVALID_TO_ADDRESS');\n    return _claimRewards(assets, amount, msg.sender, msg.sender, to);\n  }\n\n  /// @inheritdoc IAaveIncentivesController\n  function claimRewardsOnBehalf(\n    address[] calldata assets,\n    uint256 amount,\n    address user,\n    address to\n  ) external override onlyAuthorizedClaimers(msg.sender, user) returns (uint256) {\n    require(user != address(0), 'INVALID_USER_ADDRESS');\n    require(to != address(0), 'INVALID_TO_ADDRESS');\n    return _claimRewards(assets, amount, msg.sender, user, to);\n  }\n\n  /**\n   * @dev Claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards.\n   * @param amount Amount of rewards to claim\n   * @param user Address to check and claim rewards\n   * @param to Address that will be receiving the rewards\n   * @return Rewards claimed\n   **/\n\n  /// @inheritdoc IAaveIncentivesController\n  function setClaimer(address user, address caller) external override onlyEmissionManager {\n    _authorizedClaimers[user] = caller;\n    emit ClaimerSet(user, caller);\n  }\n\n  /// @inheritdoc IAaveIncentivesController\n  function getClaimer(address user) external view override returns (address) {\n    return _authorizedClaimers[user];\n  }\n\n  /// @inheritdoc IAaveIncentivesController\n  function getUserUnclaimedRewards(address _user) external view override returns (uint256) {\n    return _usersUnclaimedRewards[_user];\n  }\n\n  /// @inheritdoc IAaveIncentivesController\n  function REWARD_TOKEN() external view override returns (address) {\n    return address(STAKE_TOKEN);\n  }\n\n  /**\n   * @dev returns the revision of the implementation contract\n   */\n  function getRevision() internal pure override returns (uint256) {\n    return REVISION;\n  }\n\n  /**\n   * @dev Claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards.\n   * @param amount Amount of rewards to claim\n   * @param user Address to check and claim rewards\n   * @param to Address that will be receiving the rewards\n   * @return Rewards claimed\n   **/\n  function _claimRewards(\n    address[] calldata assets,\n    uint256 amount,\n    address claimer,\n    address user,\n    address to\n  ) internal returns (uint256) {\n    if (amount == 0) {\n      return 0;\n    }\n    uint256 unclaimedRewards = _usersUnclaimedRewards[user];\n\n    DistributionTypes.UserStakeInput[] memory userState =\n      new DistributionTypes.UserStakeInput[](assets.length);\n    for (uint256 i = 0; i < assets.length; i++) {\n      userState[i].underlyingAsset = assets[i];\n      (userState[i].stakedByUser, userState[i].totalStaked) = IScaledBalanceToken(assets[i])\n        .getScaledUserBalanceAndSupply(user);\n    }\n\n    uint256 accruedRewards = _claimRewards(user, userState);\n    if (accruedRewards != 0) {\n      unclaimedRewards = unclaimedRewards.add(accruedRewards);\n      emit RewardsAccrued(user, accruedRewards);\n    }\n\n    if (unclaimedRewards == 0) {\n      return 0;\n    }\n\n    uint256 amountToClaim = amount > unclaimedRewards ? unclaimedRewards : amount;\n    _usersUnclaimedRewards[user] = unclaimedRewards - amountToClaim; // Safe due to the previous line\n\n    STAKE_TOKEN.stake(to, amountToClaim);\n    emit RewardsClaimed(user, to, claimer, amountToClaim);\n\n    return amountToClaim;\n  }\n}\n"},"@aave/aave-stake/contracts/lib/Address.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.7.5;\n\n/**\n * @dev Collection of functions related to the address type\n * From https://github.com/OpenZeppelin/openzeppelin-contracts\n */\nlibrary Address {\n  /**\n   * @dev Returns true if `account` is a contract.\n   *\n   * [IMPORTANT]\n   * ====\n   * It is unsafe to assume that an address for which this function returns\n   * false is an externally-owned account (EOA) and not a contract.\n   *\n   * Among others, `isContract` will return false for the following\n   * types of addresses:\n   *\n   *  - an externally-owned account\n   *  - a contract in construction\n   *  - an address where a contract will be created\n   *  - an address where a contract lived, but was destroyed\n   * ====\n   */\n  function isContract(address account) internal view returns (bool) {\n    // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\n    // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\n    // for accounts without code, i.e. `keccak256('')`\n    bytes32 codehash;\n    bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\n    // solhint-disable-next-line no-inline-assembly\n    assembly {\n      codehash := extcodehash(account)\n    }\n    return (codehash != accountHash && codehash != 0x0);\n  }\n\n  /**\n   * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n   * `recipient`, forwarding all available gas and reverting on errors.\n   *\n   * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n   * of certain opcodes, possibly making contracts go over the 2300 gas limit\n   * imposed by `transfer`, making them unable to receive funds via\n   * `transfer`. {sendValue} removes this limitation.\n   *\n   * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n   *\n   * IMPORTANT: because control is transferred to `recipient`, care must be\n   * taken to not create reentrancy vulnerabilities. Consider using\n   * {ReentrancyGuard} or the\n   * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n   */\n  function sendValue(address payable recipient, uint256 amount) internal {\n    require(address(this).balance >= amount, 'Address: insufficient balance');\n\n    // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n    (bool success, ) = recipient.call{value: amount}('');\n    require(success, 'Address: unable to send value, recipient may have reverted');\n  }\n}\n"},"contracts/interfaces/IAaveDistributionManager.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\npragma experimental ABIEncoderV2;\n\nimport {DistributionTypes} from '../lib/DistributionTypes.sol';\n\ninterface IAaveDistributionManager {\n  \n  event AssetConfigUpdated(address indexed asset, uint256 emission);\n  event AssetIndexUpdated(address indexed asset, uint256 index);\n  event UserIndexUpdated(address indexed user, address indexed asset, uint256 index);\n  event DistributionEndUpdated(uint256 newDistributionEnd);\n\n  /**\n  * @dev Sets the end date for the distribution\n  * @param distributionEnd The end date timestamp\n  **/\n  function setDistributionEnd(uint256 distributionEnd) external;\n\n  /**\n  * @dev Gets the end date for the distribution\n  * @return The end of the distribution\n  **/\n  function getDistributionEnd() external view returns (uint256);\n\n  /**\n  * @dev for backwards compatibility with the previous DistributionManager used\n  * @return The end of the distribution\n  **/\n  function DISTRIBUTION_END() external view returns(uint256);\n\n   /**\n   * @dev Returns the data of an user on a distribution\n   * @param user Address of the user\n   * @param asset The address of the reference asset of the distribution\n   * @return The new index\n   **/\n   function getUserAssetData(address user, address asset) external view returns (uint256);\n\n   /**\n   * @dev Returns the configuration of the distribution for a certain asset\n   * @param asset The address of the reference asset of the distribution\n   * @return The asset index, the emission per second and the last updated timestamp\n   **/\n   function getAssetData(address asset) external view returns (uint256, uint256, uint256);\n}\n"},"contracts/lib/SafeMath.sol":{"content":"\n// SPDX-License-Identifier: agpl-3.0\npragma solidity ^0.7.5;\n\n/// @title Optimized overflow and underflow safe math operations\n/// @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\n/// inspired by uniswap V3\nlibrary SafeMath {\n    /// @notice Returns x + y, reverts if sum overflows uint256\n    /// @param x The augend\n    /// @param y The addend\n    /// @return z The sum of x and y\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require((z = x + y) >= x);\n    }\n\n    /// @notice Returns x - y, reverts if underflows\n    /// @param x The minuend\n    /// @param y The subtrahend\n    /// @return z The difference of x and y\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require((z = x - y) <= x);\n    }\n\n    /// @notice Returns x * y, reverts if overflows\n    /// @param x The multiplicand\n    /// @param y The multiplier\n    /// @return z The product of x and y\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require(x == 0 || (z = x * y) / x == y);\n    }\n\n    function div(uint256 x, uint256 y) internal pure returns(uint256) {\n        // no need to check for division by zero - solidity already reverts\n        return x / y;\n    }\n}"},"@aave/aave-stake/contracts/interfaces/IStakedToken.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\n\ninterface IStakedToken {\n  \n  function stake(address to, uint256 amount) external;\n\n  function redeem(address to, uint256 amount) external;\n\n  function cooldown() external;\n\n  function claimRewards(address to, uint256 amount) external;\n}\n"},"contracts/interfaces/IStakedTokenWithConfig.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0\npragma solidity 0.7.5;\n\nimport {IStakedToken} from '@aave/aave-stake/contracts/interfaces/IStakedToken.sol';\n\ninterface IStakedTokenWithConfig is IStakedToken {\n  function STAKED_TOKEN() external view returns(address);\n}"},"@aave/aave-stake/contracts/lib/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.7.5;\n\nimport {IERC20} from '../interfaces/IERC20.sol';\nimport {SafeMath} from './SafeMath.sol';\nimport {Address} from './Address.sol';\n\n/**\n * @title SafeERC20\n * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\n * Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n  using SafeMath for uint256;\n  using Address for address;\n\n  function safeTransfer(\n    IERC20 token,\n    address to,\n    uint256 value\n  ) internal {\n    callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n  }\n\n  function safeTransferFrom(\n    IERC20 token,\n    address from,\n    address to,\n    uint256 value\n  ) internal {\n    callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n  }\n\n  function safeApprove(\n    IERC20 token,\n    address spender,\n    uint256 value\n  ) internal {\n    require(\n      (value == 0) || (token.allowance(address(this), spender) == 0),\n      'SafeERC20: approve from non-zero to non-zero allowance'\n    );\n    callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n  }\n\n  function callOptionalReturn(IERC20 token, bytes memory data) private {\n    require(address(token).isContract(), 'SafeERC20: call to non-contract');\n\n    // solhint-disable-next-line avoid-low-level-calls\n    (bool success, bytes memory returndata) = address(token).call(data);\n    require(success, 'SafeERC20: low-level call failed');\n\n    if (returndata.length > 0) {\n      // Return data is optional\n      // solhint-disable-next-line max-line-length\n      require(abi.decode(returndata, (bool)), 'SafeERC20: ERC20 operation did not succeed');\n    }\n  }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"istanbul","outputSelection":{"*":{"*":["evm.bytecode","evm.deployedBytecode","abi"]}},"metadata":{"useLiteralContent":true}}},"ABI":"[{\"inputs\":[{\"internalType\":\"contract IStakedTokenWithConfig\",\"name\":\"stakeToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"emissionManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"emission\",\"type\":\"uint256\"}],\"name\":\"AssetConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"AssetIndexUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"ClaimerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDistributionEnd\",\"type\":\"uint256\"}],\"name\":\"DistributionEndUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsAccrued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"UserIndexUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DISTRIBUTION_END\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EMISSION_MANAGER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REVISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REWARD_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKE_TOKEN\",\"outputs\":[{\"internalType\":\"contract IStakedTokenWithConfig\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"assets\",\"outputs\":[{\"internalType\":\"uint104\",\"name\":\"emissionPerSecond\",\"type\":\"uint104\"},{\"internalType\":\"uint104\",\"name\":\"index\",\"type\":\"uint104\"},{\"internalType\":\"uint40\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint40\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"claimRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"claimRewardsOnBehalf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"emissionsPerSecond\",\"type\":\"uint256[]\"}],\"name\":\"configureAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getClaimer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDistributionEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getRewardsBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getUserAssetData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserUnclaimedRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userBalance\",\"type\":\"uint256\"}],\"name\":\"handleAction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressesProvider\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"setClaimer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"distributionEnd\",\"type\":\"uint256\"}],\"name\":\"setDistributionEnd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"StakedTokenIncentivesController","CompilerVersion":"v0.7.5+commit.eb77ed08","OptimizationUsed":1,"Runs":200,"ConstructorArguments":"0x0000000000000000000000004da27a545c0c5b758a6ba100e3a049001de870f5000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d5","EVMVersion":"istanbul","Library":"","LicenseType":"GNU AGPLv3","Proxy":0,"SwarmSource":"ipfs://d94e1a7bc1c2da8e7f89644f4c7824cbb4d6c28be01bda08c043c6db1633574f"},{"@aave/aave-stake/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.7.5;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n * From https://github.com/OpenZeppelin/openzeppelin-contracts\n */\ninterface IERC20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(\n    address sender,\n    address recipient,\n    uint256 amount\n  ) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"},"@aave/aave-stake/contracts/interfaces/IStakedToken.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\n\ninterface IStakedToken {\n  \n  function stake(address to, uint256 amount) external;\n\n  function redeem(address to, uint256 amount) external;\n\n  function cooldown() external;\n\n  function claimRewards(address to, uint256 amount) external;\n}\n"},"@aave/aave-stake/contracts/lib/Address.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.7.5;\n\n/**\n * @dev Collection of functions related to the address type\n * From https://github.com/OpenZeppelin/openzeppelin-contracts\n */\nlibrary Address {\n  /**\n   * @dev Returns true if `account` is a contract.\n   *\n   * [IMPORTANT]\n   * ====\n   * It is unsafe to assume that an address for which this function returns\n   * false is an externally-owned account (EOA) and not a contract.\n   *\n   * Among others, `isContract` will return false for the following\n   * types of addresses:\n   *\n   *  - an externally-owned account\n   *  - a contract in construction\n   *  - an address where a contract will be created\n   *  - an address where a contract lived, but was destroyed\n   * ====\n   */\n  function isContract(address account) internal view returns (bool) {\n    // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\n    // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\n    // for accounts without code, i.e. `keccak256('')`\n    bytes32 codehash;\n    bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\n    // solhint-disable-next-line no-inline-assembly\n    assembly {\n      codehash := extcodehash(account)\n    }\n    return (codehash != accountHash && codehash != 0x0);\n  }\n\n  /**\n   * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n   * `recipient`, forwarding all available gas and reverting on errors.\n   *\n   * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n   * of certain opcodes, possibly making contracts go over the 2300 gas limit\n   * imposed by `transfer`, making them unable to receive funds via\n   * `transfer`. {sendValue} removes this limitation.\n   *\n   * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n   *\n   * IMPORTANT: because control is transferred to `recipient`, care must be\n   * taken to not create reentrancy vulnerabilities. Consider using\n   * {ReentrancyGuard} or the\n   * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n   */\n  function sendValue(address payable recipient, uint256 amount) internal {\n    require(address(this).balance >= amount, 'Address: insufficient balance');\n\n    // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n    (bool success, ) = recipient.call{value: amount}('');\n    require(success, 'Address: unable to send value, recipient may have reverted');\n  }\n}\n"},"@aave/aave-stake/contracts/lib/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.7.5;\n\nimport {IERC20} from '../interfaces/IERC20.sol';\nimport {SafeMath} from './SafeMath.sol';\nimport {Address} from './Address.sol';\n\n/**\n * @title SafeERC20\n * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\n * Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n  using SafeMath for uint256;\n  using Address for address;\n\n  function safeTransfer(\n    IERC20 token,\n    address to,\n    uint256 value\n  ) internal {\n    callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n  }\n\n  function safeTransferFrom(\n    IERC20 token,\n    address from,\n    address to,\n    uint256 value\n  ) internal {\n    callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n  }\n\n  function safeApprove(\n    IERC20 token,\n    address spender,\n    uint256 value\n  ) internal {\n    require(\n      (value == 0) || (token.allowance(address(this), spender) == 0),\n      'SafeERC20: approve from non-zero to non-zero allowance'\n    );\n    callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n  }\n\n  function callOptionalReturn(IERC20 token, bytes memory data) private {\n    require(address(token).isContract(), 'SafeERC20: call to non-contract');\n\n    // solhint-disable-next-line avoid-low-level-calls\n    (bool success, bytes memory returndata) = address(token).call(data);\n    require(success, 'SafeERC20: low-level call failed');\n\n    if (returndata.length > 0) {\n      // Return data is optional\n      // solhint-disable-next-line max-line-length\n      require(abi.decode(returndata, (bool)), 'SafeERC20: ERC20 operation did not succeed');\n    }\n  }\n}\n"},"@aave/aave-stake/contracts/lib/SafeMath.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\n\n/**\n * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\n * Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n  /**\n   * @dev Returns the addition of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `+` operator.\n   *\n   * Requirements:\n   * - Addition cannot overflow.\n   */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a, 'SafeMath: addition overflow');\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    return sub(a, b, 'SafeMath: subtraction overflow');\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(\n    uint256 a,\n    uint256 b,\n    string memory errorMessage\n  ) internal pure returns (uint256) {\n    require(b <= a, errorMessage);\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the multiplication of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `*` operator.\n   *\n   * Requirements:\n   * - Multiplication cannot overflow.\n   */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b, 'SafeMath: multiplication overflow');\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    return div(a, b, 'SafeMath: division by zero');\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(\n    uint256 a,\n    uint256 b,\n    string memory errorMessage\n  ) internal pure returns (uint256) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, errorMessage);\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    return mod(a, b, 'SafeMath: modulo by zero');\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts with custom message when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(\n    uint256 a,\n    uint256 b,\n    string memory errorMessage\n  ) internal pure returns (uint256) {\n    require(b != 0, errorMessage);\n    return a % b;\n  }\n}\n"},"@aave/aave-stake/contracts/utils/VersionedInitializable.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\n\n/**\n * @title VersionedInitializable\n *\n * @dev Helper contract to support initializer functions. To use it, replace\n * the constructor with a function that has the `initializer` modifier.\n * WARNING: Unlike constructors, initializer functions must be manually\n * invoked. This applies both to deploying an Initializable contract, as well\n * as extending an Initializable contract via inheritance.\n * WARNING: When used with inheritance, manual care must be taken to not invoke\n * a parent initializer twice, or ensure that all initializers are idempotent,\n * because this is not dealt with automatically as with constructors.\n *\n * @author Aave, inspired by the OpenZeppelin Initializable contract\n */\nabstract contract VersionedInitializable {\n  /**\n   * @dev Indicates that the contract has been initialized.\n   */\n  uint256 internal lastInitializedRevision = 0;\n\n  /**\n   * @dev Modifier to use in the initializer function of a contract.\n   */\n  modifier initializer() {\n    uint256 revision = getRevision();\n    require(revision > lastInitializedRevision, 'Contract instance has already been initialized');\n\n    lastInitializedRevision = revision;\n\n    _;\n  }\n\n  /// @dev returns the revision number of the contract.\n  /// Needs to be defined in the inherited class as a constant.\n  function getRevision() internal pure virtual returns (uint256);\n\n  // Reserved storage space to allow for layout changes in the future.\n  uint256[50] private ______gap;\n}\n"},"contracts/incentives/DistributionManager.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\npragma experimental ABIEncoderV2;\n\nimport {IAaveDistributionManager} from '../interfaces/IAaveDistributionManager.sol';\nimport {SafeMath} from '../lib/SafeMath.sol';\nimport {DistributionTypes} from '../lib/DistributionTypes.sol';\n\n/**\n * @title DistributionManager\n * @notice Accounting contract to manage multiple staking distributions\n * @author Aave\n **/\ncontract DistributionManager is IAaveDistributionManager {\n  using SafeMath for uint256;\n\n  struct AssetData {\n    uint104 emissionPerSecond;\n    uint104 index;\n    uint40 lastUpdateTimestamp;\n    mapping(address => uint256) users;\n  }\n\n  address public immutable EMISSION_MANAGER;\n\n  uint8 public constant PRECISION = 18;\n\n  mapping(address => AssetData) public assets;\n\n  uint256 internal _distributionEnd;\n\n  modifier onlyEmissionManager() {\n    require(msg.sender == EMISSION_MANAGER, 'ONLY_EMISSION_MANAGER');\n    _;\n  }\n\n  constructor(address emissionManager) {\n    EMISSION_MANAGER = emissionManager;\n  }\n\n  /// @inheritdoc IAaveDistributionManager\n  function setDistributionEnd(uint256 distributionEnd) external override onlyEmissionManager {\n    _distributionEnd = distributionEnd;\n    emit DistributionEndUpdated(distributionEnd);\n  }\n\n  /// @inheritdoc IAaveDistributionManager\n  function getDistributionEnd() external view override returns (uint256) {\n    return _distributionEnd;\n  }\n\n  /// @inheritdoc IAaveDistributionManager\n  function DISTRIBUTION_END() external view override returns (uint256) {\n    return _distributionEnd;\n  }\n\n  /// @inheritdoc IAaveDistributionManager\n  function getUserAssetData(address user, address asset) public view override returns (uint256) {\n    return assets[asset].users[user];\n  }\n\n  /// @inheritdoc IAaveDistributionManager\n  function getAssetData(address asset) public view override returns (uint256, uint256, uint256) {\n    return (assets[asset].index, assets[asset].emissionPerSecond, assets[asset].lastUpdateTimestamp);\n  }\n\n  /**\n   * @dev Configure the assets for a specific emission\n   * @param assetsConfigInput The array of each asset configuration\n   **/\n  function _configureAssets(DistributionTypes.AssetConfigInput[] memory assetsConfigInput)\n    internal\n  {\n    for (uint256 i = 0; i < assetsConfigInput.length; i++) {\n      AssetData storage assetConfig = assets[assetsConfigInput[i].underlyingAsset];\n\n      _updateAssetStateInternal(\n        assetsConfigInput[i].underlyingAsset,\n        assetConfig,\n        assetsConfigInput[i].totalStaked\n      );\n\n      assetConfig.emissionPerSecond = assetsConfigInput[i].emissionPerSecond;\n\n      emit AssetConfigUpdated(\n        assetsConfigInput[i].underlyingAsset,\n        assetsConfigInput[i].emissionPerSecond\n      );\n    }\n  }\n\n  /**\n   * @dev Updates the state of one distribution, mainly rewards index and timestamp\n   * @param asset The address of the asset being updated\n   * @param assetConfig Storage pointer to the distribution's config\n   * @param totalStaked Current total of staked assets for this distribution\n   * @return The new distribution index\n   **/\n  function _updateAssetStateInternal(\n    address asset,\n    AssetData storage assetConfig,\n    uint256 totalStaked\n  ) internal returns (uint256) {\n    uint256 oldIndex = assetConfig.index;\n    uint256 emissionPerSecond = assetConfig.emissionPerSecond;\n    uint128 lastUpdateTimestamp = assetConfig.lastUpdateTimestamp;\n\n    if (block.timestamp == lastUpdateTimestamp) {\n      return oldIndex;\n    }\n\n    uint256 newIndex =\n      _getAssetIndex(oldIndex, emissionPerSecond, lastUpdateTimestamp, totalStaked);\n\n    if (newIndex != oldIndex) {\n      require(uint104(newIndex) == newIndex, 'Index overflow');\n      //optimization: storing one after another saves one SSTORE\n      assetConfig.index = uint104(newIndex);\n      assetConfig.lastUpdateTimestamp = uint40(block.timestamp);\n      emit AssetIndexUpdated(asset, newIndex);\n    } else {\n      assetConfig.lastUpdateTimestamp = uint40(block.timestamp);\n    }\n\n    return newIndex;\n  }\n\n  /**\n   * @dev Updates the state of an user in a distribution\n   * @param user The user's address\n   * @param asset The address of the reference asset of the distribution\n   * @param stakedByUser Amount of tokens staked by the user in the distribution at the moment\n   * @param totalStaked Total tokens staked in the distribution\n   * @return The accrued rewards for the user until the moment\n   **/\n  function _updateUserAssetInternal(\n    address user,\n    address asset,\n    uint256 stakedByUser,\n    uint256 totalStaked\n  ) internal returns (uint256) {\n    AssetData storage assetData = assets[asset];\n    uint256 userIndex = assetData.users[user];\n    uint256 accruedRewards = 0;\n\n    uint256 newIndex = _updateAssetStateInternal(asset, assetData, totalStaked);\n\n    if (userIndex != newIndex) {\n      if (stakedByUser != 0) {\n        accruedRewards = _getRewards(stakedByUser, newIndex, userIndex);\n      }\n\n      assetData.users[user] = newIndex;\n      emit UserIndexUpdated(user, asset, newIndex);\n    }\n\n    return accruedRewards;\n  }\n\n  /**\n   * @dev Used by \"frontend\" stake contracts to update the data of an user when claiming rewards from there\n   * @param user The address of the user\n   * @param stakes List of structs of the user data related with his stake\n   * @return The accrued rewards for the user until the moment\n   **/\n  function _claimRewards(address user, DistributionTypes.UserStakeInput[] memory stakes)\n    internal\n    returns (uint256)\n  {\n    uint256 accruedRewards = 0;\n\n    for (uint256 i = 0; i < stakes.length; i++) {\n      accruedRewards = accruedRewards.add(\n        _updateUserAssetInternal(\n          user,\n          stakes[i].underlyingAsset,\n          stakes[i].stakedByUser,\n          stakes[i].totalStaked\n        )\n      );\n    }\n\n    return accruedRewards;\n  }\n\n  /**\n   * @dev Return the accrued rewards for an user over a list of distribution\n   * @param user The address of the user\n   * @param stakes List of structs of the user data related with his stake\n   * @return The accrued rewards for the user until the moment\n   **/\n  function _getUnclaimedRewards(address user, DistributionTypes.UserStakeInput[] memory stakes)\n    internal\n    view\n    returns (uint256)\n  {\n    uint256 accruedRewards = 0;\n\n    for (uint256 i = 0; i < stakes.length; i++) {\n      AssetData storage assetConfig = assets[stakes[i].underlyingAsset];\n      uint256 assetIndex =\n        _getAssetIndex(\n          assetConfig.index,\n          assetConfig.emissionPerSecond,\n          assetConfig.lastUpdateTimestamp,\n          stakes[i].totalStaked\n        );\n\n      accruedRewards = accruedRewards.add(\n        _getRewards(stakes[i].stakedByUser, assetIndex, assetConfig.users[user])\n      );\n    }\n    return accruedRewards;\n  }\n\n  /**\n   * @dev Internal function for the calculation of user's rewards on a distribution\n   * @param principalUserBalance Amount staked by the user on a distribution\n   * @param reserveIndex Current index of the distribution\n   * @param userIndex Index stored for the user, representation his staking moment\n   * @return The rewards\n   **/\n  function _getRewards(\n    uint256 principalUserBalance,\n    uint256 reserveIndex,\n    uint256 userIndex\n  ) internal pure returns (uint256) {\n    return principalUserBalance.mul(reserveIndex.sub(userIndex)) / 10**uint256(PRECISION);\n  }\n\n  /**\n   * @dev Calculates the next value of an specific distribution index, with validations\n   * @param currentIndex Current index of the distribution\n   * @param emissionPerSecond Representing the total rewards distributed per second per asset unit, on the distribution\n   * @param lastUpdateTimestamp Last moment this distribution was updated\n   * @param totalBalance of tokens considered for the distribution\n   * @return The new index.\n   **/\n  function _getAssetIndex(\n    uint256 currentIndex,\n    uint256 emissionPerSecond,\n    uint128 lastUpdateTimestamp,\n    uint256 totalBalance\n  ) internal view returns (uint256) {\n    uint256 distributionEnd = _distributionEnd;\n    if (\n      emissionPerSecond == 0 ||\n      totalBalance == 0 ||\n      lastUpdateTimestamp == block.timestamp ||\n      lastUpdateTimestamp >= distributionEnd\n    ) {\n      return currentIndex;\n    }\n\n    uint256 currentTimestamp =\n      block.timestamp > distributionEnd ? distributionEnd : block.timestamp;\n    uint256 timeDelta = currentTimestamp.sub(lastUpdateTimestamp);\n    return\n      emissionPerSecond.mul(timeDelta).mul(10**uint256(PRECISION)).div(totalBalance).add(\n        currentIndex\n      );\n  }\n}\n"},"contracts/incentives/StakedTokenIncentivesController.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\npragma experimental ABIEncoderV2;\n\nimport {SafeERC20} from '@aave/aave-stake/contracts/lib/SafeERC20.sol';\nimport {SafeMath} from '../lib/SafeMath.sol';\nimport {DistributionTypes} from '../lib/DistributionTypes.sol';\nimport {VersionedInitializable} from '@aave/aave-stake/contracts/utils/VersionedInitializable.sol';\nimport {DistributionManager} from './DistributionManager.sol';\nimport {IStakedTokenWithConfig} from '../interfaces/IStakedTokenWithConfig.sol';\nimport {IERC20} from '@aave/aave-stake/contracts/interfaces/IERC20.sol';\nimport {IScaledBalanceToken} from '../interfaces/IScaledBalanceToken.sol';\nimport {IAaveIncentivesController} from '../interfaces/IAaveIncentivesController.sol';\n\n/**\n * @title StakedTokenIncentivesController\n * @notice Distributor contract for rewards to the Aave protocol, using a staked token as rewards asset.\n * The contract stakes the rewards before redistributing them to the Aave protocol participants.\n * The reference staked token implementation is at https://github.com/aave/aave-stake-v2\n * @author Aave\n **/\ncontract StakedTokenIncentivesController is\n  IAaveIncentivesController,\n  VersionedInitializable,\n  DistributionManager\n{\n  using SafeMath for uint256;\n  using SafeERC20 for IERC20;\n\n  uint256 public constant REVISION = 1;\n\n  IStakedTokenWithConfig public immutable STAKE_TOKEN;\n\n  mapping(address => uint256) internal _usersUnclaimedRewards;\n\n  // this mapping allows whitelisted addresses to claim on behalf of others\n  // useful for contracts that hold tokens to be rewarded but don't have any native logic to claim Liquidity Mining rewards\n  mapping(address => address) internal _authorizedClaimers;\n\n  modifier onlyAuthorizedClaimers(address claimer, address user) {\n    require(_authorizedClaimers[user] == claimer, 'CLAIMER_UNAUTHORIZED');\n    _;\n  }\n\n  constructor(IStakedTokenWithConfig stakeToken, address emissionManager)\n    DistributionManager(emissionManager)\n  {\n    STAKE_TOKEN = stakeToken;\n  }\n\n  /**\n   * @dev Initialize IStakedTokenIncentivesController\n   * @param addressesProvider the address of the corresponding addresses provider\n   **/\n  function initialize(address addressesProvider) external initializer {\n    //approves the safety module to allow staking\n    IERC20(STAKE_TOKEN.STAKED_TOKEN()).safeApprove(address(STAKE_TOKEN), type(uint256).max);\n  }\n\n  /// @inheritdoc IAaveIncentivesController\n  function configureAssets(address[] calldata assets, uint256[] calldata emissionsPerSecond)\n    external\n    override\n    onlyEmissionManager\n  {\n    require(assets.length == emissionsPerSecond.length, 'INVALID_CONFIGURATION');\n\n    DistributionTypes.AssetConfigInput[] memory assetsConfig =\n      new DistributionTypes.AssetConfigInput[](assets.length);\n\n    for (uint256 i = 0; i < assets.length; i++) {\n      assetsConfig[i].underlyingAsset = assets[i];\n      assetsConfig[i].emissionPerSecond = uint104(emissionsPerSecond[i]);\n\n      require(assetsConfig[i].emissionPerSecond == emissionsPerSecond[i], 'INVALID_CONFIGURATION');\n\n      assetsConfig[i].totalStaked = IScaledBalanceToken(assets[i]).scaledTotalSupply();\n    }\n    _configureAssets(assetsConfig);\n  }\n\n  /// @inheritdoc IAaveIncentivesController\n  function handleAction(\n    address user,\n    uint256 totalSupply,\n    uint256 userBalance\n  ) external override {\n    uint256 accruedRewards = _updateUserAssetInternal(user, msg.sender, userBalance, totalSupply);\n    if (accruedRewards != 0) {\n      _usersUnclaimedRewards[user] = _usersUnclaimedRewards[user].add(accruedRewards);\n      emit RewardsAccrued(user, accruedRewards);\n    }\n  }\n\n  /// @inheritdoc IAaveIncentivesController\n  function getRewardsBalance(address[] calldata assets, address user)\n    external\n    view\n    override\n    returns (uint256)\n  {\n    uint256 unclaimedRewards = _usersUnclaimedRewards[user];\n\n    DistributionTypes.UserStakeInput[] memory userState =\n      new DistributionTypes.UserStakeInput[](assets.length);\n    for (uint256 i = 0; i < assets.length; i++) {\n      userState[i].underlyingAsset = assets[i];\n      (userState[i].stakedByUser, userState[i].totalStaked) = IScaledBalanceToken(assets[i])\n        .getScaledUserBalanceAndSupply(user);\n    }\n    unclaimedRewards = unclaimedRewards.add(_getUnclaimedRewards(user, userState));\n    return unclaimedRewards;\n  }\n\n  /// @inheritdoc IAaveIncentivesController\n  function claimRewards(\n    address[] calldata assets,\n    uint256 amount,\n    address to\n  ) external override returns (uint256) {\n    require(to != address(0), 'INVALID_TO_ADDRESS');\n    return _claimRewards(assets, amount, msg.sender, msg.sender, to);\n  }\n\n  /// @inheritdoc IAaveIncentivesController\n  function claimRewardsOnBehalf(\n    address[] calldata assets,\n    uint256 amount,\n    address user,\n    address to\n  ) external override onlyAuthorizedClaimers(msg.sender, user) returns (uint256) {\n    require(user != address(0), 'INVALID_USER_ADDRESS');\n    require(to != address(0), 'INVALID_TO_ADDRESS');\n    return _claimRewards(assets, amount, msg.sender, user, to);\n  }\n\n  /**\n   * @dev Claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards.\n   * @param amount Amount of rewards to claim\n   * @param user Address to check and claim rewards\n   * @param to Address that will be receiving the rewards\n   * @return Rewards claimed\n   **/\n\n  /// @inheritdoc IAaveIncentivesController\n  function setClaimer(address user, address caller) external override onlyEmissionManager {\n    _authorizedClaimers[user] = caller;\n    emit ClaimerSet(user, caller);\n  }\n\n  /// @inheritdoc IAaveIncentivesController\n  function getClaimer(address user) external view override returns (address) {\n    return _authorizedClaimers[user];\n  }\n\n  /// @inheritdoc IAaveIncentivesController\n  function getUserUnclaimedRewards(address _user) external view override returns (uint256) {\n    return _usersUnclaimedRewards[_user];\n  }\n\n  /// @inheritdoc IAaveIncentivesController\n  function REWARD_TOKEN() external view override returns (address) {\n    return address(STAKE_TOKEN);\n  }\n\n  /**\n   * @dev returns the revision of the implementation contract\n   */\n  function getRevision() internal pure override returns (uint256) {\n    return REVISION;\n  }\n\n  /**\n   * @dev Claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards.\n   * @param amount Amount of rewards to claim\n   * @param user Address to check and claim rewards\n   * @param to Address that will be receiving the rewards\n   * @return Rewards claimed\n   **/\n  function _claimRewards(\n    address[] calldata assets,\n    uint256 amount,\n    address claimer,\n    address user,\n    address to\n  ) internal returns (uint256) {\n    if (amount == 0) {\n      return 0;\n    }\n    uint256 unclaimedRewards = _usersUnclaimedRewards[user];\n\n    DistributionTypes.UserStakeInput[] memory userState =\n      new DistributionTypes.UserStakeInput[](assets.length);\n    for (uint256 i = 0; i < assets.length; i++) {\n      userState[i].underlyingAsset = assets[i];\n      (userState[i].stakedByUser, userState[i].totalStaked) = IScaledBalanceToken(assets[i])\n        .getScaledUserBalanceAndSupply(user);\n    }\n\n    uint256 accruedRewards = _claimRewards(user, userState);\n    if (accruedRewards != 0) {\n      unclaimedRewards = unclaimedRewards.add(accruedRewards);\n      emit RewardsAccrued(user, accruedRewards);\n    }\n\n    if (unclaimedRewards == 0) {\n      return 0;\n    }\n\n    uint256 amountToClaim = amount > unclaimedRewards ? unclaimedRewards : amount;\n    _usersUnclaimedRewards[user] = unclaimedRewards - amountToClaim; // Safe due to the previous line\n\n    STAKE_TOKEN.stake(to, amountToClaim);\n    emit RewardsClaimed(user, to, claimer, amountToClaim);\n\n    return amountToClaim;\n  }\n}\n"},"contracts/interfaces/IAaveDistributionManager.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\npragma experimental ABIEncoderV2;\n\nimport {DistributionTypes} from '../lib/DistributionTypes.sol';\n\ninterface IAaveDistributionManager {\n  \n  event AssetConfigUpdated(address indexed asset, uint256 emission);\n  event AssetIndexUpdated(address indexed asset, uint256 index);\n  event UserIndexUpdated(address indexed user, address indexed asset, uint256 index);\n  event DistributionEndUpdated(uint256 newDistributionEnd);\n\n  /**\n  * @dev Sets the end date for the distribution\n  * @param distributionEnd The end date timestamp\n  **/\n  function setDistributionEnd(uint256 distributionEnd) external;\n\n  /**\n  * @dev Gets the end date for the distribution\n  * @return The end of the distribution\n  **/\n  function getDistributionEnd() external view returns (uint256);\n\n  /**\n  * @dev for backwards compatibility with the previous DistributionManager used\n  * @return The end of the distribution\n  **/\n  function DISTRIBUTION_END() external view returns(uint256);\n\n   /**\n   * @dev Returns the data of an user on a distribution\n   * @param user Address of the user\n   * @param asset The address of the reference asset of the distribution\n   * @return The new index\n   **/\n   function getUserAssetData(address user, address asset) external view returns (uint256);\n\n   /**\n   * @dev Returns the configuration of the distribution for a certain asset\n   * @param asset The address of the reference asset of the distribution\n   * @return The asset index, the emission per second and the last updated timestamp\n   **/\n   function getAssetData(address asset) external view returns (uint256, uint256, uint256);\n}\n"},"contracts/interfaces/IAaveIncentivesController.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\n\npragma experimental ABIEncoderV2;\n\nimport {IAaveDistributionManager} from '../interfaces/IAaveDistributionManager.sol';\n\ninterface IAaveIncentivesController is IAaveDistributionManager {\n  \n  event RewardsAccrued(address indexed user, uint256 amount);\n  \n  event RewardsClaimed(\n    address indexed user,\n    address indexed to,\n    address indexed claimer,\n    uint256 amount\n  );\n\n  event ClaimerSet(address indexed user, address indexed claimer);\n\n  /**\n   * @dev Whitelists an address to claim the rewards on behalf of another address\n   * @param user The address of the user\n   * @param claimer The address of the claimer\n   */\n  function setClaimer(address user, address claimer) external;\n\n  /**\n   * @dev Returns the whitelisted claimer for a certain address (0x0 if not set)\n   * @param user The address of the user\n   * @return The claimer address\n   */\n  function getClaimer(address user) external view returns (address);\n\n  /**\n   * @dev Configure assets for a certain rewards emission\n   * @param assets The assets to incentivize\n   * @param emissionsPerSecond The emission for each asset\n   */\n  function configureAssets(address[] calldata assets, uint256[] calldata emissionsPerSecond)\n    external;\n\n\n  /**\n   * @dev Called by the corresponding asset on any update that affects the rewards distribution\n   * @param asset The address of the user\n   * @param userBalance The balance of the user of the asset in the lending pool\n   * @param totalSupply The total supply of the asset in the lending pool\n   **/\n  function handleAction(\n    address asset,\n    uint256 userBalance,\n    uint256 totalSupply\n  ) external;\n\n  /**\n   * @dev Returns the total of rewards of an user, already accrued + not yet accrued\n   * @param user The address of the user\n   * @return The rewards\n   **/\n  function getRewardsBalance(address[] calldata assets, address user)\n    external\n    view\n    returns (uint256);\n\n  /**\n   * @dev Claims reward for an user, on all the assets of the lending pool, accumulating the pending rewards\n   * @param amount Amount of rewards to claim\n   * @param to Address that will be receiving the rewards\n   * @return Rewards claimed\n   **/\n  function claimRewards(\n    address[] calldata assets,\n    uint256 amount,\n    address to\n  ) external returns (uint256);\n\n  /**\n   * @dev Claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards. The caller must\n   * be whitelisted via \"allowClaimOnBehalf\" function by the RewardsAdmin role manager\n   * @param amount Amount of rewards to claim\n   * @param user Address to check and claim rewards\n   * @param to Address that will be receiving the rewards\n   * @return Rewards claimed\n   **/\n  function claimRewardsOnBehalf(\n    address[] calldata assets,\n    uint256 amount,\n    address user,\n    address to\n  ) external returns (uint256);\n\n  /**\n   * @dev returns the unclaimed rewards of the user\n   * @param user the address of the user\n   * @return the unclaimed user rewards\n   */\n  function getUserUnclaimedRewards(address user) external view returns (uint256);\n\n  /**\n  * @dev for backward compatibility with previous implementation of the Incentives controller\n  */\n  function REWARD_TOKEN() external view returns (address);\n}\n"},"contracts/interfaces/IScaledBalanceToken.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\n\ninterface IScaledBalanceToken {\n  /**\n   * @dev Returns the scaled balance of the user. The scaled balance is the sum of all the\n   * updated stored balance divided by the reserve's liquidity index at the moment of the update\n   * @param user The user whose balance is calculated\n   * @return The scaled balance of the user\n   **/\n  function scaledBalanceOf(address user) external view returns (uint256);\n\n  /**\n   * @dev Returns the scaled balance of the user and the scaled total supply.\n   * @param user The address of the user\n   * @return The scaled balance of the user\n   * @return The scaled balance and the scaled total supply\n   **/\n  function getScaledUserBalanceAndSupply(address user) external view returns (uint256, uint256);\n\n  /**\n   * @dev Returns the scaled total supply of the token. Represents sum(debt/index)\n   * @return The scaled total supply\n   **/\n  function scaledTotalSupply() external view returns (uint256);\n}\n"},"contracts/interfaces/IStakedTokenWithConfig.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0\npragma solidity 0.7.5;\n\nimport {IStakedToken} from '@aave/aave-stake/contracts/interfaces/IStakedToken.sol';\n\ninterface IStakedTokenWithConfig is IStakedToken {\n  function STAKED_TOKEN() external view returns(address);\n}"},"contracts/lib/DistributionTypes.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\npragma experimental ABIEncoderV2;\n\nlibrary DistributionTypes {\n  struct AssetConfigInput {\n    uint104 emissionPerSecond;\n    uint256 totalStaked;\n    address underlyingAsset;\n  }\n\n  struct UserStakeInput {\n    address underlyingAsset;\n    uint256 stakedByUser;\n    uint256 totalStaked;\n  }\n}\n"},"contracts/lib/SafeMath.sol":{"content":"\n// SPDX-License-Identifier: agpl-3.0\npragma solidity ^0.7.5;\n\n/// @title Optimized overflow and underflow safe math operations\n/// @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\n/// inspired by uniswap V3\nlibrary SafeMath {\n    /// @notice Returns x + y, reverts if sum overflows uint256\n    /// @param x The augend\n    /// @param y The addend\n    /// @return z The sum of x and y\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require((z = x + y) >= x);\n    }\n\n    /// @notice Returns x - y, reverts if underflows\n    /// @param x The minuend\n    /// @param y The subtrahend\n    /// @return z The difference of x and y\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require((z = x - y) <= x);\n    }\n\n    /// @notice Returns x * y, reverts if overflows\n    /// @param x The multiplicand\n    /// @param y The multiplier\n    /// @return z The product of x and y\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require(x == 0 || (z = x * y) / x == y);\n    }\n\n    function div(uint256 x, uint256 y) internal pure returns(uint256) {\n        // no need to check for division by zero - solidity already reverts\n        return x / y;\n    }\n}"}},{"errors":[{"sourceLocation":{"file":"contracts/incentives/StakedTokenIncentivesController.sol","start":2200,"end":2225},"type":"Warning","component":"general","severity":"warning","errorCode":"5667","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","formattedMessage":"contracts/incentives/StakedTokenIncentivesController.sol:55:23: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  function initialize(address addressesProvider) external initializer {\n                      ^-----------------------^\n"}],"sources":{"@aave/aave-stake/contracts/interfaces/IERC20.sol":{"id":0,"ast":{"absolutePath":"@aave/aave-stake/contracts/interfaces/IERC20.sol","id":78,"exportedSymbols":{"IERC20":[77]},"nodeType":"SourceUnit","src":"32:2619:0","nodes":[{"id":1,"nodeType":"PragmaDirective","src":"32:22:0","nodes":[],"literals":["solidity","0.7",".5"]},{"id":77,"nodeType":"ContractDefinition","src":"190:2460:0","nodes":[{"id":8,"nodeType":"FunctionDefinition","src":"276:55:0","nodes":[],"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"211:62:0","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","parameters":{"id":4,"nodeType":"ParameterList","parameters":[],"src":"296:2:0"},"returnParameters":{"id":7,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8,"src":"322:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5,"name":"uint256","nodeType":"ElementaryTypeName","src":"322:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"321:9:0"},"scope":77,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16,"nodeType":"FunctionDefinition","src":"406:68:0","nodes":[],"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"335:68:0","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":16,"src":"425:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"424:17:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":16,"src":"465:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:9:0"},"scope":77,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":26,"nodeType":"FunctionDefinition","src":"678:77:0","nodes":[],"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"478:197:0","text":" @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","implemented":false,"kind":"function","modifiers":[],"name":"transfer","parameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":26,"src":"696:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18,"name":"address","nodeType":"ElementaryTypeName","src":"696:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":21,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":26,"src":"715:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20,"name":"uint256","nodeType":"ElementaryTypeName","src":"715:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"695:35:0"},"returnParameters":{"id":25,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":26,"src":"749:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":23,"name":"bool","nodeType":"ElementaryTypeName","src":"749:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"748:6:0"},"scope":77,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36,"nodeType":"FunctionDefinition","src":"1014:83:0","nodes":[],"documentation":{"id":27,"nodeType":"StructuredDocumentation","src":"759:252:0","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","implemented":false,"kind":"function","modifiers":[],"name":"allowance","parameters":{"id":32,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":36,"src":"1033:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":31,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":36,"src":"1048:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30,"name":"address","nodeType":"ElementaryTypeName","src":"1048:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1032:32:0"},"returnParameters":{"id":35,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":36,"src":"1088:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:9:0"},"scope":77,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":46,"nodeType":"FunctionDefinition","src":"1720:74:0","nodes":[],"documentation":{"id":37,"nodeType":"StructuredDocumentation","src":"1101:616:0","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","implemented":false,"kind":"function","modifiers":[],"name":"approve","parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":46,"src":"1737:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1737:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":46,"src":"1754:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40,"name":"uint256","nodeType":"ElementaryTypeName","src":"1754:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1736:33:0"},"returnParameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":46,"src":"1788:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":43,"name":"bool","nodeType":"ElementaryTypeName","src":"1788:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1787:6:0"},"scope":77,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":58,"nodeType":"FunctionDefinition","src":"2081:113:0","nodes":[],"documentation":{"id":47,"nodeType":"StructuredDocumentation","src":"1798:280:0","text":" @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","parameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":58,"src":"2108:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":51,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":58,"src":"2128:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50,"name":"address","nodeType":"ElementaryTypeName","src":"2128:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":53,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":58,"src":"2151:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":52,"name":"uint256","nodeType":"ElementaryTypeName","src":"2151:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2102:67:0"},"returnParameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":58,"src":"2188:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":55,"name":"bool","nodeType":"ElementaryTypeName","src":"2188:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2187:6:0"},"scope":77,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":67,"nodeType":"EventDefinition","src":"2349:72:0","nodes":[],"anonymous":false,"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"2198:148:0","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"name":"Transfer","parameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61,"indexed":true,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":67,"src":"2364:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60,"name":"address","nodeType":"ElementaryTypeName","src":"2364:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":63,"indexed":true,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":67,"src":"2386:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2386:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":65,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":67,"src":"2406:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":64,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2363:57:0"}},{"id":76,"nodeType":"EventDefinition","src":"2570:78:0","nodes":[],"anonymous":false,"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"2425:142:0","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"name":"Approval","parameters":{"id":75,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"indexed":true,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":76,"src":"2585:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69,"name":"address","nodeType":"ElementaryTypeName","src":"2585:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":72,"indexed":true,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":76,"src":"2608:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":71,"name":"address","nodeType":"ElementaryTypeName","src":"2608:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":74,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":76,"src":"2633:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":73,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2584:63:0"}}],"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"56:133:0","text":" @dev Interface of the ERC20 standard as defined in the EIP.\n From https://github.com/OpenZeppelin/openzeppelin-contracts"},"fullyImplemented":false,"linearizedBaseContracts":[77],"name":"IERC20","scope":78}],"license":"MIT"}},"@aave/aave-stake/contracts/interfaces/IStakedToken.sol":{"id":1,"ast":{"absolutePath":"@aave/aave-stake/contracts/interfaces/IStakedToken.sol","id":105,"exportedSymbols":{"IStakedToken":[104]},"nodeType":"SourceUnit","src":"37:262:1","nodes":[{"id":79,"nodeType":"PragmaDirective","src":"37:22:1","nodes":[],"literals":["solidity","0.7",".5"]},{"id":104,"nodeType":"ContractDefinition","src":"61:237:1","nodes":[{"id":86,"nodeType":"FunctionDefinition","src":"91:52:1","nodes":[],"functionSelector":"adc9772e","implemented":false,"kind":"function","modifiers":[],"name":"stake","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":81,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":86,"src":"106:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":80,"name":"address","nodeType":"ElementaryTypeName","src":"106:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":83,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":86,"src":"118:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":82,"name":"uint256","nodeType":"ElementaryTypeName","src":"118:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"105:28:1"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[],"src":"142:0:1"},"scope":104,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":93,"nodeType":"FunctionDefinition","src":"147:53:1","nodes":[],"functionSelector":"1e9a6950","implemented":false,"kind":"function","modifiers":[],"name":"redeem","parameters":{"id":91,"nodeType":"ParameterList","parameters":[{"constant":false,"id":88,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":93,"src":"163:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":87,"name":"address","nodeType":"ElementaryTypeName","src":"163:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":90,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":93,"src":"175:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":89,"name":"uint256","nodeType":"ElementaryTypeName","src":"175:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"162:28:1"},"returnParameters":{"id":92,"nodeType":"ParameterList","parameters":[],"src":"199:0:1"},"scope":104,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":96,"nodeType":"FunctionDefinition","src":"204:29:1","nodes":[],"functionSelector":"787a08a6","implemented":false,"kind":"function","modifiers":[],"name":"cooldown","parameters":{"id":94,"nodeType":"ParameterList","parameters":[],"src":"221:2:1"},"returnParameters":{"id":95,"nodeType":"ParameterList","parameters":[],"src":"232:0:1"},"scope":104,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":103,"nodeType":"FunctionDefinition","src":"237:59:1","nodes":[],"functionSelector":"9a99b4f0","implemented":false,"kind":"function","modifiers":[],"name":"claimRewards","parameters":{"id":101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":98,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":103,"src":"259:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"259:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":100,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":103,"src":"271:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":99,"name":"uint256","nodeType":"ElementaryTypeName","src":"271:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"258:28:1"},"returnParameters":{"id":102,"nodeType":"ParameterList","parameters":[],"src":"295:0:1"},"scope":104,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"linearizedBaseContracts":[104],"name":"IStakedToken","scope":105}],"license":"agpl-3.0"}},"@aave/aave-stake/contracts/lib/Address.sol":{"id":2,"ast":{"absolutePath":"@aave/aave-stake/contracts/lib/Address.sol","id":169,"exportedSymbols":{"Address":[168]},"nodeType":"SourceUnit","src":"32:2554:2","nodes":[{"id":106,"nodeType":"PragmaDirective","src":"32:22:2","nodes":[],"literals":["solidity","0.7",".5"]},{"id":168,"nodeType":"ContractDefinition","src":"187:2398:2","nodes":[{"id":133,"nodeType":"FunctionDefinition","src":"743:586:2","nodes":[],"body":{"id":132,"nodeType":"Block","src":"809:520:2","nodes":[],"statements":[{"assignments":[116],"declarations":[{"constant":false,"id":116,"mutability":"mutable","name":"codehash","nodeType":"VariableDeclaration","scope":132,"src":"1045:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":115,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1045:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":117,"nodeType":"VariableDeclarationStatement","src":"1045:16:2"},{"assignments":[119],"declarations":[{"constant":false,"id":119,"mutability":"mutable","name":"accountHash","nodeType":"VariableDeclaration","scope":132,"src":"1067:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":118,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1067:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":121,"initialValue":{"hexValue":"307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730","id":120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1089:66:2","typeDescriptions":{"typeIdentifier":"t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1","typeString":"int_const 8947...(69 digits omitted)...1552"},"value":"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"},"nodeType":"VariableDeclarationStatement","src":"1067:88:2"},{"AST":{"nodeType":"YulBlock","src":"1222:46:2","statements":[{"nodeType":"YulAssignment","src":"1230:32:2","value":{"arguments":[{"name":"account","nodeType":"YulIdentifier","src":"1254:7:2"}],"functionName":{"name":"extcodehash","nodeType":"YulIdentifier","src":"1242:11:2"},"nodeType":"YulFunctionCall","src":"1242:20:2"},"variableNames":[{"name":"codehash","nodeType":"YulIdentifier","src":"1230:8:2"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":110,"isOffset":false,"isSlot":false,"src":"1254:7:2","valueSize":1},{"declaration":116,"isOffset":false,"isSlot":false,"src":"1230:8:2","valueSize":1}],"id":122,"nodeType":"InlineAssembly","src":"1213:55:2"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":123,"name":"codehash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"1281:8:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":124,"name":"accountHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"1293:11:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1281:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":126,"name":"codehash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"1308:8:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"307830","id":127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1320:3:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"},"src":"1308:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1281:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":130,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1280:44:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":114,"id":131,"nodeType":"Return","src":"1273:51:2"}]},"documentation":{"id":108,"nodeType":"StructuredDocumentation","src":"207:533:2","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="},"implemented":true,"kind":"function","modifiers":[],"name":"isContract","parameters":{"id":111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":110,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":133,"src":"763:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":109,"name":"address","nodeType":"ElementaryTypeName","src":"763:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"762:17:2"},"returnParameters":{"id":114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":113,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":133,"src":"803:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":112,"name":"bool","nodeType":"ElementaryTypeName","src":"803:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:6:2"},"scope":168,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":167,"nodeType":"FunctionDefinition","src":"2212:371:2","nodes":[],"body":{"id":166,"nodeType":"Block","src":"2283:300:2","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":144,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2305:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$168","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$168","typeString":"library Address"}],"id":143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2297:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":142,"name":"address","nodeType":"ElementaryTypeName","src":"2297:7:2","typeDescriptions":{}}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2297:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2297:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":147,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"2322:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2297:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2330:31:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":141,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2289:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2289:73:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":151,"nodeType":"ExpressionStatement","src":"2289:73:2"},{"assignments":[153,null],"declarations":[{"constant":false,"id":153,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":166,"src":"2443:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":152,"name":"bool","nodeType":"ElementaryTypeName","src":"2443:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":160,"initialValue":{"arguments":[{"hexValue":"","id":158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2491:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":154,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"2461:9:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2461:14:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":156,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"2483:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2461:29:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2461:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2442:52:2"},{"expression":{"arguments":[{"id":162,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"2508:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2517:60:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":161,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2500:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2500:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":165,"nodeType":"ExpressionStatement","src":"2500:78:2"}]},"documentation":{"id":134,"nodeType":"StructuredDocumentation","src":"1333:876:2","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","parameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":136,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":167,"src":"2231:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":135,"name":"address","nodeType":"ElementaryTypeName","src":"2231:15:2","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":138,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":167,"src":"2258:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":137,"name":"uint256","nodeType":"ElementaryTypeName","src":"2258:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2230:43:2"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[],"src":"2283:0:2"},"scope":168,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"56:130:2","text":" @dev Collection of functions related to the address type\n From https://github.com/OpenZeppelin/openzeppelin-contracts"},"fullyImplemented":true,"linearizedBaseContracts":[168],"name":"Address","scope":169}],"license":"MIT"}},"@aave/aave-stake/contracts/lib/SafeERC20.sol":{"id":3,"ast":{"absolutePath":"@aave/aave-stake/contracts/lib/SafeERC20.sol","id":326,"exportedSymbols":{"Address":[168],"IERC20":[77],"SafeERC20":[325],"SafeMath":[521]},"nodeType":"SourceUnit","src":"33:2072:3","nodes":[{"id":170,"nodeType":"PragmaDirective","src":"33:22:3","nodes":[],"literals":["solidity","0.7",".5"]},{"id":172,"nodeType":"ImportDirective","src":"57:48:3","nodes":[],"absolutePath":"@aave/aave-stake/contracts/interfaces/IERC20.sol","file":"../interfaces/IERC20.sol","scope":326,"sourceUnit":78,"symbolAliases":[{"foreign":{"id":171,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"src":"65:6:3","typeDescriptions":{}}}],"unitAlias":""},{"id":174,"nodeType":"ImportDirective","src":"106:40:3","nodes":[],"absolutePath":"@aave/aave-stake/contracts/lib/SafeMath.sol","file":"./SafeMath.sol","scope":326,"sourceUnit":522,"symbolAliases":[{"foreign":{"id":173,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"src":"114:8:3","typeDescriptions":{}}}],"unitAlias":""},{"id":176,"nodeType":"ImportDirective","src":"147:38:3","nodes":[],"absolutePath":"@aave/aave-stake/contracts/lib/Address.sol","file":"./Address.sol","scope":326,"sourceUnit":169,"symbolAliases":[{"foreign":{"id":175,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"src":"155:7:3","typeDescriptions":{}}}],"unitAlias":""},{"id":325,"nodeType":"ContractDefinition","src":"708:1396:3","nodes":[{"id":180,"nodeType":"UsingForDirective","src":"730:27:3","nodes":[],"libraryName":{"id":178,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":521,"src":"736:8:3","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$521","typeString":"library SafeMath"}},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"749:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":183,"nodeType":"UsingForDirective","src":"760:26:3","nodes":[],"libraryName":{"id":181,"name":"Address","nodeType":"UserDefinedTypeName","referencedDeclaration":168,"src":"766:7:3","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$168","typeString":"library Address"}},"typeName":{"id":182,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"id":205,"nodeType":"FunctionDefinition","src":"790:184:3","nodes":[],"body":{"id":204,"nodeType":"Block","src":"878:96:3","nodes":[],"statements":[{"expression":{"arguments":[{"id":193,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"903:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":196,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"933:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":26,"src":"933:14:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"933:23:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":199,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"958:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"962:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":194,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"910:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"910:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"910:58:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":192,"name":"callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"884:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"884:85:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":203,"nodeType":"ExpressionStatement","src":"884:85:3"}]},"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","parameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":205,"src":"817:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},"typeName":{"id":184,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":77,"src":"817:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":205,"src":"835:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":186,"name":"address","nodeType":"ElementaryTypeName","src":"835:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":189,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":205,"src":"851:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":188,"name":"uint256","nodeType":"ElementaryTypeName","src":"851:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"811:57:3"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[],"src":"878:0:3"},"scope":325,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":230,"nodeType":"FunctionDefinition","src":"978:216:3","nodes":[],"body":{"id":229,"nodeType":"Block","src":"1088:106:3","nodes":[],"statements":[{"expression":{"arguments":[{"id":217,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"1113:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":220,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"1143:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":58,"src":"1143:18:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1143:27:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":223,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"1172:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":224,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"1178:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"1182:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":218,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1120:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1120:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1120:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":216,"name":"callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"1094:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:95:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":228,"nodeType":"ExpressionStatement","src":"1094:95:3"}]},"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","parameters":{"id":214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":207,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":230,"src":"1009:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},"typeName":{"id":206,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":77,"src":"1009:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":209,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":230,"src":"1027:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":208,"name":"address","nodeType":"ElementaryTypeName","src":"1027:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":211,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":230,"src":"1045:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":210,"name":"address","nodeType":"ElementaryTypeName","src":"1045:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":213,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":230,"src":"1061:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":212,"name":"uint256","nodeType":"ElementaryTypeName","src":"1061:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1003:75:3"},"returnParameters":{"id":215,"nodeType":"ParameterList","parameters":[],"src":"1088:0:3"},"scope":325,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":272,"nodeType":"FunctionDefinition","src":"1198:345:3","nodes":[],"body":{"id":271,"nodeType":"Block","src":"1290:253:3","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"1312:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1312:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":243,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1311:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":248,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1352:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$325","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$325","typeString":"library SafeERC20"}],"id":247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1344:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":246,"name":"address","nodeType":"ElementaryTypeName","src":"1344:7:3","typeDescriptions":{}}},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1344:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":250,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"1359:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":244,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"1328:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":36,"src":"1328:15:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1328:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1328:44:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":254,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1327:46:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1311:62:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1381:56:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":239,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1296:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1296:147:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":258,"nodeType":"ExpressionStatement","src":"1296:147:3"},{"expression":{"arguments":[{"id":260,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"1468:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":263,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"1498:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":46,"src":"1498:13:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1498:22:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":266,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"1522:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"1531:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":261,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1475:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1475:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1475:62:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":259,"name":"callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"1449:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1449:89:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":270,"nodeType":"ExpressionStatement","src":"1449:89:3"}]},"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","parameters":{"id":237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":232,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":272,"src":"1224:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},"typeName":{"id":231,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":77,"src":"1224:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":234,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":272,"src":"1242:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"1242:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":236,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":272,"src":"1263:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":235,"name":"uint256","nodeType":"ElementaryTypeName","src":"1263:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:62:3"},"returnParameters":{"id":238,"nodeType":"ParameterList","parameters":[],"src":"1290:0:3"},"scope":325,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":324,"nodeType":"FunctionDefinition","src":"1547:555:3","nodes":[],"body":{"id":323,"nodeType":"Block","src":"1616:486:3","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":282,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"1638:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}],"id":281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1630:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":280,"name":"address","nodeType":"ElementaryTypeName","src":"1630:7:3","typeDescriptions":{}}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1630:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":133,"src":"1630:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1630:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2063616c6c20746f206e6f6e2d636f6e7472616374","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1659:33:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d","typeString":"literal_string \"SafeERC20: call to non-contract\""},"value":"SafeERC20: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d","typeString":"literal_string \"SafeERC20: call to non-contract\""}],"id":279,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1622:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1622:71:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":288,"nodeType":"ExpressionStatement","src":"1622:71:3"},{"assignments":[290,292],"declarations":[{"constant":false,"id":290,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":323,"src":"1756:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":289,"name":"bool","nodeType":"ElementaryTypeName","src":"1756:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":292,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":323,"src":"1770:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":291,"name":"bytes","nodeType":"ElementaryTypeName","src":"1770:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":300,"initialValue":{"arguments":[{"id":298,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"1817:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":295,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"1805:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}],"id":294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1797:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"1797:7:3","typeDescriptions":{}}},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1797:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"1797:19:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1797:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1755:67:3"},{"expression":{"arguments":[{"id":302,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"1836:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1845:34:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"id":301,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1828:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1828:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":305,"nodeType":"ExpressionStatement","src":"1828:52:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":306,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"1891:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1891:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1911:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1891:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":322,"nodeType":"IfStatement","src":"1887:211:3","trueBody":{"id":321,"nodeType":"Block","src":"1914:184:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":313,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"2025:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2038:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":314,"name":"bool","nodeType":"ElementaryTypeName","src":"2038:4:3","typeDescriptions":{}}}],"id":316,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2037:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":311,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2014:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"2014:10:3","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2014:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2046:44:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":310,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2006:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2006:85:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":320,"nodeType":"ExpressionStatement","src":"2006:85:3"}]}}]},"implemented":true,"kind":"function","modifiers":[],"name":"callOptionalReturn","parameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":324,"src":"1575:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},"typeName":{"id":273,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":77,"src":"1575:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":276,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":324,"src":"1589:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":275,"name":"bytes","nodeType":"ElementaryTypeName","src":"1589:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1574:33:3"},"returnParameters":{"id":278,"nodeType":"ParameterList","parameters":[],"src":"1616:0:3"},"scope":325,"stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":177,"nodeType":"StructuredDocumentation","src":"187:520:3","text":" @title SafeERC20\n @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\n Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"linearizedBaseContracts":[325],"name":"SafeERC20","scope":326}],"license":"MIT"}},"@aave/aave-stake/contracts/lib/SafeMath.sol":{"id":4,"ast":{"absolutePath":"@aave/aave-stake/contracts/lib/SafeMath.sol","id":522,"exportedSymbols":{"SafeMath":[521]},"nodeType":"SourceUnit","src":"37:4994:4","nodes":[{"id":327,"nodeType":"PragmaDirective","src":"37:22:4","nodes":[],"literals":["solidity","0.7",".5"]},{"id":521,"nodeType":"ContractDefinition","src":"688:4342:4","nodes":[{"id":354,"nodeType":"FunctionDefinition","src":"913:162:4","nodes":[],"body":{"id":353,"nodeType":"Block","src":"980:95:4","nodes":[],"statements":[{"assignments":[339],"declarations":[{"constant":false,"id":339,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":353,"src":"986:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":338,"name":"uint256","nodeType":"ElementaryTypeName","src":"986:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":343,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":340,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"998:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":341,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"1002:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"998:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"986:17:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":345,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"1017:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":346,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"1022:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1017:6:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536166654d6174683a206164646974696f6e206f766572666c6f77","id":348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1025:29:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","typeString":"literal_string \"SafeMath: addition overflow\""},"value":"SafeMath: addition overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","typeString":"literal_string \"SafeMath: addition overflow\""}],"id":344,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1009:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1009:46:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":350,"nodeType":"ExpressionStatement","src":"1009:46:4"},{"expression":{"id":351,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"1069:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":337,"id":352,"nodeType":"Return","src":"1062:8:4"}]},"documentation":{"id":329,"nodeType":"StructuredDocumentation","src":"709:201:4","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"implemented":true,"kind":"function","modifiers":[],"name":"add","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":331,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":354,"src":"926:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":330,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":333,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":354,"src":"937:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":332,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:22:4"},"returnParameters":{"id":337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":336,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":354,"src":"971:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":335,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:4"},"scope":521,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":371,"nodeType":"FunctionDefinition","src":"1319:128:4","nodes":[],"body":{"id":370,"nodeType":"Block","src":"1386:61:4","nodes":[],"statements":[{"expression":{"arguments":[{"id":365,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"1403:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":366,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"1406:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"536166654d6174683a207375627472616374696f6e206f766572666c6f77","id":367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1409:32:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","typeString":"literal_string \"SafeMath: subtraction overflow\""},"value":"SafeMath: subtraction overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","typeString":"literal_string \"SafeMath: subtraction overflow\""}],"id":364,"name":"sub","nodeType":"Identifier","overloadedDeclarations":[371,399],"referencedDeclaration":399,"src":"1399:3:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1399:43:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":363,"id":369,"nodeType":"Return","src":"1392:50:4"}]},"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"1079:237:4","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"implemented":true,"kind":"function","modifiers":[],"name":"sub","parameters":{"id":360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":371,"src":"1332:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":356,"name":"uint256","nodeType":"ElementaryTypeName","src":"1332:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":359,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":371,"src":"1343:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":358,"name":"uint256","nodeType":"ElementaryTypeName","src":"1343:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1331:22:4"},"returnParameters":{"id":363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":362,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":371,"src":"1377:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":361,"name":"uint256","nodeType":"ElementaryTypeName","src":"1377:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1376:9:4"},"scope":521,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":399,"nodeType":"FunctionDefinition","src":"1711:189:4","nodes":[],"body":{"id":398,"nodeType":"Block","src":"1822:78:4","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":384,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"1836:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":385,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"1841:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1836:6:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":387,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"1844:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":383,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1828:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1828:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":389,"nodeType":"ExpressionStatement","src":"1828:29:4"},{"assignments":[391],"declarations":[{"constant":false,"id":391,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":398,"src":"1863:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":390,"name":"uint256","nodeType":"ElementaryTypeName","src":"1863:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":395,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":392,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"1875:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":393,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"1879:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1875:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1863:17:4"},{"expression":{"id":396,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"1894:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":382,"id":397,"nodeType":"Return","src":"1887:8:4"}]},"documentation":{"id":372,"nodeType":"StructuredDocumentation","src":"1451:257:4","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"implemented":true,"kind":"function","modifiers":[],"name":"sub","parameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":399,"src":"1729:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":373,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":376,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":399,"src":"1744:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":375,"name":"uint256","nodeType":"ElementaryTypeName","src":"1744:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":378,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":399,"src":"1759:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":377,"name":"string","nodeType":"ElementaryTypeName","src":"1759:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1723:66:4"},"returnParameters":{"id":382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":381,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":399,"src":"1813:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":380,"name":"uint256","nodeType":"ElementaryTypeName","src":"1813:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1812:9:4"},"scope":521,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":434,"nodeType":"FunctionDefinition","src":"2120:419:4","nodes":[],"body":{"id":433,"nodeType":"Block","src":"2187:352:4","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":409,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"2403:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2408:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2403:6:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":415,"nodeType":"IfStatement","src":"2399:35:4","trueBody":{"id":414,"nodeType":"Block","src":"2411:23:4","statements":[{"expression":{"hexValue":"30","id":412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2426:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":408,"id":413,"nodeType":"Return","src":"2419:8:4"}]}},{"assignments":[417],"declarations":[{"constant":false,"id":417,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":433,"src":"2440:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":416,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":421,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":418,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"2452:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":419,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"2456:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2452:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2440:17:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":423,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"2471:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":424,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"2475:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2471:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":426,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"2480:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2471:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77","id":428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2483:35:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3","typeString":"literal_string \"SafeMath: multiplication overflow\""},"value":"SafeMath: multiplication overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3","typeString":"literal_string \"SafeMath: multiplication overflow\""}],"id":422,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2463:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2463:56:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":430,"nodeType":"ExpressionStatement","src":"2463:56:4"},{"expression":{"id":431,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"2533:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":408,"id":432,"nodeType":"Return","src":"2526:8:4"}]},"documentation":{"id":400,"nodeType":"StructuredDocumentation","src":"1904:213:4","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"implemented":true,"kind":"function","modifiers":[],"name":"mul","parameters":{"id":405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":402,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":434,"src":"2133:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":401,"name":"uint256","nodeType":"ElementaryTypeName","src":"2133:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":404,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":434,"src":"2144:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":403,"name":"uint256","nodeType":"ElementaryTypeName","src":"2144:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2132:22:4"},"returnParameters":{"id":408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":407,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":434,"src":"2178:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":406,"name":"uint256","nodeType":"ElementaryTypeName","src":"2178:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2177:9:4"},"scope":521,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":451,"nodeType":"FunctionDefinition","src":"2970:124:4","nodes":[],"body":{"id":450,"nodeType":"Block","src":"3037:57:4","nodes":[],"statements":[{"expression":{"arguments":[{"id":445,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"3054:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":446,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"3057:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"536166654d6174683a206469766973696f6e206279207a65726f","id":447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3060:28:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f","typeString":"literal_string \"SafeMath: division by zero\""},"value":"SafeMath: division by zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f","typeString":"literal_string \"SafeMath: division by zero\""}],"id":444,"name":"div","nodeType":"Identifier","overloadedDeclarations":[451,479],"referencedDeclaration":479,"src":"3050:3:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3050:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":443,"id":449,"nodeType":"Return","src":"3043:46:4"}]},"documentation":{"id":435,"nodeType":"StructuredDocumentation","src":"2543:424:4","text":" @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"implemented":true,"kind":"function","modifiers":[],"name":"div","parameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":437,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":451,"src":"2983:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":436,"name":"uint256","nodeType":"ElementaryTypeName","src":"2983:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":439,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":451,"src":"2994:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":438,"name":"uint256","nodeType":"ElementaryTypeName","src":"2994:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2982:22:4"},"returnParameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":451,"src":"3028:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":441,"name":"uint256","nodeType":"ElementaryTypeName","src":"3028:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3027:9:4"},"scope":521,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":479,"nodeType":"FunctionDefinition","src":"3545:332:4","nodes":[],"body":{"id":478,"nodeType":"Block","src":"3656:221:4","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":464,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"3732:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3736:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3732:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":467,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"3739:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":463,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3724:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3724:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":469,"nodeType":"ExpressionStatement","src":"3724:28:4"},{"assignments":[471],"declarations":[{"constant":false,"id":471,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":478,"src":"3758:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":470,"name":"uint256","nodeType":"ElementaryTypeName","src":"3758:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":475,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":472,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"3770:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":473,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"3774:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3770:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3758:17:4"},{"expression":{"id":476,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"3871:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":462,"id":477,"nodeType":"Return","src":"3864:8:4"}]},"documentation":{"id":452,"nodeType":"StructuredDocumentation","src":"3098:444:4","text":" @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"implemented":true,"kind":"function","modifiers":[],"name":"div","parameters":{"id":459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":454,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":479,"src":"3563:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":453,"name":"uint256","nodeType":"ElementaryTypeName","src":"3563:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":456,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":479,"src":"3578:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":455,"name":"uint256","nodeType":"ElementaryTypeName","src":"3578:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":458,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":479,"src":"3593:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":457,"name":"string","nodeType":"ElementaryTypeName","src":"3593:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3557:66:4"},"returnParameters":{"id":462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":479,"src":"3647:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":460,"name":"uint256","nodeType":"ElementaryTypeName","src":"3647:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3646:9:4"},"scope":521,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":496,"nodeType":"FunctionDefinition","src":"4297:122:4","nodes":[],"body":{"id":495,"nodeType":"Block","src":"4364:55:4","nodes":[],"statements":[{"expression":{"arguments":[{"id":490,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"4381:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":491,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"4384:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"536166654d6174683a206d6f64756c6f206279207a65726f","id":492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4387:26:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832","typeString":"literal_string \"SafeMath: modulo by zero\""},"value":"SafeMath: modulo by zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832","typeString":"literal_string \"SafeMath: modulo by zero\""}],"id":489,"name":"mod","nodeType":"Identifier","overloadedDeclarations":[496,520],"referencedDeclaration":520,"src":"4377:3:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4377:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":488,"id":494,"nodeType":"Return","src":"4370:44:4"}]},"documentation":{"id":480,"nodeType":"StructuredDocumentation","src":"3881:413:4","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"implemented":true,"kind":"function","modifiers":[],"name":"mod","parameters":{"id":485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":482,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":496,"src":"4310:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"4310:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":484,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":496,"src":"4321:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":483,"name":"uint256","nodeType":"ElementaryTypeName","src":"4321:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:22:4"},"returnParameters":{"id":488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":487,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":496,"src":"4355:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":486,"name":"uint256","nodeType":"ElementaryTypeName","src":"4355:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4354:9:4"},"scope":521,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":520,"nodeType":"FunctionDefinition","src":"4859:169:4","nodes":[],"body":{"id":519,"nodeType":"Block","src":"4970:58:4","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":509,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"4984:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4989:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4984:6:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":512,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"4992:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":508,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4976:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4976:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":514,"nodeType":"ExpressionStatement","src":"4976:29:4"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":515,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"5018:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":516,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"5022:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5018:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":507,"id":518,"nodeType":"Return","src":"5011:12:4"}]},"documentation":{"id":497,"nodeType":"StructuredDocumentation","src":"4423:433:4","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"implemented":true,"kind":"function","modifiers":[],"name":"mod","parameters":{"id":504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":499,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":520,"src":"4877:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":498,"name":"uint256","nodeType":"ElementaryTypeName","src":"4877:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":501,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":520,"src":"4892:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":500,"name":"uint256","nodeType":"ElementaryTypeName","src":"4892:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":503,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":520,"src":"4907:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":502,"name":"string","nodeType":"ElementaryTypeName","src":"4907:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4871:66:4"},"returnParameters":{"id":507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":506,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":520,"src":"4961:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":505,"name":"uint256","nodeType":"ElementaryTypeName","src":"4961:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4960:9:4"},"scope":521,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"61:626:4","text":" @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\n Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"linearizedBaseContracts":[521],"name":"SafeMath","scope":522}],"license":"agpl-3.0"}},"@aave/aave-stake/contracts/utils/VersionedInitializable.sol":{"id":5,"ast":{"absolutePath":"@aave/aave-stake/contracts/utils/VersionedInitializable.sol","id":561,"exportedSymbols":{"VersionedInitializable":[560]},"nodeType":"SourceUnit","src":"37:1483:5","nodes":[{"id":523,"nodeType":"PragmaDirective","src":"37:22:5","nodes":[],"literals":["solidity","0.7",".5"]},{"id":560,"nodeType":"ContractDefinition","src":"764:755:5","nodes":[{"id":528,"nodeType":"VariableDeclaration","src":"881:44:5","nodes":[],"constant":false,"documentation":{"id":525,"nodeType":"StructuredDocumentation","src":"809:69:5","text":" @dev Indicates that the contract has been initialized."},"mutability":"mutable","name":"lastInitializedRevision","scope":560,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":526,"name":"uint256","nodeType":"ElementaryTypeName","src":"881:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"924:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"id":549,"nodeType":"ModifierDefinition","src":"1011:214:5","nodes":[],"body":{"id":548,"nodeType":"Block","src":"1034:191:5","nodes":[],"statements":[{"assignments":[532],"declarations":[{"constant":false,"id":532,"mutability":"mutable","name":"revision","nodeType":"VariableDeclaration","scope":548,"src":"1040:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":531,"name":"uint256","nodeType":"ElementaryTypeName","src":"1040:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":535,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":533,"name":"getRevision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"1059:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint256_$","typeString":"function () pure returns (uint256)"}},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1059:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1040:32:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":537,"name":"revision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"1086:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":538,"name":"lastInitializedRevision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"1097:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1086:34:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564","id":540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1122:48:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4","typeString":"literal_string \"Contract instance has already been initialized\""},"value":"Contract instance has already been initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4","typeString":"literal_string \"Contract instance has already been initialized\""}],"id":536,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1078:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1078:93:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":542,"nodeType":"ExpressionStatement","src":"1078:93:5"},{"expression":{"id":545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":543,"name":"lastInitializedRevision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"1178:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":544,"name":"revision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"1204:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1178:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":546,"nodeType":"ExpressionStatement","src":"1178:34:5"},{"id":547,"nodeType":"PlaceholderStatement","src":"1219:1:5"}]},"documentation":{"id":529,"nodeType":"StructuredDocumentation","src":"930:78:5","text":" @dev Modifier to use in the initializer function of a contract."},"name":"initializer","parameters":{"id":530,"nodeType":"ParameterList","parameters":[],"src":"1031:2:5"},"virtual":false,"visibility":"internal"},{"id":555,"nodeType":"FunctionDefinition","src":"1349:63:5","nodes":[],"documentation":{"id":550,"nodeType":"StructuredDocumentation","src":"1229:117:5","text":"@dev returns the revision number of the contract.\n Needs to be defined in the inherited class as a constant."},"implemented":false,"kind":"function","modifiers":[],"name":"getRevision","parameters":{"id":551,"nodeType":"ParameterList","parameters":[],"src":"1369:2:5"},"returnParameters":{"id":554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":553,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":555,"src":"1403:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":552,"name":"uint256","nodeType":"ElementaryTypeName","src":"1403:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1402:9:5"},"scope":560,"stateMutability":"pure","virtual":true,"visibility":"internal"},{"id":559,"nodeType":"VariableDeclaration","src":"1487:29:5","nodes":[],"constant":false,"mutability":"mutable","name":"______gap","scope":560,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":556,"name":"uint256","nodeType":"ElementaryTypeName","src":"1487:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":558,"length":{"hexValue":"3530","id":557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1495:2:5","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1487:11:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":524,"nodeType":"StructuredDocumentation","src":"61:702:5","text":" @title VersionedInitializable\n @dev Helper contract to support initializer functions. To use it, replace\n the constructor with a function that has the `initializer` modifier.\n WARNING: Unlike constructors, initializer functions must be manually\n invoked. This applies both to deploying an Initializable contract, as well\n as extending an Initializable contract via inheritance.\n WARNING: When used with inheritance, manual care must be taken to not invoke\n a parent initializer twice, or ensure that all initializers are idempotent,\n because this is not dealt with automatically as with constructors.\n @author Aave, inspired by the OpenZeppelin Initializable contract"},"fullyImplemented":false,"linearizedBaseContracts":[560],"name":"VersionedInitializable","scope":561}],"license":"agpl-3.0"}},"contracts/incentives/DistributionManager.sol":{"id":6,"ast":{"absolutePath":"contracts/incentives/DistributionManager.sol","id":1167,"exportedSymbols":{"DistributionManager":[1166],"DistributionTypes":[2051],"IAaveDistributionManager":[1875],"SafeMath":[2141]},"nodeType":"SourceUnit","src":"37:8537:6","nodes":[{"id":562,"nodeType":"PragmaDirective","src":"37:22:6","nodes":[],"literals":["solidity","0.7",".5"]},{"id":563,"nodeType":"PragmaDirective","src":"60:33:6","nodes":[],"literals":["experimental","ABIEncoderV2"]},{"id":565,"nodeType":"ImportDirective","src":"95:84:6","nodes":[],"absolutePath":"contracts/interfaces/IAaveDistributionManager.sol","file":"../interfaces/IAaveDistributionManager.sol","scope":1167,"sourceUnit":1876,"symbolAliases":[{"foreign":{"id":564,"name":"IAaveDistributionManager","nodeType":"Identifier","overloadedDeclarations":[],"src":"103:24:6","typeDescriptions":{}}}],"unitAlias":""},{"id":567,"nodeType":"ImportDirective","src":"180:45:6","nodes":[],"absolutePath":"contracts/lib/SafeMath.sol","file":"../lib/SafeMath.sol","scope":1167,"sourceUnit":2142,"symbolAliases":[{"foreign":{"id":566,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"src":"188:8:6","typeDescriptions":{}}}],"unitAlias":""},{"id":569,"nodeType":"ImportDirective","src":"226:63:6","nodes":[],"absolutePath":"contracts/lib/DistributionTypes.sol","file":"../lib/DistributionTypes.sol","scope":1167,"sourceUnit":2052,"symbolAliases":[{"foreign":{"id":568,"name":"DistributionTypes","nodeType":"Identifier","overloadedDeclarations":[],"src":"234:17:6","typeDescriptions":{}}}],"unitAlias":""},{"id":1166,"nodeType":"ContractDefinition","src":"418:8155:6","nodes":[{"id":575,"nodeType":"UsingForDirective","src":"479:27:6","nodes":[],"libraryName":{"id":573,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":2141,"src":"485:8:6","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$2141","typeString":"library SafeMath"}},"typeName":{"id":574,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":586,"nodeType":"StructDefinition","src":"510:143:6","nodes":[],"canonicalName":"DistributionManager.AssetData","members":[{"constant":false,"id":577,"mutability":"mutable","name":"emissionPerSecond","nodeType":"VariableDeclaration","scope":586,"src":"533:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":576,"name":"uint104","nodeType":"ElementaryTypeName","src":"533:7:6","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"},{"constant":false,"id":579,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":586,"src":"564:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":578,"name":"uint104","nodeType":"ElementaryTypeName","src":"564:7:6","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"},{"constant":false,"id":581,"mutability":"mutable","name":"lastUpdateTimestamp","nodeType":"VariableDeclaration","scope":586,"src":"583:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":580,"name":"uint40","nodeType":"ElementaryTypeName","src":"583:6:6","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"},{"constant":false,"id":585,"mutability":"mutable","name":"users","nodeType":"VariableDeclaration","scope":586,"src":"615:33:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":584,"keyType":{"id":582,"name":"address","nodeType":"ElementaryTypeName","src":"623:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"615:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":583,"name":"uint256","nodeType":"ElementaryTypeName","src":"634:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"AssetData","scope":1166,"visibility":"public"},{"id":588,"nodeType":"VariableDeclaration","src":"657:41:6","nodes":[],"constant":false,"functionSelector":"cbcbb507","mutability":"immutable","name":"EMISSION_MANAGER","scope":1166,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":587,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"id":591,"nodeType":"VariableDeclaration","src":"703:36:6","nodes":[],"constant":true,"functionSelector":"aaf5eb68","mutability":"constant","name":"PRECISION","scope":1166,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":589,"name":"uint8","nodeType":"ElementaryTypeName","src":"703:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3138","id":590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"737:2:6","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"visibility":"public"},{"id":595,"nodeType":"VariableDeclaration","src":"744:43:6","nodes":[],"constant":false,"functionSelector":"f11b8188","mutability":"mutable","name":"assets","scope":1166,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AssetData_$586_storage_$","typeString":"mapping(address => struct DistributionManager.AssetData)"},"typeName":{"id":594,"keyType":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"752:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"744:29:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AssetData_$586_storage_$","typeString":"mapping(address => struct DistributionManager.AssetData)"},"valueType":{"id":593,"name":"AssetData","nodeType":"UserDefinedTypeName","referencedDeclaration":586,"src":"763:9:6","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$586_storage_ptr","typeString":"struct DistributionManager.AssetData"}}},"visibility":"public"},{"id":597,"nodeType":"VariableDeclaration","src":"792:33:6","nodes":[],"constant":false,"mutability":"mutable","name":"_distributionEnd","scope":1166,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":596,"name":"uint256","nodeType":"ElementaryTypeName","src":"792:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"id":609,"nodeType":"ModifierDefinition","src":"830:113:6","nodes":[],"body":{"id":608,"nodeType":"Block","src":"861:82:6","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":600,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"875:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"875:10:6","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":602,"name":"EMISSION_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"889:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"875:30:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f4e4c595f454d495353494f4e5f4d414e41474552","id":604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"907:23:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e","typeString":"literal_string \"ONLY_EMISSION_MANAGER\""},"value":"ONLY_EMISSION_MANAGER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e","typeString":"literal_string \"ONLY_EMISSION_MANAGER\""}],"id":599,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"867:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"867:64:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":606,"nodeType":"ExpressionStatement","src":"867:64:6"},{"id":607,"nodeType":"PlaceholderStatement","src":"937:1:6"}]},"name":"onlyEmissionManager","parameters":{"id":598,"nodeType":"ParameterList","parameters":[],"src":"858:2:6"},"virtual":false,"visibility":"internal"},{"id":619,"nodeType":"FunctionDefinition","src":"947:82:6","nodes":[],"body":{"id":618,"nodeType":"Block","src":"984:45:6","nodes":[],"statements":[{"expression":{"id":616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":614,"name":"EMISSION_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"990:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":615,"name":"emissionManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"1009:15:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"990:34:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":617,"nodeType":"ExpressionStatement","src":"990:34:6"}]},"implemented":true,"kind":"constructor","modifiers":[],"name":"","parameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"mutability":"mutable","name":"emissionManager","nodeType":"VariableDeclaration","scope":619,"src":"959:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":610,"name":"address","nodeType":"ElementaryTypeName","src":"959:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"958:25:6"},"returnParameters":{"id":613,"nodeType":"ParameterList","parameters":[],"src":"984:0:6"},"scope":1166,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":637,"nodeType":"FunctionDefinition","src":"1076:186:6","nodes":[],"body":{"id":636,"nodeType":"Block","src":"1167:95:6","nodes":[],"statements":[{"expression":{"id":630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":628,"name":"_distributionEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"1173:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":629,"name":"distributionEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"1192:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1173:34:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":631,"nodeType":"ExpressionStatement","src":"1173:34:6"},{"eventCall":{"arguments":[{"id":633,"name":"distributionEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"1241:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":632,"name":"DistributionEndUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"1218:22:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1218:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":635,"nodeType":"EmitStatement","src":"1213:44:6"}]},"baseFunctions":[1840],"documentation":{"id":620,"nodeType":"StructuredDocumentation","src":"1033:40:6","text":"@inheritdoc IAaveDistributionManager"},"functionSelector":"39ccbdd3","implemented":true,"kind":"function","modifiers":[{"id":626,"modifierName":{"id":625,"name":"onlyEmissionManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"1147:19:6","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"1147:19:6"}],"name":"setDistributionEnd","overrides":{"id":624,"nodeType":"OverrideSpecifier","overrides":[],"src":"1138:8:6"},"parameters":{"id":623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":622,"mutability":"mutable","name":"distributionEnd","nodeType":"VariableDeclaration","scope":637,"src":"1104:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":621,"name":"uint256","nodeType":"ElementaryTypeName","src":"1104:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1103:25:6"},"returnParameters":{"id":627,"nodeType":"ParameterList","parameters":[],"src":"1167:0:6"},"scope":1166,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":647,"nodeType":"FunctionDefinition","src":"1309:105:6","nodes":[],"body":{"id":646,"nodeType":"Block","src":"1380:34:6","nodes":[],"statements":[{"expression":{"id":644,"name":"_distributionEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"1393:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":643,"id":645,"nodeType":"Return","src":"1386:23:6"}]},"baseFunctions":[1846],"documentation":{"id":638,"nodeType":"StructuredDocumentation","src":"1266:40:6","text":"@inheritdoc IAaveDistributionManager"},"functionSelector":"cc69afec","implemented":true,"kind":"function","modifiers":[],"name":"getDistributionEnd","overrides":{"id":640,"nodeType":"OverrideSpecifier","overrides":[],"src":"1353:8:6"},"parameters":{"id":639,"nodeType":"ParameterList","parameters":[],"src":"1336:2:6"},"returnParameters":{"id":643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":642,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":647,"src":"1371:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":641,"name":"uint256","nodeType":"ElementaryTypeName","src":"1371:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1370:9:6"},"scope":1166,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":657,"nodeType":"FunctionDefinition","src":"1461:103:6","nodes":[],"body":{"id":656,"nodeType":"Block","src":"1530:34:6","nodes":[],"statements":[{"expression":{"id":654,"name":"_distributionEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"1543:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":653,"id":655,"nodeType":"Return","src":"1536:23:6"}]},"baseFunctions":[1852],"documentation":{"id":648,"nodeType":"StructuredDocumentation","src":"1418:40:6","text":"@inheritdoc IAaveDistributionManager"},"functionSelector":"919cd40f","implemented":true,"kind":"function","modifiers":[],"name":"DISTRIBUTION_END","overrides":{"id":650,"nodeType":"OverrideSpecifier","overrides":[],"src":"1503:8:6"},"parameters":{"id":649,"nodeType":"ParameterList","parameters":[],"src":"1486:2:6"},"returnParameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":657,"src":"1521:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":651,"name":"uint256","nodeType":"ElementaryTypeName","src":"1521:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1520:9:6"},"scope":1166,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":676,"nodeType":"FunctionDefinition","src":"1611:137:6","nodes":[],"body":{"id":675,"nodeType":"Block","src":"1705:43:6","nodes":[],"statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":668,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"1718:6:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AssetData_$586_storage_$","typeString":"mapping(address => struct DistributionManager.AssetData storage ref)"}},"id":670,"indexExpression":{"id":669,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"1725:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1718:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$586_storage","typeString":"struct DistributionManager.AssetData storage ref"}},"id":671,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"users","nodeType":"MemberAccess","referencedDeclaration":585,"src":"1718:19:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":673,"indexExpression":{"id":672,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"1738:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1718:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":667,"id":674,"nodeType":"Return","src":"1711:32:6"}]},"baseFunctions":[1862],"documentation":{"id":658,"nodeType":"StructuredDocumentation","src":"1568:40:6","text":"@inheritdoc IAaveDistributionManager"},"functionSelector":"3373ee4c","implemented":true,"kind":"function","modifiers":[],"name":"getUserAssetData","overrides":{"id":664,"nodeType":"OverrideSpecifier","overrides":[],"src":"1678:8:6"},"parameters":{"id":663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":660,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":676,"src":"1637:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":659,"name":"address","nodeType":"ElementaryTypeName","src":"1637:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":662,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":676,"src":"1651:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":661,"name":"address","nodeType":"ElementaryTypeName","src":"1651:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1636:29:6"},"returnParameters":{"id":667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":666,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":676,"src":"1696:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":665,"name":"uint256","nodeType":"ElementaryTypeName","src":"1696:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1695:9:6"},"scope":1166,"stateMutability":"view","virtual":false,"visibility":"public"},{"id":704,"nodeType":"FunctionDefinition","src":"1795:201:6","nodes":[],"body":{"id":703,"nodeType":"Block","src":"1889:107:6","nodes":[],"statements":[{"expression":{"components":[{"expression":{"baseExpression":{"id":689,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"1903:6:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AssetData_$586_storage_$","typeString":"mapping(address => struct DistributionManager.AssetData storage ref)"}},"id":691,"indexExpression":{"id":690,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"1910:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1903:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$586_storage","typeString":"struct DistributionManager.AssetData storage ref"}},"id":692,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"index","nodeType":"MemberAccess","referencedDeclaration":579,"src":"1903:19:6","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},{"expression":{"baseExpression":{"id":693,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"1924:6:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AssetData_$586_storage_$","typeString":"mapping(address => struct DistributionManager.AssetData storage ref)"}},"id":695,"indexExpression":{"id":694,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"1931:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1924:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$586_storage","typeString":"struct DistributionManager.AssetData storage ref"}},"id":696,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"emissionPerSecond","nodeType":"MemberAccess","referencedDeclaration":577,"src":"1924:31:6","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},{"expression":{"baseExpression":{"id":697,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"1957:6:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AssetData_$586_storage_$","typeString":"mapping(address => struct DistributionManager.AssetData storage ref)"}},"id":699,"indexExpression":{"id":698,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"1964:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1957:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$586_storage","typeString":"struct DistributionManager.AssetData storage ref"}},"id":700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lastUpdateTimestamp","nodeType":"MemberAccess","referencedDeclaration":581,"src":"1957:33:6","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}}],"id":701,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1902:89:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint104_$_t_uint104_$_t_uint40_$","typeString":"tuple(uint104,uint104,uint40)"}},"functionReturnParameters":688,"id":702,"nodeType":"Return","src":"1895:96:6"}]},"baseFunctions":[1874],"documentation":{"id":677,"nodeType":"StructuredDocumentation","src":"1752:40:6","text":"@inheritdoc IAaveDistributionManager"},"functionSelector":"1652e7b7","implemented":true,"kind":"function","modifiers":[],"name":"getAssetData","overrides":{"id":681,"nodeType":"OverrideSpecifier","overrides":[],"src":"1844:8:6"},"parameters":{"id":680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":679,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":704,"src":"1817:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":678,"name":"address","nodeType":"ElementaryTypeName","src":"1817:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1816:15:6"},"returnParameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":683,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":704,"src":"1862:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":682,"name":"uint256","nodeType":"ElementaryTypeName","src":"1862:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":685,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":704,"src":"1871:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":684,"name":"uint256","nodeType":"ElementaryTypeName","src":"1871:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":687,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":704,"src":"1880:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":686,"name":"uint256","nodeType":"ElementaryTypeName","src":"1880:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1861:27:6"},"scope":1166,"stateMutability":"view","virtual":false,"visibility":"public"},{"id":766,"nodeType":"FunctionDefinition","src":"2136:624:6","nodes":[],"body":{"id":765,"nodeType":"Block","src":"2240:520:6","nodes":[],"statements":[{"body":{"id":763,"nodeType":"Block","src":"2301:455:6","statements":[{"assignments":[723],"declarations":[{"constant":false,"id":723,"mutability":"mutable","name":"assetConfig","nodeType":"VariableDeclaration","scope":763,"src":"2309:29:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$586_storage_ptr","typeString":"struct DistributionManager.AssetData"},"typeName":{"id":722,"name":"AssetData","nodeType":"UserDefinedTypeName","referencedDeclaration":586,"src":"2309:9:6","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$586_storage_ptr","typeString":"struct DistributionManager.AssetData"}},"visibility":"internal"}],"id":730,"initialValue":{"baseExpression":{"id":724,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"2341:6:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AssetData_$586_storage_$","typeString":"mapping(address => struct DistributionManager.AssetData storage ref)"}},"id":729,"indexExpression":{"expression":{"baseExpression":{"id":725,"name":"assetsConfigInput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"2348:17:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetConfigInput_$2043_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.AssetConfigInput memory[] memory"}},"id":727,"indexExpression":{"id":726,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"2366:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2348:20:6","typeDescriptions":{"typeIdentifier":"t_struct$_AssetConfigInput_$2043_memory_ptr","typeString":"struct DistributionTypes.AssetConfigInput memory"}},"id":728,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"underlyingAsset","nodeType":"MemberAccess","referencedDeclaration":2042,"src":"2348:36:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2341:44:6","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$586_storage","typeString":"struct DistributionManager.AssetData storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2309:76:6"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":732,"name":"assetsConfigInput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"2429:17:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetConfigInput_$2043_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.AssetConfigInput memory[] memory"}},"id":734,"indexExpression":{"id":733,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"2447:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2429:20:6","typeDescriptions":{"typeIdentifier":"t_struct$_AssetConfigInput_$2043_memory_ptr","typeString":"struct DistributionTypes.AssetConfigInput memory"}},"id":735,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"underlyingAsset","nodeType":"MemberAccess","referencedDeclaration":2042,"src":"2429:36:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":736,"name":"assetConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"2475:11:6","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$586_storage_ptr","typeString":"struct DistributionManager.AssetData storage pointer"}},{"expression":{"baseExpression":{"id":737,"name":"assetsConfigInput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"2496:17:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetConfigInput_$2043_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.AssetConfigInput memory[] memory"}},"id":739,"indexExpression":{"id":738,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"2514:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2496:20:6","typeDescriptions":{"typeIdentifier":"t_struct$_AssetConfigInput_$2043_memory_ptr","typeString":"struct DistributionTypes.AssetConfigInput memory"}},"id":740,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"totalStaked","nodeType":"MemberAccess","referencedDeclaration":2040,"src":"2496:32:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_AssetData_$586_storage_ptr","typeString":"struct DistributionManager.AssetData storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":731,"name":"_updateAssetStateInternal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"2394:25:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_struct$_AssetData_$586_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,struct DistributionManager.AssetData storage pointer,uint256) returns (uint256)"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2394:142:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":742,"nodeType":"ExpressionStatement","src":"2394:142:6"},{"expression":{"id":750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":743,"name":"assetConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"2545:11:6","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$586_storage_ptr","typeString":"struct DistributionManager.AssetData storage pointer"}},"id":745,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"emissionPerSecond","nodeType":"MemberAccess","referencedDeclaration":577,"src":"2545:29:6","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":746,"name":"assetsConfigInput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"2577:17:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetConfigInput_$2043_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.AssetConfigInput memory[] memory"}},"id":748,"indexExpression":{"id":747,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"2595:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2577:20:6","typeDescriptions":{"typeIdentifier":"t_struct$_AssetConfigInput_$2043_memory_ptr","typeString":"struct DistributionTypes.AssetConfigInput memory"}},"id":749,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"emissionPerSecond","nodeType":"MemberAccess","referencedDeclaration":2038,"src":"2577:38:6","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"2545:70:6","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"id":751,"nodeType":"ExpressionStatement","src":"2545:70:6"},{"eventCall":{"arguments":[{"expression":{"baseExpression":{"id":753,"name":"assetsConfigInput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"2657:17:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetConfigInput_$2043_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.AssetConfigInput memory[] memory"}},"id":755,"indexExpression":{"id":754,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"2675:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2657:20:6","typeDescriptions":{"typeIdentifier":"t_struct$_AssetConfigInput_$2043_memory_ptr","typeString":"struct DistributionTypes.AssetConfigInput memory"}},"id":756,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"underlyingAsset","nodeType":"MemberAccess","referencedDeclaration":2042,"src":"2657:36:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":757,"name":"assetsConfigInput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"2703:17:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetConfigInput_$2043_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.AssetConfigInput memory[] memory"}},"id":759,"indexExpression":{"id":758,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"2721:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2703:20:6","typeDescriptions":{"typeIdentifier":"t_struct$_AssetConfigInput_$2043_memory_ptr","typeString":"struct DistributionTypes.AssetConfigInput memory"}},"id":760,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"emissionPerSecond","nodeType":"MemberAccess","referencedDeclaration":2038,"src":"2703:38:6","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint104","typeString":"uint104"}],"id":752,"name":"AssetConfigUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"2629:18:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2629:120:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":762,"nodeType":"EmitStatement","src":"2624:125:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":715,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"2266:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":716,"name":"assetsConfigInput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"2270:17:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetConfigInput_$2043_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.AssetConfigInput memory[] memory"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2270:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2266:28:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":764,"initializationExpression":{"assignments":[712],"declarations":[{"constant":false,"id":712,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":764,"src":"2251:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":711,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":714,"initialValue":{"hexValue":"30","id":713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2263:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2251:13:6"},"loopExpression":{"expression":{"id":720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2296:3:6","subExpression":{"id":719,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"2296:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":721,"nodeType":"ExpressionStatement","src":"2296:3:6"},"nodeType":"ForStatement","src":"2246:510:6"}]},"documentation":{"id":705,"nodeType":"StructuredDocumentation","src":"2000:133:6","text":" @dev Configure the assets for a specific emission\n @param assetsConfigInput The array of each asset configuration*"},"implemented":true,"kind":"function","modifiers":[],"name":"_configureAssets","parameters":{"id":709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":708,"mutability":"mutable","name":"assetsConfigInput","nodeType":"VariableDeclaration","scope":766,"src":"2162:61:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetConfigInput_$2043_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.AssetConfigInput[]"},"typeName":{"baseType":{"id":706,"name":"DistributionTypes.AssetConfigInput","nodeType":"UserDefinedTypeName","referencedDeclaration":2043,"src":"2162:34:6","typeDescriptions":{"typeIdentifier":"t_struct$_AssetConfigInput_$2043_storage_ptr","typeString":"struct DistributionTypes.AssetConfigInput"}},"id":707,"nodeType":"ArrayTypeName","src":"2162:36:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetConfigInput_$2043_storage_$dyn_storage_ptr","typeString":"struct DistributionTypes.AssetConfigInput[]"}},"visibility":"internal"}],"src":"2161:63:6"},"returnParameters":{"id":710,"nodeType":"ParameterList","parameters":[],"src":"2240:0:6"},"scope":1166,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":863,"nodeType":"FunctionDefinition","src":"3104:936:6","nodes":[],"body":{"id":862,"nodeType":"Block","src":"3249:791:6","nodes":[],"statements":[{"assignments":[779],"declarations":[{"constant":false,"id":779,"mutability":"mutable","name":"oldIndex","nodeType":"VariableDeclaration","scope":862,"src":"3255:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":778,"name":"uint256","nodeType":"ElementaryTypeName","src":"3255:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":782,"initialValue":{"expression":{"id":780,"name":"assetConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"3274:11:6","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$586_storage_ptr","typeString":"struct DistributionManager.AssetData storage pointer"}},"id":781,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"index","nodeType":"MemberAccess","referencedDeclaration":579,"src":"3274:17:6","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"nodeType":"VariableDeclarationStatement","src":"3255:36:6"},{"assignments":[784],"declarations":[{"constant":false,"id":784,"mutability":"mutable","name":"emissionPerSecond","nodeType":"VariableDeclaration","scope":862,"src":"3297:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":783,"name":"uint256","nodeType":"ElementaryTypeName","src":"3297:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":787,"initialValue":{"expression":{"id":785,"name":"assetConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"3325:11:6","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$586_storage_ptr","typeString":"struct DistributionManager.AssetData storage pointer"}},"id":786,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"emissionPerSecond","nodeType":"MemberAccess","referencedDeclaration":577,"src":"3325:29:6","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"nodeType":"VariableDeclarationStatement","src":"3297:57:6"},{"assignments":[789],"declarations":[{"constant":false,"id":789,"mutability":"mutable","name":"lastUpdateTimestamp","nodeType":"VariableDeclaration","scope":862,"src":"3360:27:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":788,"name":"uint128","nodeType":"ElementaryTypeName","src":"3360:7:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"id":792,"initialValue":{"expression":{"id":790,"name":"assetConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"3390:11:6","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$586_storage_ptr","typeString":"struct DistributionManager.AssetData storage pointer"}},"id":791,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lastUpdateTimestamp","nodeType":"MemberAccess","referencedDeclaration":581,"src":"3390:31:6","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"VariableDeclarationStatement","src":"3360:61:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":793,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3432:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"3432:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":795,"name":"lastUpdateTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"3451:19:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"3432:38:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":800,"nodeType":"IfStatement","src":"3428:74:6","trueBody":{"id":799,"nodeType":"Block","src":"3472:30:6","statements":[{"expression":{"id":797,"name":"oldIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"3487:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":777,"id":798,"nodeType":"Return","src":"3480:15:6"}]}},{"assignments":[802],"declarations":[{"constant":false,"id":802,"mutability":"mutable","name":"newIndex","nodeType":"VariableDeclaration","scope":862,"src":"3508:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":801,"name":"uint256","nodeType":"ElementaryTypeName","src":"3508:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":809,"initialValue":{"arguments":[{"id":804,"name":"oldIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"3548:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":805,"name":"emissionPerSecond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"3558:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":806,"name":"lastUpdateTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"3577:19:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"id":807,"name":"totalStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"3598:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":803,"name":"_getAssetIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"3533:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint128,uint256) view returns (uint256)"}},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3533:77:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3508:102:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":810,"name":"newIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"3621:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":811,"name":"oldIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"3633:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3621:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":858,"nodeType":"Block","src":"3942:72:6","statements":[{"expression":{"id":856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":848,"name":"assetConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"3950:11:6","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$586_storage_ptr","typeString":"struct DistributionManager.AssetData storage pointer"}},"id":850,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"lastUpdateTimestamp","nodeType":"MemberAccess","referencedDeclaration":581,"src":"3950:31:6","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":853,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3991:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"3991:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3984:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":851,"name":"uint40","nodeType":"ElementaryTypeName","src":"3984:6:6","typeDescriptions":{}}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3984:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"3950:57:6","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"id":857,"nodeType":"ExpressionStatement","src":"3950:57:6"}]},"id":859,"nodeType":"IfStatement","src":"3617:397:6","trueBody":{"id":847,"nodeType":"Block","src":"3643:293:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":816,"name":"newIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"3667:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3659:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":814,"name":"uint104","nodeType":"ElementaryTypeName","src":"3659:7:6","typeDescriptions":{}}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3659:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":818,"name":"newIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"3680:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3659:29:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e646578206f766572666c6f77","id":820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3690:16:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_88066702ff2a817045c06422ff60e138f1b9ed6ff5eae8db2038ccb44cf1a522","typeString":"literal_string \"Index overflow\""},"value":"Index overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_88066702ff2a817045c06422ff60e138f1b9ed6ff5eae8db2038ccb44cf1a522","typeString":"literal_string \"Index overflow\""}],"id":813,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3651:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3651:56:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":822,"nodeType":"ExpressionStatement","src":"3651:56:6"},{"expression":{"id":830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":823,"name":"assetConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"3780:11:6","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$586_storage_ptr","typeString":"struct DistributionManager.AssetData storage pointer"}},"id":825,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"index","nodeType":"MemberAccess","referencedDeclaration":579,"src":"3780:17:6","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":828,"name":"newIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"3808:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3800:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":826,"name":"uint104","nodeType":"ElementaryTypeName","src":"3800:7:6","typeDescriptions":{}}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3800:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"3780:37:6","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"id":831,"nodeType":"ExpressionStatement","src":"3780:37:6"},{"expression":{"id":840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":832,"name":"assetConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"3825:11:6","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$586_storage_ptr","typeString":"struct DistributionManager.AssetData storage pointer"}},"id":834,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"lastUpdateTimestamp","nodeType":"MemberAccess","referencedDeclaration":581,"src":"3825:31:6","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":837,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3866:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"3866:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3859:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":835,"name":"uint40","nodeType":"ElementaryTypeName","src":"3859:6:6","typeDescriptions":{}}},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3859:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"3825:57:6","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"id":841,"nodeType":"ExpressionStatement","src":"3825:57:6"},{"eventCall":{"arguments":[{"id":843,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"3913:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":844,"name":"newIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"3920:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":842,"name":"AssetIndexUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"3895:17:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3895:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":846,"nodeType":"EmitStatement","src":"3890:39:6"}]}},{"expression":{"id":860,"name":"newIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"4027:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":777,"id":861,"nodeType":"Return","src":"4020:15:6"}]},"documentation":{"id":767,"nodeType":"StructuredDocumentation","src":"2764:337:6","text":" @dev Updates the state of one distribution, mainly rewards index and timestamp\n @param asset The address of the asset being updated\n @param assetConfig Storage pointer to the distribution's config\n @param totalStaked Current total of staked assets for this distribution\n @return The new distribution index*"},"implemented":true,"kind":"function","modifiers":[],"name":"_updateAssetStateInternal","parameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":769,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":863,"src":"3144:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":768,"name":"address","nodeType":"ElementaryTypeName","src":"3144:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":771,"mutability":"mutable","name":"assetConfig","nodeType":"VariableDeclaration","scope":863,"src":"3163:29:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$586_storage_ptr","typeString":"struct DistributionManager.AssetData"},"typeName":{"id":770,"name":"AssetData","nodeType":"UserDefinedTypeName","referencedDeclaration":586,"src":"3163:9:6","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$586_storage_ptr","typeString":"struct DistributionManager.AssetData"}},"visibility":"internal"},{"constant":false,"id":773,"mutability":"mutable","name":"totalStaked","nodeType":"VariableDeclaration","scope":863,"src":"3198:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":772,"name":"uint256","nodeType":"ElementaryTypeName","src":"3198:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3138:83:6"},"returnParameters":{"id":777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":776,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":863,"src":"3240:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":775,"name":"uint256","nodeType":"ElementaryTypeName","src":"3240:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3239:9:6"},"scope":1166,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":937,"nodeType":"FunctionDefinition","src":"4445:641:6","nodes":[],"body":{"id":936,"nodeType":"Block","src":"4598:488:6","nodes":[],"statements":[{"assignments":[878],"declarations":[{"constant":false,"id":878,"mutability":"mutable","name":"assetData","nodeType":"VariableDeclaration","scope":936,"src":"4604:27:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$586_storage_ptr","typeString":"struct DistributionManager.AssetData"},"typeName":{"id":877,"name":"AssetData","nodeType":"UserDefinedTypeName","referencedDeclaration":586,"src":"4604:9:6","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$586_storage_ptr","typeString":"struct DistributionManager.AssetData"}},"visibility":"internal"}],"id":882,"initialValue":{"baseExpression":{"id":879,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"4634:6:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AssetData_$586_storage_$","typeString":"mapping(address => struct DistributionManager.AssetData storage ref)"}},"id":881,"indexExpression":{"id":880,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"4641:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4634:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$586_storage","typeString":"struct DistributionManager.AssetData storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4604:43:6"},{"assignments":[884],"declarations":[{"constant":false,"id":884,"mutability":"mutable","name":"userIndex","nodeType":"VariableDeclaration","scope":936,"src":"4653:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":883,"name":"uint256","nodeType":"ElementaryTypeName","src":"4653:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":889,"initialValue":{"baseExpression":{"expression":{"id":885,"name":"assetData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"4673:9:6","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$586_storage_ptr","typeString":"struct DistributionManager.AssetData storage pointer"}},"id":886,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"users","nodeType":"MemberAccess","referencedDeclaration":585,"src":"4673:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":888,"indexExpression":{"id":887,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"4689:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4673:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4653:41:6"},{"assignments":[891],"declarations":[{"constant":false,"id":891,"mutability":"mutable","name":"accruedRewards","nodeType":"VariableDeclaration","scope":936,"src":"4700:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":890,"name":"uint256","nodeType":"ElementaryTypeName","src":"4700:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":893,"initialValue":{"hexValue":"30","id":892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4725:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4700:26:6"},{"assignments":[895],"declarations":[{"constant":false,"id":895,"mutability":"mutable","name":"newIndex","nodeType":"VariableDeclaration","scope":936,"src":"4733:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":894,"name":"uint256","nodeType":"ElementaryTypeName","src":"4733:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":901,"initialValue":{"arguments":[{"id":897,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"4778:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":898,"name":"assetData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"4785:9:6","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$586_storage_ptr","typeString":"struct DistributionManager.AssetData storage pointer"}},{"id":899,"name":"totalStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"4796:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_AssetData_$586_storage_ptr","typeString":"struct DistributionManager.AssetData storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":896,"name":"_updateAssetStateInternal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"4752:25:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_struct$_AssetData_$586_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,struct DistributionManager.AssetData storage pointer,uint256) returns (uint256)"}},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4752:56:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4733:75:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":902,"name":"userIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"4819:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":903,"name":"newIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"4832:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4819:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":933,"nodeType":"IfStatement","src":"4815:239:6","trueBody":{"id":932,"nodeType":"Block","src":"4842:212:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":905,"name":"stakedByUser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"4854:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4870:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4854:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":917,"nodeType":"IfStatement","src":"4850:105:6","trueBody":{"id":916,"nodeType":"Block","src":"4873:82:6","statements":[{"expression":{"id":914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":908,"name":"accruedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"4883:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":910,"name":"stakedByUser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"4912:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":911,"name":"newIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"4926:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":912,"name":"userIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"4936:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":909,"name":"_getRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"4900:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4900:46:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4883:63:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":915,"nodeType":"ExpressionStatement","src":"4883:63:6"}]}},{"expression":{"id":924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":918,"name":"assetData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"4963:9:6","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$586_storage_ptr","typeString":"struct DistributionManager.AssetData storage pointer"}},"id":921,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"users","nodeType":"MemberAccess","referencedDeclaration":585,"src":"4963:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":922,"indexExpression":{"id":920,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"4979:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4963:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":923,"name":"newIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"4987:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4963:32:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":925,"nodeType":"ExpressionStatement","src":"4963:32:6"},{"eventCall":{"arguments":[{"id":927,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"5025:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":928,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"5031:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":929,"name":"newIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"5038:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":926,"name":"UserIndexUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"5008:16:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5008:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":931,"nodeType":"EmitStatement","src":"5003:44:6"}]}},{"expression":{"id":934,"name":"accruedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"5067:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":876,"id":935,"nodeType":"Return","src":"5060:21:6"}]},"documentation":{"id":864,"nodeType":"StructuredDocumentation","src":"4044:398:6","text":" @dev Updates the state of an user in a distribution\n @param user The user's address\n @param asset The address of the reference asset of the distribution\n @param stakedByUser Amount of tokens staked by the user in the distribution at the moment\n @param totalStaked Total tokens staked in the distribution\n @return The accrued rewards for the user until the moment*"},"implemented":true,"kind":"function","modifiers":[],"name":"_updateUserAssetInternal","parameters":{"id":873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":866,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":937,"src":"4484:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":865,"name":"address","nodeType":"ElementaryTypeName","src":"4484:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":868,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":937,"src":"4502:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":867,"name":"address","nodeType":"ElementaryTypeName","src":"4502:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":870,"mutability":"mutable","name":"stakedByUser","nodeType":"VariableDeclaration","scope":937,"src":"4521:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":869,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":872,"mutability":"mutable","name":"totalStaked","nodeType":"VariableDeclaration","scope":937,"src":"4547:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":871,"name":"uint256","nodeType":"ElementaryTypeName","src":"4547:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4478:92:6"},"returnParameters":{"id":876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":875,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":937,"src":"4589:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":874,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4588:9:6"},"scope":1166,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":989,"nodeType":"FunctionDefinition","src":"5390:461:6","nodes":[],"body":{"id":988,"nodeType":"Block","src":"5514:337:6","nodes":[],"statements":[{"assignments":[949],"declarations":[{"constant":false,"id":949,"mutability":"mutable","name":"accruedRewards","nodeType":"VariableDeclaration","scope":988,"src":"5520:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":948,"name":"uint256","nodeType":"ElementaryTypeName","src":"5520:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":951,"initialValue":{"hexValue":"30","id":950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5545:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5520:26:6"},{"body":{"id":984,"nodeType":"Block","src":"5597:222:6","statements":[{"expression":{"id":982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":963,"name":"accruedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"5605:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":967,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"5686:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":968,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"5702:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$2050_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory[] memory"}},"id":970,"indexExpression":{"id":969,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"5709:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5702:9:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserStakeInput_$2050_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory"}},"id":971,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"underlyingAsset","nodeType":"MemberAccess","referencedDeclaration":2045,"src":"5702:25:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":972,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"5739:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$2050_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory[] memory"}},"id":974,"indexExpression":{"id":973,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"5746:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5739:9:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserStakeInput_$2050_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory"}},"id":975,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakedByUser","nodeType":"MemberAccess","referencedDeclaration":2047,"src":"5739:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":976,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"5773:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$2050_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory[] memory"}},"id":978,"indexExpression":{"id":977,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"5780:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5773:9:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserStakeInput_$2050_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory"}},"id":979,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"totalStaked","nodeType":"MemberAccess","referencedDeclaration":2049,"src":"5773:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":966,"name":"_updateUserAssetInternal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"5650:24:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256,uint256) returns (uint256)"}},"id":980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5650:154:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":964,"name":"accruedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"5622:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2076,"src":"5622:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5622:190:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5605:207:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":983,"nodeType":"ExpressionStatement","src":"5605:207:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":956,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"5573:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":957,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"5577:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$2050_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory[] memory"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5577:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5573:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":985,"initializationExpression":{"assignments":[953],"declarations":[{"constant":false,"id":953,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":985,"src":"5558:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":952,"name":"uint256","nodeType":"ElementaryTypeName","src":"5558:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":955,"initialValue":{"hexValue":"30","id":954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5570:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5558:13:6"},"loopExpression":{"expression":{"id":961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5592:3:6","subExpression":{"id":960,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"5592:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":962,"nodeType":"ExpressionStatement","src":"5592:3:6"},"nodeType":"ForStatement","src":"5553:266:6"},{"expression":{"id":986,"name":"accruedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"5832:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":947,"id":987,"nodeType":"Return","src":"5825:21:6"}]},"documentation":{"id":938,"nodeType":"StructuredDocumentation","src":"5090:297:6","text":" @dev Used by \"frontend\" stake contracts to update the data of an user when claiming rewards from there\n @param user The address of the user\n @param stakes List of structs of the user data related with his stake\n @return The accrued rewards for the user until the moment*"},"implemented":true,"kind":"function","modifiers":[],"name":"_claimRewards","parameters":{"id":944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":940,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":989,"src":"5413:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":939,"name":"address","nodeType":"ElementaryTypeName","src":"5413:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":943,"mutability":"mutable","name":"stakes","nodeType":"VariableDeclaration","scope":989,"src":"5427:48:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$2050_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput[]"},"typeName":{"baseType":{"id":941,"name":"DistributionTypes.UserStakeInput","nodeType":"UserDefinedTypeName","referencedDeclaration":2050,"src":"5427:32:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserStakeInput_$2050_storage_ptr","typeString":"struct DistributionTypes.UserStakeInput"}},"id":942,"nodeType":"ArrayTypeName","src":"5427:34:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$2050_storage_$dyn_storage_ptr","typeString":"struct DistributionTypes.UserStakeInput[]"}},"visibility":"internal"}],"src":"5412:64:6"},"returnParameters":{"id":947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":946,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":989,"src":"5503:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":945,"name":"uint256","nodeType":"ElementaryTypeName","src":"5503:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5502:9:6"},"scope":1166,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":1061,"nodeType":"FunctionDefinition","src":"6124:675:6","nodes":[],"body":{"id":1060,"nodeType":"Block","src":"6264:535:6","nodes":[],"statements":[{"assignments":[1001],"declarations":[{"constant":false,"id":1001,"mutability":"mutable","name":"accruedRewards","nodeType":"VariableDeclaration","scope":1060,"src":"6270:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1000,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1003,"initialValue":{"hexValue":"30","id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6295:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6270:26:6"},{"body":{"id":1056,"nodeType":"Block","src":"6347:421:6","statements":[{"assignments":[1016],"declarations":[{"constant":false,"id":1016,"mutability":"mutable","name":"assetConfig","nodeType":"VariableDeclaration","scope":1056,"src":"6355:29:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$586_storage_ptr","typeString":"struct DistributionManager.AssetData"},"typeName":{"id":1015,"name":"AssetData","nodeType":"UserDefinedTypeName","referencedDeclaration":586,"src":"6355:9:6","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$586_storage_ptr","typeString":"struct DistributionManager.AssetData"}},"visibility":"internal"}],"id":1023,"initialValue":{"baseExpression":{"id":1017,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"6387:6:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AssetData_$586_storage_$","typeString":"mapping(address => struct DistributionManager.AssetData storage ref)"}},"id":1022,"indexExpression":{"expression":{"baseExpression":{"id":1018,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"6394:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$2050_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory[] memory"}},"id":1020,"indexExpression":{"id":1019,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"6401:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6394:9:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserStakeInput_$2050_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory"}},"id":1021,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"underlyingAsset","nodeType":"MemberAccess","referencedDeclaration":2045,"src":"6394:25:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6387:33:6","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$586_storage","typeString":"struct DistributionManager.AssetData storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6355:65:6"},{"assignments":[1025],"declarations":[{"constant":false,"id":1025,"mutability":"mutable","name":"assetIndex","nodeType":"VariableDeclaration","scope":1056,"src":"6428:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1024,"name":"uint256","nodeType":"ElementaryTypeName","src":"6428:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1038,"initialValue":{"arguments":[{"expression":{"id":1027,"name":"assetConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"6483:11:6","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$586_storage_ptr","typeString":"struct DistributionManager.AssetData storage pointer"}},"id":1028,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"index","nodeType":"MemberAccess","referencedDeclaration":579,"src":"6483:17:6","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},{"expression":{"id":1029,"name":"assetConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"6512:11:6","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$586_storage_ptr","typeString":"struct DistributionManager.AssetData storage pointer"}},"id":1030,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"emissionPerSecond","nodeType":"MemberAccess","referencedDeclaration":577,"src":"6512:29:6","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},{"expression":{"id":1031,"name":"assetConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"6553:11:6","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$586_storage_ptr","typeString":"struct DistributionManager.AssetData storage pointer"}},"id":1032,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lastUpdateTimestamp","nodeType":"MemberAccess","referencedDeclaration":581,"src":"6553:31:6","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},{"expression":{"baseExpression":{"id":1033,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"6596:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$2050_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory[] memory"}},"id":1035,"indexExpression":{"id":1034,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"6603:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6596:9:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserStakeInput_$2050_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory"}},"id":1036,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"totalStaked","nodeType":"MemberAccess","referencedDeclaration":2049,"src":"6596:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint104","typeString":"uint104"},{"typeIdentifier":"t_uint104","typeString":"uint104"},{"typeIdentifier":"t_uint40","typeString":"uint40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1026,"name":"_getAssetIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"6457:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint128,uint256) view returns (uint256)"}},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6457:170:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6428:199:6"},{"expression":{"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1039,"name":"accruedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"6636:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":1043,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"6693:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$2050_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory[] memory"}},"id":1045,"indexExpression":{"id":1044,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"6700:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6693:9:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserStakeInput_$2050_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory"}},"id":1046,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakedByUser","nodeType":"MemberAccess","referencedDeclaration":2047,"src":"6693:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1047,"name":"assetIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"6717:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"expression":{"id":1048,"name":"assetConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"6729:11:6","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$586_storage_ptr","typeString":"struct DistributionManager.AssetData storage pointer"}},"id":1049,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"users","nodeType":"MemberAccess","referencedDeclaration":585,"src":"6729:17:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1051,"indexExpression":{"id":1050,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"6747:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6729:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1042,"name":"_getRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"6681:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6681:72:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1040,"name":"accruedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"6653:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2076,"src":"6653:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6653:108:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6636:125:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1055,"nodeType":"ExpressionStatement","src":"6636:125:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1008,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"6323:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1009,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"6327:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$2050_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory[] memory"}},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6327:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6323:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1057,"initializationExpression":{"assignments":[1005],"declarations":[{"constant":false,"id":1005,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":1057,"src":"6308:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1004,"name":"uint256","nodeType":"ElementaryTypeName","src":"6308:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1007,"initialValue":{"hexValue":"30","id":1006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6320:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6308:13:6"},"loopExpression":{"expression":{"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6342:3:6","subExpression":{"id":1012,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"6342:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1014,"nodeType":"ExpressionStatement","src":"6342:3:6"},"nodeType":"ForStatement","src":"6303:465:6"},{"expression":{"id":1058,"name":"accruedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"6780:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":999,"id":1059,"nodeType":"Return","src":"6773:21:6"}]},"documentation":{"id":990,"nodeType":"StructuredDocumentation","src":"5855:266:6","text":" @dev Return the accrued rewards for an user over a list of distribution\n @param user The address of the user\n @param stakes List of structs of the user data related with his stake\n @return The accrued rewards for the user until the moment*"},"implemented":true,"kind":"function","modifiers":[],"name":"_getUnclaimedRewards","parameters":{"id":996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":992,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":1061,"src":"6154:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":991,"name":"address","nodeType":"ElementaryTypeName","src":"6154:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":995,"mutability":"mutable","name":"stakes","nodeType":"VariableDeclaration","scope":1061,"src":"6168:48:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$2050_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput[]"},"typeName":{"baseType":{"id":993,"name":"DistributionTypes.UserStakeInput","nodeType":"UserDefinedTypeName","referencedDeclaration":2050,"src":"6168:32:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserStakeInput_$2050_storage_ptr","typeString":"struct DistributionTypes.UserStakeInput"}},"id":994,"nodeType":"ArrayTypeName","src":"6168:34:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$2050_storage_$dyn_storage_ptr","typeString":"struct DistributionTypes.UserStakeInput[]"}},"visibility":"internal"}],"src":"6153:64:6"},"returnParameters":{"id":999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":998,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1061,"src":"6253:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":997,"name":"uint256","nodeType":"ElementaryTypeName","src":"6253:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6252:9:6"},"scope":1166,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":1089,"nodeType":"FunctionDefinition","src":"7144:236:6","nodes":[],"body":{"id":1088,"nodeType":"Block","src":"7284:96:6","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1077,"name":"userIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"7339:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1075,"name":"reserveIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"7322:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2098,"src":"7322:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7322:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1073,"name":"principalUserBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"7297:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":2126,"src":"7297:24:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7297:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7353:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[{"id":1083,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"7365:9:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7357:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1081,"name":"uint256","nodeType":"ElementaryTypeName","src":"7357:7:6","typeDescriptions":{}}},"id":1084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7357:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7353:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7297:78:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1072,"id":1087,"nodeType":"Return","src":"7290:85:6"}]},"documentation":{"id":1062,"nodeType":"StructuredDocumentation","src":"6803:338:6","text":" @dev Internal function for the calculation of user's rewards on a distribution\n @param principalUserBalance Amount staked by the user on a distribution\n @param reserveIndex Current index of the distribution\n @param userIndex Index stored for the user, representation his staking moment\n @return The rewards*"},"implemented":true,"kind":"function","modifiers":[],"name":"_getRewards","parameters":{"id":1069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1064,"mutability":"mutable","name":"principalUserBalance","nodeType":"VariableDeclaration","scope":1089,"src":"7170:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1063,"name":"uint256","nodeType":"ElementaryTypeName","src":"7170:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1066,"mutability":"mutable","name":"reserveIndex","nodeType":"VariableDeclaration","scope":1089,"src":"7204:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1065,"name":"uint256","nodeType":"ElementaryTypeName","src":"7204:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1068,"mutability":"mutable","name":"userIndex","nodeType":"VariableDeclaration","scope":1089,"src":"7230:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1067,"name":"uint256","nodeType":"ElementaryTypeName","src":"7230:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7164:87:6"},"returnParameters":{"id":1072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1071,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1089,"src":"7275:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1070,"name":"uint256","nodeType":"ElementaryTypeName","src":"7275:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7274:9:6"},"scope":1166,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1165,"nodeType":"FunctionDefinition","src":"7833:738:6","nodes":[],"body":{"id":1164,"nodeType":"Block","src":"8009:562:6","nodes":[],"statements":[{"assignments":[1104],"declarations":[{"constant":false,"id":1104,"mutability":"mutable","name":"distributionEnd","nodeType":"VariableDeclaration","scope":1164,"src":"8015:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1103,"name":"uint256","nodeType":"ElementaryTypeName","src":"8015:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1106,"initialValue":{"id":1105,"name":"_distributionEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"8041:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8015:42:6"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1107,"name":"emissionPerSecond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"8074:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8095:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8074:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1110,"name":"totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"8106:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8122:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8106:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8074:49:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1114,"name":"lastUpdateTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"8133:19:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1115,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8156:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"8156:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8133:38:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8074:97:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1119,"name":"lastUpdateTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"8181:19:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1120,"name":"distributionEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"8204:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8181:38:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8074:145:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1126,"nodeType":"IfStatement","src":"8063:197:6","trueBody":{"id":1125,"nodeType":"Block","src":"8226:34:6","statements":[{"expression":{"id":1123,"name":"currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"8241:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1102,"id":1124,"nodeType":"Return","src":"8234:19:6"}]}},{"assignments":[1128],"declarations":[{"constant":false,"id":1128,"mutability":"mutable","name":"currentTimestamp","nodeType":"VariableDeclaration","scope":1164,"src":"8266:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1127,"name":"uint256","nodeType":"ElementaryTypeName","src":"8266:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1137,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1129,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8299:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"8299:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1131,"name":"distributionEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"8317:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8299:33:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":1134,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8353:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"8353:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8299:69:6","trueExpression":{"id":1133,"name":"distributionEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"8335:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8266:102:6"},{"assignments":[1139],"declarations":[{"constant":false,"id":1139,"mutability":"mutable","name":"timeDelta","nodeType":"VariableDeclaration","scope":1164,"src":"8374:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1138,"name":"uint256","nodeType":"ElementaryTypeName","src":"8374:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1144,"initialValue":{"arguments":[{"id":1142,"name":"lastUpdateTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"8415:19:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":1140,"name":"currentTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"8394:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2098,"src":"8394:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8394:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8374:61:6"},{"expression":{"arguments":[{"id":1161,"name":"currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"8546:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1158,"name":"totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"8519:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8491:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[{"id":1153,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"8503:9:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8495:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1151,"name":"uint256","nodeType":"ElementaryTypeName","src":"8495:7:6","typeDescriptions":{}}},"id":1154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8495:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8491:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1147,"name":"timeDelta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"8476:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1145,"name":"emissionPerSecond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"8454:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":2126,"src":"8454:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8454:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":2126,"src":"8454:36:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8454:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":2140,"src":"8454:64:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8454:78:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2076,"src":"8454:82:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8454:112:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1102,"id":1163,"nodeType":"Return","src":"8441:125:6"}]},"documentation":{"id":1090,"nodeType":"StructuredDocumentation","src":"7384:446:6","text":" @dev Calculates the next value of an specific distribution index, with validations\n @param currentIndex Current index of the distribution\n @param emissionPerSecond Representing the total rewards distributed per second per asset unit, on the distribution\n @param lastUpdateTimestamp Last moment this distribution was updated\n @param totalBalance of tokens considered for the distribution\n @return The new index.*"},"implemented":true,"kind":"function","modifiers":[],"name":"_getAssetIndex","parameters":{"id":1099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1092,"mutability":"mutable","name":"currentIndex","nodeType":"VariableDeclaration","scope":1165,"src":"7862:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1091,"name":"uint256","nodeType":"ElementaryTypeName","src":"7862:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1094,"mutability":"mutable","name":"emissionPerSecond","nodeType":"VariableDeclaration","scope":1165,"src":"7888:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1093,"name":"uint256","nodeType":"ElementaryTypeName","src":"7888:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1096,"mutability":"mutable","name":"lastUpdateTimestamp","nodeType":"VariableDeclaration","scope":1165,"src":"7919:27:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1095,"name":"uint128","nodeType":"ElementaryTypeName","src":"7919:7:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1098,"mutability":"mutable","name":"totalBalance","nodeType":"VariableDeclaration","scope":1165,"src":"7952:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1097,"name":"uint256","nodeType":"ElementaryTypeName","src":"7952:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7856:120:6"},"returnParameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1101,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1165,"src":"8000:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1100,"name":"uint256","nodeType":"ElementaryTypeName","src":"8000:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7999:9:6"},"scope":1166,"stateMutability":"view","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[{"baseName":{"id":571,"name":"IAaveDistributionManager","nodeType":"UserDefinedTypeName","referencedDeclaration":1875,"src":"450:24:6","typeDescriptions":{"typeIdentifier":"t_contract$_IAaveDistributionManager_$1875","typeString":"contract IAaveDistributionManager"}},"id":572,"nodeType":"InheritanceSpecifier","src":"450:24:6"}],"contractDependencies":[1875],"contractKind":"contract","documentation":{"id":570,"nodeType":"StructuredDocumentation","src":"291:126:6","text":" @title DistributionManager\n @notice Accounting contract to manage multiple staking distributions\n @author Aave*"},"fullyImplemented":true,"linearizedBaseContracts":[1166,1875],"name":"DistributionManager","scope":1167}],"license":"agpl-3.0"}},"contracts/incentives/StakedTokenIncentivesController.sol":{"id":7,"ast":{"absolutePath":"contracts/incentives/StakedTokenIncentivesController.sol","id":1806,"exportedSymbols":{"DistributionManager":[1166],"DistributionTypes":[2051],"IAaveIncentivesController":[1994],"IERC20":[77],"IScaledBalanceToken":[2021],"IStakedTokenWithConfig":[2033],"SafeERC20":[325],"SafeMath":[2141],"StakedTokenIncentivesController":[1805],"VersionedInitializable":[560]},"nodeType":"SourceUnit","src":"37:7799:7","nodes":[{"id":1168,"nodeType":"PragmaDirective","src":"37:22:7","nodes":[],"literals":["solidity","0.7",".5"]},{"id":1169,"nodeType":"PragmaDirective","src":"60:33:7","nodes":[],"literals":["experimental","ABIEncoderV2"]},{"id":1171,"nodeType":"ImportDirective","src":"95:71:7","nodes":[],"absolutePath":"@aave/aave-stake/contracts/lib/SafeERC20.sol","file":"@aave/aave-stake/contracts/lib/SafeERC20.sol","scope":1806,"sourceUnit":326,"symbolAliases":[{"foreign":{"id":1170,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"src":"103:9:7","typeDescriptions":{}}}],"unitAlias":""},{"id":1173,"nodeType":"ImportDirective","src":"167:45:7","nodes":[],"absolutePath":"contracts/lib/SafeMath.sol","file":"../lib/SafeMath.sol","scope":1806,"sourceUnit":2142,"symbolAliases":[{"foreign":{"id":1172,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"src":"175:8:7","typeDescriptions":{}}}],"unitAlias":""},{"id":1175,"nodeType":"ImportDirective","src":"213:63:7","nodes":[],"absolutePath":"contracts/lib/DistributionTypes.sol","file":"../lib/DistributionTypes.sol","scope":1806,"sourceUnit":2052,"symbolAliases":[{"foreign":{"id":1174,"name":"DistributionTypes","nodeType":"Identifier","overloadedDeclarations":[],"src":"221:17:7","typeDescriptions":{}}}],"unitAlias":""},{"id":1177,"nodeType":"ImportDirective","src":"277:99:7","nodes":[],"absolutePath":"@aave/aave-stake/contracts/utils/VersionedInitializable.sol","file":"@aave/aave-stake/contracts/utils/VersionedInitializable.sol","scope":1806,"sourceUnit":561,"symbolAliases":[{"foreign":{"id":1176,"name":"VersionedInitializable","nodeType":"Identifier","overloadedDeclarations":[],"src":"285:22:7","typeDescriptions":{}}}],"unitAlias":""},{"id":1179,"nodeType":"ImportDirective","src":"377:62:7","nodes":[],"absolutePath":"contracts/incentives/DistributionManager.sol","file":"./DistributionManager.sol","scope":1806,"sourceUnit":1167,"symbolAliases":[{"foreign":{"id":1178,"name":"DistributionManager","nodeType":"Identifier","overloadedDeclarations":[],"src":"385:19:7","typeDescriptions":{}}}],"unitAlias":""},{"id":1181,"nodeType":"ImportDirective","src":"440:80:7","nodes":[],"absolutePath":"contracts/interfaces/IStakedTokenWithConfig.sol","file":"../interfaces/IStakedTokenWithConfig.sol","scope":1806,"sourceUnit":2034,"symbolAliases":[{"foreign":{"id":1180,"name":"IStakedTokenWithConfig","nodeType":"Identifier","overloadedDeclarations":[],"src":"448:22:7","typeDescriptions":{}}}],"unitAlias":""},{"id":1183,"nodeType":"ImportDirective","src":"521:72:7","nodes":[],"absolutePath":"@aave/aave-stake/contracts/interfaces/IERC20.sol","file":"@aave/aave-stake/contracts/interfaces/IERC20.sol","scope":1806,"sourceUnit":78,"symbolAliases":[{"foreign":{"id":1182,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"src":"529:6:7","typeDescriptions":{}}}],"unitAlias":""},{"id":1185,"nodeType":"ImportDirective","src":"594:74:7","nodes":[],"absolutePath":"contracts/interfaces/IScaledBalanceToken.sol","file":"../interfaces/IScaledBalanceToken.sol","scope":1806,"sourceUnit":2022,"symbolAliases":[{"foreign":{"id":1184,"name":"IScaledBalanceToken","nodeType":"Identifier","overloadedDeclarations":[],"src":"602:19:7","typeDescriptions":{}}}],"unitAlias":""},{"id":1187,"nodeType":"ImportDirective","src":"669:86:7","nodes":[],"absolutePath":"contracts/interfaces/IAaveIncentivesController.sol","file":"../interfaces/IAaveIncentivesController.sol","scope":1806,"sourceUnit":1995,"symbolAliases":[{"foreign":{"id":1186,"name":"IAaveIncentivesController","nodeType":"Identifier","overloadedDeclarations":[],"src":"677:25:7","typeDescriptions":{}}}],"unitAlias":""},{"id":1805,"nodeType":"ContractDefinition","src":"1115:6720:7","nodes":[{"id":1197,"nodeType":"UsingForDirective","src":"1240:27:7","nodes":[],"libraryName":{"id":1195,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":2141,"src":"1246:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$2141","typeString":"library SafeMath"}},"typeName":{"id":1196,"name":"uint256","nodeType":"ElementaryTypeName","src":"1259:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":1200,"nodeType":"UsingForDirective","src":"1270:27:7","nodes":[],"libraryName":{"id":1198,"name":"SafeERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":325,"src":"1276:9:7","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$325","typeString":"library SafeERC20"}},"typeName":{"id":1199,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":77,"src":"1290:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}}},{"id":1203,"nodeType":"VariableDeclaration","src":"1301:36:7","nodes":[],"constant":true,"functionSelector":"dde43cba","mutability":"constant","name":"REVISION","scope":1805,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1201,"name":"uint256","nodeType":"ElementaryTypeName","src":"1301:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1336:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"id":1205,"nodeType":"VariableDeclaration","src":"1342:51:7","nodes":[],"constant":false,"functionSelector":"1c39b672","mutability":"immutable","name":"STAKE_TOKEN","scope":1805,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IStakedTokenWithConfig_$2033","typeString":"contract IStakedTokenWithConfig"},"typeName":{"id":1204,"name":"IStakedTokenWithConfig","nodeType":"UserDefinedTypeName","referencedDeclaration":2033,"src":"1342:22:7","typeDescriptions":{"typeIdentifier":"t_contract$_IStakedTokenWithConfig_$2033","typeString":"contract IStakedTokenWithConfig"}},"visibility":"public"},{"id":1209,"nodeType":"VariableDeclaration","src":"1398:59:7","nodes":[],"constant":false,"mutability":"mutable","name":"_usersUnclaimedRewards","scope":1805,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1208,"keyType":{"id":1206,"name":"address","nodeType":"ElementaryTypeName","src":"1406:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1398:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1207,"name":"uint256","nodeType":"ElementaryTypeName","src":"1417:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"id":1213,"nodeType":"VariableDeclaration","src":"1662:56:7","nodes":[],"constant":false,"mutability":"mutable","name":"_authorizedClaimers","scope":1805,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":1212,"keyType":{"id":1210,"name":"address","nodeType":"ElementaryTypeName","src":"1670:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1662:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueType":{"id":1211,"name":"address","nodeType":"ElementaryTypeName","src":"1681:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"},{"id":1230,"nodeType":"ModifierDefinition","src":"1723:150:7","nodes":[],"body":{"id":1229,"nodeType":"Block","src":"1786:87:7","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1220,"name":"_authorizedClaimers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"1800:19:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1222,"indexExpression":{"id":1221,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"1820:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1800:25:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1223,"name":"claimer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"1829:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1800:36:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"434c41494d45525f554e415554484f52495a4544","id":1225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1838:22:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_dc389f9f05ed02e337a2af628240d9d635867491305ed504870102f5e0924c61","typeString":"literal_string \"CLAIMER_UNAUTHORIZED\""},"value":"CLAIMER_UNAUTHORIZED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dc389f9f05ed02e337a2af628240d9d635867491305ed504870102f5e0924c61","typeString":"literal_string \"CLAIMER_UNAUTHORIZED\""}],"id":1219,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1792:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1792:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1227,"nodeType":"ExpressionStatement","src":"1792:69:7"},{"id":1228,"nodeType":"PlaceholderStatement","src":"1867:1:7"}]},"name":"onlyAuthorizedClaimers","parameters":{"id":1218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1215,"mutability":"mutable","name":"claimer","nodeType":"VariableDeclaration","scope":1230,"src":"1755:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1214,"name":"address","nodeType":"ElementaryTypeName","src":"1755:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1217,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":1230,"src":"1772:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1216,"name":"address","nodeType":"ElementaryTypeName","src":"1772:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1754:31:7"},"virtual":false,"visibility":"internal"},{"id":1245,"nodeType":"FunctionDefinition","src":"1877:150:7","nodes":[],"body":{"id":1244,"nodeType":"Block","src":"1992:35:7","nodes":[],"statements":[{"expression":{"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1240,"name":"STAKE_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"1998:11:7","typeDescriptions":{"typeIdentifier":"t_contract$_IStakedTokenWithConfig_$2033","typeString":"contract IStakedTokenWithConfig"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1241,"name":"stakeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"2012:10:7","typeDescriptions":{"typeIdentifier":"t_contract$_IStakedTokenWithConfig_$2033","typeString":"contract IStakedTokenWithConfig"}},"src":"1998:24:7","typeDescriptions":{"typeIdentifier":"t_contract$_IStakedTokenWithConfig_$2033","typeString":"contract IStakedTokenWithConfig"}},"id":1243,"nodeType":"ExpressionStatement","src":"1998:24:7"}]},"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1237,"name":"emissionManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"1973:15:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1238,"modifierName":{"id":1236,"name":"DistributionManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"1953:19:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_DistributionManager_$1166_$","typeString":"type(contract DistributionManager)"}},"nodeType":"ModifierInvocation","src":"1953:36:7"}],"name":"","parameters":{"id":1235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1232,"mutability":"mutable","name":"stakeToken","nodeType":"VariableDeclaration","scope":1245,"src":"1889:33:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IStakedTokenWithConfig_$2033","typeString":"contract IStakedTokenWithConfig"},"typeName":{"id":1231,"name":"IStakedTokenWithConfig","nodeType":"UserDefinedTypeName","referencedDeclaration":2033,"src":"1889:22:7","typeDescriptions":{"typeIdentifier":"t_contract$_IStakedTokenWithConfig_$2033","typeString":"contract IStakedTokenWithConfig"}},"visibility":"internal"},{"constant":false,"id":1234,"mutability":"mutable","name":"emissionManager","nodeType":"VariableDeclaration","scope":1245,"src":"1924:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1233,"name":"address","nodeType":"ElementaryTypeName","src":"1924:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1888:60:7"},"returnParameters":{"id":1239,"nodeType":"ParameterList","parameters":[],"src":"1992:0:7"},"scope":1805,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":1271,"nodeType":"FunctionDefinition","src":"2180:216:7","nodes":[],"body":{"id":1270,"nodeType":"Block","src":"2248:148:7","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"id":1261,"name":"STAKE_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"2359:11:7","typeDescriptions":{"typeIdentifier":"t_contract$_IStakedTokenWithConfig_$2033","typeString":"contract IStakedTokenWithConfig"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IStakedTokenWithConfig_$2033","typeString":"contract IStakedTokenWithConfig"}],"id":1260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2351:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1259,"name":"address","nodeType":"ElementaryTypeName","src":"2351:7:7","typeDescriptions":{}}},"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2351:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":1265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2378:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1264,"name":"uint256","nodeType":"ElementaryTypeName","src":"2378:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1263,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2373:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2373:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2373:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1254,"name":"STAKE_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"2311:11:7","typeDescriptions":{"typeIdentifier":"t_contract$_IStakedTokenWithConfig_$2033","typeString":"contract IStakedTokenWithConfig"}},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"STAKED_TOKEN","nodeType":"MemberAccess","referencedDeclaration":2032,"src":"2311:24:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2311:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1253,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"2304:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$77_$","typeString":"type(contract IERC20)"}},"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2304:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeApprove","nodeType":"MemberAccess","referencedDeclaration":272,"src":"2304:46:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$","typeString":"function (contract IERC20,address,uint256)"}},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2304:87:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1269,"nodeType":"ExpressionStatement","src":"2304:87:7"}]},"documentation":{"id":1246,"nodeType":"StructuredDocumentation","src":"2031:146:7","text":" @dev Initialize IStakedTokenIncentivesController\n @param addressesProvider the address of the corresponding addresses provider*"},"functionSelector":"c4d66de8","implemented":true,"kind":"function","modifiers":[{"id":1251,"modifierName":{"id":1250,"name":"initializer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"2236:11:7","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"2236:11:7"}],"name":"initialize","parameters":{"id":1249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1248,"mutability":"mutable","name":"addressesProvider","nodeType":"VariableDeclaration","scope":1271,"src":"2200:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1247,"name":"address","nodeType":"ElementaryTypeName","src":"2200:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2199:27:7"},"returnParameters":{"id":1252,"nodeType":"ParameterList","parameters":[],"src":"2248:0:7"},"scope":1805,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1369,"nodeType":"FunctionDefinition","src":"2444:765:7","nodes":[],"body":{"id":1368,"nodeType":"Block","src":"2587:622:7","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1285,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"2601:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2601:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1287,"name":"emissionsPerSecond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"2618:18:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2618:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2601:42:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49445f434f4e46494755524154494f4e","id":1290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2645:23:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_6959a97277e640037a0b87fbc8f4c35f54cb176c97a67a1f1334c0edec62895f","typeString":"literal_string \"INVALID_CONFIGURATION\""},"value":"INVALID_CONFIGURATION"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6959a97277e640037a0b87fbc8f4c35f54cb176c97a67a1f1334c0edec62895f","typeString":"literal_string \"INVALID_CONFIGURATION\""}],"id":1284,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2593:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2593:76:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1292,"nodeType":"ExpressionStatement","src":"2593:76:7"},{"assignments":[1297],"declarations":[{"constant":false,"id":1297,"mutability":"mutable","name":"assetsConfig","nodeType":"VariableDeclaration","scope":1368,"src":"2676:56:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetConfigInput_$2043_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.AssetConfigInput[]"},"typeName":{"baseType":{"id":1295,"name":"DistributionTypes.AssetConfigInput","nodeType":"UserDefinedTypeName","referencedDeclaration":2043,"src":"2676:34:7","typeDescriptions":{"typeIdentifier":"t_struct$_AssetConfigInput_$2043_storage_ptr","typeString":"struct DistributionTypes.AssetConfigInput"}},"id":1296,"nodeType":"ArrayTypeName","src":"2676:36:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetConfigInput_$2043_storage_$dyn_storage_ptr","typeString":"struct DistributionTypes.AssetConfigInput[]"}},"visibility":"internal"}],"id":1304,"initialValue":{"arguments":[{"expression":{"id":1301,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"2782:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2782:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2741:40:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_AssetConfigInput_$2043_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct DistributionTypes.AssetConfigInput memory[] memory)"},"typeName":{"baseType":{"id":1298,"name":"DistributionTypes.AssetConfigInput","nodeType":"UserDefinedTypeName","referencedDeclaration":2043,"src":"2745:34:7","typeDescriptions":{"typeIdentifier":"t_struct$_AssetConfigInput_$2043_storage_ptr","typeString":"struct DistributionTypes.AssetConfigInput"}},"id":1299,"nodeType":"ArrayTypeName","src":"2745:36:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetConfigInput_$2043_storage_$dyn_storage_ptr","typeString":"struct DistributionTypes.AssetConfigInput[]"}}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2741:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetConfigInput_$2043_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.AssetConfigInput memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2676:120:7"},{"body":{"id":1362,"nodeType":"Block","src":"2847:322:7","statements":[{"expression":{"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1316,"name":"assetsConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"2855:12:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetConfigInput_$2043_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.AssetConfigInput memory[] memory"}},"id":1318,"indexExpression":{"id":1317,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"2868:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2855:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_AssetConfigInput_$2043_memory_ptr","typeString":"struct DistributionTypes.AssetConfigInput memory"}},"id":1319,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"underlyingAsset","nodeType":"MemberAccess","referencedDeclaration":2042,"src":"2855:31:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1320,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"2889:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1322,"indexExpression":{"id":1321,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"2896:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2889:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2855:43:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1324,"nodeType":"ExpressionStatement","src":"2855:43:7"},{"expression":{"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1325,"name":"assetsConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"2906:12:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetConfigInput_$2043_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.AssetConfigInput memory[] memory"}},"id":1327,"indexExpression":{"id":1326,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"2919:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2906:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_AssetConfigInput_$2043_memory_ptr","typeString":"struct DistributionTypes.AssetConfigInput memory"}},"id":1328,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"emissionPerSecond","nodeType":"MemberAccess","referencedDeclaration":2038,"src":"2906:33:7","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":1331,"name":"emissionsPerSecond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"2950:18:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":1333,"indexExpression":{"id":1332,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"2969:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2950:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2942:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":1329,"name":"uint104","nodeType":"ElementaryTypeName","src":"2942:7:7","typeDescriptions":{}}},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2942:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"2906:66:7","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"id":1336,"nodeType":"ExpressionStatement","src":"2906:66:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1338,"name":"assetsConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"2989:12:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetConfigInput_$2043_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.AssetConfigInput memory[] memory"}},"id":1340,"indexExpression":{"id":1339,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"3002:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2989:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_AssetConfigInput_$2043_memory_ptr","typeString":"struct DistributionTypes.AssetConfigInput memory"}},"id":1341,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"emissionPerSecond","nodeType":"MemberAccess","referencedDeclaration":2038,"src":"2989:33:7","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"baseExpression":{"id":1342,"name":"emissionsPerSecond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"3026:18:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":1344,"indexExpression":{"id":1343,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"3045:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3026:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2989:58:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49445f434f4e46494755524154494f4e","id":1346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3049:23:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_6959a97277e640037a0b87fbc8f4c35f54cb176c97a67a1f1334c0edec62895f","typeString":"literal_string \"INVALID_CONFIGURATION\""},"value":"INVALID_CONFIGURATION"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6959a97277e640037a0b87fbc8f4c35f54cb176c97a67a1f1334c0edec62895f","typeString":"literal_string \"INVALID_CONFIGURATION\""}],"id":1337,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2981:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2981:92:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1348,"nodeType":"ExpressionStatement","src":"2981:92:7"},{"expression":{"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1349,"name":"assetsConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"3082:12:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetConfigInput_$2043_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.AssetConfigInput memory[] memory"}},"id":1351,"indexExpression":{"id":1350,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"3095:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3082:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_AssetConfigInput_$2043_memory_ptr","typeString":"struct DistributionTypes.AssetConfigInput memory"}},"id":1352,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"totalStaked","nodeType":"MemberAccess","referencedDeclaration":2040,"src":"3082:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"baseExpression":{"id":1354,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"3132:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1356,"indexExpression":{"id":1355,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"3139:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3132:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1353,"name":"IScaledBalanceToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"3112:19:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IScaledBalanceToken_$2021_$","typeString":"type(contract IScaledBalanceToken)"}},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3112:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IScaledBalanceToken_$2021","typeString":"contract IScaledBalanceToken"}},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"scaledTotalSupply","nodeType":"MemberAccess","referencedDeclaration":2020,"src":"3112:48:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3112:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3082:80:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1361,"nodeType":"ExpressionStatement","src":"3082:80:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1309,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"2823:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1310,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"2827:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2827:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2823:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1363,"initializationExpression":{"assignments":[1306],"declarations":[{"constant":false,"id":1306,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":1363,"src":"2808:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1305,"name":"uint256","nodeType":"ElementaryTypeName","src":"2808:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1308,"initialValue":{"hexValue":"30","id":1307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2820:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2808:13:7"},"loopExpression":{"expression":{"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2842:3:7","subExpression":{"id":1313,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"2842:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1315,"nodeType":"ExpressionStatement","src":"2842:3:7"},"nodeType":"ForStatement","src":"2803:366:7"},{"expression":{"arguments":[{"id":1365,"name":"assetsConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"3191:12:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetConfigInput_$2043_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.AssetConfigInput memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_AssetConfigInput_$2043_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.AssetConfigInput memory[] memory"}],"id":1364,"name":"_configureAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"3174:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_AssetConfigInput_$2043_memory_ptr_$dyn_memory_ptr_$returns$__$","typeString":"function (struct DistributionTypes.AssetConfigInput memory[] memory)"}},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3174:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1367,"nodeType":"ExpressionStatement","src":"3174:30:7"}]},"baseFunctions":[1930],"documentation":{"id":1272,"nodeType":"StructuredDocumentation","src":"2400:41:7","text":"@inheritdoc IAaveIncentivesController"},"functionSelector":"79f171b2","implemented":true,"kind":"function","modifiers":[{"id":1282,"modifierName":{"id":1281,"name":"onlyEmissionManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"2565:19:7","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"2565:19:7"}],"name":"configureAssets","overrides":{"id":1280,"nodeType":"OverrideSpecifier","overrides":[],"src":"2552:8:7"},"parameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1275,"mutability":"mutable","name":"assets","nodeType":"VariableDeclaration","scope":1369,"src":"2469:25:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1273,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1274,"nodeType":"ArrayTypeName","src":"2469:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1278,"mutability":"mutable","name":"emissionsPerSecond","nodeType":"VariableDeclaration","scope":1369,"src":"2496:37:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1276,"name":"uint256","nodeType":"ElementaryTypeName","src":"2496:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1277,"nodeType":"ArrayTypeName","src":"2496:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2468:66:7"},"returnParameters":{"id":1283,"nodeType":"ParameterList","parameters":[],"src":"2587:0:7"},"scope":1805,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1412,"nodeType":"FunctionDefinition","src":"3257:389:7","nodes":[],"body":{"id":1411,"nodeType":"Block","src":"3369:277:7","nodes":[],"statements":[{"assignments":[1381],"declarations":[{"constant":false,"id":1381,"mutability":"mutable","name":"accruedRewards","nodeType":"VariableDeclaration","scope":1411,"src":"3375:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1380,"name":"uint256","nodeType":"ElementaryTypeName","src":"3375:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1389,"initialValue":{"arguments":[{"id":1383,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"3425:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1384,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3431:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3431:10:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":1386,"name":"userBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"3443:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1387,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"3456:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1382,"name":"_updateUserAssetInternal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"3400:24:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256,uint256) returns (uint256)"}},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3400:68:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3375:93:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1390,"name":"accruedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"3478:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3496:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3478:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1410,"nodeType":"IfStatement","src":"3474:168:7","trueBody":{"id":1409,"nodeType":"Block","src":"3499:143:7","statements":[{"expression":{"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1393,"name":"_usersUnclaimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"3507:22:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1395,"indexExpression":{"id":1394,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"3530:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3507:28:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1400,"name":"accruedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"3571:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":1396,"name":"_usersUnclaimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"3538:22:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1398,"indexExpression":{"id":1397,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"3561:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3538:28:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2076,"src":"3538:32:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3538:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3507:79:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1403,"nodeType":"ExpressionStatement","src":"3507:79:7"},{"eventCall":{"arguments":[{"id":1405,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"3614:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1406,"name":"accruedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"3620:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1404,"name":"RewardsAccrued","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"3599:14:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3599:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1408,"nodeType":"EmitStatement","src":"3594:41:7"}]}}]},"baseFunctions":[1940],"documentation":{"id":1370,"nodeType":"StructuredDocumentation","src":"3213:41:7","text":"@inheritdoc IAaveIncentivesController"},"functionSelector":"31873e2e","implemented":true,"kind":"function","modifiers":[],"name":"handleAction","overrides":{"id":1378,"nodeType":"OverrideSpecifier","overrides":[],"src":"3360:8:7"},"parameters":{"id":1377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1372,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":1412,"src":"3284:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1371,"name":"address","nodeType":"ElementaryTypeName","src":"3284:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1374,"mutability":"mutable","name":"totalSupply","nodeType":"VariableDeclaration","scope":1412,"src":"3302:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1373,"name":"uint256","nodeType":"ElementaryTypeName","src":"3302:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1376,"mutability":"mutable","name":"userBalance","nodeType":"VariableDeclaration","scope":1412,"src":"3327:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1375,"name":"uint256","nodeType":"ElementaryTypeName","src":"3327:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3278:72:7"},"returnParameters":{"id":1379,"nodeType":"ParameterList","parameters":[],"src":"3369:0:7"},"scope":1805,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1496,"nodeType":"FunctionDefinition","src":"3694:669:7","nodes":[],"body":{"id":1495,"nodeType":"Block","src":"3821:542:7","nodes":[],"statements":[{"assignments":[1425],"declarations":[{"constant":false,"id":1425,"mutability":"mutable","name":"unclaimedRewards","nodeType":"VariableDeclaration","scope":1495,"src":"3827:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1424,"name":"uint256","nodeType":"ElementaryTypeName","src":"3827:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1429,"initialValue":{"baseExpression":{"id":1426,"name":"_usersUnclaimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"3854:22:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1428,"indexExpression":{"id":1427,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"3877:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3854:28:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3827:55:7"},{"assignments":[1434],"declarations":[{"constant":false,"id":1434,"mutability":"mutable","name":"userState","nodeType":"VariableDeclaration","scope":1495,"src":"3889:51:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$2050_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput[]"},"typeName":{"baseType":{"id":1432,"name":"DistributionTypes.UserStakeInput","nodeType":"UserDefinedTypeName","referencedDeclaration":2050,"src":"3889:32:7","typeDescriptions":{"typeIdentifier":"t_struct$_UserStakeInput_$2050_storage_ptr","typeString":"struct DistributionTypes.UserStakeInput"}},"id":1433,"nodeType":"ArrayTypeName","src":"3889:34:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$2050_storage_$dyn_storage_ptr","typeString":"struct DistributionTypes.UserStakeInput[]"}},"visibility":"internal"}],"id":1441,"initialValue":{"arguments":[{"expression":{"id":1438,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"3988:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3988:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3949:38:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_UserStakeInput_$2050_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct DistributionTypes.UserStakeInput memory[] memory)"},"typeName":{"baseType":{"id":1435,"name":"DistributionTypes.UserStakeInput","nodeType":"UserDefinedTypeName","referencedDeclaration":2050,"src":"3953:32:7","typeDescriptions":{"typeIdentifier":"t_struct$_UserStakeInput_$2050_storage_ptr","typeString":"struct DistributionTypes.UserStakeInput"}},"id":1436,"nodeType":"ArrayTypeName","src":"3953:34:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$2050_storage_$dyn_storage_ptr","typeString":"struct DistributionTypes.UserStakeInput[]"}}},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3949:53:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$2050_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3889:113:7"},{"body":{"id":1481,"nodeType":"Block","src":"4052:194:7","statements":[{"expression":{"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1453,"name":"userState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"4060:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$2050_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory[] memory"}},"id":1455,"indexExpression":{"id":1454,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"4070:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4060:12:7","typeDescriptions":{"typeIdentifier":"t_struct$_UserStakeInput_$2050_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory"}},"id":1456,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"underlyingAsset","nodeType":"MemberAccess","referencedDeclaration":2045,"src":"4060:28:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1457,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"4091:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1459,"indexExpression":{"id":1458,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"4098:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4091:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4060:40:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1461,"nodeType":"ExpressionStatement","src":"4060:40:7"},{"expression":{"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"expression":{"baseExpression":{"id":1462,"name":"userState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"4109:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$2050_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory[] memory"}},"id":1464,"indexExpression":{"id":1463,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"4119:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4109:12:7","typeDescriptions":{"typeIdentifier":"t_struct$_UserStakeInput_$2050_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory"}},"id":1465,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakedByUser","nodeType":"MemberAccess","referencedDeclaration":2047,"src":"4109:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":1466,"name":"userState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"4136:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$2050_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory[] memory"}},"id":1468,"indexExpression":{"id":1467,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"4146:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4136:12:7","typeDescriptions":{"typeIdentifier":"t_struct$_UserStakeInput_$2050_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory"}},"id":1469,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"totalStaked","nodeType":"MemberAccess","referencedDeclaration":2049,"src":"4136:24:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1470,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"4108:53:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1477,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"4234:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"baseExpression":{"id":1472,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"4184:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1474,"indexExpression":{"id":1473,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"4191:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4184:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1471,"name":"IScaledBalanceToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"4164:19:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IScaledBalanceToken_$2021_$","typeString":"type(contract IScaledBalanceToken)"}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4164:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IScaledBalanceToken_$2021","typeString":"contract IScaledBalanceToken"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getScaledUserBalanceAndSupply","nodeType":"MemberAccess","referencedDeclaration":2014,"src":"4164:69:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$","typeString":"function (address) view external returns (uint256,uint256)"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4164:75:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"4108:131:7","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1480,"nodeType":"ExpressionStatement","src":"4108:131:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1446,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"4028:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1447,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"4032:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4032:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4028:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1482,"initializationExpression":{"assignments":[1443],"declarations":[{"constant":false,"id":1443,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":1482,"src":"4013:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1442,"name":"uint256","nodeType":"ElementaryTypeName","src":"4013:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1445,"initialValue":{"hexValue":"30","id":1444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4025:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4013:13:7"},"loopExpression":{"expression":{"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4047:3:7","subExpression":{"id":1450,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"4047:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1452,"nodeType":"ExpressionStatement","src":"4047:3:7"},"nodeType":"ForStatement","src":"4008:238:7"},{"expression":{"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1483,"name":"unclaimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"4251:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":1487,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"4312:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1488,"name":"userState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"4318:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$2050_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$2050_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory[] memory"}],"id":1486,"name":"_getUnclaimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"4291:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_array$_t_struct$_UserStakeInput_$2050_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,struct DistributionTypes.UserStakeInput memory[] memory) view returns (uint256)"}},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4291:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1484,"name":"unclaimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"4270:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2076,"src":"4270:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4270:59:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4251:78:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1492,"nodeType":"ExpressionStatement","src":"4251:78:7"},{"expression":{"id":1493,"name":"unclaimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"4342:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1423,"id":1494,"nodeType":"Return","src":"4335:23:7"}]},"baseFunctions":[1951],"documentation":{"id":1413,"nodeType":"StructuredDocumentation","src":"3650:41:7","text":"@inheritdoc IAaveIncentivesController"},"functionSelector":"8b599f26","implemented":true,"kind":"function","modifiers":[],"name":"getRewardsBalance","overrides":{"id":1420,"nodeType":"OverrideSpecifier","overrides":[],"src":"3788:8:7"},"parameters":{"id":1419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1416,"mutability":"mutable","name":"assets","nodeType":"VariableDeclaration","scope":1496,"src":"3721:25:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1414,"name":"address","nodeType":"ElementaryTypeName","src":"3721:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1415,"nodeType":"ArrayTypeName","src":"3721:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1418,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":1496,"src":"3748:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1417,"name":"address","nodeType":"ElementaryTypeName","src":"3748:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3720:41:7"},"returnParameters":{"id":1423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1422,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1496,"src":"3810:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1421,"name":"uint256","nodeType":"ElementaryTypeName","src":"3810:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3809:9:7"},"scope":1805,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1531,"nodeType":"FunctionDefinition","src":"4411:257:7","nodes":[],"body":{"id":1530,"nodeType":"Block","src":"4540:128:7","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1511,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"4554:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4568:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4560:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1512,"name":"address","nodeType":"ElementaryTypeName","src":"4560:7:7","typeDescriptions":{}}},"id":1515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4560:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"4554:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49445f544f5f41444452455353","id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4572:20:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_60a6ecd9d15a2e4ae360b5943de5e7d94204c8fa7a9b93d3208a26418697ceb3","typeString":"literal_string \"INVALID_TO_ADDRESS\""},"value":"INVALID_TO_ADDRESS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_60a6ecd9d15a2e4ae360b5943de5e7d94204c8fa7a9b93d3208a26418697ceb3","typeString":"literal_string \"INVALID_TO_ADDRESS\""}],"id":1510,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4546:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4546:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1519,"nodeType":"ExpressionStatement","src":"4546:47:7"},{"expression":{"arguments":[{"id":1521,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"4620:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},{"id":1522,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"4628:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1523,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4636:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4636:10:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"expression":{"id":1525,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4648:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4648:10:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":1527,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"4660:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1520,"name":"_claimRewards","nodeType":"Identifier","overloadedDeclarations":[1804,989],"referencedDeclaration":1804,"src":"4606:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_address_$dyn_calldata_ptr_$_t_uint256_$_t_address_$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address[] calldata,uint256,address,address,address) returns (uint256)"}},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4606:57:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1509,"id":1529,"nodeType":"Return","src":"4599:64:7"}]},"baseFunctions":[1964],"documentation":{"id":1497,"nodeType":"StructuredDocumentation","src":"4367:41:7","text":"@inheritdoc IAaveIncentivesController"},"functionSelector":"3111e7b3","implemented":true,"kind":"function","modifiers":[],"name":"claimRewards","overrides":{"id":1506,"nodeType":"OverrideSpecifier","overrides":[],"src":"4513:8:7"},"parameters":{"id":1505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1500,"mutability":"mutable","name":"assets","nodeType":"VariableDeclaration","scope":1531,"src":"4438:25:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1498,"name":"address","nodeType":"ElementaryTypeName","src":"4438:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1499,"nodeType":"ArrayTypeName","src":"4438:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1502,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1531,"src":"4469:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1501,"name":"uint256","nodeType":"ElementaryTypeName","src":"4469:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1504,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1531,"src":"4489:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1503,"name":"address","nodeType":"ElementaryTypeName","src":"4489:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4432:71:7"},"returnParameters":{"id":1509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1508,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1531,"src":"4531:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1507,"name":"uint256","nodeType":"ElementaryTypeName","src":"4531:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4530:9:7"},"scope":1805,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1582,"nodeType":"FunctionDefinition","src":"4716:375:7","nodes":[],"body":{"id":1581,"nodeType":"Block","src":"4912:179:7","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1553,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"4926:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4942:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4934:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1554,"name":"address","nodeType":"ElementaryTypeName","src":"4934:7:7","typeDescriptions":{}}},"id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4934:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"4926:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49445f555345525f41444452455353","id":1559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4946:22:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_4058a4fa702d397682b400d1a2d7894f822738ac481455440aeb37a04a780eca","typeString":"literal_string \"INVALID_USER_ADDRESS\""},"value":"INVALID_USER_ADDRESS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4058a4fa702d397682b400d1a2d7894f822738ac481455440aeb37a04a780eca","typeString":"literal_string \"INVALID_USER_ADDRESS\""}],"id":1552,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4918:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4918:51:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1561,"nodeType":"ExpressionStatement","src":"4918:51:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1563,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"4983:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4997:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4989:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1564,"name":"address","nodeType":"ElementaryTypeName","src":"4989:7:7","typeDescriptions":{}}},"id":1567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4989:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"4983:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49445f544f5f41444452455353","id":1569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5001:20:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_60a6ecd9d15a2e4ae360b5943de5e7d94204c8fa7a9b93d3208a26418697ceb3","typeString":"literal_string \"INVALID_TO_ADDRESS\""},"value":"INVALID_TO_ADDRESS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_60a6ecd9d15a2e4ae360b5943de5e7d94204c8fa7a9b93d3208a26418697ceb3","typeString":"literal_string \"INVALID_TO_ADDRESS\""}],"id":1562,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4975:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4975:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1571,"nodeType":"ExpressionStatement","src":"4975:47:7"},{"expression":{"arguments":[{"id":1573,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"5049:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},{"id":1574,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"5057:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1575,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5065:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5065:10:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":1577,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"5077:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1578,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"5083:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1572,"name":"_claimRewards","nodeType":"Identifier","overloadedDeclarations":[1804,989],"referencedDeclaration":1804,"src":"5035:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_address_$dyn_calldata_ptr_$_t_uint256_$_t_address_$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address[] calldata,uint256,address,address,address) returns (uint256)"}},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5035:51:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1551,"id":1580,"nodeType":"Return","src":"5028:58:7"}]},"baseFunctions":[1979],"documentation":{"id":1532,"nodeType":"StructuredDocumentation","src":"4672:41:7","text":"@inheritdoc IAaveIncentivesController"},"functionSelector":"6d34b96e","implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":1545,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4876:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4876:10:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":1547,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"4888:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1548,"modifierName":{"id":1544,"name":"onlyAuthorizedClaimers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"4853:22:7","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$_t_address_$","typeString":"modifier (address,address)"}},"nodeType":"ModifierInvocation","src":"4853:40:7"}],"name":"claimRewardsOnBehalf","overrides":{"id":1543,"nodeType":"OverrideSpecifier","overrides":[],"src":"4844:8:7"},"parameters":{"id":1542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1535,"mutability":"mutable","name":"assets","nodeType":"VariableDeclaration","scope":1582,"src":"4751:25:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1533,"name":"address","nodeType":"ElementaryTypeName","src":"4751:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1534,"nodeType":"ArrayTypeName","src":"4751:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1537,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1582,"src":"4782:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1536,"name":"uint256","nodeType":"ElementaryTypeName","src":"4782:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1539,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":1582,"src":"4802:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1538,"name":"address","nodeType":"ElementaryTypeName","src":"4802:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1541,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1582,"src":"4820:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1540,"name":"address","nodeType":"ElementaryTypeName","src":"4820:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4745:89:7"},"returnParameters":{"id":1551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1550,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1582,"src":"4903:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1549,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4902:9:7"},"scope":1805,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1605,"nodeType":"FunctionDefinition","src":"5458:168:7","nodes":[],"body":{"id":1604,"nodeType":"Block","src":"5546:80:7","nodes":[],"statements":[{"expression":{"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1593,"name":"_authorizedClaimers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"5552:19:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1595,"indexExpression":{"id":1594,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"5572:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5552:25:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1596,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"5580:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5552:34:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1598,"nodeType":"ExpressionStatement","src":"5552:34:7"},{"eventCall":{"arguments":[{"id":1600,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"5608:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1601,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"5614:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1599,"name":"ClaimerSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"5597:10:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5597:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1603,"nodeType":"EmitStatement","src":"5592:29:7"}]},"baseFunctions":[1912],"documentation":{"id":1583,"nodeType":"StructuredDocumentation","src":"5414:41:7","text":"@inheritdoc IAaveIncentivesController"},"functionSelector":"f5cf673b","implemented":true,"kind":"function","modifiers":[{"id":1591,"modifierName":{"id":1590,"name":"onlyEmissionManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"5526:19:7","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"5526:19:7"}],"name":"setClaimer","overrides":{"id":1589,"nodeType":"OverrideSpecifier","overrides":[],"src":"5517:8:7"},"parameters":{"id":1588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1585,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":1605,"src":"5478:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1584,"name":"address","nodeType":"ElementaryTypeName","src":"5478:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1587,"mutability":"mutable","name":"caller","nodeType":"VariableDeclaration","scope":1605,"src":"5492:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1586,"name":"address","nodeType":"ElementaryTypeName","src":"5492:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5477:30:7"},"returnParameters":{"id":1592,"nodeType":"ParameterList","parameters":[],"src":"5546:0:7"},"scope":1805,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1619,"nodeType":"FunctionDefinition","src":"5674:118:7","nodes":[],"body":{"id":1618,"nodeType":"Block","src":"5749:43:7","nodes":[],"statements":[{"expression":{"baseExpression":{"id":1614,"name":"_authorizedClaimers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"5762:19:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1616,"indexExpression":{"id":1615,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"5782:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5762:25:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1613,"id":1617,"nodeType":"Return","src":"5755:32:7"}]},"baseFunctions":[1920],"documentation":{"id":1606,"nodeType":"StructuredDocumentation","src":"5630:41:7","text":"@inheritdoc IAaveIncentivesController"},"functionSelector":"74d945ec","implemented":true,"kind":"function","modifiers":[],"name":"getClaimer","overrides":{"id":1610,"nodeType":"OverrideSpecifier","overrides":[],"src":"5722:8:7"},"parameters":{"id":1609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1608,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":1619,"src":"5694:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1607,"name":"address","nodeType":"ElementaryTypeName","src":"5694:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5693:14:7"},"returnParameters":{"id":1613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1612,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1619,"src":"5740:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1611,"name":"address","nodeType":"ElementaryTypeName","src":"5740:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5739:9:7"},"scope":1805,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1633,"nodeType":"FunctionDefinition","src":"5840:136:7","nodes":[],"body":{"id":1632,"nodeType":"Block","src":"5929:47:7","nodes":[],"statements":[{"expression":{"baseExpression":{"id":1628,"name":"_usersUnclaimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"5942:22:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1630,"indexExpression":{"id":1629,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"5965:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5942:29:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1627,"id":1631,"nodeType":"Return","src":"5935:36:7"}]},"baseFunctions":[1987],"documentation":{"id":1620,"nodeType":"StructuredDocumentation","src":"5796:41:7","text":"@inheritdoc IAaveIncentivesController"},"functionSelector":"198fa81e","implemented":true,"kind":"function","modifiers":[],"name":"getUserUnclaimedRewards","overrides":{"id":1624,"nodeType":"OverrideSpecifier","overrides":[],"src":"5902:8:7"},"parameters":{"id":1623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1622,"mutability":"mutable","name":"_user","nodeType":"VariableDeclaration","scope":1633,"src":"5873:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1621,"name":"address","nodeType":"ElementaryTypeName","src":"5873:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5872:15:7"},"returnParameters":{"id":1627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1626,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1633,"src":"5920:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1625,"name":"uint256","nodeType":"ElementaryTypeName","src":"5920:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5919:9:7"},"scope":1805,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1646,"nodeType":"FunctionDefinition","src":"6024:103:7","nodes":[],"body":{"id":1645,"nodeType":"Block","src":"6089:38:7","nodes":[],"statements":[{"expression":{"arguments":[{"id":1642,"name":"STAKE_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"6110:11:7","typeDescriptions":{"typeIdentifier":"t_contract$_IStakedTokenWithConfig_$2033","typeString":"contract IStakedTokenWithConfig"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IStakedTokenWithConfig_$2033","typeString":"contract IStakedTokenWithConfig"}],"id":1641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6102:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1640,"name":"address","nodeType":"ElementaryTypeName","src":"6102:7:7","typeDescriptions":{}}},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6102:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1639,"id":1644,"nodeType":"Return","src":"6095:27:7"}]},"baseFunctions":[1993],"documentation":{"id":1634,"nodeType":"StructuredDocumentation","src":"5980:41:7","text":"@inheritdoc IAaveIncentivesController"},"functionSelector":"99248ea7","implemented":true,"kind":"function","modifiers":[],"name":"REWARD_TOKEN","overrides":{"id":1636,"nodeType":"OverrideSpecifier","overrides":[],"src":"6062:8:7"},"parameters":{"id":1635,"nodeType":"ParameterList","parameters":[],"src":"6045:2:7"},"returnParameters":{"id":1639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1638,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1646,"src":"6080:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1637,"name":"address","nodeType":"ElementaryTypeName","src":"6080:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6079:9:7"},"scope":1805,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1656,"nodeType":"FunctionDefinition","src":"6205:90:7","nodes":[],"body":{"id":1655,"nodeType":"Block","src":"6269:26:7","nodes":[],"statements":[{"expression":{"id":1653,"name":"REVISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"6282:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1652,"id":1654,"nodeType":"Return","src":"6275:15:7"}]},"baseFunctions":[555],"documentation":{"id":1647,"nodeType":"StructuredDocumentation","src":"6131:71:7","text":" @dev returns the revision of the implementation contract"},"implemented":true,"kind":"function","modifiers":[],"name":"getRevision","overrides":{"id":1649,"nodeType":"OverrideSpecifier","overrides":[],"src":"6242:8:7"},"parameters":{"id":1648,"nodeType":"ParameterList","parameters":[],"src":"6225:2:7"},"returnParameters":{"id":1652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1651,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1656,"src":"6260:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1650,"name":"uint256","nodeType":"ElementaryTypeName","src":"6260:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6259:9:7"},"scope":1805,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":1804,"nodeType":"FunctionDefinition","src":"6617:1216:7","nodes":[],"body":{"id":1803,"nodeType":"Block","src":"6777:1056:7","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1673,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"6787:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6797:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6787:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1679,"nodeType":"IfStatement","src":"6783:40:7","trueBody":{"id":1678,"nodeType":"Block","src":"6800:23:7","statements":[{"expression":{"hexValue":"30","id":1676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6815:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1672,"id":1677,"nodeType":"Return","src":"6808:8:7"}]}},{"assignments":[1681],"declarations":[{"constant":false,"id":1681,"mutability":"mutable","name":"unclaimedRewards","nodeType":"VariableDeclaration","scope":1803,"src":"6828:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1680,"name":"uint256","nodeType":"ElementaryTypeName","src":"6828:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1685,"initialValue":{"baseExpression":{"id":1682,"name":"_usersUnclaimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"6855:22:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1684,"indexExpression":{"id":1683,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"6878:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6855:28:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6828:55:7"},{"assignments":[1690],"declarations":[{"constant":false,"id":1690,"mutability":"mutable","name":"userState","nodeType":"VariableDeclaration","scope":1803,"src":"6890:51:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$2050_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput[]"},"typeName":{"baseType":{"id":1688,"name":"DistributionTypes.UserStakeInput","nodeType":"UserDefinedTypeName","referencedDeclaration":2050,"src":"6890:32:7","typeDescriptions":{"typeIdentifier":"t_struct$_UserStakeInput_$2050_storage_ptr","typeString":"struct DistributionTypes.UserStakeInput"}},"id":1689,"nodeType":"ArrayTypeName","src":"6890:34:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$2050_storage_$dyn_storage_ptr","typeString":"struct DistributionTypes.UserStakeInput[]"}},"visibility":"internal"}],"id":1697,"initialValue":{"arguments":[{"expression":{"id":1694,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"6989:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6989:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6950:38:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_UserStakeInput_$2050_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct DistributionTypes.UserStakeInput memory[] memory)"},"typeName":{"baseType":{"id":1691,"name":"DistributionTypes.UserStakeInput","nodeType":"UserDefinedTypeName","referencedDeclaration":2050,"src":"6954:32:7","typeDescriptions":{"typeIdentifier":"t_struct$_UserStakeInput_$2050_storage_ptr","typeString":"struct DistributionTypes.UserStakeInput"}},"id":1692,"nodeType":"ArrayTypeName","src":"6954:34:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$2050_storage_$dyn_storage_ptr","typeString":"struct DistributionTypes.UserStakeInput[]"}}},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6950:53:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$2050_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6890:113:7"},{"body":{"id":1737,"nodeType":"Block","src":"7053:194:7","statements":[{"expression":{"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1709,"name":"userState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"7061:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$2050_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory[] memory"}},"id":1711,"indexExpression":{"id":1710,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"7071:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7061:12:7","typeDescriptions":{"typeIdentifier":"t_struct$_UserStakeInput_$2050_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory"}},"id":1712,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"underlyingAsset","nodeType":"MemberAccess","referencedDeclaration":2045,"src":"7061:28:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1713,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"7092:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1715,"indexExpression":{"id":1714,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"7099:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7092:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7061:40:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1717,"nodeType":"ExpressionStatement","src":"7061:40:7"},{"expression":{"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"expression":{"baseExpression":{"id":1718,"name":"userState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"7110:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$2050_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory[] memory"}},"id":1720,"indexExpression":{"id":1719,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"7120:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7110:12:7","typeDescriptions":{"typeIdentifier":"t_struct$_UserStakeInput_$2050_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory"}},"id":1721,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakedByUser","nodeType":"MemberAccess","referencedDeclaration":2047,"src":"7110:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":1722,"name":"userState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"7137:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$2050_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory[] memory"}},"id":1724,"indexExpression":{"id":1723,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"7147:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7137:12:7","typeDescriptions":{"typeIdentifier":"t_struct$_UserStakeInput_$2050_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory"}},"id":1725,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"totalStaked","nodeType":"MemberAccess","referencedDeclaration":2049,"src":"7137:24:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1726,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"7109:53:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1733,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"7235:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"baseExpression":{"id":1728,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"7185:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1730,"indexExpression":{"id":1729,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"7192:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7185:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1727,"name":"IScaledBalanceToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"7165:19:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IScaledBalanceToken_$2021_$","typeString":"type(contract IScaledBalanceToken)"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7165:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IScaledBalanceToken_$2021","typeString":"contract IScaledBalanceToken"}},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getScaledUserBalanceAndSupply","nodeType":"MemberAccess","referencedDeclaration":2014,"src":"7165:69:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$","typeString":"function (address) view external returns (uint256,uint256)"}},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7165:75:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"7109:131:7","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1736,"nodeType":"ExpressionStatement","src":"7109:131:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1702,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"7029:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1703,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"7033:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7033:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7029:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1738,"initializationExpression":{"assignments":[1699],"declarations":[{"constant":false,"id":1699,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":1738,"src":"7014:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1698,"name":"uint256","nodeType":"ElementaryTypeName","src":"7014:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1701,"initialValue":{"hexValue":"30","id":1700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7026:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7014:13:7"},"loopExpression":{"expression":{"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7048:3:7","subExpression":{"id":1706,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"7048:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1708,"nodeType":"ExpressionStatement","src":"7048:3:7"},"nodeType":"ForStatement","src":"7009:238:7"},{"assignments":[1740],"declarations":[{"constant":false,"id":1740,"mutability":"mutable","name":"accruedRewards","nodeType":"VariableDeclaration","scope":1803,"src":"7253:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1739,"name":"uint256","nodeType":"ElementaryTypeName","src":"7253:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1745,"initialValue":{"arguments":[{"id":1742,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"7292:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1743,"name":"userState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"7298:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$2050_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$2050_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory[] memory"}],"id":1741,"name":"_claimRewards","nodeType":"Identifier","overloadedDeclarations":[1804,989],"referencedDeclaration":989,"src":"7278:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_array$_t_struct$_UserStakeInput_$2050_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,struct DistributionTypes.UserStakeInput memory[] memory) returns (uint256)"}},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7278:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7253:55:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1746,"name":"accruedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"7318:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7336:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7318:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1762,"nodeType":"IfStatement","src":"7314:144:7","trueBody":{"id":1761,"nodeType":"Block","src":"7339:119:7","statements":[{"expression":{"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1749,"name":"unclaimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"7347:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1752,"name":"accruedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"7387:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1750,"name":"unclaimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"7366:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2076,"src":"7366:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7366:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7347:55:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1755,"nodeType":"ExpressionStatement","src":"7347:55:7"},{"eventCall":{"arguments":[{"id":1757,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"7430:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1758,"name":"accruedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"7436:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1756,"name":"RewardsAccrued","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"7415:14:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7415:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1760,"nodeType":"EmitStatement","src":"7410:41:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1763,"name":"unclaimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"7468:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7488:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7468:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1769,"nodeType":"IfStatement","src":"7464:50:7","trueBody":{"id":1768,"nodeType":"Block","src":"7491:23:7","statements":[{"expression":{"hexValue":"30","id":1766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1672,"id":1767,"nodeType":"Return","src":"7499:8:7"}]}},{"assignments":[1771],"declarations":[{"constant":false,"id":1771,"mutability":"mutable","name":"amountToClaim","nodeType":"VariableDeclaration","scope":1803,"src":"7520:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1770,"name":"uint256","nodeType":"ElementaryTypeName","src":"7520:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1778,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1772,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"7544:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1773,"name":"unclaimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"7553:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7544:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1776,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"7591:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7544:53:7","trueExpression":{"id":1775,"name":"unclaimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"7572:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7520:77:7"},{"expression":{"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1779,"name":"_usersUnclaimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"7603:22:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1781,"indexExpression":{"id":1780,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"7626:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7603:28:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1782,"name":"unclaimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"7634:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1783,"name":"amountToClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"7653:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7634:32:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7603:63:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1786,"nodeType":"ExpressionStatement","src":"7603:63:7"},{"expression":{"arguments":[{"id":1790,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"7724:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1791,"name":"amountToClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"7728:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1787,"name":"STAKE_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"7706:11:7","typeDescriptions":{"typeIdentifier":"t_contract$_IStakedTokenWithConfig_$2033","typeString":"contract IStakedTokenWithConfig"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"stake","nodeType":"MemberAccess","referencedDeclaration":86,"src":"7706:17:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7706:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1793,"nodeType":"ExpressionStatement","src":"7706:36:7"},{"eventCall":{"arguments":[{"id":1795,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"7768:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1796,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"7774:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1797,"name":"claimer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"7778:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1798,"name":"amountToClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"7787:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1794,"name":"RewardsClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"7753:14:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7753:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1800,"nodeType":"EmitStatement","src":"7748:53:7"},{"expression":{"id":1801,"name":"amountToClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"7815:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1672,"id":1802,"nodeType":"Return","src":"7808:20:7"}]},"documentation":{"id":1657,"nodeType":"StructuredDocumentation","src":"6299:315:7","text":" @dev Claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards.\n @param amount Amount of rewards to claim\n @param user Address to check and claim rewards\n @param to Address that will be receiving the rewards\n @return Rewards claimed*"},"implemented":true,"kind":"function","modifiers":[],"name":"_claimRewards","parameters":{"id":1669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1660,"mutability":"mutable","name":"assets","nodeType":"VariableDeclaration","scope":1804,"src":"6645:25:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1658,"name":"address","nodeType":"ElementaryTypeName","src":"6645:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1659,"nodeType":"ArrayTypeName","src":"6645:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1662,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1804,"src":"6676:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1661,"name":"uint256","nodeType":"ElementaryTypeName","src":"6676:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1664,"mutability":"mutable","name":"claimer","nodeType":"VariableDeclaration","scope":1804,"src":"6696:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1663,"name":"address","nodeType":"ElementaryTypeName","src":"6696:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1666,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":1804,"src":"6717:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1665,"name":"address","nodeType":"ElementaryTypeName","src":"6717:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1668,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1804,"src":"6735:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1667,"name":"address","nodeType":"ElementaryTypeName","src":"6735:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6639:110:7"},"returnParameters":{"id":1672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1671,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1804,"src":"6768:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1670,"name":"uint256","nodeType":"ElementaryTypeName","src":"6768:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6767:9:7"},"scope":1805,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[{"baseName":{"id":1189,"name":"IAaveIncentivesController","nodeType":"UserDefinedTypeName","referencedDeclaration":1994,"src":"1161:25:7","typeDescriptions":{"typeIdentifier":"t_contract$_IAaveIncentivesController_$1994","typeString":"contract IAaveIncentivesController"}},"id":1190,"nodeType":"InheritanceSpecifier","src":"1161:25:7"},{"baseName":{"id":1191,"name":"VersionedInitializable","nodeType":"UserDefinedTypeName","referencedDeclaration":560,"src":"1190:22:7","typeDescriptions":{"typeIdentifier":"t_contract$_VersionedInitializable_$560","typeString":"contract VersionedInitializable"}},"id":1192,"nodeType":"InheritanceSpecifier","src":"1190:22:7"},{"baseName":{"id":1193,"name":"DistributionManager","nodeType":"UserDefinedTypeName","referencedDeclaration":1166,"src":"1216:19:7","typeDescriptions":{"typeIdentifier":"t_contract$_DistributionManager_$1166","typeString":"contract DistributionManager"}},"id":1194,"nodeType":"InheritanceSpecifier","src":"1216:19:7"}],"contractDependencies":[560,1166,1875,1994],"contractKind":"contract","documentation":{"id":1188,"nodeType":"StructuredDocumentation","src":"757:357:7","text":" @title StakedTokenIncentivesController\n @notice Distributor contract for rewards to the Aave protocol, using a staked token as rewards asset.\n The contract stakes the rewards before redistributing them to the Aave protocol participants.\n The reference staked token implementation is at https://github.com/aave/aave-stake-v2\n @author Aave*"},"fullyImplemented":true,"linearizedBaseContracts":[1805,1166,560,1994,1875],"name":"StakedTokenIncentivesController","scope":1806}],"license":"agpl-3.0"}},"contracts/interfaces/IAaveDistributionManager.sol":{"id":8,"ast":{"absolutePath":"contracts/interfaces/IAaveDistributionManager.sol","id":1876,"exportedSymbols":{"DistributionTypes":[2051],"IAaveDistributionManager":[1875]},"nodeType":"SourceUnit","src":"37:1621:8","nodes":[{"id":1807,"nodeType":"PragmaDirective","src":"37:22:8","nodes":[],"literals":["solidity","0.7",".5"]},{"id":1808,"nodeType":"PragmaDirective","src":"60:33:8","nodes":[],"literals":["experimental","ABIEncoderV2"]},{"id":1810,"nodeType":"ImportDirective","src":"95:63:8","nodes":[],"absolutePath":"contracts/lib/DistributionTypes.sol","file":"../lib/DistributionTypes.sol","scope":1876,"sourceUnit":2052,"symbolAliases":[{"foreign":{"id":1809,"name":"DistributionTypes","nodeType":"Identifier","overloadedDeclarations":[],"src":"103:17:8","typeDescriptions":{}}}],"unitAlias":""},{"id":1875,"nodeType":"ContractDefinition","src":"160:1497:8","nodes":[{"id":1816,"nodeType":"EventDefinition","src":"202:66:8","nodes":[],"anonymous":false,"name":"AssetConfigUpdated","parameters":{"id":1815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1812,"indexed":true,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":1816,"src":"227:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1811,"name":"address","nodeType":"ElementaryTypeName","src":"227:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1814,"indexed":false,"mutability":"mutable","name":"emission","nodeType":"VariableDeclaration","scope":1816,"src":"250:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1813,"name":"uint256","nodeType":"ElementaryTypeName","src":"250:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"226:41:8"}},{"id":1822,"nodeType":"EventDefinition","src":"271:62:8","nodes":[],"anonymous":false,"name":"AssetIndexUpdated","parameters":{"id":1821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1818,"indexed":true,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":1822,"src":"295:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1817,"name":"address","nodeType":"ElementaryTypeName","src":"295:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1820,"indexed":false,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":1822,"src":"318:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1819,"name":"uint256","nodeType":"ElementaryTypeName","src":"318:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"294:38:8"}},{"id":1830,"nodeType":"EventDefinition","src":"336:83:8","nodes":[],"anonymous":false,"name":"UserIndexUpdated","parameters":{"id":1829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1824,"indexed":true,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":1830,"src":"359:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1823,"name":"address","nodeType":"ElementaryTypeName","src":"359:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1826,"indexed":true,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":1830,"src":"381:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1825,"name":"address","nodeType":"ElementaryTypeName","src":"381:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1828,"indexed":false,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":1830,"src":"404:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1827,"name":"uint256","nodeType":"ElementaryTypeName","src":"404:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"358:60:8"}},{"id":1834,"nodeType":"EventDefinition","src":"422:57:8","nodes":[],"anonymous":false,"name":"DistributionEndUpdated","parameters":{"id":1833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1832,"indexed":false,"mutability":"mutable","name":"newDistributionEnd","nodeType":"VariableDeclaration","scope":1834,"src":"451:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1831,"name":"uint256","nodeType":"ElementaryTypeName","src":"451:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"450:28:8"}},{"id":1840,"nodeType":"FunctionDefinition","src":"593:62:8","nodes":[],"documentation":{"id":1835,"nodeType":"StructuredDocumentation","src":"483:107:8","text":" @dev Sets the end date for the distribution\n @param distributionEnd The end date timestamp*"},"functionSelector":"39ccbdd3","implemented":false,"kind":"function","modifiers":[],"name":"setDistributionEnd","parameters":{"id":1838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1837,"mutability":"mutable","name":"distributionEnd","nodeType":"VariableDeclaration","scope":1840,"src":"621:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1836,"name":"uint256","nodeType":"ElementaryTypeName","src":"621:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"620:25:8"},"returnParameters":{"id":1839,"nodeType":"ParameterList","parameters":[],"src":"654:0:8"},"scope":1875,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1846,"nodeType":"FunctionDefinition","src":"759:62:8","nodes":[],"documentation":{"id":1841,"nodeType":"StructuredDocumentation","src":"659:97:8","text":" @dev Gets the end date for the distribution\n @return The end of the distribution*"},"functionSelector":"cc69afec","implemented":false,"kind":"function","modifiers":[],"name":"getDistributionEnd","parameters":{"id":1842,"nodeType":"ParameterList","parameters":[],"src":"786:2:8"},"returnParameters":{"id":1845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1844,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1846,"src":"812:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1843,"name":"uint256","nodeType":"ElementaryTypeName","src":"812:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"811:9:8"},"scope":1875,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1852,"nodeType":"FunctionDefinition","src":"957:59:8","nodes":[],"documentation":{"id":1847,"nodeType":"StructuredDocumentation","src":"825:129:8","text":" @dev for backwards compatibility with the previous DistributionManager used\n @return The end of the distribution*"},"functionSelector":"919cd40f","implemented":false,"kind":"function","modifiers":[],"name":"DISTRIBUTION_END","parameters":{"id":1848,"nodeType":"ParameterList","parameters":[],"src":"982:2:8"},"returnParameters":{"id":1851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1850,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1852,"src":"1007:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1849,"name":"uint256","nodeType":"ElementaryTypeName","src":"1007:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1006:9:8"},"scope":1875,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1862,"nodeType":"FunctionDefinition","src":"1228:87:8","nodes":[],"documentation":{"id":1853,"nodeType":"StructuredDocumentation","src":"1021:203:8","text":" @dev Returns the data of an user on a distribution\n @param user Address of the user\n @param asset The address of the reference asset of the distribution\n @return The new index*"},"functionSelector":"3373ee4c","implemented":false,"kind":"function","modifiers":[],"name":"getUserAssetData","parameters":{"id":1858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1855,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":1862,"src":"1254:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1854,"name":"address","nodeType":"ElementaryTypeName","src":"1254:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1857,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":1862,"src":"1268:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1856,"name":"address","nodeType":"ElementaryTypeName","src":"1268:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1253:29:8"},"returnParameters":{"id":1861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1860,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1862,"src":"1306:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1859,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1305:9:8"},"scope":1875,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1874,"nodeType":"FunctionDefinition","src":"1568:87:8","nodes":[],"documentation":{"id":1863,"nodeType":"StructuredDocumentation","src":"1320:244:8","text":" @dev Returns the configuration of the distribution for a certain asset\n @param asset The address of the reference asset of the distribution\n @return The asset index, the emission per second and the last updated timestamp*"},"functionSelector":"1652e7b7","implemented":false,"kind":"function","modifiers":[],"name":"getAssetData","parameters":{"id":1866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1865,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":1874,"src":"1590:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1864,"name":"address","nodeType":"ElementaryTypeName","src":"1590:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1589:15:8"},"returnParameters":{"id":1873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1868,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1874,"src":"1628:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1867,"name":"uint256","nodeType":"ElementaryTypeName","src":"1628:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1870,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1874,"src":"1637:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1869,"name":"uint256","nodeType":"ElementaryTypeName","src":"1637:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1872,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1874,"src":"1646:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1871,"name":"uint256","nodeType":"ElementaryTypeName","src":"1646:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1627:27:8"},"scope":1875,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"linearizedBaseContracts":[1875],"name":"IAaveDistributionManager","scope":1876}],"license":"agpl-3.0"}},"contracts/interfaces/IAaveIncentivesController.sol":{"id":9,"ast":{"absolutePath":"contracts/interfaces/IAaveIncentivesController.sol","id":1995,"exportedSymbols":{"IAaveDistributionManager":[1875],"IAaveIncentivesController":[1994]},"nodeType":"SourceUnit","src":"37:3279:9","nodes":[{"id":1877,"nodeType":"PragmaDirective","src":"37:22:9","nodes":[],"literals":["solidity","0.7",".5"]},{"id":1878,"nodeType":"PragmaDirective","src":"61:33:9","nodes":[],"literals":["experimental","ABIEncoderV2"]},{"id":1880,"nodeType":"ImportDirective","src":"96:84:9","nodes":[],"absolutePath":"contracts/interfaces/IAaveDistributionManager.sol","file":"../interfaces/IAaveDistributionManager.sol","scope":1995,"sourceUnit":1876,"symbolAliases":[{"foreign":{"id":1879,"name":"IAaveDistributionManager","nodeType":"Identifier","overloadedDeclarations":[],"src":"104:24:9","typeDescriptions":{}}}],"unitAlias":""},{"id":1994,"nodeType":"ContractDefinition","src":"182:3133:9","nodes":[{"id":1888,"nodeType":"EventDefinition","src":"253:59:9","nodes":[],"anonymous":false,"name":"RewardsAccrued","parameters":{"id":1887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1884,"indexed":true,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":1888,"src":"274:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1883,"name":"address","nodeType":"ElementaryTypeName","src":"274:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1886,"indexed":false,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1888,"src":"296:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1885,"name":"uint256","nodeType":"ElementaryTypeName","src":"296:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"273:38:9"}},{"id":1898,"nodeType":"EventDefinition","src":"318:124:9","nodes":[],"anonymous":false,"name":"RewardsClaimed","parameters":{"id":1897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1890,"indexed":true,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":1898,"src":"344:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1889,"name":"address","nodeType":"ElementaryTypeName","src":"344:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1892,"indexed":true,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1898,"src":"370:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1891,"name":"address","nodeType":"ElementaryTypeName","src":"370:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1894,"indexed":true,"mutability":"mutable","name":"claimer","nodeType":"VariableDeclaration","scope":1898,"src":"394:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1893,"name":"address","nodeType":"ElementaryTypeName","src":"394:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1896,"indexed":false,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1898,"src":"423:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1895,"name":"uint256","nodeType":"ElementaryTypeName","src":"423:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"338:103:9"}},{"id":1904,"nodeType":"EventDefinition","src":"446:64:9","nodes":[],"anonymous":false,"name":"ClaimerSet","parameters":{"id":1903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1900,"indexed":true,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":1904,"src":"463:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1899,"name":"address","nodeType":"ElementaryTypeName","src":"463:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1902,"indexed":true,"mutability":"mutable","name":"claimer","nodeType":"VariableDeclaration","scope":1904,"src":"485:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1901,"name":"address","nodeType":"ElementaryTypeName","src":"485:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"462:47:9"}},{"id":1912,"nodeType":"FunctionDefinition","src":"696:60:9","nodes":[],"documentation":{"id":1905,"nodeType":"StructuredDocumentation","src":"514:179:9","text":" @dev Whitelists an address to claim the rewards on behalf of another address\n @param user The address of the user\n @param claimer The address of the claimer"},"functionSelector":"f5cf673b","implemented":false,"kind":"function","modifiers":[],"name":"setClaimer","parameters":{"id":1910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1907,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":1912,"src":"716:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1906,"name":"address","nodeType":"ElementaryTypeName","src":"716:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1909,"mutability":"mutable","name":"claimer","nodeType":"VariableDeclaration","scope":1912,"src":"730:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1908,"name":"address","nodeType":"ElementaryTypeName","src":"730:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"715:31:9"},"returnParameters":{"id":1911,"nodeType":"ParameterList","parameters":[],"src":"755:0:9"},"scope":1994,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1920,"nodeType":"FunctionDefinition","src":"927:66:9","nodes":[],"documentation":{"id":1913,"nodeType":"StructuredDocumentation","src":"760:164:9","text":" @dev Returns the whitelisted claimer for a certain address (0x0 if not set)\n @param user The address of the user\n @return The claimer address"},"functionSelector":"74d945ec","implemented":false,"kind":"function","modifiers":[],"name":"getClaimer","parameters":{"id":1916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1915,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":1920,"src":"947:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1914,"name":"address","nodeType":"ElementaryTypeName","src":"947:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"946:14:9"},"returnParameters":{"id":1919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1918,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1920,"src":"984:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1917,"name":"address","nodeType":"ElementaryTypeName","src":"984:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"983:9:9"},"scope":1994,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1930,"nodeType":"FunctionDefinition","src":"1171:104:9","nodes":[],"documentation":{"id":1921,"nodeType":"StructuredDocumentation","src":"997:171:9","text":" @dev Configure assets for a certain rewards emission\n @param assets The assets to incentivize\n @param emissionsPerSecond The emission for each asset"},"functionSelector":"79f171b2","implemented":false,"kind":"function","modifiers":[],"name":"configureAssets","parameters":{"id":1928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1924,"mutability":"mutable","name":"assets","nodeType":"VariableDeclaration","scope":1930,"src":"1196:25:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1922,"name":"address","nodeType":"ElementaryTypeName","src":"1196:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1923,"nodeType":"ArrayTypeName","src":"1196:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1927,"mutability":"mutable","name":"emissionsPerSecond","nodeType":"VariableDeclaration","scope":1930,"src":"1223:37:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1925,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1926,"nodeType":"ArrayTypeName","src":"1223:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1195:66:9"},"returnParameters":{"id":1929,"nodeType":"ParameterList","parameters":[],"src":"1274:0:9"},"scope":1994,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1940,"nodeType":"FunctionDefinition","src":"1586:104:9","nodes":[],"documentation":{"id":1931,"nodeType":"StructuredDocumentation","src":"1280:303:9","text":" @dev Called by the corresponding asset on any update that affects the rewards distribution\n @param asset The address of the user\n @param userBalance The balance of the user of the asset in the lending pool\n @param totalSupply The total supply of the asset in the lending pool*"},"functionSelector":"31873e2e","implemented":false,"kind":"function","modifiers":[],"name":"handleAction","parameters":{"id":1938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1933,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":1940,"src":"1613:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1932,"name":"address","nodeType":"ElementaryTypeName","src":"1613:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1935,"mutability":"mutable","name":"userBalance","nodeType":"VariableDeclaration","scope":1940,"src":"1632:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1934,"name":"uint256","nodeType":"ElementaryTypeName","src":"1632:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1937,"mutability":"mutable","name":"totalSupply","nodeType":"VariableDeclaration","scope":1940,"src":"1657:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1936,"name":"uint256","nodeType":"ElementaryTypeName","src":"1657:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1607:73:9"},"returnParameters":{"id":1939,"nodeType":"ParameterList","parameters":[],"src":"1689:0:9"},"scope":1994,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1951,"nodeType":"FunctionDefinition","src":"1858:112:9","nodes":[],"documentation":{"id":1941,"nodeType":"StructuredDocumentation","src":"1694:161:9","text":" @dev Returns the total of rewards of an user, already accrued + not yet accrued\n @param user The address of the user\n @return The rewards*"},"functionSelector":"8b599f26","implemented":false,"kind":"function","modifiers":[],"name":"getRewardsBalance","parameters":{"id":1947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1944,"mutability":"mutable","name":"assets","nodeType":"VariableDeclaration","scope":1951,"src":"1885:25:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1942,"name":"address","nodeType":"ElementaryTypeName","src":"1885:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1943,"nodeType":"ArrayTypeName","src":"1885:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1946,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":1951,"src":"1912:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1945,"name":"address","nodeType":"ElementaryTypeName","src":"1912:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1884:41:9"},"returnParameters":{"id":1950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1949,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1951,"src":"1961:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1948,"name":"uint256","nodeType":"ElementaryTypeName","src":"1961:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1960:9:9"},"scope":1994,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1964,"nodeType":"FunctionDefinition","src":"2229:120:9","nodes":[],"documentation":{"id":1952,"nodeType":"StructuredDocumentation","src":"1974:252:9","text":" @dev Claims reward for an user, on all the assets of the lending pool, accumulating the pending rewards\n @param amount Amount of rewards to claim\n @param to Address that will be receiving the rewards\n @return Rewards claimed*"},"functionSelector":"3111e7b3","implemented":false,"kind":"function","modifiers":[],"name":"claimRewards","parameters":{"id":1960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1955,"mutability":"mutable","name":"assets","nodeType":"VariableDeclaration","scope":1964,"src":"2256:25:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1953,"name":"address","nodeType":"ElementaryTypeName","src":"2256:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1954,"nodeType":"ArrayTypeName","src":"2256:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1957,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1964,"src":"2287:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1956,"name":"uint256","nodeType":"ElementaryTypeName","src":"2287:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1959,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1964,"src":"2307:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1958,"name":"address","nodeType":"ElementaryTypeName","src":"2307:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2250:71:9"},"returnParameters":{"id":1963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1962,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1964,"src":"2340:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1961,"name":"uint256","nodeType":"ElementaryTypeName","src":"2340:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2339:9:9"},"scope":1994,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1979,"nodeType":"FunctionDefinition","src":"2774:146:9","nodes":[],"documentation":{"id":1965,"nodeType":"StructuredDocumentation","src":"2353:418:9","text":" @dev Claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards. The caller must\n be whitelisted via \"allowClaimOnBehalf\" function by the RewardsAdmin role manager\n @param amount Amount of rewards to claim\n @param user Address to check and claim rewards\n @param to Address that will be receiving the rewards\n @return Rewards claimed*"},"functionSelector":"6d34b96e","implemented":false,"kind":"function","modifiers":[],"name":"claimRewardsOnBehalf","parameters":{"id":1975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1968,"mutability":"mutable","name":"assets","nodeType":"VariableDeclaration","scope":1979,"src":"2809:25:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1966,"name":"address","nodeType":"ElementaryTypeName","src":"2809:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1967,"nodeType":"ArrayTypeName","src":"2809:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1970,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1979,"src":"2840:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1969,"name":"uint256","nodeType":"ElementaryTypeName","src":"2840:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1972,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":1979,"src":"2860:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1971,"name":"address","nodeType":"ElementaryTypeName","src":"2860:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1974,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1979,"src":"2878:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1973,"name":"address","nodeType":"ElementaryTypeName","src":"2878:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2803:89:9"},"returnParameters":{"id":1978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1977,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1979,"src":"2911:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1976,"name":"uint256","nodeType":"ElementaryTypeName","src":"2911:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2910:9:9"},"scope":1994,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1987,"nodeType":"FunctionDefinition","src":"3069:79:9","nodes":[],"documentation":{"id":1980,"nodeType":"StructuredDocumentation","src":"2924:142:9","text":" @dev returns the unclaimed rewards of the user\n @param user the address of the user\n @return the unclaimed user rewards"},"functionSelector":"198fa81e","implemented":false,"kind":"function","modifiers":[],"name":"getUserUnclaimedRewards","parameters":{"id":1983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1982,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":1987,"src":"3102:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1981,"name":"address","nodeType":"ElementaryTypeName","src":"3102:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3101:14:9"},"returnParameters":{"id":1986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1985,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1987,"src":"3139:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1984,"name":"uint256","nodeType":"ElementaryTypeName","src":"3139:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3138:9:9"},"scope":1994,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1993,"nodeType":"FunctionDefinition","src":"3257:56:9","nodes":[],"documentation":{"id":1988,"nodeType":"StructuredDocumentation","src":"3152:102:9","text":" @dev for backward compatibility with previous implementation of the Incentives controller"},"functionSelector":"99248ea7","implemented":false,"kind":"function","modifiers":[],"name":"REWARD_TOKEN","parameters":{"id":1989,"nodeType":"ParameterList","parameters":[],"src":"3278:2:9"},"returnParameters":{"id":1992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1991,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1993,"src":"3304:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1990,"name":"address","nodeType":"ElementaryTypeName","src":"3304:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3303:9:9"},"scope":1994,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":1881,"name":"IAaveDistributionManager","nodeType":"UserDefinedTypeName","referencedDeclaration":1875,"src":"221:24:9","typeDescriptions":{"typeIdentifier":"t_contract$_IAaveDistributionManager_$1875","typeString":"contract IAaveDistributionManager"}},"id":1882,"nodeType":"InheritanceSpecifier","src":"221:24:9"}],"contractDependencies":[1875],"contractKind":"interface","fullyImplemented":false,"linearizedBaseContracts":[1994,1875],"name":"IAaveIncentivesController","scope":1995}],"license":"agpl-3.0"}},"contracts/interfaces/IScaledBalanceToken.sol":{"id":10,"ast":{"absolutePath":"contracts/interfaces/IScaledBalanceToken.sol","id":2022,"exportedSymbols":{"IScaledBalanceToken":[2021]},"nodeType":"SourceUnit","src":"37:963:10","nodes":[{"id":1996,"nodeType":"PragmaDirective","src":"37:22:10","nodes":[],"literals":["solidity","0.7",".5"]},{"id":2021,"nodeType":"ContractDefinition","src":"61:938:10","nodes":[{"id":2004,"nodeType":"FunctionDefinition","src":"394:71:10","nodes":[],"documentation":{"id":1997,"nodeType":"StructuredDocumentation","src":"95:296:10","text":" @dev Returns the scaled balance of the user. The scaled balance is the sum of all the\n updated stored balance divided by the reserve's liquidity index at the moment of the update\n @param user The user whose balance is calculated\n @return The scaled balance of the user*"},"functionSelector":"1da24f3e","implemented":false,"kind":"function","modifiers":[],"name":"scaledBalanceOf","parameters":{"id":2000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1999,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":2004,"src":"419:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1998,"name":"address","nodeType":"ElementaryTypeName","src":"419:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"418:14:10"},"returnParameters":{"id":2003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2002,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2004,"src":"456:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2001,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"455:9:10"},"scope":2021,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":2014,"nodeType":"FunctionDefinition","src":"705:94:10","nodes":[],"documentation":{"id":2005,"nodeType":"StructuredDocumentation","src":"469:233:10","text":" @dev Returns the scaled balance of the user and the scaled total supply.\n @param user The address of the user\n @return The scaled balance of the user\n @return The scaled balance and the scaled total supply*"},"functionSelector":"0afbcdc9","implemented":false,"kind":"function","modifiers":[],"name":"getScaledUserBalanceAndSupply","parameters":{"id":2008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2007,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":2014,"src":"744:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2006,"name":"address","nodeType":"ElementaryTypeName","src":"744:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"743:14:10"},"returnParameters":{"id":2013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2010,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2014,"src":"781:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2009,"name":"uint256","nodeType":"ElementaryTypeName","src":"781:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2012,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2014,"src":"790:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2011,"name":"uint256","nodeType":"ElementaryTypeName","src":"790:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"780:18:10"},"scope":2021,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":2020,"nodeType":"FunctionDefinition","src":"936:61:10","nodes":[],"documentation":{"id":2015,"nodeType":"StructuredDocumentation","src":"803:130:10","text":" @dev Returns the scaled total supply of the token. Represents sum(debt/index)\n @return The scaled total supply*"},"functionSelector":"b1bf962d","implemented":false,"kind":"function","modifiers":[],"name":"scaledTotalSupply","parameters":{"id":2016,"nodeType":"ParameterList","parameters":[],"src":"962:2:10"},"returnParameters":{"id":2019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2018,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2020,"src":"988:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2017,"name":"uint256","nodeType":"ElementaryTypeName","src":"988:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"987:9:10"},"scope":2021,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"linearizedBaseContracts":[2021],"name":"IScaledBalanceToken","scope":2022}],"license":"agpl-3.0"}},"contracts/interfaces/IStakedTokenWithConfig.sol":{"id":11,"ast":{"absolutePath":"contracts/interfaces/IStakedTokenWithConfig.sol","id":2034,"exportedSymbols":{"IStakedToken":[104],"IStakedTokenWithConfig":[2033]},"nodeType":"SourceUnit","src":"37:220:11","nodes":[{"id":2023,"nodeType":"PragmaDirective","src":"37:22:11","nodes":[],"literals":["solidity","0.7",".5"]},{"id":2025,"nodeType":"ImportDirective","src":"61:84:11","nodes":[],"absolutePath":"@aave/aave-stake/contracts/interfaces/IStakedToken.sol","file":"@aave/aave-stake/contracts/interfaces/IStakedToken.sol","scope":2034,"sourceUnit":105,"symbolAliases":[{"foreign":{"id":2024,"name":"IStakedToken","nodeType":"Identifier","overloadedDeclarations":[],"src":"69:12:11","typeDescriptions":{}}}],"unitAlias":""},{"id":2033,"nodeType":"ContractDefinition","src":"147:110:11","nodes":[{"id":2032,"nodeType":"FunctionDefinition","src":"200:55:11","nodes":[],"functionSelector":"312f6b83","implemented":false,"kind":"function","modifiers":[],"name":"STAKED_TOKEN","parameters":{"id":2028,"nodeType":"ParameterList","parameters":[],"src":"221:2:11"},"returnParameters":{"id":2031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2030,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2032,"src":"246:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2029,"name":"address","nodeType":"ElementaryTypeName","src":"246:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"245:9:11"},"scope":2033,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":2026,"name":"IStakedToken","nodeType":"UserDefinedTypeName","referencedDeclaration":104,"src":"183:12:11","typeDescriptions":{"typeIdentifier":"t_contract$_IStakedToken_$104","typeString":"contract IStakedToken"}},"id":2027,"nodeType":"InheritanceSpecifier","src":"183:12:11"}],"contractDependencies":[104],"contractKind":"interface","fullyImplemented":false,"linearizedBaseContracts":[2033,104],"name":"IStakedTokenWithConfig","scope":2034}],"license":"AGPL-3.0"}},"contracts/lib/DistributionTypes.sol":{"id":12,"ast":{"absolutePath":"contracts/lib/DistributionTypes.sol","id":2052,"exportedSymbols":{"DistributionTypes":[2051]},"nodeType":"SourceUnit","src":"37:316:12","nodes":[{"id":2035,"nodeType":"PragmaDirective","src":"37:22:12","nodes":[],"literals":["solidity","0.7",".5"]},{"id":2036,"nodeType":"PragmaDirective","src":"60:33:12","nodes":[],"literals":["experimental","ABIEncoderV2"]},{"id":2051,"nodeType":"ContractDefinition","src":"95:257:12","nodes":[{"id":2043,"nodeType":"StructDefinition","src":"125:114:12","nodes":[],"canonicalName":"DistributionTypes.AssetConfigInput","members":[{"constant":false,"id":2038,"mutability":"mutable","name":"emissionPerSecond","nodeType":"VariableDeclaration","scope":2043,"src":"155:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":2037,"name":"uint104","nodeType":"ElementaryTypeName","src":"155:7:12","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"},{"constant":false,"id":2040,"mutability":"mutable","name":"totalStaked","nodeType":"VariableDeclaration","scope":2043,"src":"186:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2039,"name":"uint256","nodeType":"ElementaryTypeName","src":"186:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2042,"mutability":"mutable","name":"underlyingAsset","nodeType":"VariableDeclaration","scope":2043,"src":"211:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2041,"name":"address","nodeType":"ElementaryTypeName","src":"211:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AssetConfigInput","scope":2051,"visibility":"public"},{"id":2050,"nodeType":"StructDefinition","src":"243:107:12","nodes":[],"canonicalName":"DistributionTypes.UserStakeInput","members":[{"constant":false,"id":2045,"mutability":"mutable","name":"underlyingAsset","nodeType":"VariableDeclaration","scope":2050,"src":"271:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2044,"name":"address","nodeType":"ElementaryTypeName","src":"271:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2047,"mutability":"mutable","name":"stakedByUser","nodeType":"VariableDeclaration","scope":2050,"src":"300:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2046,"name":"uint256","nodeType":"ElementaryTypeName","src":"300:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2049,"mutability":"mutable","name":"totalStaked","nodeType":"VariableDeclaration","scope":2050,"src":"326:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2048,"name":"uint256","nodeType":"ElementaryTypeName","src":"326:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UserStakeInput","scope":2051,"visibility":"public"}],"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","fullyImplemented":true,"linearizedBaseContracts":[2051],"name":"DistributionTypes","scope":2052}],"license":"agpl-3.0"}},"contracts/lib/SafeMath.sol":{"id":13,"ast":{"absolutePath":"contracts/lib/SafeMath.sol","id":2142,"exportedSymbols":{"SafeMath":[2141]},"nodeType":"SourceUnit","src":"38:1265:13","nodes":[{"id":2053,"nodeType":"PragmaDirective","src":"38:23:13","nodes":[],"literals":["solidity","^","0.7",".5"]},{"id":2141,"nodeType":"ContractDefinition","src":"268:1035:13","nodes":[{"id":2076,"nodeType":"FunctionDefinition","src":"448:111:13","nodes":[],"body":{"id":2075,"nodeType":"Block","src":"517:42:13","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2065,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"536:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2066,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"540:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2067,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"544:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"540:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"536:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2070,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"535:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2071,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"550:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"535:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2064,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"527:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"527:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2074,"nodeType":"ExpressionStatement","src":"527:25:13"}]},"documentation":{"id":2055,"nodeType":"StructuredDocumentation","src":"291:152:13","text":"@notice Returns x + y, reverts if sum overflows uint256\n @param x The augend\n @param y The addend\n @return z The sum of x and y"},"implemented":true,"kind":"function","modifiers":[],"name":"add","parameters":{"id":2060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2057,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":2076,"src":"461:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2056,"name":"uint256","nodeType":"ElementaryTypeName","src":"461:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2059,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":2076,"src":"472:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2058,"name":"uint256","nodeType":"ElementaryTypeName","src":"472:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"460:22:13"},"returnParameters":{"id":2063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2062,"mutability":"mutable","name":"z","nodeType":"VariableDeclaration","scope":2076,"src":"506:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2061,"name":"uint256","nodeType":"ElementaryTypeName","src":"506:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"505:11:13"},"scope":2141,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2098,"nodeType":"FunctionDefinition","src":"723:111:13","nodes":[],"body":{"id":2097,"nodeType":"Block","src":"792:42:13","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2087,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"811:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2088,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"815:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2089,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"819:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"815:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"811:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2092,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"810:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2093,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"825:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"810:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2086,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"802:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"802:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2096,"nodeType":"ExpressionStatement","src":"802:25:13"}]},"documentation":{"id":2077,"nodeType":"StructuredDocumentation","src":"565:153:13","text":"@notice Returns x - y, reverts if underflows\n @param x The minuend\n @param y The subtrahend\n @return z The difference of x and y"},"implemented":true,"kind":"function","modifiers":[],"name":"sub","parameters":{"id":2082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2079,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":2098,"src":"736:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2078,"name":"uint256","nodeType":"ElementaryTypeName","src":"736:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2081,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":2098,"src":"747:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2080,"name":"uint256","nodeType":"ElementaryTypeName","src":"747:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"735:22:13"},"returnParameters":{"id":2085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2084,"mutability":"mutable","name":"z","nodeType":"VariableDeclaration","scope":2098,"src":"781:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2083,"name":"uint256","nodeType":"ElementaryTypeName","src":"781:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"780:11:13"},"scope":2141,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2126,"nodeType":"FunctionDefinition","src":"999:125:13","nodes":[],"body":{"id":2125,"nodeType":"Block","src":"1068:56:13","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2109,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"1086:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1091:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1086:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2112,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"1097:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2113,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"1101:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2114,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"1105:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1101:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1097:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2117,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1096:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2118,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"1110:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1096:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2120,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"1115:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1096:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1086:30:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2108,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1078:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1078:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2124,"nodeType":"ExpressionStatement","src":"1078:39:13"}]},"documentation":{"id":2099,"nodeType":"StructuredDocumentation","src":"840:154:13","text":"@notice Returns x * y, reverts if overflows\n @param x The multiplicand\n @param y The multiplier\n @return z The product of x and y"},"implemented":true,"kind":"function","modifiers":[],"name":"mul","parameters":{"id":2104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2101,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":2126,"src":"1012:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2100,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2103,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":2126,"src":"1023:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2102,"name":"uint256","nodeType":"ElementaryTypeName","src":"1023:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1011:22:13"},"returnParameters":{"id":2107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2106,"mutability":"mutable","name":"z","nodeType":"VariableDeclaration","scope":2126,"src":"1057:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2105,"name":"uint256","nodeType":"ElementaryTypeName","src":"1057:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1056:11:13"},"scope":2141,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":2140,"nodeType":"FunctionDefinition","src":"1130:171:13","nodes":[],"body":{"id":2139,"nodeType":"Block","src":"1196:105:13","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2135,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"1289:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2136,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"1293:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1289:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2134,"id":2138,"nodeType":"Return","src":"1282:12:13"}]},"implemented":true,"kind":"function","modifiers":[],"name":"div","parameters":{"id":2131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2128,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":2140,"src":"1143:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2127,"name":"uint256","nodeType":"ElementaryTypeName","src":"1143:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2130,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":2140,"src":"1154:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2129,"name":"uint256","nodeType":"ElementaryTypeName","src":"1154:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1142:22:13"},"returnParameters":{"id":2134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2133,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2140,"src":"1187:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2132,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:9:13"},"scope":2141,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2054,"nodeType":"StructuredDocumentation","src":"63:205:13","text":"@title Optimized overflow and underflow safe math operations\n @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\n inspired by uniswap V3"},"fullyImplemented":true,"linearizedBaseContracts":[2141],"name":"SafeMath","scope":2142}],"license":"agpl-3.0"}}},"contracts":{"@aave/aave-stake/contracts/interfaces/IERC20.sol":{"IERC20":{"abi":[{"type":"function","name":"allowance","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"spender","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"approve","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"balanceOf","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"transfer","inputs":[{"name":"recipient","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"transferFrom","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"recipient","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"event","name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"spender","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Transfer","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP. From https://github.com/OpenZeppelin/openzeppelin-contracts\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/aave-stake/contracts/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/aave-stake/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n * From https://github.com/OpenZeppelin/openzeppelin-contracts\\n */\\ninterface IERC20 {\\n  /**\\n   * @dev Returns the amount of tokens in existence.\\n   */\\n  function totalSupply() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the amount of tokens owned by `account`.\\n   */\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  /**\\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Returns the remaining number of tokens that `spender` will be\\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n   * zero by default.\\n   *\\n   * This value changes when {approve} or {transferFrom} are called.\\n   */\\n  function allowance(address owner, address spender) external view returns (uint256);\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n   * that someone may use both the old and the new allowance by unfortunate\\n   * transaction ordering. One possible solution to mitigate this race\\n   * condition is to first reduce the spender's allowance to 0 and set the\\n   * desired value afterwards:\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n   *\\n   * Emits an {Approval} event.\\n   */\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n   * allowance mechanism. `amount` is then deducted from the caller's\\n   * allowance.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  /**\\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n   * another (`to`).\\n   *\\n   * Note that `value` may be zero.\\n   */\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  /**\\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n   * a call to {approve}. `value` is the new allowance.\\n   */\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x150506e2e40dc3cea841fe0ade6021b9b0d4e09f7616d312bc7c1300a2d7a94f\",\"license\":\"MIT\"}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","details":"Interface of the ERC20 standard as defined in the EIP. From https://github.com/OpenZeppelin/openzeppelin-contracts","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}}},"evm":{"assembly":"","bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"ewasm":{"wasm":""}}},"@aave/aave-stake/contracts/interfaces/IStakedToken.sol":{"IStakedToken":{"abi":[{"type":"function","name":"claimRewards","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"cooldown","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"redeem","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stake","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"}],"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cooldown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/aave-stake/contracts/interfaces/IStakedToken.sol\":\"IStakedToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/aave-stake/contracts/interfaces/IStakedToken.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\ninterface IStakedToken {\\n  \\n  function stake(address to, uint256 amount) external;\\n\\n  function redeem(address to, uint256 amount) external;\\n\\n  function cooldown() external;\\n\\n  function claimRewards(address to, uint256 amount) external;\\n}\\n\",\"keccak256\":\"0x96309403461031e5b796bcd97cd504fdaa60487360abb795a51171dbcec596a2\",\"license\":\"agpl-3.0\"}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev"},"evm":{"assembly":"","bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"claimRewards(address,uint256)":"9a99b4f0","cooldown()":"787a08a6","redeem(address,uint256)":"1e9a6950","stake(address,uint256)":"adc9772e"}},"ewasm":{"wasm":""}}},"@aave/aave-stake/contracts/lib/Address.sol":{"Address":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type From https://github.com/OpenZeppelin/openzeppelin-contracts\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/aave-stake/contracts/lib/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/aave-stake/contracts/lib/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n * From https://github.com/OpenZeppelin/openzeppelin-contracts\\n */\\nlibrary Address {\\n  /**\\n   * @dev Returns true if `account` is a contract.\\n   *\\n   * [IMPORTANT]\\n   * ====\\n   * It is unsafe to assume that an address for which this function returns\\n   * false is an externally-owned account (EOA) and not a contract.\\n   *\\n   * Among others, `isContract` will return false for the following\\n   * types of addresses:\\n   *\\n   *  - an externally-owned account\\n   *  - a contract in construction\\n   *  - an address where a contract will be created\\n   *  - an address where a contract lived, but was destroyed\\n   * ====\\n   */\\n  function isContract(address account) internal view returns (bool) {\\n    // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\\n    // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\\n    // for accounts without code, i.e. `keccak256('')`\\n    bytes32 codehash;\\n    bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n    // solhint-disable-next-line no-inline-assembly\\n    assembly {\\n      codehash := extcodehash(account)\\n    }\\n    return (codehash != accountHash && codehash != 0x0);\\n  }\\n\\n  /**\\n   * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n   * `recipient`, forwarding all available gas and reverting on errors.\\n   *\\n   * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n   * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n   * imposed by `transfer`, making them unable to receive funds via\\n   * `transfer`. {sendValue} removes this limitation.\\n   *\\n   * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n   *\\n   * IMPORTANT: because control is transferred to `recipient`, care must be\\n   * taken to not create reentrancy vulnerabilities. Consider using\\n   * {ReentrancyGuard} or the\\n   * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n   */\\n  function sendValue(address payable recipient, uint256 amount) internal {\\n    require(address(this).balance >= amount, 'Address: insufficient balance');\\n\\n    // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n    (bool success, ) = recipient.call{value: amount}('');\\n    require(success, 'Address: unable to send value, recipient may have reverted');\\n  }\\n}\\n\",\"keccak256\":\"0x456a1aebf00cb1f2987ca41f1924e4811703f10800a34ecb759e5d1dc472bb78\",\"license\":\"MIT\"}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","details":"Collection of functions related to the address type From https://github.com/OpenZeppelin/openzeppelin-contracts"},"evm":{"assembly":"    /* \"@aave/aave-stake/contracts/lib/Address.sol\":187:2585  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":187:2585  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e558ad1ff4b7c36816c6f3c8b6efe1c60f463d010c446a3d1bdf9d92c4f28e2764736f6c63430007050033\n}\n","legacyAssembly":{".code":[{"begin":187,"end":2585,"name":"PUSH #[$]","source":2,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":187,"end":2585,"name":"PUSH [$]","source":2,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":187,"end":2585,"name":"PUSH","source":2,"value":"B"},{"begin":187,"end":2585,"name":"DUP3","source":2},{"begin":187,"end":2585,"name":"DUP3","source":2},{"begin":187,"end":2585,"name":"DUP3","source":2},{"begin":187,"end":2585,"name":"CODECOPY","source":2},{"begin":187,"end":2585,"name":"DUP1","source":2},{"begin":187,"end":2585,"name":"MLOAD","source":2},{"begin":187,"end":2585,"name":"PUSH","source":2,"value":"0"},{"begin":187,"end":2585,"name":"BYTE","source":2},{"begin":187,"end":2585,"name":"PUSH","source":2,"value":"73"},{"begin":187,"end":2585,"name":"EQ","source":2},{"begin":187,"end":2585,"name":"PUSH [tag]","source":2,"value":"1"},{"begin":187,"end":2585,"name":"JUMPI","source":2},{"begin":187,"end":2585,"name":"INVALID","source":2},{"begin":187,"end":2585,"name":"tag","source":2,"value":"1"},{"begin":187,"end":2585,"name":"JUMPDEST","source":2},{"begin":187,"end":2585,"name":"ADDRESS","source":2},{"begin":187,"end":2585,"name":"PUSH","source":2,"value":"0"},{"begin":187,"end":2585,"name":"MSTORE","source":2},{"begin":187,"end":2585,"name":"PUSH","source":2,"value":"73"},{"begin":187,"end":2585,"name":"DUP2","source":2},{"begin":187,"end":2585,"name":"MSTORE8","source":2},{"begin":187,"end":2585,"name":"DUP3","source":2},{"begin":187,"end":2585,"name":"DUP2","source":2},{"begin":187,"end":2585,"name":"RETURN","source":2}],".data":{"0":{".auxdata":"a2646970667358221220e558ad1ff4b7c36816c6f3c8b6efe1c60f463d010c446a3d1bdf9d92c4f28e2764736f6c63430007050033",".code":[{"begin":187,"end":2585,"name":"PUSHDEPLOYADDRESS","source":2},{"begin":187,"end":2585,"name":"ADDRESS","source":2},{"begin":187,"end":2585,"name":"EQ","source":2},{"begin":187,"end":2585,"name":"PUSH","source":2,"value":"80"},{"begin":187,"end":2585,"name":"PUSH","source":2,"value":"40"},{"begin":187,"end":2585,"name":"MSTORE","source":2},{"begin":187,"end":2585,"name":"PUSH","source":2,"value":"0"},{"begin":187,"end":2585,"name":"DUP1","source":2},{"begin":187,"end":2585,"name":"REVERT","source":2}]}}},"bytecode":{"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e558ad1ff4b7c36816c6f3c8b6efe1c60f463d010c446a3d1bdf9d92c4f28e2764736f6c63430007050033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PC 0xAD 0x1F DELEGATECALL 0xB7 0xC3 PUSH9 0x16C6F3C8B6EFE1C60F CHAINID RETURNDATASIZE ADD 0xC DIFFICULTY PUSH11 0x3D1BDF9D92C4F28E276473 PUSH16 0x6C634300070500330000000000000000 ","sourceMap":"187:2398:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e558ad1ff4b7c36816c6f3c8b6efe1c60f463d010c446a3d1bdf9d92c4f28e2764736f6c63430007050033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PC 0xAD 0x1F DELEGATECALL 0xB7 0xC3 PUSH9 0x16C6F3C8B6EFE1C60F CHAINID RETURNDATASIZE ADD 0xC DIFFICULTY PUSH11 0x3D1BDF9D92C4F28E276473 PUSH16 0x6C634300070500330000000000000000 ","sourceMap":"187:2398:2:-:0;;;;;;;;","linkReferences":{}},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"external":{},"internal":{"isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite"}}},"ewasm":{"wasm":""}}},"@aave/aave-stake/contracts/lib/SafeERC20.sol":{"SafeERC20":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"From https://github.com/OpenZeppelin/openzeppelin-contracts Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/aave-stake/contracts/lib/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/aave-stake/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n * From https://github.com/OpenZeppelin/openzeppelin-contracts\\n */\\ninterface IERC20 {\\n  /**\\n   * @dev Returns the amount of tokens in existence.\\n   */\\n  function totalSupply() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the amount of tokens owned by `account`.\\n   */\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  /**\\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Returns the remaining number of tokens that `spender` will be\\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n   * zero by default.\\n   *\\n   * This value changes when {approve} or {transferFrom} are called.\\n   */\\n  function allowance(address owner, address spender) external view returns (uint256);\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n   * that someone may use both the old and the new allowance by unfortunate\\n   * transaction ordering. One possible solution to mitigate this race\\n   * condition is to first reduce the spender's allowance to 0 and set the\\n   * desired value afterwards:\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n   *\\n   * Emits an {Approval} event.\\n   */\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n   * allowance mechanism. `amount` is then deducted from the caller's\\n   * allowance.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  /**\\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n   * another (`to`).\\n   *\\n   * Note that `value` may be zero.\\n   */\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  /**\\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n   * a call to {approve}. `value` is the new allowance.\\n   */\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x150506e2e40dc3cea841fe0ade6021b9b0d4e09f7616d312bc7c1300a2d7a94f\",\"license\":\"MIT\"},\"@aave/aave-stake/contracts/lib/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n * From https://github.com/OpenZeppelin/openzeppelin-contracts\\n */\\nlibrary Address {\\n  /**\\n   * @dev Returns true if `account` is a contract.\\n   *\\n   * [IMPORTANT]\\n   * ====\\n   * It is unsafe to assume that an address for which this function returns\\n   * false is an externally-owned account (EOA) and not a contract.\\n   *\\n   * Among others, `isContract` will return false for the following\\n   * types of addresses:\\n   *\\n   *  - an externally-owned account\\n   *  - a contract in construction\\n   *  - an address where a contract will be created\\n   *  - an address where a contract lived, but was destroyed\\n   * ====\\n   */\\n  function isContract(address account) internal view returns (bool) {\\n    // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\\n    // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\\n    // for accounts without code, i.e. `keccak256('')`\\n    bytes32 codehash;\\n    bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n    // solhint-disable-next-line no-inline-assembly\\n    assembly {\\n      codehash := extcodehash(account)\\n    }\\n    return (codehash != accountHash && codehash != 0x0);\\n  }\\n\\n  /**\\n   * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n   * `recipient`, forwarding all available gas and reverting on errors.\\n   *\\n   * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n   * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n   * imposed by `transfer`, making them unable to receive funds via\\n   * `transfer`. {sendValue} removes this limitation.\\n   *\\n   * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n   *\\n   * IMPORTANT: because control is transferred to `recipient`, care must be\\n   * taken to not create reentrancy vulnerabilities. Consider using\\n   * {ReentrancyGuard} or the\\n   * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n   */\\n  function sendValue(address payable recipient, uint256 amount) internal {\\n    require(address(this).balance >= amount, 'Address: insufficient balance');\\n\\n    // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n    (bool success, ) = recipient.call{value: amount}('');\\n    require(success, 'Address: unable to send value, recipient may have reverted');\\n  }\\n}\\n\",\"keccak256\":\"0x456a1aebf00cb1f2987ca41f1924e4811703f10800a34ecb759e5d1dc472bb78\",\"license\":\"MIT\"},\"@aave/aave-stake/contracts/lib/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.7.5;\\n\\nimport {IERC20} from '../interfaces/IERC20.sol';\\nimport {SafeMath} from './SafeMath.sol';\\nimport {Address} from './Address.sol';\\n\\n/**\\n * @title SafeERC20\\n * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\\n * Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n  using SafeMath for uint256;\\n  using Address for address;\\n\\n  function safeTransfer(\\n    IERC20 token,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n  }\\n\\n  function safeTransferFrom(\\n    IERC20 token,\\n    address from,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n  }\\n\\n  function safeApprove(\\n    IERC20 token,\\n    address spender,\\n    uint256 value\\n  ) internal {\\n    require(\\n      (value == 0) || (token.allowance(address(this), spender) == 0),\\n      'SafeERC20: approve from non-zero to non-zero allowance'\\n    );\\n    callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n  }\\n\\n  function callOptionalReturn(IERC20 token, bytes memory data) private {\\n    require(address(token).isContract(), 'SafeERC20: call to non-contract');\\n\\n    // solhint-disable-next-line avoid-low-level-calls\\n    (bool success, bytes memory returndata) = address(token).call(data);\\n    require(success, 'SafeERC20: low-level call failed');\\n\\n    if (returndata.length > 0) {\\n      // Return data is optional\\n      // solhint-disable-next-line max-line-length\\n      require(abi.decode(returndata, (bool)), 'SafeERC20: ERC20 operation did not succeed');\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0xbba27d4b67c08f2a51ecf534aadfd510260996fcf91299691e955ee7539dd5a0\",\"license\":\"MIT\"},\"@aave/aave-stake/contracts/lib/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\\n * Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n  /**\\n   * @dev Returns the addition of two unsigned integers, reverting on\\n   * overflow.\\n   *\\n   * Counterpart to Solidity's `+` operator.\\n   *\\n   * Requirements:\\n   * - Addition cannot overflow.\\n   */\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n    uint256 c = a + b;\\n    require(c >= a, 'SafeMath: addition overflow');\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the subtraction of two unsigned integers, reverting on\\n   * overflow (when the result is negative).\\n   *\\n   * Counterpart to Solidity's `-` operator.\\n   *\\n   * Requirements:\\n   * - Subtraction cannot overflow.\\n   */\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return sub(a, b, 'SafeMath: subtraction overflow');\\n  }\\n\\n  /**\\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n   * overflow (when the result is negative).\\n   *\\n   * Counterpart to Solidity's `-` operator.\\n   *\\n   * Requirements:\\n   * - Subtraction cannot overflow.\\n   */\\n  function sub(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b <= a, errorMessage);\\n    uint256 c = a - b;\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the multiplication of two unsigned integers, reverting on\\n   * overflow.\\n   *\\n   * Counterpart to Solidity's `*` operator.\\n   *\\n   * Requirements:\\n   * - Multiplication cannot overflow.\\n   */\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n    // benefit is lost if 'b' is also tested.\\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n    if (a == 0) {\\n      return 0;\\n    }\\n\\n    uint256 c = a * b;\\n    require(c / a == b, 'SafeMath: multiplication overflow');\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the integer division of two unsigned integers. Reverts on\\n   * division by zero. The result is rounded towards zero.\\n   *\\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n   * uses an invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return div(a, b, 'SafeMath: division by zero');\\n  }\\n\\n  /**\\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n   * division by zero. The result is rounded towards zero.\\n   *\\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n   * uses an invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function div(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    // Solidity only automatically asserts when dividing by 0\\n    require(b > 0, errorMessage);\\n    uint256 c = a / b;\\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n   * Reverts when dividing by zero.\\n   *\\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\\n   * invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return mod(a, b, 'SafeMath: modulo by zero');\\n  }\\n\\n  /**\\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n   * Reverts with custom message when dividing by zero.\\n   *\\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\\n   * invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function mod(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b != 0, errorMessage);\\n    return a % b;\\n  }\\n}\\n\",\"keccak256\":\"0xf32a71745588178f5f64b96e7766589e48d5402c4679b3c04085760f9437f00b\",\"license\":\"agpl-3.0\"}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","details":"From https://github.com/OpenZeppelin/openzeppelin-contracts Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","title":"SafeERC20"},"evm":{"assembly":"    /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":708:2104  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":708:2104  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220af3941d0f5eb6b701610a99a048305acea7e17930c4d253d607d7ca507bedb3c64736f6c63430007050033\n}\n","legacyAssembly":{".code":[{"begin":708,"end":2104,"name":"PUSH #[$]","source":3,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":708,"end":2104,"name":"PUSH [$]","source":3,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":708,"end":2104,"name":"PUSH","source":3,"value":"B"},{"begin":708,"end":2104,"name":"DUP3","source":3},{"begin":708,"end":2104,"name":"DUP3","source":3},{"begin":708,"end":2104,"name":"DUP3","source":3},{"begin":708,"end":2104,"name":"CODECOPY","source":3},{"begin":708,"end":2104,"name":"DUP1","source":3},{"begin":708,"end":2104,"name":"MLOAD","source":3},{"begin":708,"end":2104,"name":"PUSH","source":3,"value":"0"},{"begin":708,"end":2104,"name":"BYTE","source":3},{"begin":708,"end":2104,"name":"PUSH","source":3,"value":"73"},{"begin":708,"end":2104,"name":"EQ","source":3},{"begin":708,"end":2104,"name":"PUSH [tag]","source":3,"value":"1"},{"begin":708,"end":2104,"name":"JUMPI","source":3},{"begin":708,"end":2104,"name":"INVALID","source":3},{"begin":708,"end":2104,"name":"tag","source":3,"value":"1"},{"begin":708,"end":2104,"name":"JUMPDEST","source":3},{"begin":708,"end":2104,"name":"ADDRESS","source":3},{"begin":708,"end":2104,"name":"PUSH","source":3,"value":"0"},{"begin":708,"end":2104,"name":"MSTORE","source":3},{"begin":708,"end":2104,"name":"PUSH","source":3,"value":"73"},{"begin":708,"end":2104,"name":"DUP2","source":3},{"begin":708,"end":2104,"name":"MSTORE8","source":3},{"begin":708,"end":2104,"name":"DUP3","source":3},{"begin":708,"end":2104,"name":"DUP2","source":3},{"begin":708,"end":2104,"name":"RETURN","source":3}],".data":{"0":{".auxdata":"a2646970667358221220af3941d0f5eb6b701610a99a048305acea7e17930c4d253d607d7ca507bedb3c64736f6c63430007050033",".code":[{"begin":708,"end":2104,"name":"PUSHDEPLOYADDRESS","source":3},{"begin":708,"end":2104,"name":"ADDRESS","source":3},{"begin":708,"end":2104,"name":"EQ","source":3},{"begin":708,"end":2104,"name":"PUSH","source":3,"value":"80"},{"begin":708,"end":2104,"name":"PUSH","source":3,"value":"40"},{"begin":708,"end":2104,"name":"MSTORE","source":3},{"begin":708,"end":2104,"name":"PUSH","source":3,"value":"0"},{"begin":708,"end":2104,"name":"DUP1","source":3},{"begin":708,"end":2104,"name":"REVERT","source":3}]}}},"bytecode":{"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220af3941d0f5eb6b701610a99a048305acea7e17930c4d253d607d7ca507bedb3c64736f6c63430007050033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF CODECOPY COINBASE 0xD0 CREATE2 0xEB PUSH12 0x701610A99A048305ACEA7E17 SWAP4 0xC 0x4D 0x25 RETURNDATASIZE PUSH1 0x7D PUSH29 0xA507BEDB3C64736F6C6343000705003300000000000000000000000000 ","sourceMap":"708:1396:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220af3941d0f5eb6b701610a99a048305acea7e17930c4d253d607d7ca507bedb3c64736f6c63430007050033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF CODECOPY COINBASE 0xD0 CREATE2 0xEB PUSH12 0x701610A99A048305ACEA7E17 SWAP4 0xC 0x4D 0x25 RETURNDATASIZE PUSH1 0x7D PUSH29 0xA507BEDB3C64736F6C6343000705003300000000000000000000000000 ","sourceMap":"708:1396:3:-:0;;;;;;;;","linkReferences":{}},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"external":{},"internal":{"callOptionalReturn(contract IERC20,bytes memory)":"infinite","safeApprove(contract IERC20,address,uint256)":"infinite","safeTransfer(contract IERC20,address,uint256)":"infinite","safeTransferFrom(contract IERC20,address,address,uint256)":"infinite"}}},"ewasm":{"wasm":""}}},"@aave/aave-stake/contracts/lib/SafeMath.sol":{"SafeMath":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"From https://github.com/OpenZeppelin/openzeppelin-contracts Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/aave-stake/contracts/lib/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/aave-stake/contracts/lib/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\\n * Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n  /**\\n   * @dev Returns the addition of two unsigned integers, reverting on\\n   * overflow.\\n   *\\n   * Counterpart to Solidity's `+` operator.\\n   *\\n   * Requirements:\\n   * - Addition cannot overflow.\\n   */\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n    uint256 c = a + b;\\n    require(c >= a, 'SafeMath: addition overflow');\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the subtraction of two unsigned integers, reverting on\\n   * overflow (when the result is negative).\\n   *\\n   * Counterpart to Solidity's `-` operator.\\n   *\\n   * Requirements:\\n   * - Subtraction cannot overflow.\\n   */\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return sub(a, b, 'SafeMath: subtraction overflow');\\n  }\\n\\n  /**\\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n   * overflow (when the result is negative).\\n   *\\n   * Counterpart to Solidity's `-` operator.\\n   *\\n   * Requirements:\\n   * - Subtraction cannot overflow.\\n   */\\n  function sub(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b <= a, errorMessage);\\n    uint256 c = a - b;\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the multiplication of two unsigned integers, reverting on\\n   * overflow.\\n   *\\n   * Counterpart to Solidity's `*` operator.\\n   *\\n   * Requirements:\\n   * - Multiplication cannot overflow.\\n   */\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n    // benefit is lost if 'b' is also tested.\\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n    if (a == 0) {\\n      return 0;\\n    }\\n\\n    uint256 c = a * b;\\n    require(c / a == b, 'SafeMath: multiplication overflow');\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the integer division of two unsigned integers. Reverts on\\n   * division by zero. The result is rounded towards zero.\\n   *\\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n   * uses an invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return div(a, b, 'SafeMath: division by zero');\\n  }\\n\\n  /**\\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n   * division by zero. The result is rounded towards zero.\\n   *\\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n   * uses an invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function div(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    // Solidity only automatically asserts when dividing by 0\\n    require(b > 0, errorMessage);\\n    uint256 c = a / b;\\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n   * Reverts when dividing by zero.\\n   *\\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\\n   * invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return mod(a, b, 'SafeMath: modulo by zero');\\n  }\\n\\n  /**\\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n   * Reverts with custom message when dividing by zero.\\n   *\\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\\n   * invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function mod(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b != 0, errorMessage);\\n    return a % b;\\n  }\\n}\\n\",\"keccak256\":\"0xf32a71745588178f5f64b96e7766589e48d5402c4679b3c04085760f9437f00b\",\"license\":\"agpl-3.0\"}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","details":"From https://github.com/OpenZeppelin/openzeppelin-contracts Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always."},"evm":{"assembly":"    /* \"@aave/aave-stake/contracts/lib/SafeMath.sol\":688:5030  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@aave/aave-stake/contracts/lib/SafeMath.sol\":688:5030  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207e60a8f6c60dc0ec8a05a61fab27caa907f14eb1559d5b4e478a06d590747c1d64736f6c63430007050033\n}\n","legacyAssembly":{".code":[{"begin":688,"end":5030,"name":"PUSH #[$]","source":4,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":688,"end":5030,"name":"PUSH [$]","source":4,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":688,"end":5030,"name":"PUSH","source":4,"value":"B"},{"begin":688,"end":5030,"name":"DUP3","source":4},{"begin":688,"end":5030,"name":"DUP3","source":4},{"begin":688,"end":5030,"name":"DUP3","source":4},{"begin":688,"end":5030,"name":"CODECOPY","source":4},{"begin":688,"end":5030,"name":"DUP1","source":4},{"begin":688,"end":5030,"name":"MLOAD","source":4},{"begin":688,"end":5030,"name":"PUSH","source":4,"value":"0"},{"begin":688,"end":5030,"name":"BYTE","source":4},{"begin":688,"end":5030,"name":"PUSH","source":4,"value":"73"},{"begin":688,"end":5030,"name":"EQ","source":4},{"begin":688,"end":5030,"name":"PUSH [tag]","source":4,"value":"1"},{"begin":688,"end":5030,"name":"JUMPI","source":4},{"begin":688,"end":5030,"name":"INVALID","source":4},{"begin":688,"end":5030,"name":"tag","source":4,"value":"1"},{"begin":688,"end":5030,"name":"JUMPDEST","source":4},{"begin":688,"end":5030,"name":"ADDRESS","source":4},{"begin":688,"end":5030,"name":"PUSH","source":4,"value":"0"},{"begin":688,"end":5030,"name":"MSTORE","source":4},{"begin":688,"end":5030,"name":"PUSH","source":4,"value":"73"},{"begin":688,"end":5030,"name":"DUP2","source":4},{"begin":688,"end":5030,"name":"MSTORE8","source":4},{"begin":688,"end":5030,"name":"DUP3","source":4},{"begin":688,"end":5030,"name":"DUP2","source":4},{"begin":688,"end":5030,"name":"RETURN","source":4}],".data":{"0":{".auxdata":"a26469706673582212207e60a8f6c60dc0ec8a05a61fab27caa907f14eb1559d5b4e478a06d590747c1d64736f6c63430007050033",".code":[{"begin":688,"end":5030,"name":"PUSHDEPLOYADDRESS","source":4},{"begin":688,"end":5030,"name":"ADDRESS","source":4},{"begin":688,"end":5030,"name":"EQ","source":4},{"begin":688,"end":5030,"name":"PUSH","source":4,"value":"80"},{"begin":688,"end":5030,"name":"PUSH","source":4,"value":"40"},{"begin":688,"end":5030,"name":"MSTORE","source":4},{"begin":688,"end":5030,"name":"PUSH","source":4,"value":"0"},{"begin":688,"end":5030,"name":"DUP1","source":4},{"begin":688,"end":5030,"name":"REVERT","source":4}]}}},"bytecode":{"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207e60a8f6c60dc0ec8a05a61fab27caa907f14eb1559d5b4e478a06d590747c1d64736f6c63430007050033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0x60A8F6C60DC0EC8A05A61FAB27CAA907F14EB1559D5B4E478A06D590747C1D PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ","sourceMap":"688:4342:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207e60a8f6c60dc0ec8a05a61fab27caa907f14eb1559d5b4e478a06d590747c1d64736f6c63430007050033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0x60A8F6C60DC0EC8A05A61FAB27CAA907F14EB1559D5B4E478A06D590747C1D PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ","sourceMap":"688:4342:4:-:0;;;;;;;;","linkReferences":{}},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"external":{},"internal":{"add(uint256,uint256)":"infinite","div(uint256,uint256)":"infinite","div(uint256,uint256,string memory)":"infinite","mod(uint256,uint256)":"infinite","mod(uint256,uint256,string memory)":"infinite","mul(uint256,uint256)":"infinite","sub(uint256,uint256)":"infinite","sub(uint256,uint256,string memory)":"infinite"}}},"ewasm":{"wasm":""}}},"@aave/aave-stake/contracts/utils/VersionedInitializable.sol":{"VersionedInitializable":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Aave, inspired by the OpenZeppelin Initializable contract\",\"details\":\"Helper contract to support initializer functions. To use it, replace the constructor with a function that has the `initializer` modifier. WARNING: Unlike constructors, initializer functions must be manually invoked. This applies both to deploying an Initializable contract, as well as extending an Initializable contract via inheritance. WARNING: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or ensure that all initializers are idempotent, because this is not dealt with automatically as with constructors.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"lastInitializedRevision\":{\"details\":\"Indicates that the contract has been initialized.\"}},\"title\":\"VersionedInitializable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/aave-stake/contracts/utils/VersionedInitializable.sol\":\"VersionedInitializable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/aave-stake/contracts/utils/VersionedInitializable.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\n/**\\n * @title VersionedInitializable\\n *\\n * @dev Helper contract to support initializer functions. To use it, replace\\n * the constructor with a function that has the `initializer` modifier.\\n * WARNING: Unlike constructors, initializer functions must be manually\\n * invoked. This applies both to deploying an Initializable contract, as well\\n * as extending an Initializable contract via inheritance.\\n * WARNING: When used with inheritance, manual care must be taken to not invoke\\n * a parent initializer twice, or ensure that all initializers are idempotent,\\n * because this is not dealt with automatically as with constructors.\\n *\\n * @author Aave, inspired by the OpenZeppelin Initializable contract\\n */\\nabstract contract VersionedInitializable {\\n  /**\\n   * @dev Indicates that the contract has been initialized.\\n   */\\n  uint256 internal lastInitializedRevision = 0;\\n\\n  /**\\n   * @dev Modifier to use in the initializer function of a contract.\\n   */\\n  modifier initializer() {\\n    uint256 revision = getRevision();\\n    require(revision > lastInitializedRevision, 'Contract instance has already been initialized');\\n\\n    lastInitializedRevision = revision;\\n\\n    _;\\n  }\\n\\n  /// @dev returns the revision number of the contract.\\n  /// Needs to be defined in the inherited class as a constant.\\n  function getRevision() internal pure virtual returns (uint256);\\n\\n  // Reserved storage space to allow for layout changes in the future.\\n  uint256[50] private ______gap;\\n}\\n\",\"keccak256\":\"0xedfec4c491ad24c0a1024fc801c22f2a16d1f316f2a5cdcc883e0bbc451cffc7\",\"license\":\"agpl-3.0\"}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","author":"Aave, inspired by the OpenZeppelin Initializable contract","details":"Helper contract to support initializer functions. To use it, replace the constructor with a function that has the `initializer` modifier. WARNING: Unlike constructors, initializer functions must be manually invoked. This applies both to deploying an Initializable contract, as well as extending an Initializable contract via inheritance. WARNING: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or ensure that all initializers are idempotent, because this is not dealt with automatically as with constructors.","title":"VersionedInitializable"},"storageLayout":{"storage":[{"astId":528,"contract":"@aave/aave-stake/contracts/utils/VersionedInitializable.sol:VersionedInitializable","label":"lastInitializedRevision","offset":0,"slot":"0","type":"t_uint256"},{"astId":559,"contract":"@aave/aave-stake/contracts/utils/VersionedInitializable.sol:VersionedInitializable","label":"______gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600","base":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"evm":{"assembly":"","bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}}},"ewasm":{"wasm":""}}},"contracts/incentives/DistributionManager.sol":{"DistributionManager":{"abi":[{"type":"constructor","inputs":[{"name":"emissionManager","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"DISTRIBUTION_END","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"EMISSION_MANAGER","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"PRECISION","inputs":[],"outputs":[{"name":"","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"assets","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"emissionPerSecond","type":"uint104","internalType":"uint104"},{"name":"index","type":"uint104","internalType":"uint104"},{"name":"lastUpdateTimestamp","type":"uint40","internalType":"uint40"}],"stateMutability":"view"},{"type":"function","name":"getAssetData","inputs":[{"name":"asset","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getDistributionEnd","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getUserAssetData","inputs":[{"name":"user","type":"address","internalType":"address"},{"name":"asset","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"setDistributionEnd","inputs":[{"name":"distributionEnd","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"AssetConfigUpdated","inputs":[{"name":"asset","type":"address","indexed":true,"internalType":"address"},{"name":"emission","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"AssetIndexUpdated","inputs":[{"name":"asset","type":"address","indexed":true,"internalType":"address"},{"name":"index","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"DistributionEndUpdated","inputs":[{"name":"newDistributionEnd","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"UserIndexUpdated","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"asset","type":"address","indexed":true,"internalType":"address"},{"name":"index","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emissionManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"emission\",\"type\":\"uint256\"}],\"name\":\"AssetConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"AssetIndexUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDistributionEnd\",\"type\":\"uint256\"}],\"name\":\"DistributionEndUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"UserIndexUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DISTRIBUTION_END\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EMISSION_MANAGER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"assets\",\"outputs\":[{\"internalType\":\"uint104\",\"name\":\"emissionPerSecond\",\"type\":\"uint104\"},{\"internalType\":\"uint104\",\"name\":\"index\",\"type\":\"uint104\"},{\"internalType\":\"uint40\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint40\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDistributionEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getUserAssetData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"distributionEnd\",\"type\":\"uint256\"}],\"name\":\"setDistributionEnd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave*\",\"kind\":\"dev\",\"methods\":{\"DISTRIBUTION_END()\":{\"details\":\"for backwards compatibility with the previous DistributionManager used\",\"returns\":{\"_0\":\"The end of the distribution*\"}},\"getAssetData(address)\":{\"details\":\"Returns the configuration of the distribution for a certain asset\",\"params\":{\"asset\":\"The address of the reference asset of the distribution\"},\"returns\":{\"_0\":\"The asset index, the emission per second and the last updated timestamp*\"}},\"getDistributionEnd()\":{\"details\":\"Gets the end date for the distribution\",\"returns\":{\"_0\":\"The end of the distribution*\"}},\"getUserAssetData(address,address)\":{\"details\":\"Returns the data of an user on a distribution\",\"params\":{\"asset\":\"The address of the reference asset of the distribution\",\"user\":\"Address of the user\"},\"returns\":{\"_0\":\"The new index*\"}},\"setDistributionEnd(uint256)\":{\"details\":\"Sets the end date for the distribution\",\"params\":{\"distributionEnd\":\"The end date timestamp*\"}}},\"title\":\"DistributionManager\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Accounting contract to manage multiple staking distributions\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/incentives/DistributionManager.sol\":\"DistributionManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/incentives/DistributionManager.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\npragma experimental ABIEncoderV2;\\n\\nimport {IAaveDistributionManager} from '../interfaces/IAaveDistributionManager.sol';\\nimport {SafeMath} from '../lib/SafeMath.sol';\\nimport {DistributionTypes} from '../lib/DistributionTypes.sol';\\n\\n/**\\n * @title DistributionManager\\n * @notice Accounting contract to manage multiple staking distributions\\n * @author Aave\\n **/\\ncontract DistributionManager is IAaveDistributionManager {\\n  using SafeMath for uint256;\\n\\n  struct AssetData {\\n    uint104 emissionPerSecond;\\n    uint104 index;\\n    uint40 lastUpdateTimestamp;\\n    mapping(address => uint256) users;\\n  }\\n\\n  address public immutable EMISSION_MANAGER;\\n\\n  uint8 public constant PRECISION = 18;\\n\\n  mapping(address => AssetData) public assets;\\n\\n  uint256 internal _distributionEnd;\\n\\n  modifier onlyEmissionManager() {\\n    require(msg.sender == EMISSION_MANAGER, 'ONLY_EMISSION_MANAGER');\\n    _;\\n  }\\n\\n  constructor(address emissionManager) {\\n    EMISSION_MANAGER = emissionManager;\\n  }\\n\\n  /// @inheritdoc IAaveDistributionManager\\n  function setDistributionEnd(uint256 distributionEnd) external override onlyEmissionManager {\\n    _distributionEnd = distributionEnd;\\n    emit DistributionEndUpdated(distributionEnd);\\n  }\\n\\n  /// @inheritdoc IAaveDistributionManager\\n  function getDistributionEnd() external view override returns (uint256) {\\n    return _distributionEnd;\\n  }\\n\\n  /// @inheritdoc IAaveDistributionManager\\n  function DISTRIBUTION_END() external view override returns (uint256) {\\n    return _distributionEnd;\\n  }\\n\\n  /// @inheritdoc IAaveDistributionManager\\n  function getUserAssetData(address user, address asset) public view override returns (uint256) {\\n    return assets[asset].users[user];\\n  }\\n\\n  /// @inheritdoc IAaveDistributionManager\\n  function getAssetData(address asset) public view override returns (uint256, uint256, uint256) {\\n    return (assets[asset].index, assets[asset].emissionPerSecond, assets[asset].lastUpdateTimestamp);\\n  }\\n\\n  /**\\n   * @dev Configure the assets for a specific emission\\n   * @param assetsConfigInput The array of each asset configuration\\n   **/\\n  function _configureAssets(DistributionTypes.AssetConfigInput[] memory assetsConfigInput)\\n    internal\\n  {\\n    for (uint256 i = 0; i < assetsConfigInput.length; i++) {\\n      AssetData storage assetConfig = assets[assetsConfigInput[i].underlyingAsset];\\n\\n      _updateAssetStateInternal(\\n        assetsConfigInput[i].underlyingAsset,\\n        assetConfig,\\n        assetsConfigInput[i].totalStaked\\n      );\\n\\n      assetConfig.emissionPerSecond = assetsConfigInput[i].emissionPerSecond;\\n\\n      emit AssetConfigUpdated(\\n        assetsConfigInput[i].underlyingAsset,\\n        assetsConfigInput[i].emissionPerSecond\\n      );\\n    }\\n  }\\n\\n  /**\\n   * @dev Updates the state of one distribution, mainly rewards index and timestamp\\n   * @param asset The address of the asset being updated\\n   * @param assetConfig Storage pointer to the distribution's config\\n   * @param totalStaked Current total of staked assets for this distribution\\n   * @return The new distribution index\\n   **/\\n  function _updateAssetStateInternal(\\n    address asset,\\n    AssetData storage assetConfig,\\n    uint256 totalStaked\\n  ) internal returns (uint256) {\\n    uint256 oldIndex = assetConfig.index;\\n    uint256 emissionPerSecond = assetConfig.emissionPerSecond;\\n    uint128 lastUpdateTimestamp = assetConfig.lastUpdateTimestamp;\\n\\n    if (block.timestamp == lastUpdateTimestamp) {\\n      return oldIndex;\\n    }\\n\\n    uint256 newIndex =\\n      _getAssetIndex(oldIndex, emissionPerSecond, lastUpdateTimestamp, totalStaked);\\n\\n    if (newIndex != oldIndex) {\\n      require(uint104(newIndex) == newIndex, 'Index overflow');\\n      //optimization: storing one after another saves one SSTORE\\n      assetConfig.index = uint104(newIndex);\\n      assetConfig.lastUpdateTimestamp = uint40(block.timestamp);\\n      emit AssetIndexUpdated(asset, newIndex);\\n    } else {\\n      assetConfig.lastUpdateTimestamp = uint40(block.timestamp);\\n    }\\n\\n    return newIndex;\\n  }\\n\\n  /**\\n   * @dev Updates the state of an user in a distribution\\n   * @param user The user's address\\n   * @param asset The address of the reference asset of the distribution\\n   * @param stakedByUser Amount of tokens staked by the user in the distribution at the moment\\n   * @param totalStaked Total tokens staked in the distribution\\n   * @return The accrued rewards for the user until the moment\\n   **/\\n  function _updateUserAssetInternal(\\n    address user,\\n    address asset,\\n    uint256 stakedByUser,\\n    uint256 totalStaked\\n  ) internal returns (uint256) {\\n    AssetData storage assetData = assets[asset];\\n    uint256 userIndex = assetData.users[user];\\n    uint256 accruedRewards = 0;\\n\\n    uint256 newIndex = _updateAssetStateInternal(asset, assetData, totalStaked);\\n\\n    if (userIndex != newIndex) {\\n      if (stakedByUser != 0) {\\n        accruedRewards = _getRewards(stakedByUser, newIndex, userIndex);\\n      }\\n\\n      assetData.users[user] = newIndex;\\n      emit UserIndexUpdated(user, asset, newIndex);\\n    }\\n\\n    return accruedRewards;\\n  }\\n\\n  /**\\n   * @dev Used by \\\"frontend\\\" stake contracts to update the data of an user when claiming rewards from there\\n   * @param user The address of the user\\n   * @param stakes List of structs of the user data related with his stake\\n   * @return The accrued rewards for the user until the moment\\n   **/\\n  function _claimRewards(address user, DistributionTypes.UserStakeInput[] memory stakes)\\n    internal\\n    returns (uint256)\\n  {\\n    uint256 accruedRewards = 0;\\n\\n    for (uint256 i = 0; i < stakes.length; i++) {\\n      accruedRewards = accruedRewards.add(\\n        _updateUserAssetInternal(\\n          user,\\n          stakes[i].underlyingAsset,\\n          stakes[i].stakedByUser,\\n          stakes[i].totalStaked\\n        )\\n      );\\n    }\\n\\n    return accruedRewards;\\n  }\\n\\n  /**\\n   * @dev Return the accrued rewards for an user over a list of distribution\\n   * @param user The address of the user\\n   * @param stakes List of structs of the user data related with his stake\\n   * @return The accrued rewards for the user until the moment\\n   **/\\n  function _getUnclaimedRewards(address user, DistributionTypes.UserStakeInput[] memory stakes)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    uint256 accruedRewards = 0;\\n\\n    for (uint256 i = 0; i < stakes.length; i++) {\\n      AssetData storage assetConfig = assets[stakes[i].underlyingAsset];\\n      uint256 assetIndex =\\n        _getAssetIndex(\\n          assetConfig.index,\\n          assetConfig.emissionPerSecond,\\n          assetConfig.lastUpdateTimestamp,\\n          stakes[i].totalStaked\\n        );\\n\\n      accruedRewards = accruedRewards.add(\\n        _getRewards(stakes[i].stakedByUser, assetIndex, assetConfig.users[user])\\n      );\\n    }\\n    return accruedRewards;\\n  }\\n\\n  /**\\n   * @dev Internal function for the calculation of user's rewards on a distribution\\n   * @param principalUserBalance Amount staked by the user on a distribution\\n   * @param reserveIndex Current index of the distribution\\n   * @param userIndex Index stored for the user, representation his staking moment\\n   * @return The rewards\\n   **/\\n  function _getRewards(\\n    uint256 principalUserBalance,\\n    uint256 reserveIndex,\\n    uint256 userIndex\\n  ) internal pure returns (uint256) {\\n    return principalUserBalance.mul(reserveIndex.sub(userIndex)) / 10**uint256(PRECISION);\\n  }\\n\\n  /**\\n   * @dev Calculates the next value of an specific distribution index, with validations\\n   * @param currentIndex Current index of the distribution\\n   * @param emissionPerSecond Representing the total rewards distributed per second per asset unit, on the distribution\\n   * @param lastUpdateTimestamp Last moment this distribution was updated\\n   * @param totalBalance of tokens considered for the distribution\\n   * @return The new index.\\n   **/\\n  function _getAssetIndex(\\n    uint256 currentIndex,\\n    uint256 emissionPerSecond,\\n    uint128 lastUpdateTimestamp,\\n    uint256 totalBalance\\n  ) internal view returns (uint256) {\\n    uint256 distributionEnd = _distributionEnd;\\n    if (\\n      emissionPerSecond == 0 ||\\n      totalBalance == 0 ||\\n      lastUpdateTimestamp == block.timestamp ||\\n      lastUpdateTimestamp >= distributionEnd\\n    ) {\\n      return currentIndex;\\n    }\\n\\n    uint256 currentTimestamp =\\n      block.timestamp > distributionEnd ? distributionEnd : block.timestamp;\\n    uint256 timeDelta = currentTimestamp.sub(lastUpdateTimestamp);\\n    return\\n      emissionPerSecond.mul(timeDelta).mul(10**uint256(PRECISION)).div(totalBalance).add(\\n        currentIndex\\n      );\\n  }\\n}\\n\",\"keccak256\":\"0x4db01bc16911295af05d21c900045539eb0a926f6c73461b05b28e0b878f3560\",\"license\":\"agpl-3.0\"},\"contracts/interfaces/IAaveDistributionManager.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\npragma experimental ABIEncoderV2;\\n\\nimport {DistributionTypes} from '../lib/DistributionTypes.sol';\\n\\ninterface IAaveDistributionManager {\\n  \\n  event AssetConfigUpdated(address indexed asset, uint256 emission);\\n  event AssetIndexUpdated(address indexed asset, uint256 index);\\n  event UserIndexUpdated(address indexed user, address indexed asset, uint256 index);\\n  event DistributionEndUpdated(uint256 newDistributionEnd);\\n\\n  /**\\n  * @dev Sets the end date for the distribution\\n  * @param distributionEnd The end date timestamp\\n  **/\\n  function setDistributionEnd(uint256 distributionEnd) external;\\n\\n  /**\\n  * @dev Gets the end date for the distribution\\n  * @return The end of the distribution\\n  **/\\n  function getDistributionEnd() external view returns (uint256);\\n\\n  /**\\n  * @dev for backwards compatibility with the previous DistributionManager used\\n  * @return The end of the distribution\\n  **/\\n  function DISTRIBUTION_END() external view returns(uint256);\\n\\n   /**\\n   * @dev Returns the data of an user on a distribution\\n   * @param user Address of the user\\n   * @param asset The address of the reference asset of the distribution\\n   * @return The new index\\n   **/\\n   function getUserAssetData(address user, address asset) external view returns (uint256);\\n\\n   /**\\n   * @dev Returns the configuration of the distribution for a certain asset\\n   * @param asset The address of the reference asset of the distribution\\n   * @return The asset index, the emission per second and the last updated timestamp\\n   **/\\n   function getAssetData(address asset) external view returns (uint256, uint256, uint256);\\n}\\n\",\"keccak256\":\"0xe39e06bdb4b2df13217f8717de30808bf6bbf5805acb8a944a8fe4d2521aafca\",\"license\":\"agpl-3.0\"},\"contracts/lib/DistributionTypes.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\npragma experimental ABIEncoderV2;\\n\\nlibrary DistributionTypes {\\n  struct AssetConfigInput {\\n    uint104 emissionPerSecond;\\n    uint256 totalStaked;\\n    address underlyingAsset;\\n  }\\n\\n  struct UserStakeInput {\\n    address underlyingAsset;\\n    uint256 stakedByUser;\\n    uint256 totalStaked;\\n  }\\n}\\n\",\"keccak256\":\"0x8f1b12ff20b42316cc29449091350fdbd0f8d38e3dc5d0d7c5dae3978e3884e1\",\"license\":\"agpl-3.0\"},\"contracts/lib/SafeMath.sol\":{\"content\":\"\\n// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.7.5;\\n\\n/// @title Optimized overflow and underflow safe math operations\\n/// @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\\n/// inspired by uniswap V3\\nlibrary SafeMath {\\n    /// @notice Returns x + y, reverts if sum overflows uint256\\n    /// @param x The augend\\n    /// @param y The addend\\n    /// @return z The sum of x and y\\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require((z = x + y) >= x);\\n    }\\n\\n    /// @notice Returns x - y, reverts if underflows\\n    /// @param x The minuend\\n    /// @param y The subtrahend\\n    /// @return z The difference of x and y\\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require((z = x - y) <= x);\\n    }\\n\\n    /// @notice Returns x * y, reverts if overflows\\n    /// @param x The multiplicand\\n    /// @param y The multiplier\\n    /// @return z The product of x and y\\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require(x == 0 || (z = x * y) / x == y);\\n    }\\n\\n    function div(uint256 x, uint256 y) internal pure returns(uint256) {\\n        // no need to check for division by zero - solidity already reverts\\n        return x / y;\\n    }\\n}\",\"keccak256\":\"0x2b50d4f17460ae53fe080389614dc2fe17d5ecf8e315d61f2643a7482389f937\",\"license\":\"agpl-3.0\"}},\"version\":1}","userdoc":{"version":1,"kind":"user","notice":"Accounting contract to manage multiple staking distributions"},"devdoc":{"version":1,"kind":"dev","author":"Aave*","methods":{"DISTRIBUTION_END()":{"details":"for backwards compatibility with the previous DistributionManager used","returns":{"_0":"The end of the distribution*"}},"getAssetData(address)":{"details":"Returns the configuration of the distribution for a certain asset","params":{"asset":"The address of the reference asset of the distribution"},"returns":{"_0":"The asset index, the emission per second and the last updated timestamp*"}},"getDistributionEnd()":{"details":"Gets the end date for the distribution","returns":{"_0":"The end of the distribution*"}},"getUserAssetData(address,address)":{"details":"Returns the data of an user on a distribution","params":{"asset":"The address of the reference asset of the distribution","user":"Address of the user"},"returns":{"_0":"The new index*"}},"setDistributionEnd(uint256)":{"details":"Sets the end date for the distribution","params":{"distributionEnd":"The end date timestamp*"}}},"title":"DistributionManager"},"storageLayout":{"storage":[{"astId":595,"contract":"contracts/incentives/DistributionManager.sol:DistributionManager","label":"assets","offset":0,"slot":"0","type":"t_mapping(t_address,t_struct(AssetData)586_storage)"},{"astId":597,"contract":"contracts/incentives/DistributionManager.sol:DistributionManager","label":"_distributionEnd","offset":0,"slot":"1","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_struct(AssetData)586_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct DistributionManager.AssetData)","numberOfBytes":"32","value":"t_struct(AssetData)586_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_struct(AssetData)586_storage":{"encoding":"inplace","label":"struct DistributionManager.AssetData","numberOfBytes":"64","members":[{"astId":577,"contract":"contracts/incentives/DistributionManager.sol:DistributionManager","label":"emissionPerSecond","offset":0,"slot":"0","type":"t_uint104"},{"astId":579,"contract":"contracts/incentives/DistributionManager.sol:DistributionManager","label":"index","offset":13,"slot":"0","type":"t_uint104"},{"astId":581,"contract":"contracts/incentives/DistributionManager.sol:DistributionManager","label":"lastUpdateTimestamp","offset":26,"slot":"0","type":"t_uint40"},{"astId":585,"contract":"contracts/incentives/DistributionManager.sol:DistributionManager","label":"users","offset":0,"slot":"1","type":"t_mapping(t_address,t_uint256)"}]},"t_uint104":{"encoding":"inplace","label":"uint104","numberOfBytes":"13"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint40":{"encoding":"inplace","label":"uint40","numberOfBytes":"5"}}},"evm":{"assembly":"    /* \"contracts/incentives/DistributionManager.sol\":418:8573  contract DistributionManager is IAaveDistributionManager {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/incentives/DistributionManager.sol\":947:1029  constructor(address emissionManager) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/incentives/DistributionManager.sol\":990:1024  EMISSION_MANAGER = emissionManager */\n  0x60\n  shl\n  not(sub(shl(0x60, 0x01), 0x01))\n  and\n  0x80\n  mstore\n    /* \"contracts/incentives/DistributionManager.sol\":418:8573  contract DistributionManager is IAaveDistributionManager {... */\n  jump(tag_7)\n    /* \"#utility.yul\":14:324   */\ntag_3:\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:107   */\n  iszero\n  tag_9\n  jumpi\n    /* \"#utility.yul\":158:164   */\n  dup1\n    /* \"#utility.yul\":150:156   */\n  dup2\n    /* \"#utility.yul\":143:165   */\n  revert\n    /* \"#utility.yul\":105:107   */\ntag_9:\n    /* \"#utility.yul\":189:205   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":234:265   */\n  dup2\n  and\n    /* \"#utility.yul\":224:266   */\n  dup2\n  eq\n    /* \"#utility.yul\":214:216   */\n  tag_10\n  jumpi\n    /* \"#utility.yul\":285:291   */\n  dup2\n    /* \"#utility.yul\":277:283   */\n  dup3\n    /* \"#utility.yul\":270:292   */\n  revert\n    /* \"#utility.yul\":214:216   */\ntag_10:\n    /* \"#utility.yul\":313:318   */\n  swap4\n    /* \"#utility.yul\":95:324   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_7:\n    /* \"contracts/incentives/DistributionManager.sol\":418:8573  contract DistributionManager is IAaveDistributionManager {... */\n  shr(0x60, mload(0x80))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0x757234ff4c809d89eeac30d68291f4d3d650fbc62f3b098e171cb1e5a8acaf85\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/incentives/DistributionManager.sol\":418:8573  contract DistributionManager is IAaveDistributionManager {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xaaf5eb68\n      gt\n      tag_11\n      jumpi\n      dup1\n      0xaaf5eb68\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xcbcbb507\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xcc69afec\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf11b8188\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x1652e7b7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3373ee4c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x39ccbdd3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x919cd40f\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/incentives/DistributionManager.sol\":1795:1996  function getAssetData(address asset) public view override returns (uint256, uint256, uint256) {... */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/incentives/DistributionManager.sol\":1611:1748  function getUserAssetData(address user, address asset) public view override returns (uint256) {... */\n    tag_4:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n        /* \"contracts/incentives/DistributionManager.sol\":1076:1262  function setDistributionEnd(uint256 distributionEnd) external override onlyEmissionManager {... */\n    tag_5:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"contracts/incentives/DistributionManager.sol\":1461:1564  function DISTRIBUTION_END() external view override returns (uint256) {... */\n    tag_6:\n      tag_18\n      tag_29\n      jump\t// in\n        /* \"contracts/incentives/DistributionManager.sol\":703:739  uint8 public constant PRECISION = 18 */\n    tag_7:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n        /* \"contracts/incentives/DistributionManager.sol\":657:698  address public immutable EMISSION_MANAGER */\n    tag_8:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n        /* \"contracts/incentives/DistributionManager.sol\":744:787  mapping(address => AssetData) public assets */\n    tag_10:\n      tag_42\n      tag_43\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_16\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n        /* \"contracts/incentives/DistributionManager.sol\":1795:1996  function getAssetData(address asset) public view override returns (uint256, uint256, uint256) {... */\n    tag_15:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/incentives/DistributionManager.sol\":1903:1916  assets[asset] */\n      and\n        /* \"contracts/incentives/DistributionManager.sol\":1862:1869  uint256 */\n      0x00\n        /* \"contracts/incentives/DistributionManager.sol\":1903:1916  assets[asset] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/incentives/DistributionManager.sol\":1903:1922  assets[asset].index */\n      sload\n      shl(0x68, 0x01)\n      dup2\n      div\n      sub(shl(0x68, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap3\n        /* \"contracts/incentives/DistributionManager.sol\":1924:1955  assets[asset].emissionPerSecond */\n      swap1\n      dup3\n      and\n      swap2\n      shl(0xd0, 0x01)\n        /* \"contracts/incentives/DistributionManager.sol\":1957:1990  assets[asset].lastUpdateTimestamp */\n      swap1\n      div\n      0xffffffffff\n      and\n      swap1\n        /* \"contracts/incentives/DistributionManager.sol\":1795:1996  function getAssetData(address asset) public view override returns (uint256, uint256, uint256) {... */\n      jump\t// out\n        /* \"contracts/incentives/DistributionManager.sol\":1611:1748  function getUserAssetData(address user, address asset) public view override returns (uint256) {... */\n    tag_21:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/incentives/DistributionManager.sol\":1718:1731  assets[asset] */\n      dup1\n      dup3\n      and\n        /* \"contracts/incentives/DistributionManager.sol\":1696:1703  uint256 */\n      0x00\n        /* \"contracts/incentives/DistributionManager.sol\":1718:1731  assets[asset] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/incentives/DistributionManager.sol\":1718:1743  assets[asset].users[user] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n        /* \"contracts/incentives/DistributionManager.sol\":1718:1737  assets[asset].users */\n      0x01\n      swap1\n      swap4\n      add\n        /* \"contracts/incentives/DistributionManager.sol\":1718:1743  assets[asset].users[user] */\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"contracts/incentives/DistributionManager.sol\":1611:1748  function getUserAssetData(address user, address asset) public view override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/incentives/DistributionManager.sol\":1076:1262  function setDistributionEnd(uint256 distributionEnd) external override onlyEmissionManager {... */\n    tag_27:\n        /* \"contracts/incentives/DistributionManager.sol\":875:885  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/incentives/DistributionManager.sol\":889:905  EMISSION_MANAGER */\n      immutable(\"0x757234ff4c809d89eeac30d68291f4d3d650fbc62f3b098e171cb1e5a8acaf85\")\n        /* \"contracts/incentives/DistributionManager.sol\":875:905  msg.sender == EMISSION_MANAGER */\n      and\n      eq\n        /* \"contracts/incentives/DistributionManager.sol\":867:931  require(msg.sender == EMISSION_MANAGER, 'ONLY_EMISSION_MANAGER') */\n      tag_50\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_50:\n        /* \"contracts/incentives/DistributionManager.sol\":1173:1189  _distributionEnd */\n      0x01\n        /* \"contracts/incentives/DistributionManager.sol\":1173:1207  _distributionEnd = distributionEnd */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/incentives/DistributionManager.sol\":1218:1257  DistributionEndUpdated(distributionEnd) */\n      mload(0x40)\n      0x1cc1849a6602c3e91f2088cadea4381cc5717f2f28584197060ed2ebb434c16f\n      swap1\n      tag_54\n      swap1\n        /* \"contracts/incentives/DistributionManager.sol\":1192:1207  distributionEnd */\n      dup4\n      swap1\n        /* \"contracts/incentives/DistributionManager.sol\":1218:1257  DistributionEndUpdated(distributionEnd) */\n      tag_23\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/incentives/DistributionManager.sol\":1076:1262  function setDistributionEnd(uint256 distributionEnd) external override onlyEmissionManager {... */\n      pop\n      jump\t// out\n        /* \"contracts/incentives/DistributionManager.sol\":1461:1564  function DISTRIBUTION_END() external view override returns (uint256) {... */\n    tag_29:\n        /* \"contracts/incentives/DistributionManager.sol\":1543:1559  _distributionEnd */\n      sload(0x01)\n        /* \"contracts/incentives/DistributionManager.sol\":1461:1564  function DISTRIBUTION_END() external view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/incentives/DistributionManager.sol\":703:739  uint8 public constant PRECISION = 18 */\n    tag_32:\n        /* \"contracts/incentives/DistributionManager.sol\":737:739  18 */\n      0x12\n        /* \"contracts/incentives/DistributionManager.sol\":703:739  uint8 public constant PRECISION = 18 */\n      dup2\n      jump\t// out\n        /* \"contracts/incentives/DistributionManager.sol\":657:698  address public immutable EMISSION_MANAGER */\n    tag_36:\n      immutable(\"0x757234ff4c809d89eeac30d68291f4d3d650fbc62f3b098e171cb1e5a8acaf85\")\n      dup2\n      jump\t// out\n        /* \"contracts/incentives/DistributionManager.sol\":744:787  mapping(address => AssetData) public assets */\n    tag_44:\n      0x00\n      0x20\n      dup2\n      swap1\n      mstore\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0x68, 0x01), 0x01)\n      dup1\n      dup3\n      and\n      swap2\n      shl(0x68, 0x01)\n      dup2\n      div\n      swap1\n      swap2\n      and\n      swap1\n      shl(0xd0, 0x01)\n      swap1\n      div\n      0xffffffffff\n      and\n      dup4\n      jump\t// out\n        /* \"#utility.yul\":14:189   */\n    tag_58:\n        /* \"#utility.yul\":84:104   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":133:164   */\n      dup2\n      and\n        /* \"#utility.yul\":123:165   */\n      dup2\n      eq\n        /* \"#utility.yul\":113:115   */\n      tag_60\n      jumpi\n        /* \"#utility.yul\":179:180   */\n      0x00\n        /* \"#utility.yul\":176:177   */\n      dup1\n        /* \"#utility.yul\":169:181   */\n      revert\n        /* \"#utility.yul\":113:115   */\n    tag_60:\n        /* \"#utility.yul\":65:189   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":194:392   */\n    tag_14:\n      0x00\n        /* \"#utility.yul\":306:308   */\n      0x20\n        /* \"#utility.yul\":294:303   */\n      dup3\n        /* \"#utility.yul\":285:292   */\n      dup5\n        /* \"#utility.yul\":281:304   */\n      sub\n        /* \"#utility.yul\":277:309   */\n      slt\n        /* \"#utility.yul\":274:276   */\n      iszero\n      tag_62\n      jumpi\n        /* \"#utility.yul\":327:333   */\n      dup1\n        /* \"#utility.yul\":319:325   */\n      dup2\n        /* \"#utility.yul\":312:334   */\n      revert\n        /* \"#utility.yul\":274:276   */\n    tag_62:\n        /* \"#utility.yul\":355:386   */\n      tag_63\n        /* \"#utility.yul\":376:385   */\n      dup3\n        /* \"#utility.yul\":355:386   */\n      tag_58\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":345:386   */\n      swap4\n        /* \"#utility.yul\":264:392   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":397:671   */\n    tag_20:\n      0x00\n      dup1\n        /* \"#utility.yul\":526:528   */\n      0x40\n        /* \"#utility.yul\":514:523   */\n      dup4\n        /* \"#utility.yul\":505:512   */\n      dup6\n        /* \"#utility.yul\":501:524   */\n      sub\n        /* \"#utility.yul\":497:529   */\n      slt\n        /* \"#utility.yul\":494:496   */\n      iszero\n      tag_65\n      jumpi\n        /* \"#utility.yul\":547:553   */\n      dup1\n        /* \"#utility.yul\":539:545   */\n      dup2\n        /* \"#utility.yul\":532:554   */\n      revert\n        /* \"#utility.yul\":494:496   */\n    tag_65:\n        /* \"#utility.yul\":575:606   */\n      tag_66\n        /* \"#utility.yul\":596:605   */\n      dup4\n        /* \"#utility.yul\":575:606   */\n      tag_58\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":565:606   */\n      swap2\n      pop\n        /* \"#utility.yul\":625:665   */\n      tag_67\n        /* \"#utility.yul\":661:663   */\n      0x20\n        /* \"#utility.yul\":650:659   */\n      dup5\n        /* \"#utility.yul\":646:664   */\n      add\n        /* \"#utility.yul\":625:665   */\n      tag_58\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":615:665   */\n      swap1\n      pop\n        /* \"#utility.yul\":484:671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:866   */\n    tag_26:\n      0x00\n        /* \"#utility.yul\":788:790   */\n      0x20\n        /* \"#utility.yul\":776:785   */\n      dup3\n        /* \"#utility.yul\":767:774   */\n      dup5\n        /* \"#utility.yul\":763:786   */\n      sub\n        /* \"#utility.yul\":759:791   */\n      slt\n        /* \"#utility.yul\":756:758   */\n      iszero\n      tag_69\n      jumpi\n        /* \"#utility.yul\":809:815   */\n      dup1\n        /* \"#utility.yul\":801:807   */\n      dup2\n        /* \"#utility.yul\":794:816   */\n      revert\n        /* \"#utility.yul\":756:758   */\n    tag_69:\n      pop\n        /* \"#utility.yul\":837:860   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":746:866   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":871:1074   */\n    tag_38:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1035:1067   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1017:1068   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1005:1007   */\n      0x20\n        /* \"#utility.yul\":990:1008   */\n      add\n      swap1\n        /* \"#utility.yul\":972:1074   */\n      jump\t// out\n        /* \"#utility.yul\":1079:1424   */\n    tag_52:\n        /* \"#utility.yul\":1281:1283   */\n      0x20\n        /* \"#utility.yul\":1263:1284   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1320:1322   */\n      0x15\n        /* \"#utility.yul\":1300:1318   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1293:1323   */\n      mstore\n      shl(0x59, 0x27a7262cafa2a6a4a9a9a4a7a72fa6a0a720a3a2a9)\n        /* \"#utility.yul\":1354:1356   */\n      0x40\n        /* \"#utility.yul\":1339:1357   */\n      dup3\n      add\n        /* \"#utility.yul\":1332:1383   */\n      mstore\n        /* \"#utility.yul\":1415:1417   */\n      0x60\n        /* \"#utility.yul\":1400:1418   */\n      add\n      swap1\n        /* \"#utility.yul\":1253:1424   */\n      jump\t// out\n        /* \"#utility.yul\":1429:1830   */\n    tag_46:\n      sub(shl(0x68, 0x01), 0x01)\n        /* \"#utility.yul\":1694:1709   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":1676:1710   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1746:1761   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":1741:1743   */\n      0x20\n        /* \"#utility.yul\":1726:1744   */\n      dup3\n      add\n        /* \"#utility.yul\":1719:1762   */\n      mstore\n        /* \"#utility.yul\":1810:1822   */\n      0xffffffffff\n        /* \"#utility.yul\":1798:1823   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1793:1795   */\n      0x40\n        /* \"#utility.yul\":1778:1796   */\n      dup3\n      add\n        /* \"#utility.yul\":1771:1824   */\n      mstore\n        /* \"#utility.yul\":1617:1619   */\n      0x60\n        /* \"#utility.yul\":1602:1620   */\n      add\n      swap1\n        /* \"#utility.yul\":1584:1830   */\n      jump\t// out\n        /* \"#utility.yul\":1835:2012   */\n    tag_23:\n        /* \"#utility.yul\":1981:2006   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1969:1971   */\n      0x20\n        /* \"#utility.yul\":1954:1972   */\n      add\n      swap1\n        /* \"#utility.yul\":1936:2012   */\n      jump\t// out\n        /* \"#utility.yul\":2017:2336   */\n    tag_17:\n        /* \"#utility.yul\":2219:2244   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":2275:2277   */\n      0x20\n        /* \"#utility.yul\":2260:2278   */\n      dup4\n      add\n        /* \"#utility.yul\":2253:2287   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2318:2320   */\n      0x40\n        /* \"#utility.yul\":2303:2321   */\n      dup3\n      add\n        /* \"#utility.yul\":2296:2330   */\n      mstore\n        /* \"#utility.yul\":2207:2209   */\n      0x60\n        /* \"#utility.yul\":2192:2210   */\n      add\n      swap1\n        /* \"#utility.yul\":2174:2336   */\n      jump\t// out\n        /* \"#utility.yul\":2341:2525   */\n    tag_34:\n        /* \"#utility.yul\":2513:2517   */\n      0xff\n        /* \"#utility.yul\":2501:2518   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2483:2519   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2471:2473   */\n      0x20\n        /* \"#utility.yul\":2456:2474   */\n      add\n      swap1\n        /* \"#utility.yul\":2438:2525   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220611e4e324105c3c5bb480be2415b14df1c57e9413a53cac0d31112a4257ba9ad64736f6c63430007050033\n}\n","legacyAssembly":{".code":[{"begin":418,"end":8573,"name":"PUSH","source":6,"value":"A0"},{"begin":418,"end":8573,"name":"PUSH","source":6,"value":"40"},{"begin":418,"end":8573,"name":"MSTORE","source":6},{"begin":947,"end":1029,"name":"CALLVALUE","source":6},{"begin":947,"end":1029,"name":"DUP1","source":6},{"begin":947,"end":1029,"name":"ISZERO","source":6},{"begin":947,"end":1029,"name":"PUSH [tag]","source":6,"value":"1"},{"begin":947,"end":1029,"name":"JUMPI","source":6},{"begin":947,"end":1029,"name":"PUSH","source":6,"value":"0"},{"begin":947,"end":1029,"name":"DUP1","source":6},{"begin":947,"end":1029,"name":"REVERT","source":6},{"begin":947,"end":1029,"name":"tag","source":6,"value":"1"},{"begin":947,"end":1029,"name":"JUMPDEST","source":6},{"begin":947,"end":1029,"name":"POP","source":6},{"begin":947,"end":1029,"name":"PUSH","source":6,"value":"40"},{"begin":947,"end":1029,"name":"MLOAD","source":6},{"begin":947,"end":1029,"name":"PUSHSIZE","source":6},{"begin":947,"end":1029,"name":"CODESIZE","source":6},{"begin":947,"end":1029,"name":"SUB","source":6},{"begin":947,"end":1029,"name":"DUP1","source":6},{"begin":947,"end":1029,"name":"PUSHSIZE","source":6},{"begin":947,"end":1029,"name":"DUP4","source":6},{"begin":947,"end":1029,"name":"CODECOPY","source":6},{"begin":947,"end":1029,"name":"DUP2","source":6},{"begin":947,"end":1029,"name":"ADD","source":6},{"begin":947,"end":1029,"name":"PUSH","source":6,"value":"40"},{"begin":947,"end":1029,"name":"DUP2","source":6},{"begin":947,"end":1029,"name":"SWAP1","source":6},{"begin":947,"end":1029,"name":"MSTORE","source":6},{"begin":947,"end":1029,"name":"PUSH [tag]","source":6,"value":"2"},{"begin":947,"end":1029,"name":"SWAP2","source":6},{"begin":947,"end":1029,"name":"PUSH [tag]","source":6,"value":"3"},{"begin":947,"end":1029,"name":"JUMP","source":6,"value":"[in]"},{"begin":947,"end":1029,"name":"tag","source":6,"value":"2"},{"begin":947,"end":1029,"name":"JUMPDEST","source":6},{"begin":990,"end":1024,"name":"PUSH","source":6,"value":"60"},{"begin":990,"end":1024,"name":"SHL","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"60"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":990,"end":1024,"name":"AND","source":6},{"begin":990,"end":1024,"name":"PUSH","source":6,"value":"80"},{"begin":990,"end":1024,"name":"MSTORE","source":6},{"begin":418,"end":8573,"name":"PUSH [tag]","source":6,"value":"7"},{"begin":418,"end":8573,"name":"JUMP","source":6},{"begin":14,"end":324,"name":"tag","source":14,"value":"3"},{"begin":14,"end":324,"name":"JUMPDEST","source":14},{"begin":14,"end":324,"name":"PUSH","source":14,"value":"0"},{"begin":137,"end":139,"name":"PUSH","source":14,"value":"20"},{"begin":125,"end":134,"name":"DUP3","source":14},{"begin":116,"end":123,"name":"DUP5","source":14},{"begin":112,"end":135,"name":"SUB","source":14},{"begin":108,"end":140,"name":"SLT","source":14},{"begin":105,"end":107,"name":"ISZERO","source":14},{"begin":105,"end":107,"name":"PUSH [tag]","source":14,"value":"9"},{"begin":105,"end":107,"name":"JUMPI","source":14},{"begin":158,"end":164,"name":"DUP1","source":14},{"begin":150,"end":156,"name":"DUP2","source":14},{"begin":143,"end":165,"name":"REVERT","source":14},{"begin":105,"end":107,"name":"tag","source":14,"value":"9"},{"begin":105,"end":107,"name":"JUMPDEST","source":14},{"begin":189,"end":205,"name":"DUP2","source":14},{"begin":189,"end":205,"name":"MLOAD","source":14},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":234,"end":265,"name":"DUP2","source":14},{"begin":234,"end":265,"name":"AND","source":14},{"begin":224,"end":266,"name":"DUP2","source":14},{"begin":224,"end":266,"name":"EQ","source":14},{"begin":214,"end":216,"name":"PUSH [tag]","source":14,"value":"10"},{"begin":214,"end":216,"name":"JUMPI","source":14},{"begin":285,"end":291,"name":"DUP2","source":14},{"begin":277,"end":283,"name":"DUP3","source":14},{"begin":270,"end":292,"name":"REVERT","source":14},{"begin":214,"end":216,"name":"tag","source":14,"value":"10"},{"begin":214,"end":216,"name":"JUMPDEST","source":14},{"begin":313,"end":318,"name":"SWAP4","source":14},{"begin":95,"end":324,"name":"SWAP3","source":14},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":95,"end":324,"name":"JUMP","source":14,"value":"[out]"},{"begin":95,"end":324,"name":"tag","source":14,"value":"7"},{"begin":95,"end":324,"name":"JUMPDEST","source":14},{"begin":418,"end":8573,"name":"PUSH","source":6,"value":"80"},{"begin":418,"end":8573,"name":"MLOAD","source":6},{"begin":418,"end":8573,"name":"PUSH","source":6,"value":"60"},{"begin":418,"end":8573,"name":"SHR","source":6},{"begin":418,"end":8573,"name":"PUSH #[$]","source":6,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":418,"end":8573,"name":"PUSH [$]","source":6,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":418,"end":8573,"name":"PUSH","source":6,"value":"0"},{"begin":418,"end":8573,"name":"CODECOPY","source":6},{"begin":418,"end":8573,"name":"ASSIGNIMMUTABLE","source":6,"value":"588"},{"begin":418,"end":8573,"name":"PUSH #[$]","source":6,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":418,"end":8573,"name":"PUSH","source":6,"value":"0"},{"begin":418,"end":8573,"name":"RETURN","source":6}],".data":{"0":{".auxdata":"a2646970667358221220611e4e324105c3c5bb480be2415b14df1c57e9413a53cac0d31112a4257ba9ad64736f6c63430007050033",".code":[{"begin":418,"end":8573,"name":"PUSH","source":6,"value":"80"},{"begin":418,"end":8573,"name":"PUSH","source":6,"value":"40"},{"begin":418,"end":8573,"name":"MSTORE","source":6},{"begin":418,"end":8573,"name":"CALLVALUE","source":6},{"begin":418,"end":8573,"name":"DUP1","source":6},{"begin":418,"end":8573,"name":"ISZERO","source":6},{"begin":418,"end":8573,"name":"PUSH [tag]","source":6,"value":"1"},{"begin":418,"end":8573,"name":"JUMPI","source":6},{"begin":418,"end":8573,"name":"PUSH","source":6,"value":"0"},{"begin":418,"end":8573,"name":"DUP1","source":6},{"begin":418,"end":8573,"name":"REVERT","source":6},{"begin":418,"end":8573,"name":"tag","source":6,"value":"1"},{"begin":418,"end":8573,"name":"JUMPDEST","source":6},{"begin":418,"end":8573,"name":"POP","source":6},{"begin":418,"end":8573,"name":"PUSH","source":6,"value":"4"},{"begin":418,"end":8573,"name":"CALLDATASIZE","source":6},{"begin":418,"end":8573,"name":"LT","source":6},{"begin":418,"end":8573,"name":"PUSH [tag]","source":6,"value":"2"},{"begin":418,"end":8573,"name":"JUMPI","source":6},{"begin":418,"end":8573,"name":"PUSH","source":6,"value":"0"},{"begin":418,"end":8573,"name":"CALLDATALOAD","source":6},{"begin":418,"end":8573,"name":"PUSH","source":6,"value":"E0"},{"begin":418,"end":8573,"name":"SHR","source":6},{"begin":418,"end":8573,"name":"DUP1","source":6},{"begin":418,"end":8573,"name":"PUSH","source":6,"value":"AAF5EB68"},{"begin":418,"end":8573,"name":"GT","source":6},{"begin":418,"end":8573,"name":"PUSH [tag]","source":6,"value":"11"},{"begin":418,"end":8573,"name":"JUMPI","source":6},{"begin":418,"end":8573,"name":"DUP1","source":6},{"begin":418,"end":8573,"name":"PUSH","source":6,"value":"AAF5EB68"},{"begin":418,"end":8573,"name":"EQ","source":6},{"begin":418,"end":8573,"name":"PUSH [tag]","source":6,"value":"7"},{"begin":418,"end":8573,"name":"JUMPI","source":6},{"begin":418,"end":8573,"name":"DUP1","source":6},{"begin":418,"end":8573,"name":"PUSH","source":6,"value":"CBCBB507"},{"begin":418,"end":8573,"name":"EQ","source":6},{"begin":418,"end":8573,"name":"PUSH [tag]","source":6,"value":"8"},{"begin":418,"end":8573,"name":"JUMPI","source":6},{"begin":418,"end":8573,"name":"DUP1","source":6},{"begin":418,"end":8573,"name":"PUSH","source":6,"value":"CC69AFEC"},{"begin":418,"end":8573,"name":"EQ","source":6},{"begin":418,"end":8573,"name":"PUSH [tag]","source":6,"value":"6"},{"begin":418,"end":8573,"name":"JUMPI","source":6},{"begin":418,"end":8573,"name":"DUP1","source":6},{"begin":418,"end":8573,"name":"PUSH","source":6,"value":"F11B8188"},{"begin":418,"end":8573,"name":"EQ","source":6},{"begin":418,"end":8573,"name":"PUSH [tag]","source":6,"value":"10"},{"begin":418,"end":8573,"name":"JUMPI","source":6},{"begin":418,"end":8573,"name":"PUSH [tag]","source":6,"value":"2"},{"begin":418,"end":8573,"name":"JUMP","source":6},{"begin":418,"end":8573,"name":"tag","source":6,"value":"11"},{"begin":418,"end":8573,"name":"JUMPDEST","source":6},{"begin":418,"end":8573,"name":"DUP1","source":6},{"begin":418,"end":8573,"name":"PUSH","source":6,"value":"1652E7B7"},{"begin":418,"end":8573,"name":"EQ","source":6},{"begin":418,"end":8573,"name":"PUSH [tag]","source":6,"value":"3"},{"begin":418,"end":8573,"name":"JUMPI","source":6},{"begin":418,"end":8573,"name":"DUP1","source":6},{"begin":418,"end":8573,"name":"PUSH","source":6,"value":"3373EE4C"},{"begin":418,"end":8573,"name":"EQ","source":6},{"begin":418,"end":8573,"name":"PUSH [tag]","source":6,"value":"4"},{"begin":418,"end":8573,"name":"JUMPI","source":6},{"begin":418,"end":8573,"name":"DUP1","source":6},{"begin":418,"end":8573,"name":"PUSH","source":6,"value":"39CCBDD3"},{"begin":418,"end":8573,"name":"EQ","source":6},{"begin":418,"end":8573,"name":"PUSH [tag]","source":6,"value":"5"},{"begin":418,"end":8573,"name":"JUMPI","source":6},{"begin":418,"end":8573,"name":"DUP1","source":6},{"begin":418,"end":8573,"name":"PUSH","source":6,"value":"919CD40F"},{"begin":418,"end":8573,"name":"EQ","source":6},{"begin":418,"end":8573,"name":"PUSH [tag]","source":6,"value":"6"},{"begin":418,"end":8573,"name":"JUMPI","source":6},{"begin":418,"end":8573,"name":"tag","source":6,"value":"2"},{"begin":418,"end":8573,"name":"JUMPDEST","source":6},{"begin":418,"end":8573,"name":"PUSH","source":6,"value":"0"},{"begin":418,"end":8573,"name":"DUP1","source":6},{"begin":418,"end":8573,"name":"REVERT","source":6},{"begin":1795,"end":1996,"name":"tag","source":6,"value":"3"},{"begin":1795,"end":1996,"name":"JUMPDEST","source":6},{"begin":1795,"end":1996,"name":"PUSH [tag]","source":6,"value":"12"},{"begin":1795,"end":1996,"name":"PUSH [tag]","source":6,"value":"13"},{"begin":1795,"end":1996,"name":"CALLDATASIZE","source":6},{"begin":1795,"end":1996,"name":"PUSH","source":6,"value":"4"},{"begin":1795,"end":1996,"name":"PUSH [tag]","source":6,"value":"14"},{"begin":1795,"end":1996,"name":"JUMP","source":6,"value":"[in]"},{"begin":1795,"end":1996,"name":"tag","source":6,"value":"13"},{"begin":1795,"end":1996,"name":"JUMPDEST","source":6},{"begin":1795,"end":1996,"name":"PUSH [tag]","source":6,"value":"15"},{"begin":1795,"end":1996,"name":"JUMP","source":6,"value":"[in]"},{"begin":1795,"end":1996,"name":"tag","source":6,"value":"12"},{"begin":1795,"end":1996,"name":"JUMPDEST","source":6},{"begin":1795,"end":1996,"name":"PUSH","source":6,"value":"40"},{"begin":1795,"end":1996,"name":"MLOAD","source":6},{"begin":1795,"end":1996,"name":"PUSH [tag]","source":6,"value":"16"},{"begin":1795,"end":1996,"name":"SWAP4","source":6},{"begin":1795,"end":1996,"name":"SWAP3","source":6},{"begin":1795,"end":1996,"name":"SWAP2","source":6},{"begin":1795,"end":1996,"name":"SWAP1","source":6},{"begin":1795,"end":1996,"name":"PUSH [tag]","source":6,"value":"17"},{"begin":1795,"end":1996,"name":"JUMP","source":6,"value":"[in]"},{"begin":1795,"end":1996,"name":"tag","source":6,"value":"16"},{"begin":1795,"end":1996,"name":"JUMPDEST","source":6},{"begin":1795,"end":1996,"name":"PUSH","source":6,"value":"40"},{"begin":1795,"end":1996,"name":"MLOAD","source":6},{"begin":1795,"end":1996,"name":"DUP1","source":6},{"begin":1795,"end":1996,"name":"SWAP2","source":6},{"begin":1795,"end":1996,"name":"SUB","source":6},{"begin":1795,"end":1996,"name":"SWAP1","source":6},{"begin":1795,"end":1996,"name":"RETURN","source":6},{"begin":1611,"end":1748,"name":"tag","source":6,"value":"4"},{"begin":1611,"end":1748,"name":"JUMPDEST","source":6},{"begin":1611,"end":1748,"name":"PUSH [tag]","source":6,"value":"18"},{"begin":1611,"end":1748,"name":"PUSH [tag]","source":6,"value":"19"},{"begin":1611,"end":1748,"name":"CALLDATASIZE","source":6},{"begin":1611,"end":1748,"name":"PUSH","source":6,"value":"4"},{"begin":1611,"end":1748,"name":"PUSH [tag]","source":6,"value":"20"},{"begin":1611,"end":1748,"name":"JUMP","source":6,"value":"[in]"},{"begin":1611,"end":1748,"name":"tag","source":6,"value":"19"},{"begin":1611,"end":1748,"name":"JUMPDEST","source":6},{"begin":1611,"end":1748,"name":"PUSH [tag]","source":6,"value":"21"},{"begin":1611,"end":1748,"name":"JUMP","source":6,"value":"[in]"},{"begin":1611,"end":1748,"name":"tag","source":6,"value":"18"},{"begin":1611,"end":1748,"name":"JUMPDEST","source":6},{"begin":1611,"end":1748,"name":"PUSH","source":6,"value":"40"},{"begin":1611,"end":1748,"name":"MLOAD","source":6},{"begin":1611,"end":1748,"name":"PUSH [tag]","source":6,"value":"16"},{"begin":1611,"end":1748,"name":"SWAP2","source":6},{"begin":1611,"end":1748,"name":"SWAP1","source":6},{"begin":1611,"end":1748,"name":"PUSH [tag]","source":6,"value":"23"},{"begin":1611,"end":1748,"name":"JUMP","source":6,"value":"[in]"},{"begin":1076,"end":1262,"name":"tag","source":6,"value":"5"},{"begin":1076,"end":1262,"name":"JUMPDEST","source":6},{"begin":1076,"end":1262,"name":"PUSH [tag]","source":6,"value":"24"},{"begin":1076,"end":1262,"name":"PUSH [tag]","source":6,"value":"25"},{"begin":1076,"end":1262,"name":"CALLDATASIZE","source":6},{"begin":1076,"end":1262,"name":"PUSH","source":6,"value":"4"},{"begin":1076,"end":1262,"name":"PUSH [tag]","source":6,"value":"26"},{"begin":1076,"end":1262,"name":"JUMP","source":6,"value":"[in]"},{"begin":1076,"end":1262,"name":"tag","source":6,"value":"25"},{"begin":1076,"end":1262,"name":"JUMPDEST","source":6},{"begin":1076,"end":1262,"name":"PUSH [tag]","source":6,"value":"27"},{"begin":1076,"end":1262,"name":"JUMP","source":6,"value":"[in]"},{"begin":1076,"end":1262,"name":"tag","source":6,"value":"24"},{"begin":1076,"end":1262,"name":"JUMPDEST","source":6},{"begin":1076,"end":1262,"name":"STOP","source":6},{"begin":1461,"end":1564,"name":"tag","source":6,"value":"6"},{"begin":1461,"end":1564,"name":"JUMPDEST","source":6},{"begin":1461,"end":1564,"name":"PUSH [tag]","source":6,"value":"18"},{"begin":1461,"end":1564,"name":"PUSH [tag]","source":6,"value":"29"},{"begin":1461,"end":1564,"name":"JUMP","source":6,"value":"[in]"},{"begin":703,"end":739,"name":"tag","source":6,"value":"7"},{"begin":703,"end":739,"name":"JUMPDEST","source":6},{"begin":703,"end":739,"name":"PUSH [tag]","source":6,"value":"31"},{"begin":703,"end":739,"name":"PUSH [tag]","source":6,"value":"32"},{"begin":703,"end":739,"name":"JUMP","source":6,"value":"[in]"},{"begin":703,"end":739,"name":"tag","source":6,"value":"31"},{"begin":703,"end":739,"name":"JUMPDEST","source":6},{"begin":703,"end":739,"name":"PUSH","source":6,"value":"40"},{"begin":703,"end":739,"name":"MLOAD","source":6},{"begin":703,"end":739,"name":"PUSH [tag]","source":6,"value":"16"},{"begin":703,"end":739,"name":"SWAP2","source":6},{"begin":703,"end":739,"name":"SWAP1","source":6},{"begin":703,"end":739,"name":"PUSH [tag]","source":6,"value":"34"},{"begin":703,"end":739,"name":"JUMP","source":6,"value":"[in]"},{"begin":657,"end":698,"name":"tag","source":6,"value":"8"},{"begin":657,"end":698,"name":"JUMPDEST","source":6},{"begin":657,"end":698,"name":"PUSH [tag]","source":6,"value":"35"},{"begin":657,"end":698,"name":"PUSH [tag]","source":6,"value":"36"},{"begin":657,"end":698,"name":"JUMP","source":6,"value":"[in]"},{"begin":657,"end":698,"name":"tag","source":6,"value":"35"},{"begin":657,"end":698,"name":"JUMPDEST","source":6},{"begin":657,"end":698,"name":"PUSH","source":6,"value":"40"},{"begin":657,"end":698,"name":"MLOAD","source":6},{"begin":657,"end":698,"name":"PUSH [tag]","source":6,"value":"16"},{"begin":657,"end":698,"name":"SWAP2","source":6},{"begin":657,"end":698,"name":"SWAP1","source":6},{"begin":657,"end":698,"name":"PUSH [tag]","source":6,"value":"38"},{"begin":657,"end":698,"name":"JUMP","source":6,"value":"[in]"},{"begin":744,"end":787,"name":"tag","source":6,"value":"10"},{"begin":744,"end":787,"name":"JUMPDEST","source":6},{"begin":744,"end":787,"name":"PUSH [tag]","source":6,"value":"42"},{"begin":744,"end":787,"name":"PUSH [tag]","source":6,"value":"43"},{"begin":744,"end":787,"name":"CALLDATASIZE","source":6},{"begin":744,"end":787,"name":"PUSH","source":6,"value":"4"},{"begin":744,"end":787,"name":"PUSH [tag]","source":6,"value":"14"},{"begin":744,"end":787,"name":"JUMP","source":6,"value":"[in]"},{"begin":744,"end":787,"name":"tag","source":6,"value":"43"},{"begin":744,"end":787,"name":"JUMPDEST","source":6},{"begin":744,"end":787,"name":"PUSH [tag]","source":6,"value":"44"},{"begin":744,"end":787,"name":"JUMP","source":6,"value":"[in]"},{"begin":744,"end":787,"name":"tag","source":6,"value":"42"},{"begin":744,"end":787,"name":"JUMPDEST","source":6},{"begin":744,"end":787,"name":"PUSH","source":6,"value":"40"},{"begin":744,"end":787,"name":"MLOAD","source":6},{"begin":744,"end":787,"name":"PUSH [tag]","source":6,"value":"16"},{"begin":744,"end":787,"name":"SWAP4","source":6},{"begin":744,"end":787,"name":"SWAP3","source":6},{"begin":744,"end":787,"name":"SWAP2","source":6},{"begin":744,"end":787,"name":"SWAP1","source":6},{"begin":744,"end":787,"name":"PUSH [tag]","source":6,"value":"46"},{"begin":744,"end":787,"name":"JUMP","source":6,"value":"[in]"},{"begin":1795,"end":1996,"name":"tag","source":6,"value":"15"},{"begin":1795,"end":1996,"name":"JUMPDEST","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":1903,"end":1916,"name":"AND","source":6},{"begin":1862,"end":1869,"name":"PUSH","source":6,"value":"0"},{"begin":1903,"end":1916,"name":"SWAP1","source":6},{"begin":1903,"end":1916,"name":"DUP2","source":6},{"begin":1903,"end":1916,"name":"MSTORE","source":6},{"begin":1903,"end":1916,"name":"PUSH","source":6,"value":"20"},{"begin":1903,"end":1916,"name":"DUP2","source":6},{"begin":1903,"end":1916,"name":"SWAP1","source":6},{"begin":1903,"end":1916,"name":"MSTORE","source":6},{"begin":1903,"end":1916,"name":"PUSH","source":6,"value":"40"},{"begin":1903,"end":1916,"name":"SWAP1","source":6},{"begin":1903,"end":1916,"name":"KECCAK256","source":6},{"begin":1903,"end":1922,"name":"SLOAD","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"68"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":1903,"end":1922,"name":"DUP2","source":6},{"begin":1903,"end":1922,"name":"DIV","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"68"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":1903,"end":1922,"name":"SWAP1","source":6},{"begin":1903,"end":1922,"name":"DUP2","source":6},{"begin":1903,"end":1922,"name":"AND","source":6},{"begin":1903,"end":1922,"name":"SWAP3","source":6},{"begin":1924,"end":1955,"name":"SWAP1","source":6},{"begin":1924,"end":1955,"name":"DUP3","source":6},{"begin":1924,"end":1955,"name":"AND","source":6},{"begin":1924,"end":1955,"name":"SWAP2","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"D0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":1957,"end":1990,"name":"SWAP1","source":6},{"begin":1957,"end":1990,"name":"DIV","source":6},{"begin":1957,"end":1990,"name":"PUSH","source":6,"value":"FFFFFFFFFF"},{"begin":1957,"end":1990,"name":"AND","source":6},{"begin":1957,"end":1990,"name":"SWAP1","source":6},{"begin":1795,"end":1996,"name":"JUMP","source":6,"value":"[out]"},{"begin":1611,"end":1748,"name":"tag","source":6,"value":"21"},{"begin":1611,"end":1748,"name":"JUMPDEST","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":1718,"end":1731,"name":"DUP1","source":6},{"begin":1718,"end":1731,"name":"DUP3","source":6},{"begin":1718,"end":1731,"name":"AND","source":6},{"begin":1696,"end":1703,"name":"PUSH","source":6,"value":"0"},{"begin":1718,"end":1731,"name":"SWAP1","source":6},{"begin":1718,"end":1731,"name":"DUP2","source":6},{"begin":1718,"end":1731,"name":"MSTORE","source":6},{"begin":1718,"end":1731,"name":"PUSH","source":6,"value":"20"},{"begin":1718,"end":1731,"name":"DUP2","source":6},{"begin":1718,"end":1731,"name":"DUP2","source":6},{"begin":1718,"end":1731,"name":"MSTORE","source":6},{"begin":1718,"end":1731,"name":"PUSH","source":6,"value":"40"},{"begin":1718,"end":1731,"name":"DUP1","source":6},{"begin":1718,"end":1731,"name":"DUP4","source":6},{"begin":1718,"end":1731,"name":"KECCAK256","source":6},{"begin":1718,"end":1743,"name":"SWAP4","source":6},{"begin":1718,"end":1743,"name":"DUP7","source":6},{"begin":1718,"end":1743,"name":"AND","source":6},{"begin":1718,"end":1743,"name":"DUP4","source":6},{"begin":1718,"end":1743,"name":"MSTORE","source":6},{"begin":1718,"end":1737,"name":"PUSH","source":6,"value":"1"},{"begin":1718,"end":1737,"name":"SWAP1","source":6},{"begin":1718,"end":1737,"name":"SWAP4","source":6},{"begin":1718,"end":1737,"name":"ADD","source":6},{"begin":1718,"end":1743,"name":"SWAP1","source":6},{"begin":1718,"end":1743,"name":"MSTORE","source":6},{"begin":1718,"end":1743,"name":"KECCAK256","source":6},{"begin":1718,"end":1743,"name":"SLOAD","source":6},{"begin":1611,"end":1748,"name":"SWAP3","source":6},{"begin":1611,"end":1748,"name":"SWAP2","source":6},{"begin":1611,"end":1748,"name":"POP","source":6},{"begin":1611,"end":1748,"name":"POP","source":6},{"begin":1611,"end":1748,"name":"JUMP","source":6,"value":"[out]"},{"begin":1076,"end":1262,"name":"tag","source":6,"value":"27"},{"begin":1076,"end":1262,"name":"JUMPDEST","source":6},{"begin":875,"end":885,"name":"CALLER","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":889,"end":905,"name":"PUSHIMMUTABLE","source":6,"value":"588"},{"begin":875,"end":905,"name":"AND","source":6},{"begin":875,"end":905,"name":"EQ","source":6},{"begin":867,"end":931,"name":"PUSH [tag]","source":6,"value":"50"},{"begin":867,"end":931,"name":"JUMPI","source":6},{"begin":867,"end":931,"name":"PUSH","source":6,"value":"40"},{"begin":867,"end":931,"name":"MLOAD","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"461BCD"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E5"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":867,"end":931,"name":"DUP2","source":6},{"begin":867,"end":931,"name":"MSTORE","source":6},{"begin":867,"end":931,"name":"PUSH","source":6,"value":"4"},{"begin":867,"end":931,"name":"ADD","source":6},{"begin":867,"end":931,"name":"PUSH [tag]","source":6,"value":"51"},{"begin":867,"end":931,"name":"SWAP1","source":6},{"begin":867,"end":931,"name":"PUSH [tag]","source":6,"value":"52"},{"begin":867,"end":931,"name":"JUMP","source":6,"value":"[in]"},{"begin":867,"end":931,"name":"tag","source":6,"value":"51"},{"begin":867,"end":931,"name":"JUMPDEST","source":6},{"begin":867,"end":931,"name":"PUSH","source":6,"value":"40"},{"begin":867,"end":931,"name":"MLOAD","source":6},{"begin":867,"end":931,"name":"DUP1","source":6},{"begin":867,"end":931,"name":"SWAP2","source":6},{"begin":867,"end":931,"name":"SUB","source":6},{"begin":867,"end":931,"name":"SWAP1","source":6},{"begin":867,"end":931,"name":"REVERT","source":6},{"begin":867,"end":931,"name":"tag","source":6,"value":"50"},{"begin":867,"end":931,"name":"JUMPDEST","source":6},{"begin":1173,"end":1189,"name":"PUSH","source":6,"value":"1"},{"begin":1173,"end":1207,"name":"DUP2","source":6},{"begin":1173,"end":1207,"name":"SWAP1","source":6},{"begin":1173,"end":1207,"name":"SSTORE","source":6},{"begin":1218,"end":1257,"name":"PUSH","source":6,"value":"40"},{"begin":1218,"end":1257,"name":"MLOAD","source":6},{"begin":1218,"end":1257,"name":"PUSH","source":6,"value":"1CC1849A6602C3E91F2088CADEA4381CC5717F2F28584197060ED2EBB434C16F"},{"begin":1218,"end":1257,"name":"SWAP1","source":6},{"begin":1218,"end":1257,"name":"PUSH [tag]","source":6,"value":"54"},{"begin":1218,"end":1257,"name":"SWAP1","source":6},{"begin":1192,"end":1207,"name":"DUP4","source":6},{"begin":1192,"end":1207,"name":"SWAP1","source":6},{"begin":1218,"end":1257,"name":"PUSH [tag]","source":6,"value":"23"},{"begin":1218,"end":1257,"name":"JUMP","source":6,"value":"[in]"},{"begin":1218,"end":1257,"name":"tag","source":6,"value":"54"},{"begin":1218,"end":1257,"name":"JUMPDEST","source":6},{"begin":1218,"end":1257,"name":"PUSH","source":6,"value":"40"},{"begin":1218,"end":1257,"name":"MLOAD","source":6},{"begin":1218,"end":1257,"name":"DUP1","source":6},{"begin":1218,"end":1257,"name":"SWAP2","source":6},{"begin":1218,"end":1257,"name":"SUB","source":6},{"begin":1218,"end":1257,"name":"SWAP1","source":6},{"begin":1218,"end":1257,"name":"LOG1","source":6},{"begin":1076,"end":1262,"name":"POP","source":6},{"begin":1076,"end":1262,"name":"JUMP","source":6,"value":"[out]"},{"begin":1461,"end":1564,"name":"tag","source":6,"value":"29"},{"begin":1461,"end":1564,"name":"JUMPDEST","source":6},{"begin":1543,"end":1559,"name":"PUSH","source":6,"value":"1"},{"begin":1543,"end":1559,"name":"SLOAD","source":6},{"begin":1461,"end":1564,"name":"SWAP1","source":6},{"begin":1461,"end":1564,"name":"JUMP","source":6,"value":"[out]"},{"begin":703,"end":739,"name":"tag","source":6,"value":"32"},{"begin":703,"end":739,"name":"JUMPDEST","source":6},{"begin":737,"end":739,"name":"PUSH","source":6,"value":"12"},{"begin":703,"end":739,"name":"DUP2","source":6},{"begin":703,"end":739,"name":"JUMP","source":6,"value":"[out]"},{"begin":657,"end":698,"name":"tag","source":6,"value":"36"},{"begin":657,"end":698,"name":"JUMPDEST","source":6},{"begin":657,"end":698,"name":"PUSHIMMUTABLE","source":6,"value":"588"},{"begin":657,"end":698,"name":"DUP2","source":6},{"begin":657,"end":698,"name":"JUMP","source":6,"value":"[out]"},{"begin":744,"end":787,"name":"tag","source":6,"value":"44"},{"begin":744,"end":787,"name":"JUMPDEST","source":6},{"begin":744,"end":787,"name":"PUSH","source":6,"value":"0"},{"begin":744,"end":787,"name":"PUSH","source":6,"value":"20"},{"begin":744,"end":787,"name":"DUP2","source":6},{"begin":744,"end":787,"name":"SWAP1","source":6},{"begin":744,"end":787,"name":"MSTORE","source":6},{"begin":744,"end":787,"name":"SWAP1","source":6},{"begin":744,"end":787,"name":"DUP2","source":6},{"begin":744,"end":787,"name":"MSTORE","source":6},{"begin":744,"end":787,"name":"PUSH","source":6,"value":"40"},{"begin":744,"end":787,"name":"SWAP1","source":6},{"begin":744,"end":787,"name":"KECCAK256","source":6},{"begin":744,"end":787,"name":"SLOAD","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"68"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":744,"end":787,"name":"DUP1","source":6},{"begin":744,"end":787,"name":"DUP3","source":6},{"begin":744,"end":787,"name":"AND","source":6},{"begin":744,"end":787,"name":"SWAP2","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"68"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":744,"end":787,"name":"DUP2","source":6},{"begin":744,"end":787,"name":"DIV","source":6},{"begin":744,"end":787,"name":"SWAP1","source":6},{"begin":744,"end":787,"name":"SWAP2","source":6},{"begin":744,"end":787,"name":"AND","source":6},{"begin":744,"end":787,"name":"SWAP1","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"D0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":744,"end":787,"name":"SWAP1","source":6},{"begin":744,"end":787,"name":"DIV","source":6},{"begin":744,"end":787,"name":"PUSH","source":6,"value":"FFFFFFFFFF"},{"begin":744,"end":787,"name":"AND","source":6},{"begin":744,"end":787,"name":"DUP4","source":6},{"begin":744,"end":787,"name":"JUMP","source":6,"value":"[out]"},{"begin":14,"end":189,"name":"tag","source":14,"value":"58"},{"begin":14,"end":189,"name":"JUMPDEST","source":14},{"begin":84,"end":104,"name":"DUP1","source":14},{"begin":84,"end":104,"name":"CALLDATALOAD","source":14},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":133,"end":164,"name":"DUP2","source":14},{"begin":133,"end":164,"name":"AND","source":14},{"begin":123,"end":165,"name":"DUP2","source":14},{"begin":123,"end":165,"name":"EQ","source":14},{"begin":113,"end":115,"name":"PUSH [tag]","source":14,"value":"60"},{"begin":113,"end":115,"name":"JUMPI","source":14},{"begin":179,"end":180,"name":"PUSH","source":14,"value":"0"},{"begin":176,"end":177,"name":"DUP1","source":14},{"begin":169,"end":181,"name":"REVERT","source":14},{"begin":113,"end":115,"name":"tag","source":14,"value":"60"},{"begin":113,"end":115,"name":"JUMPDEST","source":14},{"begin":65,"end":189,"name":"SWAP2","source":14},{"begin":65,"end":189,"name":"SWAP1","source":14},{"begin":65,"end":189,"name":"POP","source":14},{"begin":65,"end":189,"name":"JUMP","source":14,"value":"[out]"},{"begin":194,"end":392,"name":"tag","source":14,"value":"14"},{"begin":194,"end":392,"name":"JUMPDEST","source":14},{"begin":194,"end":392,"name":"PUSH","source":14,"value":"0"},{"begin":306,"end":308,"name":"PUSH","source":14,"value":"20"},{"begin":294,"end":303,"name":"DUP3","source":14},{"begin":285,"end":292,"name":"DUP5","source":14},{"begin":281,"end":304,"name":"SUB","source":14},{"begin":277,"end":309,"name":"SLT","source":14},{"begin":274,"end":276,"name":"ISZERO","source":14},{"begin":274,"end":276,"name":"PUSH [tag]","source":14,"value":"62"},{"begin":274,"end":276,"name":"JUMPI","source":14},{"begin":327,"end":333,"name":"DUP1","source":14},{"begin":319,"end":325,"name":"DUP2","source":14},{"begin":312,"end":334,"name":"REVERT","source":14},{"begin":274,"end":276,"name":"tag","source":14,"value":"62"},{"begin":274,"end":276,"name":"JUMPDEST","source":14},{"begin":355,"end":386,"name":"PUSH [tag]","source":14,"value":"63"},{"begin":376,"end":385,"name":"DUP3","source":14},{"begin":355,"end":386,"name":"PUSH [tag]","source":14,"value":"58"},{"begin":355,"end":386,"name":"JUMP","source":14,"value":"[in]"},{"begin":355,"end":386,"name":"tag","source":14,"value":"63"},{"begin":355,"end":386,"name":"JUMPDEST","source":14},{"begin":345,"end":386,"name":"SWAP4","source":14},{"begin":264,"end":392,"name":"SWAP3","source":14},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":264,"end":392,"name":"JUMP","source":14,"value":"[out]"},{"begin":397,"end":671,"name":"tag","source":14,"value":"20"},{"begin":397,"end":671,"name":"JUMPDEST","source":14},{"begin":397,"end":671,"name":"PUSH","source":14,"value":"0"},{"begin":397,"end":671,"name":"DUP1","source":14},{"begin":526,"end":528,"name":"PUSH","source":14,"value":"40"},{"begin":514,"end":523,"name":"DUP4","source":14},{"begin":505,"end":512,"name":"DUP6","source":14},{"begin":501,"end":524,"name":"SUB","source":14},{"begin":497,"end":529,"name":"SLT","source":14},{"begin":494,"end":496,"name":"ISZERO","source":14},{"begin":494,"end":496,"name":"PUSH [tag]","source":14,"value":"65"},{"begin":494,"end":496,"name":"JUMPI","source":14},{"begin":547,"end":553,"name":"DUP1","source":14},{"begin":539,"end":545,"name":"DUP2","source":14},{"begin":532,"end":554,"name":"REVERT","source":14},{"begin":494,"end":496,"name":"tag","source":14,"value":"65"},{"begin":494,"end":496,"name":"JUMPDEST","source":14},{"begin":575,"end":606,"name":"PUSH [tag]","source":14,"value":"66"},{"begin":596,"end":605,"name":"DUP4","source":14},{"begin":575,"end":606,"name":"PUSH [tag]","source":14,"value":"58"},{"begin":575,"end":606,"name":"JUMP","source":14,"value":"[in]"},{"begin":575,"end":606,"name":"tag","source":14,"value":"66"},{"begin":575,"end":606,"name":"JUMPDEST","source":14},{"begin":565,"end":606,"name":"SWAP2","source":14},{"begin":565,"end":606,"name":"POP","source":14},{"begin":625,"end":665,"name":"PUSH [tag]","source":14,"value":"67"},{"begin":661,"end":663,"name":"PUSH","source":14,"value":"20"},{"begin":650,"end":659,"name":"DUP5","source":14},{"begin":646,"end":664,"name":"ADD","source":14},{"begin":625,"end":665,"name":"PUSH [tag]","source":14,"value":"58"},{"begin":625,"end":665,"name":"JUMP","source":14,"value":"[in]"},{"begin":625,"end":665,"name":"tag","source":14,"value":"67"},{"begin":625,"end":665,"name":"JUMPDEST","source":14},{"begin":615,"end":665,"name":"SWAP1","source":14},{"begin":615,"end":665,"name":"POP","source":14},{"begin":484,"end":671,"name":"SWAP3","source":14},{"begin":484,"end":671,"name":"POP","source":14},{"begin":484,"end":671,"name":"SWAP3","source":14},{"begin":484,"end":671,"name":"SWAP1","source":14},{"begin":484,"end":671,"name":"POP","source":14},{"begin":484,"end":671,"name":"JUMP","source":14,"value":"[out]"},{"begin":676,"end":866,"name":"tag","source":14,"value":"26"},{"begin":676,"end":866,"name":"JUMPDEST","source":14},{"begin":676,"end":866,"name":"PUSH","source":14,"value":"0"},{"begin":788,"end":790,"name":"PUSH","source":14,"value":"20"},{"begin":776,"end":785,"name":"DUP3","source":14},{"begin":767,"end":774,"name":"DUP5","source":14},{"begin":763,"end":786,"name":"SUB","source":14},{"begin":759,"end":791,"name":"SLT","source":14},{"begin":756,"end":758,"name":"ISZERO","source":14},{"begin":756,"end":758,"name":"PUSH [tag]","source":14,"value":"69"},{"begin":756,"end":758,"name":"JUMPI","source":14},{"begin":809,"end":815,"name":"DUP1","source":14},{"begin":801,"end":807,"name":"DUP2","source":14},{"begin":794,"end":816,"name":"REVERT","source":14},{"begin":756,"end":758,"name":"tag","source":14,"value":"69"},{"begin":756,"end":758,"name":"JUMPDEST","source":14},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":837,"end":860,"name":"CALLDATALOAD","source":14},{"begin":837,"end":860,"name":"SWAP2","source":14},{"begin":746,"end":866,"name":"SWAP1","source":14},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":746,"end":866,"name":"JUMP","source":14,"value":"[out]"},{"begin":871,"end":1074,"name":"tag","source":14,"value":"38"},{"begin":871,"end":1074,"name":"JUMPDEST","source":14},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":1035,"end":1067,"name":"SWAP2","source":14},{"begin":1035,"end":1067,"name":"SWAP1","source":14},{"begin":1035,"end":1067,"name":"SWAP2","source":14},{"begin":1035,"end":1067,"name":"AND","source":14},{"begin":1017,"end":1068,"name":"DUP2","source":14},{"begin":1017,"end":1068,"name":"MSTORE","source":14},{"begin":1005,"end":1007,"name":"PUSH","source":14,"value":"20"},{"begin":990,"end":1008,"name":"ADD","source":14},{"begin":990,"end":1008,"name":"SWAP1","source":14},{"begin":972,"end":1074,"name":"JUMP","source":14,"value":"[out]"},{"begin":1079,"end":1424,"name":"tag","source":14,"value":"52"},{"begin":1079,"end":1424,"name":"JUMPDEST","source":14},{"begin":1281,"end":1283,"name":"PUSH","source":14,"value":"20"},{"begin":1263,"end":1284,"name":"DUP1","source":14},{"begin":1263,"end":1284,"name":"DUP3","source":14},{"begin":1263,"end":1284,"name":"MSTORE","source":14},{"begin":1320,"end":1322,"name":"PUSH","source":14,"value":"15"},{"begin":1300,"end":1318,"name":"SWAP1","source":14},{"begin":1300,"end":1318,"name":"DUP3","source":14},{"begin":1300,"end":1318,"name":"ADD","source":14},{"begin":1293,"end":1323,"name":"MSTORE","source":14},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"27A7262CAFA2A6A4A9A9A4A7A72FA6A0A720A3A2A9"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"59"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":1354,"end":1356,"name":"PUSH","source":14,"value":"40"},{"begin":1339,"end":1357,"name":"DUP3","source":14},{"begin":1339,"end":1357,"name":"ADD","source":14},{"begin":1332,"end":1383,"name":"MSTORE","source":14},{"begin":1415,"end":1417,"name":"PUSH","source":14,"value":"60"},{"begin":1400,"end":1418,"name":"ADD","source":14},{"begin":1400,"end":1418,"name":"SWAP1","source":14},{"begin":1253,"end":1424,"name":"JUMP","source":14,"value":"[out]"},{"begin":1429,"end":1830,"name":"tag","source":14,"value":"46"},{"begin":1429,"end":1830,"name":"JUMPDEST","source":14},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"68"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":1694,"end":1709,"name":"SWAP4","source":14},{"begin":1694,"end":1709,"name":"DUP5","source":14},{"begin":1694,"end":1709,"name":"AND","source":14},{"begin":1676,"end":1710,"name":"DUP2","source":14},{"begin":1676,"end":1710,"name":"MSTORE","source":14},{"begin":1746,"end":1761,"name":"SWAP2","source":14},{"begin":1746,"end":1761,"name":"SWAP1","source":14},{"begin":1746,"end":1761,"name":"SWAP3","source":14},{"begin":1746,"end":1761,"name":"AND","source":14},{"begin":1741,"end":1743,"name":"PUSH","source":14,"value":"20"},{"begin":1726,"end":1744,"name":"DUP3","source":14},{"begin":1726,"end":1744,"name":"ADD","source":14},{"begin":1719,"end":1762,"name":"MSTORE","source":14},{"begin":1810,"end":1822,"name":"PUSH","source":14,"value":"FFFFFFFFFF"},{"begin":1798,"end":1823,"name":"SWAP1","source":14},{"begin":1798,"end":1823,"name":"SWAP2","source":14},{"begin":1798,"end":1823,"name":"AND","source":14},{"begin":1793,"end":1795,"name":"PUSH","source":14,"value":"40"},{"begin":1778,"end":1796,"name":"DUP3","source":14},{"begin":1778,"end":1796,"name":"ADD","source":14},{"begin":1771,"end":1824,"name":"MSTORE","source":14},{"begin":1617,"end":1619,"name":"PUSH","source":14,"value":"60"},{"begin":1602,"end":1620,"name":"ADD","source":14},{"begin":1602,"end":1620,"name":"SWAP1","source":14},{"begin":1584,"end":1830,"name":"JUMP","source":14,"value":"[out]"},{"begin":1835,"end":2012,"name":"tag","source":14,"value":"23"},{"begin":1835,"end":2012,"name":"JUMPDEST","source":14},{"begin":1981,"end":2006,"name":"SWAP1","source":14},{"begin":1981,"end":2006,"name":"DUP2","source":14},{"begin":1981,"end":2006,"name":"MSTORE","source":14},{"begin":1969,"end":1971,"name":"PUSH","source":14,"value":"20"},{"begin":1954,"end":1972,"name":"ADD","source":14},{"begin":1954,"end":1972,"name":"SWAP1","source":14},{"begin":1936,"end":2012,"name":"JUMP","source":14,"value":"[out]"},{"begin":2017,"end":2336,"name":"tag","source":14,"value":"17"},{"begin":2017,"end":2336,"name":"JUMPDEST","source":14},{"begin":2219,"end":2244,"name":"SWAP3","source":14},{"begin":2219,"end":2244,"name":"DUP4","source":14},{"begin":2219,"end":2244,"name":"MSTORE","source":14},{"begin":2275,"end":2277,"name":"PUSH","source":14,"value":"20"},{"begin":2260,"end":2278,"name":"DUP4","source":14},{"begin":2260,"end":2278,"name":"ADD","source":14},{"begin":2253,"end":2287,"name":"SWAP2","source":14},{"begin":2253,"end":2287,"name":"SWAP1","source":14},{"begin":2253,"end":2287,"name":"SWAP2","source":14},{"begin":2253,"end":2287,"name":"MSTORE","source":14},{"begin":2318,"end":2320,"name":"PUSH","source":14,"value":"40"},{"begin":2303,"end":2321,"name":"DUP3","source":14},{"begin":2303,"end":2321,"name":"ADD","source":14},{"begin":2296,"end":2330,"name":"MSTORE","source":14},{"begin":2207,"end":2209,"name":"PUSH","source":14,"value":"60"},{"begin":2192,"end":2210,"name":"ADD","source":14},{"begin":2192,"end":2210,"name":"SWAP1","source":14},{"begin":2174,"end":2336,"name":"JUMP","source":14,"value":"[out]"},{"begin":2341,"end":2525,"name":"tag","source":14,"value":"34"},{"begin":2341,"end":2525,"name":"JUMPDEST","source":14},{"begin":2513,"end":2517,"name":"PUSH","source":14,"value":"FF"},{"begin":2501,"end":2518,"name":"SWAP2","source":14},{"begin":2501,"end":2518,"name":"SWAP1","source":14},{"begin":2501,"end":2518,"name":"SWAP2","source":14},{"begin":2501,"end":2518,"name":"AND","source":14},{"begin":2483,"end":2519,"name":"DUP2","source":14},{"begin":2483,"end":2519,"name":"MSTORE","source":14},{"begin":2471,"end":2473,"name":"PUSH","source":14,"value":"20"},{"begin":2456,"end":2474,"name":"ADD","source":14},{"begin":2456,"end":2474,"name":"SWAP1","source":14},{"begin":2438,"end":2525,"name":"JUMP","source":14,"value":"[out]"}]}}},"bytecode":{"object":"60a060405234801561001057600080fd5b5060405161049138038061049183398101604081905261002f91610044565b60601b6001600160601b031916608052610072565b600060208284031215610055578081fd5b81516001600160a01b038116811461006b578182fd5b9392505050565b60805160601c6103fd610094600039806101ba528061024d52506103fd6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063aaf5eb681161005b578063aaf5eb68146100f5578063cbcbb5071461010a578063cc69afec146100ed578063f11b81881461011f57610088565b80631652e7b71461008d5780633373ee4c146100b857806339ccbdd3146100d8578063919cd40f146100ed575b600080fd5b6100a061009b3660046102c2565b610141565b6040516100af939291906103a3565b60405180910390f35b6100cb6100c63660046102e3565b610181565b6040516100af919061039a565b6100eb6100e6366004610315565b6101af565b005b6100cb610240565b6100fd610246565b6040516100af91906103b9565b61011261024b565b6040516100af919061032d565b61013261012d3660046102c2565b61026f565b6040516100af93929190610370565b6001600160a01b0316600090815260208190526040902054600160681b81046001600160681b039081169290821691600160d01b900464ffffffffff1690565b6001600160a01b03808216600090815260208181526040808320938616835260019093019052205492915050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102005760405162461bcd60e51b81526004016101f790610341565b60405180910390fd5b60018190556040517f1cc1849a6602c3e91f2088cadea4381cc5717f2f28584197060ed2ebb434c16f9061023590839061039a565b60405180910390a150565b60015490565b601281565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000602081905290815260409020546001600160681b0380821691600160681b810490911690600160d01b900464ffffffffff1683565b80356001600160a01b03811681146102bd57600080fd5b919050565b6000602082840312156102d3578081fd5b6102dc826102a6565b9392505050565b600080604083850312156102f5578081fd5b6102fe836102a6565b915061030c602084016102a6565b90509250929050565b600060208284031215610326578081fd5b5035919050565b6001600160a01b0391909116815260200190565b60208082526015908201527427a7262cafa2a6a4a9a9a4a7a72fa6a0a720a3a2a960591b604082015260600190565b6001600160681b03938416815291909216602082015264ffffffffff909116604082015260600190565b90815260200190565b9283526020830191909152604082015260600190565b60ff9190911681526020019056fea2646970667358221220611e4e324105c3c5bb480be2415b14df1c57e9413a53cac0d31112a4257ba9ad64736f6c63430007050033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x491 CODESIZE SUB DUP1 PUSH2 0x491 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x44 JUMP JUMPDEST PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x80 MSTORE PUSH2 0x72 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x55 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6B JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x3FD PUSH2 0x94 PUSH1 0x0 CODECOPY DUP1 PUSH2 0x1BA MSTORE DUP1 PUSH2 0x24D MSTORE POP PUSH2 0x3FD PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAAF5EB68 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0xCBCBB507 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xCC69AFEC EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xF11B8188 EQ PUSH2 0x11F JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x1652E7B7 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x3373EE4C EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x39CCBDD3 EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x919CD40F EQ PUSH2 0xED JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x2C2 JUMP JUMPDEST PUSH2 0x141 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCB PUSH2 0xC6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x181 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAF SWAP2 SWAP1 PUSH2 0x39A JUMP JUMPDEST PUSH2 0xEB PUSH2 0xE6 CALLDATASIZE PUSH1 0x4 PUSH2 0x315 JUMP JUMPDEST PUSH2 0x1AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCB PUSH2 0x240 JUMP JUMPDEST PUSH2 0xFD PUSH2 0x246 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAF SWAP2 SWAP1 PUSH2 0x3B9 JUMP JUMPDEST PUSH2 0x112 PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAF SWAP2 SWAP1 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x132 PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x2C2 JUMP JUMPDEST PUSH2 0x26F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x370 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x68 SHL DUP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x68 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE PUSH1 0x1 SWAP1 SWAP4 ADD SWAP1 MSTORE KECCAK256 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x200 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F7 SWAP1 PUSH2 0x341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x1CC1849A6602C3E91F2088CADEA4381CC5717F2F28584197060ED2EBB434C16F SWAP1 PUSH2 0x235 SWAP1 DUP4 SWAP1 PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x68 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x68 SHL DUP2 DIV SWAP1 SWAP2 AND SWAP1 PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND DUP4 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D3 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2DC DUP3 PUSH2 0x2A6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F5 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2FE DUP4 PUSH2 0x2A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x30C PUSH1 0x20 DUP5 ADD PUSH2 0x2A6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x326 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x27A7262CAFA2A6A4A9A9A4A7A72FA6A0A720A3A2A9 PUSH1 0x59 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x68 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH5 0xFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x1E4E ORIGIN COINBASE SDIV 0xC3 0xC5 0xBB 0x48 SIGNEXTEND 0xE2 COINBASE JUMPDEST EQ 0xDF SHR JUMPI 0xE9 COINBASE GASPRICE MSTORE8 0xCA 0xC0 0xD3 GT SLT LOG4 0x25 PUSH28 0xA9AD64736F6C63430007050033000000000000000000000000000000 ","sourceMap":"418:8155:6:-:0;;;947:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;990:34;;-1:-1:-1;;;;;;990:34:6;;;418:8155;;14:310:14;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:14;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:14:o;:::-;418:8155:6;;;;;;;;;;;","generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:326:14","statements":[{"nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:229:14","statements":[{"body":{"nodeType":"YulBlock","src":"141:26:14","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"150:6:14"},{"name":"value0","nodeType":"YulIdentifier","src":"158:6:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:14"},"nodeType":"YulFunctionCall","src":"143:22:14"},"nodeType":"YulExpressionStatement","src":"143:22:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:14"},"nodeType":"YulFunctionCall","src":"112:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:14"},"nodeType":"YulFunctionCall","src":"108:32:14"},"nodeType":"YulIf","src":"105:2:14"},{"nodeType":"YulVariableDeclaration","src":"176:29:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"195:9:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"189:5:14"},"nodeType":"YulFunctionCall","src":"189:16:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"180:5:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"268:26:14","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"277:6:14"},{"name":"value0","nodeType":"YulIdentifier","src":"285:6:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"270:6:14"},"nodeType":"YulFunctionCall","src":"270:22:14"},"nodeType":"YulExpressionStatement","src":"270:22:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"227:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"238:5:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"253:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"258:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"249:3:14"},"nodeType":"YulFunctionCall","src":"249:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"262:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"245:3:14"},"nodeType":"YulFunctionCall","src":"245:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"234:3:14"},"nodeType":"YulFunctionCall","src":"234:31:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"224:2:14"},"nodeType":"YulFunctionCall","src":"224:42:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"217:6:14"},"nodeType":"YulFunctionCall","src":"217:50:14"},"nodeType":"YulIf","src":"214:2:14"},{"nodeType":"YulAssignment","src":"303:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"313:5:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"303:6:14"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:14","type":""}],"src":"14:310:14"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"linkReferences":{}},"deployedBytecode":{"object":"608060405234801561001057600080fd5b50600436106100885760003560e01c8063aaf5eb681161005b578063aaf5eb68146100f5578063cbcbb5071461010a578063cc69afec146100ed578063f11b81881461011f57610088565b80631652e7b71461008d5780633373ee4c146100b857806339ccbdd3146100d8578063919cd40f146100ed575b600080fd5b6100a061009b3660046102c2565b610141565b6040516100af939291906103a3565b60405180910390f35b6100cb6100c63660046102e3565b610181565b6040516100af919061039a565b6100eb6100e6366004610315565b6101af565b005b6100cb610240565b6100fd610246565b6040516100af91906103b9565b61011261024b565b6040516100af919061032d565b61013261012d3660046102c2565b61026f565b6040516100af93929190610370565b6001600160a01b0316600090815260208190526040902054600160681b81046001600160681b039081169290821691600160d01b900464ffffffffff1690565b6001600160a01b03808216600090815260208181526040808320938616835260019093019052205492915050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102005760405162461bcd60e51b81526004016101f790610341565b60405180910390fd5b60018190556040517f1cc1849a6602c3e91f2088cadea4381cc5717f2f28584197060ed2ebb434c16f9061023590839061039a565b60405180910390a150565b60015490565b601281565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000602081905290815260409020546001600160681b0380821691600160681b810490911690600160d01b900464ffffffffff1683565b80356001600160a01b03811681146102bd57600080fd5b919050565b6000602082840312156102d3578081fd5b6102dc826102a6565b9392505050565b600080604083850312156102f5578081fd5b6102fe836102a6565b915061030c602084016102a6565b90509250929050565b600060208284031215610326578081fd5b5035919050565b6001600160a01b0391909116815260200190565b60208082526015908201527427a7262cafa2a6a4a9a9a4a7a72fa6a0a720a3a2a960591b604082015260600190565b6001600160681b03938416815291909216602082015264ffffffffff909116604082015260600190565b90815260200190565b9283526020830191909152604082015260600190565b60ff9190911681526020019056fea2646970667358221220611e4e324105c3c5bb480be2415b14df1c57e9413a53cac0d31112a4257ba9ad64736f6c63430007050033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAAF5EB68 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0xCBCBB507 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xCC69AFEC EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xF11B8188 EQ PUSH2 0x11F JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x1652E7B7 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x3373EE4C EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x39CCBDD3 EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x919CD40F EQ PUSH2 0xED JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x2C2 JUMP JUMPDEST PUSH2 0x141 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCB PUSH2 0xC6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x181 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAF SWAP2 SWAP1 PUSH2 0x39A JUMP JUMPDEST PUSH2 0xEB PUSH2 0xE6 CALLDATASIZE PUSH1 0x4 PUSH2 0x315 JUMP JUMPDEST PUSH2 0x1AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCB PUSH2 0x240 JUMP JUMPDEST PUSH2 0xFD PUSH2 0x246 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAF SWAP2 SWAP1 PUSH2 0x3B9 JUMP JUMPDEST PUSH2 0x112 PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAF SWAP2 SWAP1 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x132 PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x2C2 JUMP JUMPDEST PUSH2 0x26F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x370 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x68 SHL DUP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x68 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE PUSH1 0x1 SWAP1 SWAP4 ADD SWAP1 MSTORE KECCAK256 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x200 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F7 SWAP1 PUSH2 0x341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x1CC1849A6602C3E91F2088CADEA4381CC5717F2F28584197060ED2EBB434C16F SWAP1 PUSH2 0x235 SWAP1 DUP4 SWAP1 PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x68 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x68 SHL DUP2 DIV SWAP1 SWAP2 AND SWAP1 PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND DUP4 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D3 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2DC DUP3 PUSH2 0x2A6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F5 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2FE DUP4 PUSH2 0x2A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x30C PUSH1 0x20 DUP5 ADD PUSH2 0x2A6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x326 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x27A7262CAFA2A6A4A9A9A4A7A72FA6A0A720A3A2A9 PUSH1 0x59 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x68 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH5 0xFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x1E4E ORIGIN COINBASE SDIV 0xC3 0xC5 0xBB 0x48 SIGNEXTEND 0xE2 COINBASE JUMPDEST EQ 0xDF SHR JUMPI 0xE9 COINBASE GASPRICE MSTORE8 0xCA 0xC0 0xD3 GT SLT LOG4 0x25 PUSH28 0xA9AD64736F6C63430007050033000000000000000000000000000000 ","sourceMap":"418:8155:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1795:201;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1611:137;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1076:186::-;;;;;;:::i;:::-;;:::i;:::-;;1461:103;;;:::i;703:36::-;;;:::i;:::-;;;;;;;:::i;657:41::-;;;:::i;:::-;;;;;;;:::i;744:43::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;1795:201::-;-1:-1:-1;;;;;1903:13:6;1862:7;1903:13;;;;;;;;;;:19;-1:-1:-1;;;1903:19:6;;-1:-1:-1;;;;;1903:19:6;;;;1924:31;;;;-1:-1:-1;;;1957:33:6;;;;;1795:201::o;1611:137::-;-1:-1:-1;;;;;1718:13:6;;;1696:7;1718:13;;;;;;;;;;;:25;;;;;:19;;;;:25;;;;1611:137;;;;:::o;1076:186::-;875:10;-1:-1:-1;;;;;889:16:6;875:30;;867:64;;;;-1:-1:-1;;;867:64:6;;;;;;;:::i;:::-;;;;;;;;;1173:16:::1;:34:::0;;;1218:39:::1;::::0;::::1;::::0;::::1;::::0;1192:15;;1218:39:::1;:::i;:::-;;;;;;;;1076:186:::0;:::o;1461:103::-;1543:16;;1461:103;:::o;703:36::-;737:2;703:36;:::o;657:41::-;;;:::o;744:43::-;;;;;;;;;;;;;-1:-1:-1;;;;;744:43:6;;;;-1:-1:-1;;;744:43:6;;;;;;-1:-1:-1;;;744:43:6;;;;;:::o;14:175:14:-;84:20;;-1:-1:-1;;;;;133:31:14;;123:42;;113:2;;179:1;176;169:12;113:2;65:124;;;:::o;194:198::-;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;:::-;345:41;264:128;-1:-1:-1;;;264:128:14:o;397:274::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;;625:40;661:2;650:9;646:18;625:40;:::i;:::-;615:50;;484:187;;;;;:::o;676:190::-;;788:2;776:9;767:7;763:23;759:32;756:2;;;809:6;801;794:22;756:2;-1:-1:-1;837:23:14;;746:120;-1:-1:-1;746:120:14:o;871:203::-;-1:-1:-1;;;;;1035:32:14;;;;1017:51;;1005:2;990:18;;972:102::o;1079:345::-;1281:2;1263:21;;;1320:2;1300:18;;;1293:30;-1:-1:-1;;;1354:2:14;1339:18;;1332:51;1415:2;1400:18;;1253:171::o;1429:401::-;-1:-1:-1;;;;;1694:15:14;;;1676:34;;1746:15;;;;1741:2;1726:18;;1719:43;1810:12;1798:25;;;1793:2;1778:18;;1771:53;1617:2;1602:18;;1584:246::o;1835:177::-;1981:25;;;1969:2;1954:18;;1936:76::o;2017:319::-;2219:25;;;2275:2;2260:18;;2253:34;;;;2318:2;2303:18;;2296:34;2207:2;2192:18;;2174:162::o;2341:184::-;2513:4;2501:17;;;;2483:36;;2471:2;2456:18;;2438:87::o","generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2527:14","statements":[{"nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nodeType":"YulBlock","src":"65:124:14","statements":[{"nodeType":"YulAssignment","src":"75:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"97:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"84:12:14"},"nodeType":"YulFunctionCall","src":"84:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"75:5:14"}]},{"body":{"nodeType":"YulBlock","src":"167:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"176:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"179:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"169:6:14"},"nodeType":"YulFunctionCall","src":"169:12:14"},"nodeType":"YulExpressionStatement","src":"169:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"126:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"137:5:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"152:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"157:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"148:3:14"},"nodeType":"YulFunctionCall","src":"148:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"161:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"144:3:14"},"nodeType":"YulFunctionCall","src":"144:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"133:3:14"},"nodeType":"YulFunctionCall","src":"133:31:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"123:2:14"},"nodeType":"YulFunctionCall","src":"123:42:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"116:6:14"},"nodeType":"YulFunctionCall","src":"116:50:14"},"nodeType":"YulIf","src":"113:2:14"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"44:6:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"55:5:14","type":""}],"src":"14:175:14"},{"body":{"nodeType":"YulBlock","src":"264:128:14","statements":[{"body":{"nodeType":"YulBlock","src":"310:26:14","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"319:6:14"},{"name":"value0","nodeType":"YulIdentifier","src":"327:6:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"312:6:14"},"nodeType":"YulFunctionCall","src":"312:22:14"},"nodeType":"YulExpressionStatement","src":"312:22:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"285:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"294:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"281:3:14"},"nodeType":"YulFunctionCall","src":"281:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"306:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"277:3:14"},"nodeType":"YulFunctionCall","src":"277:32:14"},"nodeType":"YulIf","src":"274:2:14"},{"nodeType":"YulAssignment","src":"345:41:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"376:9:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"355:20:14"},"nodeType":"YulFunctionCall","src":"355:31:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"345:6:14"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"230:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"241:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"253:6:14","type":""}],"src":"194:198:14"},{"body":{"nodeType":"YulBlock","src":"484:187:14","statements":[{"body":{"nodeType":"YulBlock","src":"530:26:14","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"539:6:14"},{"name":"value1","nodeType":"YulIdentifier","src":"547:6:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"532:6:14"},"nodeType":"YulFunctionCall","src":"532:22:14"},"nodeType":"YulExpressionStatement","src":"532:22:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"505:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"514:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"501:3:14"},"nodeType":"YulFunctionCall","src":"501:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"526:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"497:3:14"},"nodeType":"YulFunctionCall","src":"497:32:14"},"nodeType":"YulIf","src":"494:2:14"},{"nodeType":"YulAssignment","src":"565:41:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"596:9:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"575:20:14"},"nodeType":"YulFunctionCall","src":"575:31:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"565:6:14"}]},{"nodeType":"YulAssignment","src":"615:50:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"650:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"661:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"646:3:14"},"nodeType":"YulFunctionCall","src":"646:18:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"625:20:14"},"nodeType":"YulFunctionCall","src":"625:40:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"615:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"442:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"453:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"465:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"473:6:14","type":""}],"src":"397:274:14"},{"body":{"nodeType":"YulBlock","src":"746:120:14","statements":[{"body":{"nodeType":"YulBlock","src":"792:26:14","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"801:6:14"},{"name":"value0","nodeType":"YulIdentifier","src":"809:6:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"794:6:14"},"nodeType":"YulFunctionCall","src":"794:22:14"},"nodeType":"YulExpressionStatement","src":"794:22:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"767:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"776:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"763:3:14"},"nodeType":"YulFunctionCall","src":"763:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"788:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"759:3:14"},"nodeType":"YulFunctionCall","src":"759:32:14"},"nodeType":"YulIf","src":"756:2:14"},{"nodeType":"YulAssignment","src":"827:33:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"850:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"837:12:14"},"nodeType":"YulFunctionCall","src":"837:23:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"827:6:14"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"712:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"723:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"735:6:14","type":""}],"src":"676:190:14"},{"body":{"nodeType":"YulBlock","src":"972:102:14","statements":[{"nodeType":"YulAssignment","src":"982:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"994:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1005:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"990:3:14"},"nodeType":"YulFunctionCall","src":"990:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"982:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1024:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1039:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1055:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1060:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1051:3:14"},"nodeType":"YulFunctionCall","src":"1051:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"1064:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1047:3:14"},"nodeType":"YulFunctionCall","src":"1047:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1035:3:14"},"nodeType":"YulFunctionCall","src":"1035:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1017:6:14"},"nodeType":"YulFunctionCall","src":"1017:51:14"},"nodeType":"YulExpressionStatement","src":"1017:51:14"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"941:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"952:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"963:4:14","type":""}],"src":"871:203:14"},{"body":{"nodeType":"YulBlock","src":"1253:171:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1270:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1281:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1263:6:14"},"nodeType":"YulFunctionCall","src":"1263:21:14"},"nodeType":"YulExpressionStatement","src":"1263:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1304:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1315:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1300:3:14"},"nodeType":"YulFunctionCall","src":"1300:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"1320:2:14","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1293:6:14"},"nodeType":"YulFunctionCall","src":"1293:30:14"},"nodeType":"YulExpressionStatement","src":"1293:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1343:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1354:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1339:3:14"},"nodeType":"YulFunctionCall","src":"1339:18:14"},{"kind":"string","nodeType":"YulLiteral","src":"1359:23:14","type":"","value":"ONLY_EMISSION_MANAGER"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1332:6:14"},"nodeType":"YulFunctionCall","src":"1332:51:14"},"nodeType":"YulExpressionStatement","src":"1332:51:14"},{"nodeType":"YulAssignment","src":"1392:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1404:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1415:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1400:3:14"},"nodeType":"YulFunctionCall","src":"1400:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1392:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1230:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1244:4:14","type":""}],"src":"1079:345:14"},{"body":{"nodeType":"YulBlock","src":"1584:246:14","statements":[{"nodeType":"YulAssignment","src":"1594:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1606:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1617:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1602:3:14"},"nodeType":"YulFunctionCall","src":"1602:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1594:4:14"}]},{"nodeType":"YulVariableDeclaration","src":"1629:38:14","value":{"kind":"number","nodeType":"YulLiteral","src":"1639:28:14","type":"","value":"0xffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1633:2:14","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1683:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1698:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"1706:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1694:3:14"},"nodeType":"YulFunctionCall","src":"1694:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1676:6:14"},"nodeType":"YulFunctionCall","src":"1676:34:14"},"nodeType":"YulExpressionStatement","src":"1676:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1730:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1741:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1726:3:14"},"nodeType":"YulFunctionCall","src":"1726:18:14"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1750:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"1758:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1746:3:14"},"nodeType":"YulFunctionCall","src":"1746:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1719:6:14"},"nodeType":"YulFunctionCall","src":"1719:43:14"},"nodeType":"YulExpressionStatement","src":"1719:43:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1782:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1793:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1778:3:14"},"nodeType":"YulFunctionCall","src":"1778:18:14"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"1802:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1810:12:14","type":"","value":"0xffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1798:3:14"},"nodeType":"YulFunctionCall","src":"1798:25:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1771:6:14"},"nodeType":"YulFunctionCall","src":"1771:53:14"},"nodeType":"YulExpressionStatement","src":"1771:53:14"}]},"name":"abi_encode_tuple_t_uint104_t_uint104_t_uint40__to_t_uint104_t_uint104_t_uint40__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1537:9:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1548:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1556:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1564:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1575:4:14","type":""}],"src":"1429:401:14"},{"body":{"nodeType":"YulBlock","src":"1936:76:14","statements":[{"nodeType":"YulAssignment","src":"1946:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1958:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1969:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1954:3:14"},"nodeType":"YulFunctionCall","src":"1954:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1946:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1988:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"1999:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1981:6:14"},"nodeType":"YulFunctionCall","src":"1981:25:14"},"nodeType":"YulExpressionStatement","src":"1981:25:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1905:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1916:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1927:4:14","type":""}],"src":"1835:177:14"},{"body":{"nodeType":"YulBlock","src":"2174:162:14","statements":[{"nodeType":"YulAssignment","src":"2184:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2196:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2207:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2192:3:14"},"nodeType":"YulFunctionCall","src":"2192:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2184:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2226:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"2237:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2219:6:14"},"nodeType":"YulFunctionCall","src":"2219:25:14"},"nodeType":"YulExpressionStatement","src":"2219:25:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2264:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2275:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2260:3:14"},"nodeType":"YulFunctionCall","src":"2260:18:14"},{"name":"value1","nodeType":"YulIdentifier","src":"2280:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2253:6:14"},"nodeType":"YulFunctionCall","src":"2253:34:14"},"nodeType":"YulExpressionStatement","src":"2253:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2307:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2318:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2303:3:14"},"nodeType":"YulFunctionCall","src":"2303:18:14"},{"name":"value2","nodeType":"YulIdentifier","src":"2323:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2296:6:14"},"nodeType":"YulFunctionCall","src":"2296:34:14"},"nodeType":"YulExpressionStatement","src":"2296:34:14"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2127:9:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2138:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2146:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2154:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2165:4:14","type":""}],"src":"2017:319:14"},{"body":{"nodeType":"YulBlock","src":"2438:87:14","statements":[{"nodeType":"YulAssignment","src":"2448:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2460:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2471:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2456:3:14"},"nodeType":"YulFunctionCall","src":"2456:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2448:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2490:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2505:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2513:4:14","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2501:3:14"},"nodeType":"YulFunctionCall","src":"2501:17:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2483:6:14"},"nodeType":"YulFunctionCall","src":"2483:36:14"},"nodeType":"YulExpressionStatement","src":"2483:36:14"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2407:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2418:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2429:4:14","type":""}],"src":"2341:184:14"}]},"contents":"{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"ONLY_EMISSION_MANAGER\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint104_t_uint104_t_uint40__to_t_uint104_t_uint104_t_uint40__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, 0xffffffffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"immutableReferences":{"588":[{"start":442,"length":32},{"start":589,"length":32}]}},"methodIdentifiers":{"DISTRIBUTION_END()":"919cd40f","EMISSION_MANAGER()":"cbcbb507","PRECISION()":"aaf5eb68","assets(address)":"f11b8188","getAssetData(address)":"1652e7b7","getDistributionEnd()":"cc69afec","getUserAssetData(address,address)":"3373ee4c","setDistributionEnd(uint256)":"39ccbdd3"},"gasEstimates":{"creation":{"codeDepositCost":"204200","executionCost":"infinite","totalCost":"infinite"},"external":{"DISTRIBUTION_END()":"1095","EMISSION_MANAGER()":"infinite","PRECISION()":"240","assets(address)":"1481","getAssetData(address)":"1398","getDistributionEnd()":"1072","getUserAssetData(address,address)":"infinite","setDistributionEnd(uint256)":"infinite"},"internal":{"_claimRewards(address,struct DistributionTypes.UserStakeInput memory[] memory)":"infinite","_configureAssets(struct DistributionTypes.AssetConfigInput memory[] memory)":"infinite","_getAssetIndex(uint256,uint256,uint128,uint256)":"infinite","_getRewards(uint256,uint256,uint256)":"infinite","_getUnclaimedRewards(address,struct DistributionTypes.UserStakeInput memory[] memory)":"infinite","_updateAssetStateInternal(address,struct DistributionManager.AssetData storage pointer,uint256)":"infinite","_updateUserAssetInternal(address,address,uint256,uint256)":"infinite"}}},"ewasm":{"wasm":""}}},"contracts/incentives/StakedTokenIncentivesController.sol":{"StakedTokenIncentivesController":{"abi":[{"type":"constructor","inputs":[{"name":"stakeToken","type":"address","internalType":"contract IStakedTokenWithConfig"},{"name":"emissionManager","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"DISTRIBUTION_END","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"EMISSION_MANAGER","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"PRECISION","inputs":[],"outputs":[{"name":"","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"REVISION","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"REWARD_TOKEN","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"STAKE_TOKEN","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IStakedTokenWithConfig"}],"stateMutability":"view"},{"type":"function","name":"assets","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"emissionPerSecond","type":"uint104","internalType":"uint104"},{"name":"index","type":"uint104","internalType":"uint104"},{"name":"lastUpdateTimestamp","type":"uint40","internalType":"uint40"}],"stateMutability":"view"},{"type":"function","name":"claimRewards","inputs":[{"name":"assets","type":"address[]","internalType":"address[]"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"to","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"claimRewardsOnBehalf","inputs":[{"name":"assets","type":"address[]","internalType":"address[]"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"user","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"configureAssets","inputs":[{"name":"assets","type":"address[]","internalType":"address[]"},{"name":"emissionsPerSecond","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getAssetData","inputs":[{"name":"asset","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getClaimer","inputs":[{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getDistributionEnd","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getRewardsBalance","inputs":[{"name":"assets","type":"address[]","internalType":"address[]"},{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getUserAssetData","inputs":[{"name":"user","type":"address","internalType":"address"},{"name":"asset","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getUserUnclaimedRewards","inputs":[{"name":"_user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"handleAction","inputs":[{"name":"user","type":"address","internalType":"address"},{"name":"totalSupply","type":"uint256","internalType":"uint256"},{"name":"userBalance","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"initialize","inputs":[{"name":"addressesProvider","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setClaimer","inputs":[{"name":"user","type":"address","internalType":"address"},{"name":"caller","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setDistributionEnd","inputs":[{"name":"distributionEnd","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"AssetConfigUpdated","inputs":[{"name":"asset","type":"address","indexed":true,"internalType":"address"},{"name":"emission","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"AssetIndexUpdated","inputs":[{"name":"asset","type":"address","indexed":true,"internalType":"address"},{"name":"index","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ClaimerSet","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"claimer","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"DistributionEndUpdated","inputs":[{"name":"newDistributionEnd","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RewardsAccrued","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RewardsClaimed","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"claimer","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"UserIndexUpdated","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"asset","type":"address","indexed":true,"internalType":"address"},{"name":"index","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IStakedTokenWithConfig\",\"name\":\"stakeToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"emissionManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"emission\",\"type\":\"uint256\"}],\"name\":\"AssetConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"AssetIndexUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"ClaimerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDistributionEnd\",\"type\":\"uint256\"}],\"name\":\"DistributionEndUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsAccrued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"UserIndexUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DISTRIBUTION_END\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EMISSION_MANAGER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REVISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REWARD_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKE_TOKEN\",\"outputs\":[{\"internalType\":\"contract IStakedTokenWithConfig\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"assets\",\"outputs\":[{\"internalType\":\"uint104\",\"name\":\"emissionPerSecond\",\"type\":\"uint104\"},{\"internalType\":\"uint104\",\"name\":\"index\",\"type\":\"uint104\"},{\"internalType\":\"uint40\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint40\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"claimRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"claimRewardsOnBehalf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"emissionsPerSecond\",\"type\":\"uint256[]\"}],\"name\":\"configureAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getClaimer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDistributionEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getRewardsBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getUserAssetData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserUnclaimedRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userBalance\",\"type\":\"uint256\"}],\"name\":\"handleAction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressesProvider\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"setClaimer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"distributionEnd\",\"type\":\"uint256\"}],\"name\":\"setDistributionEnd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave*\",\"kind\":\"dev\",\"methods\":{\"DISTRIBUTION_END()\":{\"details\":\"for backwards compatibility with the previous DistributionManager used\",\"returns\":{\"_0\":\"The end of the distribution*\"}},\"REWARD_TOKEN()\":{\"details\":\"for backward compatibility with previous implementation of the Incentives controller\"},\"claimRewards(address[],uint256,address)\":{\"details\":\"Claims reward for an user, on all the assets of the lending pool, accumulating the pending rewards\",\"params\":{\"amount\":\"Amount of rewards to claim\",\"to\":\"Address that will be receiving the rewards\"},\"returns\":{\"_0\":\"Rewards claimed*\"}},\"claimRewardsOnBehalf(address[],uint256,address,address)\":{\"details\":\"Claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards. The caller must be whitelisted via \\\"allowClaimOnBehalf\\\" function by the RewardsAdmin role manager\",\"params\":{\"amount\":\"Amount of rewards to claim\",\"to\":\"Address that will be receiving the rewards\",\"user\":\"Address to check and claim rewards\"},\"returns\":{\"_0\":\"Rewards claimed*\"}},\"configureAssets(address[],uint256[])\":{\"details\":\"Configure assets for a certain rewards emission\",\"params\":{\"assets\":\"The assets to incentivize\",\"emissionsPerSecond\":\"The emission for each asset\"}},\"getAssetData(address)\":{\"details\":\"Returns the configuration of the distribution for a certain asset\",\"params\":{\"asset\":\"The address of the reference asset of the distribution\"},\"returns\":{\"_0\":\"The asset index, the emission per second and the last updated timestamp*\"}},\"getClaimer(address)\":{\"details\":\"Returns the whitelisted claimer for a certain address (0x0 if not set)\",\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The claimer address\"}},\"getDistributionEnd()\":{\"details\":\"Gets the end date for the distribution\",\"returns\":{\"_0\":\"The end of the distribution*\"}},\"getRewardsBalance(address[],address)\":{\"details\":\"Returns the total of rewards of an user, already accrued + not yet accrued\",\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The rewards*\"}},\"getUserAssetData(address,address)\":{\"details\":\"Returns the data of an user on a distribution\",\"params\":{\"asset\":\"The address of the reference asset of the distribution\",\"user\":\"Address of the user\"},\"returns\":{\"_0\":\"The new index*\"}},\"getUserUnclaimedRewards(address)\":{\"details\":\"returns the unclaimed rewards of the user\",\"params\":{\"user\":\"the address of the user\"},\"returns\":{\"_0\":\"the unclaimed user rewards\"}},\"handleAction(address,uint256,uint256)\":{\"details\":\"Called by the corresponding asset on any update that affects the rewards distribution\",\"params\":{\"asset\":\"The address of the user\",\"totalSupply\":\"The total supply of the asset in the lending pool*\",\"userBalance\":\"The balance of the user of the asset in the lending pool\"}},\"initialize(address)\":{\"details\":\"Initialize IStakedTokenIncentivesController\",\"params\":{\"addressesProvider\":\"the address of the corresponding addresses provider*\"}},\"setClaimer(address,address)\":{\"details\":\"Whitelists an address to claim the rewards on behalf of another address\",\"params\":{\"claimer\":\"The address of the claimer\",\"user\":\"The address of the user\"}},\"setDistributionEnd(uint256)\":{\"details\":\"Sets the end date for the distribution\",\"params\":{\"distributionEnd\":\"The end date timestamp*\"}}},\"title\":\"StakedTokenIncentivesController\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Distributor contract for rewards to the Aave protocol, using a staked token as rewards asset. The contract stakes the rewards before redistributing them to the Aave protocol participants. The reference staked token implementation is at https://github.com/aave/aave-stake-v2\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/incentives/StakedTokenIncentivesController.sol\":\"StakedTokenIncentivesController\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/aave-stake/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n * From https://github.com/OpenZeppelin/openzeppelin-contracts\\n */\\ninterface IERC20 {\\n  /**\\n   * @dev Returns the amount of tokens in existence.\\n   */\\n  function totalSupply() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the amount of tokens owned by `account`.\\n   */\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  /**\\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Returns the remaining number of tokens that `spender` will be\\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n   * zero by default.\\n   *\\n   * This value changes when {approve} or {transferFrom} are called.\\n   */\\n  function allowance(address owner, address spender) external view returns (uint256);\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n   * that someone may use both the old and the new allowance by unfortunate\\n   * transaction ordering. One possible solution to mitigate this race\\n   * condition is to first reduce the spender's allowance to 0 and set the\\n   * desired value afterwards:\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n   *\\n   * Emits an {Approval} event.\\n   */\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n   * allowance mechanism. `amount` is then deducted from the caller's\\n   * allowance.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  /**\\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n   * another (`to`).\\n   *\\n   * Note that `value` may be zero.\\n   */\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  /**\\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n   * a call to {approve}. `value` is the new allowance.\\n   */\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x150506e2e40dc3cea841fe0ade6021b9b0d4e09f7616d312bc7c1300a2d7a94f\",\"license\":\"MIT\"},\"@aave/aave-stake/contracts/interfaces/IStakedToken.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\ninterface IStakedToken {\\n  \\n  function stake(address to, uint256 amount) external;\\n\\n  function redeem(address to, uint256 amount) external;\\n\\n  function cooldown() external;\\n\\n  function claimRewards(address to, uint256 amount) external;\\n}\\n\",\"keccak256\":\"0x96309403461031e5b796bcd97cd504fdaa60487360abb795a51171dbcec596a2\",\"license\":\"agpl-3.0\"},\"@aave/aave-stake/contracts/lib/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n * From https://github.com/OpenZeppelin/openzeppelin-contracts\\n */\\nlibrary Address {\\n  /**\\n   * @dev Returns true if `account` is a contract.\\n   *\\n   * [IMPORTANT]\\n   * ====\\n   * It is unsafe to assume that an address for which this function returns\\n   * false is an externally-owned account (EOA) and not a contract.\\n   *\\n   * Among others, `isContract` will return false for the following\\n   * types of addresses:\\n   *\\n   *  - an externally-owned account\\n   *  - a contract in construction\\n   *  - an address where a contract will be created\\n   *  - an address where a contract lived, but was destroyed\\n   * ====\\n   */\\n  function isContract(address account) internal view returns (bool) {\\n    // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\\n    // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\\n    // for accounts without code, i.e. `keccak256('')`\\n    bytes32 codehash;\\n    bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n    // solhint-disable-next-line no-inline-assembly\\n    assembly {\\n      codehash := extcodehash(account)\\n    }\\n    return (codehash != accountHash && codehash != 0x0);\\n  }\\n\\n  /**\\n   * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n   * `recipient`, forwarding all available gas and reverting on errors.\\n   *\\n   * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n   * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n   * imposed by `transfer`, making them unable to receive funds via\\n   * `transfer`. {sendValue} removes this limitation.\\n   *\\n   * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n   *\\n   * IMPORTANT: because control is transferred to `recipient`, care must be\\n   * taken to not create reentrancy vulnerabilities. Consider using\\n   * {ReentrancyGuard} or the\\n   * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n   */\\n  function sendValue(address payable recipient, uint256 amount) internal {\\n    require(address(this).balance >= amount, 'Address: insufficient balance');\\n\\n    // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n    (bool success, ) = recipient.call{value: amount}('');\\n    require(success, 'Address: unable to send value, recipient may have reverted');\\n  }\\n}\\n\",\"keccak256\":\"0x456a1aebf00cb1f2987ca41f1924e4811703f10800a34ecb759e5d1dc472bb78\",\"license\":\"MIT\"},\"@aave/aave-stake/contracts/lib/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.7.5;\\n\\nimport {IERC20} from '../interfaces/IERC20.sol';\\nimport {SafeMath} from './SafeMath.sol';\\nimport {Address} from './Address.sol';\\n\\n/**\\n * @title SafeERC20\\n * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\\n * Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n  using SafeMath for uint256;\\n  using Address for address;\\n\\n  function safeTransfer(\\n    IERC20 token,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n  }\\n\\n  function safeTransferFrom(\\n    IERC20 token,\\n    address from,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n  }\\n\\n  function safeApprove(\\n    IERC20 token,\\n    address spender,\\n    uint256 value\\n  ) internal {\\n    require(\\n      (value == 0) || (token.allowance(address(this), spender) == 0),\\n      'SafeERC20: approve from non-zero to non-zero allowance'\\n    );\\n    callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n  }\\n\\n  function callOptionalReturn(IERC20 token, bytes memory data) private {\\n    require(address(token).isContract(), 'SafeERC20: call to non-contract');\\n\\n    // solhint-disable-next-line avoid-low-level-calls\\n    (bool success, bytes memory returndata) = address(token).call(data);\\n    require(success, 'SafeERC20: low-level call failed');\\n\\n    if (returndata.length > 0) {\\n      // Return data is optional\\n      // solhint-disable-next-line max-line-length\\n      require(abi.decode(returndata, (bool)), 'SafeERC20: ERC20 operation did not succeed');\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0xbba27d4b67c08f2a51ecf534aadfd510260996fcf91299691e955ee7539dd5a0\",\"license\":\"MIT\"},\"@aave/aave-stake/contracts/lib/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\\n * Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n  /**\\n   * @dev Returns the addition of two unsigned integers, reverting on\\n   * overflow.\\n   *\\n   * Counterpart to Solidity's `+` operator.\\n   *\\n   * Requirements:\\n   * - Addition cannot overflow.\\n   */\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n    uint256 c = a + b;\\n    require(c >= a, 'SafeMath: addition overflow');\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the subtraction of two unsigned integers, reverting on\\n   * overflow (when the result is negative).\\n   *\\n   * Counterpart to Solidity's `-` operator.\\n   *\\n   * Requirements:\\n   * - Subtraction cannot overflow.\\n   */\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return sub(a, b, 'SafeMath: subtraction overflow');\\n  }\\n\\n  /**\\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n   * overflow (when the result is negative).\\n   *\\n   * Counterpart to Solidity's `-` operator.\\n   *\\n   * Requirements:\\n   * - Subtraction cannot overflow.\\n   */\\n  function sub(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b <= a, errorMessage);\\n    uint256 c = a - b;\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the multiplication of two unsigned integers, reverting on\\n   * overflow.\\n   *\\n   * Counterpart to Solidity's `*` operator.\\n   *\\n   * Requirements:\\n   * - Multiplication cannot overflow.\\n   */\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n    // benefit is lost if 'b' is also tested.\\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n    if (a == 0) {\\n      return 0;\\n    }\\n\\n    uint256 c = a * b;\\n    require(c / a == b, 'SafeMath: multiplication overflow');\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the integer division of two unsigned integers. Reverts on\\n   * division by zero. The result is rounded towards zero.\\n   *\\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n   * uses an invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return div(a, b, 'SafeMath: division by zero');\\n  }\\n\\n  /**\\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n   * division by zero. The result is rounded towards zero.\\n   *\\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n   * uses an invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function div(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    // Solidity only automatically asserts when dividing by 0\\n    require(b > 0, errorMessage);\\n    uint256 c = a / b;\\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n   * Reverts when dividing by zero.\\n   *\\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\\n   * invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return mod(a, b, 'SafeMath: modulo by zero');\\n  }\\n\\n  /**\\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n   * Reverts with custom message when dividing by zero.\\n   *\\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\\n   * invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function mod(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b != 0, errorMessage);\\n    return a % b;\\n  }\\n}\\n\",\"keccak256\":\"0xf32a71745588178f5f64b96e7766589e48d5402c4679b3c04085760f9437f00b\",\"license\":\"agpl-3.0\"},\"@aave/aave-stake/contracts/utils/VersionedInitializable.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\n/**\\n * @title VersionedInitializable\\n *\\n * @dev Helper contract to support initializer functions. To use it, replace\\n * the constructor with a function that has the `initializer` modifier.\\n * WARNING: Unlike constructors, initializer functions must be manually\\n * invoked. This applies both to deploying an Initializable contract, as well\\n * as extending an Initializable contract via inheritance.\\n * WARNING: When used with inheritance, manual care must be taken to not invoke\\n * a parent initializer twice, or ensure that all initializers are idempotent,\\n * because this is not dealt with automatically as with constructors.\\n *\\n * @author Aave, inspired by the OpenZeppelin Initializable contract\\n */\\nabstract contract VersionedInitializable {\\n  /**\\n   * @dev Indicates that the contract has been initialized.\\n   */\\n  uint256 internal lastInitializedRevision = 0;\\n\\n  /**\\n   * @dev Modifier to use in the initializer function of a contract.\\n   */\\n  modifier initializer() {\\n    uint256 revision = getRevision();\\n    require(revision > lastInitializedRevision, 'Contract instance has already been initialized');\\n\\n    lastInitializedRevision = revision;\\n\\n    _;\\n  }\\n\\n  /// @dev returns the revision number of the contract.\\n  /// Needs to be defined in the inherited class as a constant.\\n  function getRevision() internal pure virtual returns (uint256);\\n\\n  // Reserved storage space to allow for layout changes in the future.\\n  uint256[50] private ______gap;\\n}\\n\",\"keccak256\":\"0xedfec4c491ad24c0a1024fc801c22f2a16d1f316f2a5cdcc883e0bbc451cffc7\",\"license\":\"agpl-3.0\"},\"contracts/incentives/DistributionManager.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\npragma experimental ABIEncoderV2;\\n\\nimport {IAaveDistributionManager} from '../interfaces/IAaveDistributionManager.sol';\\nimport {SafeMath} from '../lib/SafeMath.sol';\\nimport {DistributionTypes} from '../lib/DistributionTypes.sol';\\n\\n/**\\n * @title DistributionManager\\n * @notice Accounting contract to manage multiple staking distributions\\n * @author Aave\\n **/\\ncontract DistributionManager is IAaveDistributionManager {\\n  using SafeMath for uint256;\\n\\n  struct AssetData {\\n    uint104 emissionPerSecond;\\n    uint104 index;\\n    uint40 lastUpdateTimestamp;\\n    mapping(address => uint256) users;\\n  }\\n\\n  address public immutable EMISSION_MANAGER;\\n\\n  uint8 public constant PRECISION = 18;\\n\\n  mapping(address => AssetData) public assets;\\n\\n  uint256 internal _distributionEnd;\\n\\n  modifier onlyEmissionManager() {\\n    require(msg.sender == EMISSION_MANAGER, 'ONLY_EMISSION_MANAGER');\\n    _;\\n  }\\n\\n  constructor(address emissionManager) {\\n    EMISSION_MANAGER = emissionManager;\\n  }\\n\\n  /// @inheritdoc IAaveDistributionManager\\n  function setDistributionEnd(uint256 distributionEnd) external override onlyEmissionManager {\\n    _distributionEnd = distributionEnd;\\n    emit DistributionEndUpdated(distributionEnd);\\n  }\\n\\n  /// @inheritdoc IAaveDistributionManager\\n  function getDistributionEnd() external view override returns (uint256) {\\n    return _distributionEnd;\\n  }\\n\\n  /// @inheritdoc IAaveDistributionManager\\n  function DISTRIBUTION_END() external view override returns (uint256) {\\n    return _distributionEnd;\\n  }\\n\\n  /// @inheritdoc IAaveDistributionManager\\n  function getUserAssetData(address user, address asset) public view override returns (uint256) {\\n    return assets[asset].users[user];\\n  }\\n\\n  /// @inheritdoc IAaveDistributionManager\\n  function getAssetData(address asset) public view override returns (uint256, uint256, uint256) {\\n    return (assets[asset].index, assets[asset].emissionPerSecond, assets[asset].lastUpdateTimestamp);\\n  }\\n\\n  /**\\n   * @dev Configure the assets for a specific emission\\n   * @param assetsConfigInput The array of each asset configuration\\n   **/\\n  function _configureAssets(DistributionTypes.AssetConfigInput[] memory assetsConfigInput)\\n    internal\\n  {\\n    for (uint256 i = 0; i < assetsConfigInput.length; i++) {\\n      AssetData storage assetConfig = assets[assetsConfigInput[i].underlyingAsset];\\n\\n      _updateAssetStateInternal(\\n        assetsConfigInput[i].underlyingAsset,\\n        assetConfig,\\n        assetsConfigInput[i].totalStaked\\n      );\\n\\n      assetConfig.emissionPerSecond = assetsConfigInput[i].emissionPerSecond;\\n\\n      emit AssetConfigUpdated(\\n        assetsConfigInput[i].underlyingAsset,\\n        assetsConfigInput[i].emissionPerSecond\\n      );\\n    }\\n  }\\n\\n  /**\\n   * @dev Updates the state of one distribution, mainly rewards index and timestamp\\n   * @param asset The address of the asset being updated\\n   * @param assetConfig Storage pointer to the distribution's config\\n   * @param totalStaked Current total of staked assets for this distribution\\n   * @return The new distribution index\\n   **/\\n  function _updateAssetStateInternal(\\n    address asset,\\n    AssetData storage assetConfig,\\n    uint256 totalStaked\\n  ) internal returns (uint256) {\\n    uint256 oldIndex = assetConfig.index;\\n    uint256 emissionPerSecond = assetConfig.emissionPerSecond;\\n    uint128 lastUpdateTimestamp = assetConfig.lastUpdateTimestamp;\\n\\n    if (block.timestamp == lastUpdateTimestamp) {\\n      return oldIndex;\\n    }\\n\\n    uint256 newIndex =\\n      _getAssetIndex(oldIndex, emissionPerSecond, lastUpdateTimestamp, totalStaked);\\n\\n    if (newIndex != oldIndex) {\\n      require(uint104(newIndex) == newIndex, 'Index overflow');\\n      //optimization: storing one after another saves one SSTORE\\n      assetConfig.index = uint104(newIndex);\\n      assetConfig.lastUpdateTimestamp = uint40(block.timestamp);\\n      emit AssetIndexUpdated(asset, newIndex);\\n    } else {\\n      assetConfig.lastUpdateTimestamp = uint40(block.timestamp);\\n    }\\n\\n    return newIndex;\\n  }\\n\\n  /**\\n   * @dev Updates the state of an user in a distribution\\n   * @param user The user's address\\n   * @param asset The address of the reference asset of the distribution\\n   * @param stakedByUser Amount of tokens staked by the user in the distribution at the moment\\n   * @param totalStaked Total tokens staked in the distribution\\n   * @return The accrued rewards for the user until the moment\\n   **/\\n  function _updateUserAssetInternal(\\n    address user,\\n    address asset,\\n    uint256 stakedByUser,\\n    uint256 totalStaked\\n  ) internal returns (uint256) {\\n    AssetData storage assetData = assets[asset];\\n    uint256 userIndex = assetData.users[user];\\n    uint256 accruedRewards = 0;\\n\\n    uint256 newIndex = _updateAssetStateInternal(asset, assetData, totalStaked);\\n\\n    if (userIndex != newIndex) {\\n      if (stakedByUser != 0) {\\n        accruedRewards = _getRewards(stakedByUser, newIndex, userIndex);\\n      }\\n\\n      assetData.users[user] = newIndex;\\n      emit UserIndexUpdated(user, asset, newIndex);\\n    }\\n\\n    return accruedRewards;\\n  }\\n\\n  /**\\n   * @dev Used by \\\"frontend\\\" stake contracts to update the data of an user when claiming rewards from there\\n   * @param user The address of the user\\n   * @param stakes List of structs of the user data related with his stake\\n   * @return The accrued rewards for the user until the moment\\n   **/\\n  function _claimRewards(address user, DistributionTypes.UserStakeInput[] memory stakes)\\n    internal\\n    returns (uint256)\\n  {\\n    uint256 accruedRewards = 0;\\n\\n    for (uint256 i = 0; i < stakes.length; i++) {\\n      accruedRewards = accruedRewards.add(\\n        _updateUserAssetInternal(\\n          user,\\n          stakes[i].underlyingAsset,\\n          stakes[i].stakedByUser,\\n          stakes[i].totalStaked\\n        )\\n      );\\n    }\\n\\n    return accruedRewards;\\n  }\\n\\n  /**\\n   * @dev Return the accrued rewards for an user over a list of distribution\\n   * @param user The address of the user\\n   * @param stakes List of structs of the user data related with his stake\\n   * @return The accrued rewards for the user until the moment\\n   **/\\n  function _getUnclaimedRewards(address user, DistributionTypes.UserStakeInput[] memory stakes)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    uint256 accruedRewards = 0;\\n\\n    for (uint256 i = 0; i < stakes.length; i++) {\\n      AssetData storage assetConfig = assets[stakes[i].underlyingAsset];\\n      uint256 assetIndex =\\n        _getAssetIndex(\\n          assetConfig.index,\\n          assetConfig.emissionPerSecond,\\n          assetConfig.lastUpdateTimestamp,\\n          stakes[i].totalStaked\\n        );\\n\\n      accruedRewards = accruedRewards.add(\\n        _getRewards(stakes[i].stakedByUser, assetIndex, assetConfig.users[user])\\n      );\\n    }\\n    return accruedRewards;\\n  }\\n\\n  /**\\n   * @dev Internal function for the calculation of user's rewards on a distribution\\n   * @param principalUserBalance Amount staked by the user on a distribution\\n   * @param reserveIndex Current index of the distribution\\n   * @param userIndex Index stored for the user, representation his staking moment\\n   * @return The rewards\\n   **/\\n  function _getRewards(\\n    uint256 principalUserBalance,\\n    uint256 reserveIndex,\\n    uint256 userIndex\\n  ) internal pure returns (uint256) {\\n    return principalUserBalance.mul(reserveIndex.sub(userIndex)) / 10**uint256(PRECISION);\\n  }\\n\\n  /**\\n   * @dev Calculates the next value of an specific distribution index, with validations\\n   * @param currentIndex Current index of the distribution\\n   * @param emissionPerSecond Representing the total rewards distributed per second per asset unit, on the distribution\\n   * @param lastUpdateTimestamp Last moment this distribution was updated\\n   * @param totalBalance of tokens considered for the distribution\\n   * @return The new index.\\n   **/\\n  function _getAssetIndex(\\n    uint256 currentIndex,\\n    uint256 emissionPerSecond,\\n    uint128 lastUpdateTimestamp,\\n    uint256 totalBalance\\n  ) internal view returns (uint256) {\\n    uint256 distributionEnd = _distributionEnd;\\n    if (\\n      emissionPerSecond == 0 ||\\n      totalBalance == 0 ||\\n      lastUpdateTimestamp == block.timestamp ||\\n      lastUpdateTimestamp >= distributionEnd\\n    ) {\\n      return currentIndex;\\n    }\\n\\n    uint256 currentTimestamp =\\n      block.timestamp > distributionEnd ? distributionEnd : block.timestamp;\\n    uint256 timeDelta = currentTimestamp.sub(lastUpdateTimestamp);\\n    return\\n      emissionPerSecond.mul(timeDelta).mul(10**uint256(PRECISION)).div(totalBalance).add(\\n        currentIndex\\n      );\\n  }\\n}\\n\",\"keccak256\":\"0x4db01bc16911295af05d21c900045539eb0a926f6c73461b05b28e0b878f3560\",\"license\":\"agpl-3.0\"},\"contracts/incentives/StakedTokenIncentivesController.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\npragma experimental ABIEncoderV2;\\n\\nimport {SafeERC20} from '@aave/aave-stake/contracts/lib/SafeERC20.sol';\\nimport {SafeMath} from '../lib/SafeMath.sol';\\nimport {DistributionTypes} from '../lib/DistributionTypes.sol';\\nimport {VersionedInitializable} from '@aave/aave-stake/contracts/utils/VersionedInitializable.sol';\\nimport {DistributionManager} from './DistributionManager.sol';\\nimport {IStakedTokenWithConfig} from '../interfaces/IStakedTokenWithConfig.sol';\\nimport {IERC20} from '@aave/aave-stake/contracts/interfaces/IERC20.sol';\\nimport {IScaledBalanceToken} from '../interfaces/IScaledBalanceToken.sol';\\nimport {IAaveIncentivesController} from '../interfaces/IAaveIncentivesController.sol';\\n\\n/**\\n * @title StakedTokenIncentivesController\\n * @notice Distributor contract for rewards to the Aave protocol, using a staked token as rewards asset.\\n * The contract stakes the rewards before redistributing them to the Aave protocol participants.\\n * The reference staked token implementation is at https://github.com/aave/aave-stake-v2\\n * @author Aave\\n **/\\ncontract StakedTokenIncentivesController is\\n  IAaveIncentivesController,\\n  VersionedInitializable,\\n  DistributionManager\\n{\\n  using SafeMath for uint256;\\n  using SafeERC20 for IERC20;\\n\\n  uint256 public constant REVISION = 1;\\n\\n  IStakedTokenWithConfig public immutable STAKE_TOKEN;\\n\\n  mapping(address => uint256) internal _usersUnclaimedRewards;\\n\\n  // this mapping allows whitelisted addresses to claim on behalf of others\\n  // useful for contracts that hold tokens to be rewarded but don't have any native logic to claim Liquidity Mining rewards\\n  mapping(address => address) internal _authorizedClaimers;\\n\\n  modifier onlyAuthorizedClaimers(address claimer, address user) {\\n    require(_authorizedClaimers[user] == claimer, 'CLAIMER_UNAUTHORIZED');\\n    _;\\n  }\\n\\n  constructor(IStakedTokenWithConfig stakeToken, address emissionManager)\\n    DistributionManager(emissionManager)\\n  {\\n    STAKE_TOKEN = stakeToken;\\n  }\\n\\n  /**\\n   * @dev Initialize IStakedTokenIncentivesController\\n   * @param addressesProvider the address of the corresponding addresses provider\\n   **/\\n  function initialize(address addressesProvider) external initializer {\\n    //approves the safety module to allow staking\\n    IERC20(STAKE_TOKEN.STAKED_TOKEN()).safeApprove(address(STAKE_TOKEN), type(uint256).max);\\n  }\\n\\n  /// @inheritdoc IAaveIncentivesController\\n  function configureAssets(address[] calldata assets, uint256[] calldata emissionsPerSecond)\\n    external\\n    override\\n    onlyEmissionManager\\n  {\\n    require(assets.length == emissionsPerSecond.length, 'INVALID_CONFIGURATION');\\n\\n    DistributionTypes.AssetConfigInput[] memory assetsConfig =\\n      new DistributionTypes.AssetConfigInput[](assets.length);\\n\\n    for (uint256 i = 0; i < assets.length; i++) {\\n      assetsConfig[i].underlyingAsset = assets[i];\\n      assetsConfig[i].emissionPerSecond = uint104(emissionsPerSecond[i]);\\n\\n      require(assetsConfig[i].emissionPerSecond == emissionsPerSecond[i], 'INVALID_CONFIGURATION');\\n\\n      assetsConfig[i].totalStaked = IScaledBalanceToken(assets[i]).scaledTotalSupply();\\n    }\\n    _configureAssets(assetsConfig);\\n  }\\n\\n  /// @inheritdoc IAaveIncentivesController\\n  function handleAction(\\n    address user,\\n    uint256 totalSupply,\\n    uint256 userBalance\\n  ) external override {\\n    uint256 accruedRewards = _updateUserAssetInternal(user, msg.sender, userBalance, totalSupply);\\n    if (accruedRewards != 0) {\\n      _usersUnclaimedRewards[user] = _usersUnclaimedRewards[user].add(accruedRewards);\\n      emit RewardsAccrued(user, accruedRewards);\\n    }\\n  }\\n\\n  /// @inheritdoc IAaveIncentivesController\\n  function getRewardsBalance(address[] calldata assets, address user)\\n    external\\n    view\\n    override\\n    returns (uint256)\\n  {\\n    uint256 unclaimedRewards = _usersUnclaimedRewards[user];\\n\\n    DistributionTypes.UserStakeInput[] memory userState =\\n      new DistributionTypes.UserStakeInput[](assets.length);\\n    for (uint256 i = 0; i < assets.length; i++) {\\n      userState[i].underlyingAsset = assets[i];\\n      (userState[i].stakedByUser, userState[i].totalStaked) = IScaledBalanceToken(assets[i])\\n        .getScaledUserBalanceAndSupply(user);\\n    }\\n    unclaimedRewards = unclaimedRewards.add(_getUnclaimedRewards(user, userState));\\n    return unclaimedRewards;\\n  }\\n\\n  /// @inheritdoc IAaveIncentivesController\\n  function claimRewards(\\n    address[] calldata assets,\\n    uint256 amount,\\n    address to\\n  ) external override returns (uint256) {\\n    require(to != address(0), 'INVALID_TO_ADDRESS');\\n    return _claimRewards(assets, amount, msg.sender, msg.sender, to);\\n  }\\n\\n  /// @inheritdoc IAaveIncentivesController\\n  function claimRewardsOnBehalf(\\n    address[] calldata assets,\\n    uint256 amount,\\n    address user,\\n    address to\\n  ) external override onlyAuthorizedClaimers(msg.sender, user) returns (uint256) {\\n    require(user != address(0), 'INVALID_USER_ADDRESS');\\n    require(to != address(0), 'INVALID_TO_ADDRESS');\\n    return _claimRewards(assets, amount, msg.sender, user, to);\\n  }\\n\\n  /**\\n   * @dev Claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards.\\n   * @param amount Amount of rewards to claim\\n   * @param user Address to check and claim rewards\\n   * @param to Address that will be receiving the rewards\\n   * @return Rewards claimed\\n   **/\\n\\n  /// @inheritdoc IAaveIncentivesController\\n  function setClaimer(address user, address caller) external override onlyEmissionManager {\\n    _authorizedClaimers[user] = caller;\\n    emit ClaimerSet(user, caller);\\n  }\\n\\n  /// @inheritdoc IAaveIncentivesController\\n  function getClaimer(address user) external view override returns (address) {\\n    return _authorizedClaimers[user];\\n  }\\n\\n  /// @inheritdoc IAaveIncentivesController\\n  function getUserUnclaimedRewards(address _user) external view override returns (uint256) {\\n    return _usersUnclaimedRewards[_user];\\n  }\\n\\n  /// @inheritdoc IAaveIncentivesController\\n  function REWARD_TOKEN() external view override returns (address) {\\n    return address(STAKE_TOKEN);\\n  }\\n\\n  /**\\n   * @dev returns the revision of the implementation contract\\n   */\\n  function getRevision() internal pure override returns (uint256) {\\n    return REVISION;\\n  }\\n\\n  /**\\n   * @dev Claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards.\\n   * @param amount Amount of rewards to claim\\n   * @param user Address to check and claim rewards\\n   * @param to Address that will be receiving the rewards\\n   * @return Rewards claimed\\n   **/\\n  function _claimRewards(\\n    address[] calldata assets,\\n    uint256 amount,\\n    address claimer,\\n    address user,\\n    address to\\n  ) internal returns (uint256) {\\n    if (amount == 0) {\\n      return 0;\\n    }\\n    uint256 unclaimedRewards = _usersUnclaimedRewards[user];\\n\\n    DistributionTypes.UserStakeInput[] memory userState =\\n      new DistributionTypes.UserStakeInput[](assets.length);\\n    for (uint256 i = 0; i < assets.length; i++) {\\n      userState[i].underlyingAsset = assets[i];\\n      (userState[i].stakedByUser, userState[i].totalStaked) = IScaledBalanceToken(assets[i])\\n        .getScaledUserBalanceAndSupply(user);\\n    }\\n\\n    uint256 accruedRewards = _claimRewards(user, userState);\\n    if (accruedRewards != 0) {\\n      unclaimedRewards = unclaimedRewards.add(accruedRewards);\\n      emit RewardsAccrued(user, accruedRewards);\\n    }\\n\\n    if (unclaimedRewards == 0) {\\n      return 0;\\n    }\\n\\n    uint256 amountToClaim = amount > unclaimedRewards ? unclaimedRewards : amount;\\n    _usersUnclaimedRewards[user] = unclaimedRewards - amountToClaim; // Safe due to the previous line\\n\\n    STAKE_TOKEN.stake(to, amountToClaim);\\n    emit RewardsClaimed(user, to, claimer, amountToClaim);\\n\\n    return amountToClaim;\\n  }\\n}\\n\",\"keccak256\":\"0x4ce01314dd8a3730d47a8747f4159aa5ede60da90fc0eb48bdfe4f60a57bede3\",\"license\":\"agpl-3.0\"},\"contracts/interfaces/IAaveDistributionManager.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\npragma experimental ABIEncoderV2;\\n\\nimport {DistributionTypes} from '../lib/DistributionTypes.sol';\\n\\ninterface IAaveDistributionManager {\\n  \\n  event AssetConfigUpdated(address indexed asset, uint256 emission);\\n  event AssetIndexUpdated(address indexed asset, uint256 index);\\n  event UserIndexUpdated(address indexed user, address indexed asset, uint256 index);\\n  event DistributionEndUpdated(uint256 newDistributionEnd);\\n\\n  /**\\n  * @dev Sets the end date for the distribution\\n  * @param distributionEnd The end date timestamp\\n  **/\\n  function setDistributionEnd(uint256 distributionEnd) external;\\n\\n  /**\\n  * @dev Gets the end date for the distribution\\n  * @return The end of the distribution\\n  **/\\n  function getDistributionEnd() external view returns (uint256);\\n\\n  /**\\n  * @dev for backwards compatibility with the previous DistributionManager used\\n  * @return The end of the distribution\\n  **/\\n  function DISTRIBUTION_END() external view returns(uint256);\\n\\n   /**\\n   * @dev Returns the data of an user on a distribution\\n   * @param user Address of the user\\n   * @param asset The address of the reference asset of the distribution\\n   * @return The new index\\n   **/\\n   function getUserAssetData(address user, address asset) external view returns (uint256);\\n\\n   /**\\n   * @dev Returns the configuration of the distribution for a certain asset\\n   * @param asset The address of the reference asset of the distribution\\n   * @return The asset index, the emission per second and the last updated timestamp\\n   **/\\n   function getAssetData(address asset) external view returns (uint256, uint256, uint256);\\n}\\n\",\"keccak256\":\"0xe39e06bdb4b2df13217f8717de30808bf6bbf5805acb8a944a8fe4d2521aafca\",\"license\":\"agpl-3.0\"},\"contracts/interfaces/IAaveIncentivesController.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\npragma experimental ABIEncoderV2;\\n\\nimport {IAaveDistributionManager} from '../interfaces/IAaveDistributionManager.sol';\\n\\ninterface IAaveIncentivesController is IAaveDistributionManager {\\n  \\n  event RewardsAccrued(address indexed user, uint256 amount);\\n  \\n  event RewardsClaimed(\\n    address indexed user,\\n    address indexed to,\\n    address indexed claimer,\\n    uint256 amount\\n  );\\n\\n  event ClaimerSet(address indexed user, address indexed claimer);\\n\\n  /**\\n   * @dev Whitelists an address to claim the rewards on behalf of another address\\n   * @param user The address of the user\\n   * @param claimer The address of the claimer\\n   */\\n  function setClaimer(address user, address claimer) external;\\n\\n  /**\\n   * @dev Returns the whitelisted claimer for a certain address (0x0 if not set)\\n   * @param user The address of the user\\n   * @return The claimer address\\n   */\\n  function getClaimer(address user) external view returns (address);\\n\\n  /**\\n   * @dev Configure assets for a certain rewards emission\\n   * @param assets The assets to incentivize\\n   * @param emissionsPerSecond The emission for each asset\\n   */\\n  function configureAssets(address[] calldata assets, uint256[] calldata emissionsPerSecond)\\n    external;\\n\\n\\n  /**\\n   * @dev Called by the corresponding asset on any update that affects the rewards distribution\\n   * @param asset The address of the user\\n   * @param userBalance The balance of the user of the asset in the lending pool\\n   * @param totalSupply The total supply of the asset in the lending pool\\n   **/\\n  function handleAction(\\n    address asset,\\n    uint256 userBalance,\\n    uint256 totalSupply\\n  ) external;\\n\\n  /**\\n   * @dev Returns the total of rewards of an user, already accrued + not yet accrued\\n   * @param user The address of the user\\n   * @return The rewards\\n   **/\\n  function getRewardsBalance(address[] calldata assets, address user)\\n    external\\n    view\\n    returns (uint256);\\n\\n  /**\\n   * @dev Claims reward for an user, on all the assets of the lending pool, accumulating the pending rewards\\n   * @param amount Amount of rewards to claim\\n   * @param to Address that will be receiving the rewards\\n   * @return Rewards claimed\\n   **/\\n  function claimRewards(\\n    address[] calldata assets,\\n    uint256 amount,\\n    address to\\n  ) external returns (uint256);\\n\\n  /**\\n   * @dev Claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards. The caller must\\n   * be whitelisted via \\\"allowClaimOnBehalf\\\" function by the RewardsAdmin role manager\\n   * @param amount Amount of rewards to claim\\n   * @param user Address to check and claim rewards\\n   * @param to Address that will be receiving the rewards\\n   * @return Rewards claimed\\n   **/\\n  function claimRewardsOnBehalf(\\n    address[] calldata assets,\\n    uint256 amount,\\n    address user,\\n    address to\\n  ) external returns (uint256);\\n\\n  /**\\n   * @dev returns the unclaimed rewards of the user\\n   * @param user the address of the user\\n   * @return the unclaimed user rewards\\n   */\\n  function getUserUnclaimedRewards(address user) external view returns (uint256);\\n\\n  /**\\n  * @dev for backward compatibility with previous implementation of the Incentives controller\\n  */\\n  function REWARD_TOKEN() external view returns (address);\\n}\\n\",\"keccak256\":\"0x8ab08988a5260afd53ebfe467750c2485a126390529cd82062c76b4f9259734c\",\"license\":\"agpl-3.0\"},\"contracts/interfaces/IScaledBalanceToken.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\ninterface IScaledBalanceToken {\\n  /**\\n   * @dev Returns the scaled balance of the user. The scaled balance is the sum of all the\\n   * updated stored balance divided by the reserve's liquidity index at the moment of the update\\n   * @param user The user whose balance is calculated\\n   * @return The scaled balance of the user\\n   **/\\n  function scaledBalanceOf(address user) external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the scaled balance of the user and the scaled total supply.\\n   * @param user The address of the user\\n   * @return The scaled balance of the user\\n   * @return The scaled balance and the scaled total supply\\n   **/\\n  function getScaledUserBalanceAndSupply(address user) external view returns (uint256, uint256);\\n\\n  /**\\n   * @dev Returns the scaled total supply of the token. Represents sum(debt/index)\\n   * @return The scaled total supply\\n   **/\\n  function scaledTotalSupply() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x5540d61b37bf2d7800474e406fc12485d33d269458e27d8dc1ac2f03c3a67f91\",\"license\":\"agpl-3.0\"},\"contracts/interfaces/IStakedTokenWithConfig.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity 0.7.5;\\n\\nimport {IStakedToken} from '@aave/aave-stake/contracts/interfaces/IStakedToken.sol';\\n\\ninterface IStakedTokenWithConfig is IStakedToken {\\n  function STAKED_TOKEN() external view returns(address);\\n}\",\"keccak256\":\"0x59f099066f38943a1ef2da0b171bdc2ced04c389ef66bb74cdacb38691ee75df\",\"license\":\"AGPL-3.0\"},\"contracts/lib/DistributionTypes.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\npragma experimental ABIEncoderV2;\\n\\nlibrary DistributionTypes {\\n  struct AssetConfigInput {\\n    uint104 emissionPerSecond;\\n    uint256 totalStaked;\\n    address underlyingAsset;\\n  }\\n\\n  struct UserStakeInput {\\n    address underlyingAsset;\\n    uint256 stakedByUser;\\n    uint256 totalStaked;\\n  }\\n}\\n\",\"keccak256\":\"0x8f1b12ff20b42316cc29449091350fdbd0f8d38e3dc5d0d7c5dae3978e3884e1\",\"license\":\"agpl-3.0\"},\"contracts/lib/SafeMath.sol\":{\"content\":\"\\n// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.7.5;\\n\\n/// @title Optimized overflow and underflow safe math operations\\n/// @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\\n/// inspired by uniswap V3\\nlibrary SafeMath {\\n    /// @notice Returns x + y, reverts if sum overflows uint256\\n    /// @param x The augend\\n    /// @param y The addend\\n    /// @return z The sum of x and y\\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require((z = x + y) >= x);\\n    }\\n\\n    /// @notice Returns x - y, reverts if underflows\\n    /// @param x The minuend\\n    /// @param y The subtrahend\\n    /// @return z The difference of x and y\\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require((z = x - y) <= x);\\n    }\\n\\n    /// @notice Returns x * y, reverts if overflows\\n    /// @param x The multiplicand\\n    /// @param y The multiplier\\n    /// @return z The product of x and y\\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require(x == 0 || (z = x * y) / x == y);\\n    }\\n\\n    function div(uint256 x, uint256 y) internal pure returns(uint256) {\\n        // no need to check for division by zero - solidity already reverts\\n        return x / y;\\n    }\\n}\",\"keccak256\":\"0x2b50d4f17460ae53fe080389614dc2fe17d5ecf8e315d61f2643a7482389f937\",\"license\":\"agpl-3.0\"}},\"version\":1}","userdoc":{"version":1,"kind":"user","notice":"Distributor contract for rewards to the Aave protocol, using a staked token as rewards asset. The contract stakes the rewards before redistributing them to the Aave protocol participants. The reference staked token implementation is at https://github.com/aave/aave-stake-v2"},"devdoc":{"version":1,"kind":"dev","author":"Aave*","methods":{"DISTRIBUTION_END()":{"details":"for backwards compatibility with the previous DistributionManager used","returns":{"_0":"The end of the distribution*"}},"REWARD_TOKEN()":{"details":"for backward compatibility with previous implementation of the Incentives controller"},"claimRewards(address[],uint256,address)":{"details":"Claims reward for an user, on all the assets of the lending pool, accumulating the pending rewards","params":{"amount":"Amount of rewards to claim","to":"Address that will be receiving the rewards"},"returns":{"_0":"Rewards claimed*"}},"claimRewardsOnBehalf(address[],uint256,address,address)":{"details":"Claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards. The caller must be whitelisted via \"allowClaimOnBehalf\" function by the RewardsAdmin role manager","params":{"amount":"Amount of rewards to claim","to":"Address that will be receiving the rewards","user":"Address to check and claim rewards"},"returns":{"_0":"Rewards claimed*"}},"configureAssets(address[],uint256[])":{"details":"Configure assets for a certain rewards emission","params":{"assets":"The assets to incentivize","emissionsPerSecond":"The emission for each asset"}},"getAssetData(address)":{"details":"Returns the configuration of the distribution for a certain asset","params":{"asset":"The address of the reference asset of the distribution"},"returns":{"_0":"The asset index, the emission per second and the last updated timestamp*"}},"getClaimer(address)":{"details":"Returns the whitelisted claimer for a certain address (0x0 if not set)","params":{"user":"The address of the user"},"returns":{"_0":"The claimer address"}},"getDistributionEnd()":{"details":"Gets the end date for the distribution","returns":{"_0":"The end of the distribution*"}},"getRewardsBalance(address[],address)":{"details":"Returns the total of rewards of an user, already accrued + not yet accrued","params":{"user":"The address of the user"},"returns":{"_0":"The rewards*"}},"getUserAssetData(address,address)":{"details":"Returns the data of an user on a distribution","params":{"asset":"The address of the reference asset of the distribution","user":"Address of the user"},"returns":{"_0":"The new index*"}},"getUserUnclaimedRewards(address)":{"details":"returns the unclaimed rewards of the user","params":{"user":"the address of the user"},"returns":{"_0":"the unclaimed user rewards"}},"handleAction(address,uint256,uint256)":{"details":"Called by the corresponding asset on any update that affects the rewards distribution","params":{"asset":"The address of the user","totalSupply":"The total supply of the asset in the lending pool*","userBalance":"The balance of the user of the asset in the lending pool"}},"initialize(address)":{"details":"Initialize IStakedTokenIncentivesController","params":{"addressesProvider":"the address of the corresponding addresses provider*"}},"setClaimer(address,address)":{"details":"Whitelists an address to claim the rewards on behalf of another address","params":{"claimer":"The address of the claimer","user":"The address of the user"}},"setDistributionEnd(uint256)":{"details":"Sets the end date for the distribution","params":{"distributionEnd":"The end date timestamp*"}}},"title":"StakedTokenIncentivesController"},"storageLayout":{"storage":[{"astId":528,"contract":"contracts/incentives/StakedTokenIncentivesController.sol:StakedTokenIncentivesController","label":"lastInitializedRevision","offset":0,"slot":"0","type":"t_uint256"},{"astId":559,"contract":"contracts/incentives/StakedTokenIncentivesController.sol:StakedTokenIncentivesController","label":"______gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":595,"contract":"contracts/incentives/StakedTokenIncentivesController.sol:StakedTokenIncentivesController","label":"assets","offset":0,"slot":"51","type":"t_mapping(t_address,t_struct(AssetData)586_storage)"},{"astId":597,"contract":"contracts/incentives/StakedTokenIncentivesController.sol:StakedTokenIncentivesController","label":"_distributionEnd","offset":0,"slot":"52","type":"t_uint256"},{"astId":1209,"contract":"contracts/incentives/StakedTokenIncentivesController.sol:StakedTokenIncentivesController","label":"_usersUnclaimedRewards","offset":0,"slot":"53","type":"t_mapping(t_address,t_uint256)"},{"astId":1213,"contract":"contracts/incentives/StakedTokenIncentivesController.sol:StakedTokenIncentivesController","label":"_authorizedClaimers","offset":0,"slot":"54","type":"t_mapping(t_address,t_address)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)50_storage":{"encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600","base":"t_uint256"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_address,t_struct(AssetData)586_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct DistributionManager.AssetData)","numberOfBytes":"32","value":"t_struct(AssetData)586_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_struct(AssetData)586_storage":{"encoding":"inplace","label":"struct DistributionManager.AssetData","numberOfBytes":"64","members":[{"astId":577,"contract":"contracts/incentives/StakedTokenIncentivesController.sol:StakedTokenIncentivesController","label":"emissionPerSecond","offset":0,"slot":"0","type":"t_uint104"},{"astId":579,"contract":"contracts/incentives/StakedTokenIncentivesController.sol:StakedTokenIncentivesController","label":"index","offset":13,"slot":"0","type":"t_uint104"},{"astId":581,"contract":"contracts/incentives/StakedTokenIncentivesController.sol:StakedTokenIncentivesController","label":"lastUpdateTimestamp","offset":26,"slot":"0","type":"t_uint40"},{"astId":585,"contract":"contracts/incentives/StakedTokenIncentivesController.sol:StakedTokenIncentivesController","label":"users","offset":0,"slot":"1","type":"t_mapping(t_address,t_uint256)"}]},"t_uint104":{"encoding":"inplace","label":"uint104","numberOfBytes":"13"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint40":{"encoding":"inplace","label":"uint40","numberOfBytes":"5"}}},"evm":{"assembly":"    /* \"contracts/incentives/StakedTokenIncentivesController.sol\":1115:7835  contract StakedTokenIncentivesController is... */\n  mstore(0x40, 0xc0)\n    /* \"@aave/aave-stake/contracts/utils/VersionedInitializable.sol\":924:925  0 */\n  0x00\n    /* \"@aave/aave-stake/contracts/utils/VersionedInitializable.sol\":881:925  uint256 internal lastInitializedRevision = 0 */\n  dup1\n  sstore\n    /* \"contracts/incentives/StakedTokenIncentivesController.sol\":1877:2027  constructor(IStakedTokenWithConfig stakeToken, address emissionManager)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n  not(sub(shl(0x60, 0x01), 0x01))\n    /* \"contracts/incentives/DistributionManager.sol\":990:1024  EMISSION_MANAGER = emissionManager */\n  0x60\n  swap2\n  dup3\n  shl\n  dup2\n  and\n  0x80\n  mstore\n    /* \"contracts/incentives/StakedTokenIncentivesController.sol\":1998:2022  STAKE_TOKEN = stakeToken */\n  swap2\n  swap1\n  shl\n  and\n  0xa0\n  mstore\n    /* \"contracts/incentives/StakedTokenIncentivesController.sol\":1115:7835  contract StakedTokenIncentivesController is... */\n  jump(tag_9)\n    /* \"#utility.yul\":14:444   */\ntag_3:\n  0x00\n  dup1\n    /* \"#utility.yul\":185:187   */\n  0x40\n    /* \"#utility.yul\":173:182   */\n  dup4\n    /* \"#utility.yul\":164:171   */\n  dup6\n    /* \"#utility.yul\":160:183   */\n  sub\n    /* \"#utility.yul\":156:188   */\n  slt\n    /* \"#utility.yul\":153:155   */\n  iszero\n  tag_11\n  jumpi\n    /* \"#utility.yul\":206:212   */\n  dup2\n    /* \"#utility.yul\":198:204   */\n  dup3\n    /* \"#utility.yul\":191:213   */\n  revert\n    /* \"#utility.yul\":153:155   */\ntag_11:\n    /* \"#utility.yul\":243:252   */\n  dup3\n    /* \"#utility.yul\":237:253   */\n  mload\n    /* \"#utility.yul\":262:295   */\n  tag_12\n    /* \"#utility.yul\":289:294   */\n  dup2\n    /* \"#utility.yul\":262:295   */\n  tag_13\n  jump\t// in\ntag_12:\n    /* \"#utility.yul\":364:366   */\n  0x20\n    /* \"#utility.yul\":349:367   */\n  dup5\n  add\n    /* \"#utility.yul\":343:368   */\n  mload\n    /* \"#utility.yul\":314:319   */\n  swap1\n  swap3\n  pop\n    /* \"#utility.yul\":377:412   */\n  tag_14\n    /* \"#utility.yul\":343:368   */\n  dup2\n    /* \"#utility.yul\":377:412   */\n  tag_13\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":431:438   */\n  dup1\n    /* \"#utility.yul\":421:438   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":143:444   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":449:582   */\ntag_13:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":526:557   */\n  dup2\n  and\n    /* \"#utility.yul\":516:558   */\n  dup2\n  eq\n    /* \"#utility.yul\":506:508   */\n  tag_16\n  jumpi\n    /* \"#utility.yul\":572:573   */\n  0x00\n    /* \"#utility.yul\":569:570   */\n  dup1\n    /* \"#utility.yul\":562:574   */\n  revert\n    /* \"#utility.yul\":506:508   */\ntag_16:\n    /* \"#utility.yul\":496:582   */\n  pop\n  jump\t// out\ntag_9:\n    /* \"contracts/incentives/StakedTokenIncentivesController.sol\":1115:7835  contract StakedTokenIncentivesController is... */\n  shr(0x60, mload(0x80))\n  shr(0x60, mload(0xa0))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0xe4031bdcd38f38dce5d181c6bfd323ad985d3bb4de21e7873a80bd1e2cd8b826\")\n  assignImmutable(\"0x757234ff4c809d89eeac30d68291f4d3d650fbc62f3b098e171cb1e5a8acaf85\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":1115:7835  contract StakedTokenIncentivesController is... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8b599f26\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xcbcbb507\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xcbcbb507\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xcc69afec\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdde43cba\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf11b8188\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf5cf673b\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x8b599f26\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x919cd40f\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x99248ea7\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xaaf5eb68\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc4d66de8\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x3373ee4c\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x3373ee4c\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39ccbdd3\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6d34b96e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x74d945ec\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x79f171b2\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x1652e7b7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x198fa81e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1c39b672\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3111e7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x31873e2e\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/incentives/DistributionManager.sol\":1795:1996  function getAssetData(address asset) public view override returns (uint256, uint256, uint256) {... */\n    tag_3:\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":5840:5976  function getUserUnclaimedRewards(address _user) external view override returns (uint256) {... */\n    tag_4:\n      tag_32\n      tag_33\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":1342:1393  IStakedTokenWithConfig public immutable STAKE_TOKEN */\n    tag_5:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4411:4668  function claimRewards(... */\n    tag_6:\n      tag_32\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3257:3646  function handleAction(... */\n    tag_7:\n      tag_46\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"contracts/incentives/DistributionManager.sol\":1611:1748  function getUserAssetData(address user, address asset) public view override returns (uint256) {... */\n    tag_8:\n      tag_32\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n        /* \"contracts/incentives/DistributionManager.sol\":1076:1262  function setDistributionEnd(uint256 distributionEnd) external override onlyEmissionManager {... */\n    tag_9:\n      tag_46\n      tag_56\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4716:5091  function claimRewardsOnBehalf(... */\n    tag_10:\n      tag_32\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":5674:5792  function getClaimer(address user) external view override returns (address) {... */\n    tag_11:\n      tag_37\n      tag_65\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2444:3209  function configureAssets(address[] calldata assets, uint256[] calldata emissionsPerSecond)... */\n    tag_12:\n      tag_46\n      tag_70\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3694:4363  function getRewardsBalance(address[] calldata assets, address user)... */\n    tag_13:\n      tag_32\n      tag_74\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n        /* \"contracts/incentives/DistributionManager.sol\":1461:1564  function DISTRIBUTION_END() external view override returns (uint256) {... */\n    tag_14:\n      tag_32\n      tag_79\n      jump\t// in\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":6024:6127  function REWARD_TOKEN() external view override returns (address) {... */\n    tag_15:\n      tag_37\n      tag_82\n      jump\t// in\n        /* \"contracts/incentives/DistributionManager.sol\":703:739  uint8 public constant PRECISION = 18 */\n    tag_16:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2180:2396  function initialize(address addressesProvider) external initializer {... */\n    tag_17:\n      tag_46\n      tag_89\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n        /* \"contracts/incentives/DistributionManager.sol\":657:698  address public immutable EMISSION_MANAGER */\n    tag_18:\n      tag_37\n      tag_92\n      jump\t// in\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":1301:1337  uint256 public constant REVISION = 1 */\n    tag_20:\n      tag_32\n      tag_98\n      jump\t// in\n        /* \"contracts/incentives/DistributionManager.sol\":744:787  mapping(address => AssetData) public assets */\n    tag_21:\n      tag_100\n      tag_101\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_30\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":5458:5626  function setClaimer(address user, address caller) external override onlyEmissionManager {... */\n    tag_22:\n      tag_46\n      tag_106\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n        /* \"contracts/incentives/DistributionManager.sol\":1795:1996  function getAssetData(address asset) public view override returns (uint256, uint256, uint256) {... */\n    tag_29:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/incentives/DistributionManager.sol\":1903:1916  assets[asset] */\n      and\n        /* \"contracts/incentives/DistributionManager.sol\":1862:1869  uint256 */\n      0x00\n        /* \"contracts/incentives/DistributionManager.sol\":1903:1916  assets[asset] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/incentives/DistributionManager.sol\":1903:1909  assets */\n      0x33\n        /* \"contracts/incentives/DistributionManager.sol\":1903:1916  assets[asset] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/incentives/DistributionManager.sol\":1903:1922  assets[asset].index */\n      sload\n      shl(0x68, 0x01)\n      dup2\n      div\n      sub(shl(0x68, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap3\n        /* \"contracts/incentives/DistributionManager.sol\":1924:1955  assets[asset].emissionPerSecond */\n      swap1\n      dup3\n      and\n      swap2\n      shl(0xd0, 0x01)\n        /* \"contracts/incentives/DistributionManager.sol\":1957:1990  assets[asset].lastUpdateTimestamp */\n      swap1\n      div\n      0xffffffffff\n      and\n      swap1\n        /* \"contracts/incentives/DistributionManager.sol\":1795:1996  function getAssetData(address asset) public view override returns (uint256, uint256, uint256) {... */\n      jump\t// out\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":5840:5976  function getUserUnclaimedRewards(address _user) external view override returns (uint256) {... */\n    tag_34:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":5942:5971  _usersUnclaimedRewards[_user] */\n      and\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":5920:5927  uint256 */\n      0x00\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":5942:5971  _usersUnclaimedRewards[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":5942:5964  _usersUnclaimedRewards */\n      0x35\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":5942:5971  _usersUnclaimedRewards[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":5840:5976  function getUserUnclaimedRewards(address _user) external view override returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":1342:1393  IStakedTokenWithConfig public immutable STAKE_TOKEN */\n    tag_38:\n      immutable(\"0xe4031bdcd38f38dce5d181c6bfd323ad985d3bb4de21e7873a80bd1e2cd8b826\")\n      dup2\n      jump\t// out\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4411:4668  function claimRewards(... */\n    tag_44:\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4531:4538  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4554:4570  to != address(0) */\n      dup3\n      and\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4546:4593  require(to != address(0), 'INVALID_TO_ADDRESS') */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4606:4663  _claimRewards(assets, amount, msg.sender, msg.sender, to) */\n      tag_114\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4620:4626  assets */\n      dup6\n      dup6\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4628:4634  amount */\n      dup6\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4636:4646  msg.sender */\n      caller\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4648:4658  msg.sender */\n      caller\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4660:4662  to */\n      dup8\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4606:4619  _claimRewards */\n      tag_115\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4606:4663  _claimRewards(assets, amount, msg.sender, msg.sender, to) */\n      jump\t// in\n    tag_114:\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4599:4663  return _claimRewards(assets, amount, msg.sender, msg.sender, to) */\n      swap1\n      pop\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4411:4668  function claimRewards(... */\n    tag_110:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3257:3646  function handleAction(... */\n    tag_49:\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3375:3397  uint256 accruedRewards */\n      0x00\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3400:3468  _updateUserAssetInternal(user, msg.sender, userBalance, totalSupply) */\n      tag_117\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3425:3429  user */\n      dup5\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3431:3441  msg.sender */\n      caller\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3443:3454  userBalance */\n      dup5\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3456:3467  totalSupply */\n      dup7\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3400:3424  _updateUserAssetInternal */\n      tag_118\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3400:3468  _updateUserAssetInternal(user, msg.sender, userBalance, totalSupply) */\n      jump\t// in\n    tag_117:\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3375:3468  uint256 accruedRewards = _updateUserAssetInternal(user, msg.sender, userBalance, totalSupply) */\n      swap1\n      pop\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3478:3497  accruedRewards != 0 */\n      dup1\n      iszero\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3474:3642  if (accruedRewards != 0) {... */\n      tag_119\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3538:3566  _usersUnclaimedRewards[user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3538:3560  _usersUnclaimedRewards */\n      0x35\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3538:3566  _usersUnclaimedRewards[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3538:3586  _usersUnclaimedRewards[user].add(accruedRewards) */\n      tag_120\n      swap1\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3571:3585  accruedRewards */\n      dup3\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3538:3570  _usersUnclaimedRewards[user].add */\n      tag_121\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3538:3586  _usersUnclaimedRewards[user].add(accruedRewards) */\n      jump\t// in\n    tag_120:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3507:3535  _usersUnclaimedRewards[user] */\n      dup6\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3507:3529  _usersUnclaimedRewards */\n      0x35\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3507:3535  _usersUnclaimedRewards[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3507:3586  _usersUnclaimedRewards[user] = _usersUnclaimedRewards[user].add(accruedRewards) */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3599:3635  RewardsAccrued(user, accruedRewards) */\n      swap1\n      mload\n      0x2468f9268c60ad90e2d49edb0032c8a001e733ae888b3ab8e982edf535be1a76\n      swap1\n      tag_122\n      swap1\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3620:3634  accruedRewards */\n      dup5\n      swap1\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3599:3635  RewardsAccrued(user, accruedRewards) */\n      tag_36\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3474:3642  if (accruedRewards != 0) {... */\n    tag_119:\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3257:3646  function handleAction(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/incentives/DistributionManager.sol\":1611:1748  function getUserAssetData(address user, address asset) public view override returns (uint256) {... */\n    tag_53:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/incentives/DistributionManager.sol\":1718:1731  assets[asset] */\n      dup1\n      dup3\n      and\n        /* \"contracts/incentives/DistributionManager.sol\":1696:1703  uint256 */\n      0x00\n        /* \"contracts/incentives/DistributionManager.sol\":1718:1731  assets[asset] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/incentives/DistributionManager.sol\":1718:1724  assets */\n      0x33\n        /* \"contracts/incentives/DistributionManager.sol\":1718:1731  assets[asset] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/incentives/DistributionManager.sol\":1718:1743  assets[asset].users[user] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n        /* \"contracts/incentives/DistributionManager.sol\":1718:1737  assets[asset].users */\n      0x01\n      swap1\n      swap4\n      add\n        /* \"contracts/incentives/DistributionManager.sol\":1718:1743  assets[asset].users[user] */\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"contracts/incentives/DistributionManager.sol\":1611:1748  function getUserAssetData(address user, address asset) public view override returns (uint256) {... */\n    tag_123:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/incentives/DistributionManager.sol\":1076:1262  function setDistributionEnd(uint256 distributionEnd) external override onlyEmissionManager {... */\n    tag_58:\n        /* \"contracts/incentives/DistributionManager.sol\":875:885  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/incentives/DistributionManager.sol\":889:905  EMISSION_MANAGER */\n      immutable(\"0x757234ff4c809d89eeac30d68291f4d3d650fbc62f3b098e171cb1e5a8acaf85\")\n        /* \"contracts/incentives/DistributionManager.sol\":875:905  msg.sender == EMISSION_MANAGER */\n      and\n      eq\n        /* \"contracts/incentives/DistributionManager.sol\":867:931  require(msg.sender == EMISSION_MANAGER, 'ONLY_EMISSION_MANAGER') */\n      tag_125\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_127\n      jump\t// in\n    tag_125:\n        /* \"contracts/incentives/DistributionManager.sol\":1173:1189  _distributionEnd */\n      0x34\n        /* \"contracts/incentives/DistributionManager.sol\":1173:1207  _distributionEnd = distributionEnd */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/incentives/DistributionManager.sol\":1218:1257  DistributionEndUpdated(distributionEnd) */\n      mload(0x40)\n      0x1cc1849a6602c3e91f2088cadea4381cc5717f2f28584197060ed2ebb434c16f\n      swap1\n      tag_129\n      swap1\n        /* \"contracts/incentives/DistributionManager.sol\":1192:1207  distributionEnd */\n      dup4\n      swap1\n        /* \"contracts/incentives/DistributionManager.sol\":1218:1257  DistributionEndUpdated(distributionEnd) */\n      tag_36\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/incentives/DistributionManager.sol\":1076:1262  function setDistributionEnd(uint256 distributionEnd) external override onlyEmissionManager {... */\n      pop\n      jump\t// out\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4716:5091  function claimRewardsOnBehalf(... */\n    tag_62:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":1800:1825  _authorizedClaimers[user] */\n      dup1\n      dup4\n      and\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4903:4910  uint256 */\n      0x00\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":1800:1825  _authorizedClaimers[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":1800:1819  _authorizedClaimers */\n      0x36\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":1800:1825  _authorizedClaimers[user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4903:4910  uint256 */\n      swap1\n      swap2\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4876:4886  msg.sender */\n      caller\n      swap2\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4888:4892  user */\n      dup6\n      swap2\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":1800:1825  _authorizedClaimers[user] */\n      and\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":1800:1836  _authorizedClaimers[user] == claimer */\n      dup3\n      eq\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":1792:1861  require(_authorizedClaimers[user] == claimer, 'CLAIMER_UNAUTHORIZED') */\n      tag_131\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_133\n      jump\t// in\n    tag_131:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4926:4944  user != address(0) */\n      dup6\n      and\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4918:4969  require(user != address(0), 'INVALID_USER_ADDRESS') */\n      tag_135\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_137\n      jump\t// in\n    tag_135:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4983:4999  to != address(0) */\n      dup5\n      and\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4975:5022  require(to != address(0), 'INVALID_TO_ADDRESS') */\n      tag_138\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_138:\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":5035:5086  _claimRewards(assets, amount, msg.sender, user, to) */\n      tag_140\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":5049:5055  assets */\n      dup9\n      dup9\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":5057:5063  amount */\n      dup9\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":5065:5075  msg.sender */\n      caller\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":5077:5081  user */\n      dup10\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":5083:5085  to */\n      dup10\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":5035:5048  _claimRewards */\n      tag_115\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":5035:5086  _claimRewards(assets, amount, msg.sender, user, to) */\n      jump\t// in\n    tag_140:\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":5028:5086  return _claimRewards(assets, amount, msg.sender, user, to) */\n      swap9\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4716:5091  function claimRewardsOnBehalf(... */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":5674:5792  function getClaimer(address user) external view override returns (address) {... */\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":5762:5787  _authorizedClaimers[user] */\n      swap1\n      dup2\n      and\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":5740:5747  address */\n      0x00\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":5762:5787  _authorizedClaimers[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":5762:5781  _authorizedClaimers */\n      0x36\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":5762:5787  _authorizedClaimers[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      and\n      swap1\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":5674:5792  function getClaimer(address user) external view override returns (address) {... */\n      jump\t// out\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2444:3209  function configureAssets(address[] calldata assets, uint256[] calldata emissionsPerSecond)... */\n    tag_72:\n        /* \"contracts/incentives/DistributionManager.sol\":875:885  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/incentives/DistributionManager.sol\":889:905  EMISSION_MANAGER */\n      immutable(\"0x757234ff4c809d89eeac30d68291f4d3d650fbc62f3b098e171cb1e5a8acaf85\")\n        /* \"contracts/incentives/DistributionManager.sol\":875:905  msg.sender == EMISSION_MANAGER */\n      and\n      eq\n        /* \"contracts/incentives/DistributionManager.sol\":867:931  require(msg.sender == EMISSION_MANAGER, 'ONLY_EMISSION_MANAGER') */\n      tag_143\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_127\n      jump\t// in\n    tag_143:\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2601:2643  assets.length == emissionsPerSecond.length */\n      dup3\n      dup2\n      eq\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2593:2669  require(assets.length == emissionsPerSecond.length, 'INVALID_CONFIGURATION') */\n      tag_146\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_148\n      jump\t// in\n    tag_146:\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2676:2732  DistributionTypes.AssetConfigInput[] memory assetsConfig */\n      0x60\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2782:2788  assets */\n      dup4\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2741:2796  new DistributionTypes.AssetConfigInput[](assets.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_149\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_149:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_150\n      jumpi\n      dup2\n      0x20\n      add\n    tag_151:\n      tag_152\n      tag_153\n      jump\t// in\n    tag_152:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_151\n      jumpi\n      swap1\n      pop\n    tag_150:\n      pop\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2676:2796  DistributionTypes.AssetConfigInput[] memory assetsConfig =... */\n      swap1\n      pop\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2808:2817  uint256 i */\n      0x00\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2803:3169  for (uint256 i = 0; i < assets.length; i++) {... */\n    tag_154:\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2823:2840  i < assets.length */\n      dup5\n      dup2\n      lt\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2803:3169  for (uint256 i = 0; i < assets.length; i++) {... */\n      iszero\n      tag_155\n      jumpi\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2889:2895  assets */\n      dup6\n      dup6\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2896:2897  i */\n      dup3\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2889:2898  assets[i] */\n      dup2\n      dup2\n      lt\n      tag_157\n      jumpi\n      invalid\n    tag_157:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_158\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_158:\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2855:2867  assetsConfig */\n      dup3\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2868:2869  i */\n      dup3\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2855:2870  assetsConfig[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_159\n      jumpi\n      invalid\n    tag_159:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2855:2886  assetsConfig[i].underlyingAsset */\n      0x40\n      add\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2855:2898  assetsConfig[i].underlyingAsset = assets[i] */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2950:2968  emissionsPerSecond */\n      dup4\n      dup4\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2969:2970  i */\n      dup3\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2950:2971  emissionsPerSecond[i] */\n      dup2\n      dup2\n      lt\n      tag_160\n      jumpi\n      invalid\n    tag_160:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2906:2918  assetsConfig */\n      dup3\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2919:2920  i */\n      dup3\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2906:2921  assetsConfig[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_161\n      jumpi\n      invalid\n    tag_161:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n      mload\n      sub(shl(0x68, 0x01), 0x01)\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2906:2972  assetsConfig[i].emissionPerSecond = uint104(emissionsPerSecond[i]) */\n      swap1\n      swap2\n      and\n      swap1\n      mstore\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3026:3044  emissionsPerSecond */\n      dup4\n      dup4\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3045:3046  i */\n      dup3\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3026:3047  emissionsPerSecond[i] */\n      dup2\n      dup2\n      lt\n      tag_162\n      jumpi\n      invalid\n    tag_162:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2989:3001  assetsConfig */\n      dup3\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3002:3003  i */\n      dup3\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2989:3004  assetsConfig[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_163\n      jumpi\n      invalid\n    tag_163:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2989:3022  assetsConfig[i].emissionPerSecond */\n      0x00\n      add\n      mload\n      sub(shl(0x68, 0x01), 0x01)\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2989:3047  assetsConfig[i].emissionPerSecond == emissionsPerSecond[i] */\n      and\n      eq\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2981:3073  require(assetsConfig[i].emissionPerSecond == emissionsPerSecond[i], 'INVALID_CONFIGURATION') */\n      tag_164\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_148\n      jump\t// in\n    tag_164:\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3132:3138  assets */\n      dup6\n      dup6\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3139:3140  i */\n      dup3\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3132:3141  assets[i] */\n      dup2\n      dup2\n      lt\n      tag_166\n      jumpi\n      invalid\n    tag_166:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_167\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_167:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3112:3160  IScaledBalanceToken(assets[i]).scaledTotalSupply */\n      and\n      0xb1bf962d\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3112:3162  IScaledBalanceToken(assets[i]).scaledTotalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_168\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_168:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_170\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_170:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_171\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3082:3094  assetsConfig */\n      dup3\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3095:3096  i */\n      dup3\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3082:3097  assetsConfig[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_173\n      jumpi\n      invalid\n    tag_173:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3082:3109  assetsConfig[i].totalStaked */\n      add\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3082:3162  assetsConfig[i].totalStaked = IScaledBalanceToken(assets[i]).scaledTotalSupply() */\n      mstore\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2842:2845  i++ */\n      0x01\n      add\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2803:3169  for (uint256 i = 0; i < assets.length; i++) {... */\n      jump(tag_154)\n    tag_155:\n      pop\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3174:3204  _configureAssets(assetsConfig) */\n      tag_174\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3191:3203  assetsConfig */\n      dup2\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3174:3190  _configureAssets */\n      tag_175\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3174:3204  _configureAssets(assetsConfig) */\n      jump\t// in\n    tag_174:\n        /* \"contracts/incentives/DistributionManager.sol\":937:938  _ */\n      pop\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2444:3209  function configureAssets(address[] calldata assets, uint256[] calldata emissionsPerSecond)... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3694:4363  function getRewardsBalance(address[] calldata assets, address user)... */\n    tag_76:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3854:3882  _usersUnclaimedRewards[user] */\n      dup2\n      and\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3810:3817  uint256 */\n      0x00\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3854:3882  _usersUnclaimedRewards[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3854:3876  _usersUnclaimedRewards */\n      0x35\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3854:3882  _usersUnclaimedRewards[user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3889:3940  DistributionTypes.UserStakeInput[] memory userState */\n      0x60\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3988:3994  assets */\n      dup5\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3949:4002  new DistributionTypes.UserStakeInput[](assets.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_177\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_177:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_178\n      jumpi\n      dup2\n      0x20\n      add\n    tag_179:\n      tag_180\n      tag_181\n      jump\t// in\n    tag_180:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_179\n      jumpi\n      swap1\n      pop\n    tag_178:\n      pop\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3889:4002  DistributionTypes.UserStakeInput[] memory userState =... */\n      swap1\n      pop\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4013:4022  uint256 i */\n      0x00\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4008:4246  for (uint256 i = 0; i < assets.length; i++) {... */\n    tag_182:\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4028:4045  i < assets.length */\n      dup6\n      dup2\n      lt\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4008:4246  for (uint256 i = 0; i < assets.length; i++) {... */\n      iszero\n      tag_183\n      jumpi\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4091:4097  assets */\n      dup7\n      dup7\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4098:4099  i */\n      dup3\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4091:4100  assets[i] */\n      dup2\n      dup2\n      lt\n      tag_185\n      jumpi\n      invalid\n    tag_185:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_186\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_186:\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4060:4069  userState */\n      dup3\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4070:4071  i */\n      dup3\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4060:4072  userState[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_187\n      jumpi\n      invalid\n    tag_187:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4060:4100  userState[i].underlyingAsset = assets[i] */\n      swap1\n      swap2\n      and\n      swap1\n      mstore\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4184:4190  assets */\n      dup7\n      dup7\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4191:4192  i */\n      dup3\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4184:4193  assets[i] */\n      dup2\n      dup2\n      lt\n      tag_188\n      jumpi\n      invalid\n    tag_188:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_189\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_189:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4164:4233  IScaledBalanceToken(assets[i])... */\n      and\n      0x0afbcdc9\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4234:4238  user */\n      dup7\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4164:4239  IScaledBalanceToken(assets[i])... */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_190:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_191\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_191:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_193\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_193:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_194\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4109:4118  userState */\n      dup4\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4119:4120  i */\n      dup4\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4109:4121  userState[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_196\n      jumpi\n      invalid\n    tag_196:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4109:4134  userState[i].stakedByUser */\n      0x20\n      add\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4136:4145  userState */\n      dup5\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4146:4147  i */\n      dup5\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4136:4148  userState[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_197\n      jumpi\n      invalid\n    tag_197:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n      mload\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4136:4160  userState[i].totalStaked */\n      0x40\n      add\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4108:4239  (userState[i].stakedByUser, userState[i].totalStaked) = IScaledBalanceToken(assets[i])... */\n      swap2\n      swap1\n      swap2\n      mstore\n      mstore\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4047:4050  i++ */\n      0x01\n      add\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4008:4246  for (uint256 i = 0; i < assets.length; i++) {... */\n      jump(tag_182)\n    tag_183:\n      pop\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4270:4329  unclaimedRewards.add(_getUnclaimedRewards(user, userState)) */\n      tag_198\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4291:4328  _getUnclaimedRewards(user, userState) */\n      tag_199\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4312:4316  user */\n      dup6\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4318:4327  userState */\n      dup4\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4291:4311  _getUnclaimedRewards */\n      tag_200\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4291:4328  _getUnclaimedRewards(user, userState) */\n      jump\t// in\n    tag_199:\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4270:4286  unclaimedRewards */\n      dup4\n      swap1\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4270:4290  unclaimedRewards.add */\n      tag_121\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4270:4329  unclaimedRewards.add(_getUnclaimedRewards(user, userState)) */\n      jump\t// in\n    tag_198:\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":4251:4329  unclaimedRewards = unclaimedRewards.add(_getUnclaimedRewards(user, userState)) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":3694:4363  function getRewardsBalance(address[] calldata assets, address user)... */\n    tag_176:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/incentives/DistributionManager.sol\":1461:1564  function DISTRIBUTION_END() external view override returns (uint256) {... */\n    tag_79:\n        /* \"contracts/incentives/DistributionManager.sol\":1543:1559  _distributionEnd */\n      sload(0x34)\n        /* \"contracts/incentives/DistributionManager.sol\":1461:1564  function DISTRIBUTION_END() external view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":6024:6127  function REWARD_TOKEN() external view override returns (address) {... */\n    tag_82:\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":6110:6121  STAKE_TOKEN */\n      immutable(\"0xe4031bdcd38f38dce5d181c6bfd323ad985d3bb4de21e7873a80bd1e2cd8b826\")\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":6024:6127  function REWARD_TOKEN() external view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/incentives/DistributionManager.sol\":703:739  uint8 public constant PRECISION = 18 */\n    tag_85:\n        /* \"contracts/incentives/DistributionManager.sol\":737:739  18 */\n      0x12\n        /* \"contracts/incentives/DistributionManager.sol\":703:739  uint8 public constant PRECISION = 18 */\n      dup2\n      jump\t// out\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2180:2396  function initialize(address addressesProvider) external initializer {... */\n    tag_90:\n        /* \"@aave/aave-stake/contracts/utils/VersionedInitializable.sol\":1040:1056  uint256 revision */\n      0x00\n        /* \"@aave/aave-stake/contracts/utils/VersionedInitializable.sol\":1059:1072  getRevision() */\n      tag_204\n        /* \"@aave/aave-stake/contracts/utils/VersionedInitializable.sol\":1059:1070  getRevision */\n      tag_205\n        /* \"@aave/aave-stake/contracts/utils/VersionedInitializable.sol\":1059:1072  getRevision() */\n      jump\t// in\n    tag_204:\n        /* \"@aave/aave-stake/contracts/utils/VersionedInitializable.sol\":1040:1072  uint256 revision = getRevision() */\n      swap1\n      pop\n        /* \"@aave/aave-stake/contracts/utils/VersionedInitializable.sol\":1097:1120  lastInitializedRevision */\n      sload(0x00)\n        /* \"@aave/aave-stake/contracts/utils/VersionedInitializable.sol\":1086:1094  revision */\n      dup2\n        /* \"@aave/aave-stake/contracts/utils/VersionedInitializable.sol\":1086:1120  revision > lastInitializedRevision */\n      gt\n        /* \"@aave/aave-stake/contracts/utils/VersionedInitializable.sol\":1078:1171  require(revision > lastInitializedRevision, 'Contract instance has already been initialized') */\n      tag_206\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4\n      0x2e\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_206:\n        /* \"@aave/aave-stake/contracts/utils/VersionedInitializable.sol\":1204:1212  revision */\n      dup1\n        /* \"@aave/aave-stake/contracts/utils/VersionedInitializable.sol\":1178:1201  lastInitializedRevision */\n      0x00\n        /* \"@aave/aave-stake/contracts/utils/VersionedInitializable.sol\":1178:1212  lastInitializedRevision = revision */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2304:2391  IERC20(STAKE_TOKEN.STAKED_TOKEN()).safeApprove(address(STAKE_TOKEN), type(uint256).max) */\n      tag_208\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2359:2370  STAKE_TOKEN */\n      immutable(\"0xe4031bdcd38f38dce5d181c6bfd323ad985d3bb4de21e7873a80bd1e2cd8b826\")\n      not(0x00)\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2311:2322  STAKE_TOKEN */\n      immutable(\"0xe4031bdcd38f38dce5d181c6bfd323ad985d3bb4de21e7873a80bd1e2cd8b826\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2311:2335  STAKE_TOKEN.STAKED_TOKEN */\n      and\n      0x312f6b83\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2311:2337  STAKE_TOKEN.STAKED_TOKEN() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_209\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_209:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_211\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_211:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_212\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2304:2350  IERC20(STAKE_TOKEN.STAKED_TOKEN()).safeApprove */\n      and\n      swap2\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2304:2391  IERC20(STAKE_TOKEN.STAKED_TOKEN()).safeApprove(address(STAKE_TOKEN), type(uint256).max) */\n      swap1\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2304:2350  IERC20(STAKE_TOKEN.STAKED_TOKEN()).safeApprove */\n      tag_214\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2304:2391  IERC20(STAKE_TOKEN.STAKED_TOKEN()).safeApprove(address(STAKE_TOKEN), type(uint256).max) */\n      jump\t// in\n    tag_208:\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":2180:2396  function initialize(address addressesProvider) external initializer {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/incentives/DistributionManager.sol\":657:698  address public immutable EMISSION_MANAGER */\n    tag_92:\n      immutable(\"0x757234ff4c809d89eeac30d68291f4d3d650fbc62f3b098e171cb1e5a8acaf85\")\n      dup2\n      jump\t// out\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":1301:1337  uint256 public constant REVISION = 1 */\n    tag_98:\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":1336:1337  1 */\n      0x01\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":1301:1337  uint256 public constant REVISION = 1 */\n      dup2\n      jump\t// out\n        /* \"contracts/incentives/DistributionManager.sol\":744:787  mapping(address => AssetData) public assets */\n    tag_102:\n      mstore(0x20, 0x33)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0x68, 0x01), 0x01)\n      dup1\n      dup3\n      and\n      swap2\n      shl(0x68, 0x01)\n      dup2\n      div\n      swap1\n      swap2\n      and\n      swap1\n      shl(0xd0, 0x01)\n      swap1\n      div\n      0xffffffffff\n      and\n      dup4\n      jump\t// out\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":5458:5626  function setClaimer(address user, address caller) external override onlyEmissionManager {... */\n    tag_107:\n        /* \"contracts/incentives/DistributionManager.sol\":875:885  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/incentives/DistributionManager.sol\":889:905  EMISSION_MANAGER */\n      immutable(\"0x757234ff4c809d89eeac30d68291f4d3d650fbc62f3b098e171cb1e5a8acaf85\")\n        /* \"contracts/incentives/DistributionManager.sol\":875:905  msg.sender == EMISSION_MANAGER */\n      and\n      eq\n        /* \"contracts/incentives/DistributionManager.sol\":867:931  require(msg.sender == EMISSION_MANAGER, 'ONLY_EMISSION_MANAGER') */\n      tag_217\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_127\n      jump\t// in\n    tag_217:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":5552:5577  _authorizedClaimers[user] */\n      dup3\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":5552:5571  _authorizedClaimers */\n      0x36\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":5552:5577  _authorizedClaimers[user] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":5552:5586  _authorizedClaimers[user] = caller */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap5\n      dup7\n      and\n      swap5\n      dup6\n      or\n      swap1\n      sstore\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":5597:5621  ClaimerSet(user, caller) */\n      mload\n      0x4925eafc82d0c4d67889898eeed64b18488ab19811e61620f387026dec126a28\n      swap2\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":5552:5577  _authorizedClaimers[user] */\n      swap1\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":5597:5621  ClaimerSet(user, caller) */\n      log3\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":5458:5626  function setClaimer(address user, address caller) external override onlyEmissionManager {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":6617:7833  function _claimRewards(... */\n    tag_115:\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":6768:6775  uint256 */\n      0x00\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":6787:6798  amount == 0 */\n      dup5\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":6783:6823  if (amount == 0) {... */\n      tag_221\n      jumpi\n      pop\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":6815:6816  0 */\n      0x00\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":6808:6816  return 0 */\n      jump(tag_220)\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":6783:6823  if (amount == 0) {... */\n    tag_221:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":6855:6883  _usersUnclaimedRewards[user] */\n      dup4\n      and\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":6828:6852  uint256 unclaimedRewards */\n      0x00\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":6855:6883  _usersUnclaimedRewards[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":6855:6877  _usersUnclaimedRewards */\n      0x35\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":6855:6883  _usersUnclaimedRewards[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":6890:6941  DistributionTypes.UserStakeInput[] memory userState */\n      0x60\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":6989:6995  assets */\n      dup8\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":6950:7003  new DistributionTypes.UserStakeInput[](assets.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_222\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_222:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_223\n      jumpi\n      dup2\n      0x20\n      add\n    tag_224:\n      tag_225\n      tag_181\n      jump\t// in\n    tag_225:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_224\n      jumpi\n      swap1\n      pop\n    tag_223:\n      pop\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":6890:7003  DistributionTypes.UserStakeInput[] memory userState =... */\n      swap1\n      pop\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7014:7023  uint256 i */\n      0x00\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7009:7247  for (uint256 i = 0; i < assets.length; i++) {... */\n    tag_226:\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7029:7046  i < assets.length */\n      dup9\n      dup2\n      lt\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7009:7247  for (uint256 i = 0; i < assets.length; i++) {... */\n      iszero\n      tag_227\n      jumpi\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7092:7098  assets */\n      dup10\n      dup10\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7099:7100  i */\n      dup3\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7092:7101  assets[i] */\n      dup2\n      dup2\n      lt\n      tag_229\n      jumpi\n      invalid\n    tag_229:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_230\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_230:\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7061:7070  userState */\n      dup3\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7071:7072  i */\n      dup3\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7061:7073  userState[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_231\n      jumpi\n      invalid\n    tag_231:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7061:7101  userState[i].underlyingAsset = assets[i] */\n      swap1\n      swap2\n      and\n      swap1\n      mstore\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7185:7191  assets */\n      dup10\n      dup10\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7192:7193  i */\n      dup3\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7185:7194  assets[i] */\n      dup2\n      dup2\n      lt\n      tag_232\n      jumpi\n      invalid\n    tag_232:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_233\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_233:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7165:7234  IScaledBalanceToken(assets[i])... */\n      and\n      0x0afbcdc9\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7235:7239  user */\n      dup8\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7165:7240  IScaledBalanceToken(assets[i])... */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_234\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_234:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_235\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_235:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_237\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_237:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_238\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_238:\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7110:7119  userState */\n      dup4\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7120:7121  i */\n      dup4\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7110:7122  userState[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_239\n      jumpi\n      invalid\n    tag_239:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7110:7135  userState[i].stakedByUser */\n      0x20\n      add\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7137:7146  userState */\n      dup5\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7147:7148  i */\n      dup5\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7137:7149  userState[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_240\n      jumpi\n      invalid\n    tag_240:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n      mload\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7137:7161  userState[i].totalStaked */\n      0x40\n      add\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7109:7240  (userState[i].stakedByUser, userState[i].totalStaked) = IScaledBalanceToken(assets[i])... */\n      swap2\n      swap1\n      swap2\n      mstore\n      mstore\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7048:7051  i++ */\n      0x01\n      add\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7009:7247  for (uint256 i = 0; i < assets.length; i++) {... */\n      jump(tag_226)\n    tag_227:\n      pop\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7253:7275  uint256 accruedRewards */\n      0x00\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7278:7308  _claimRewards(user, userState) */\n      tag_241\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7292:7296  user */\n      dup7\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7298:7307  userState */\n      dup4\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7278:7291  _claimRewards */\n      tag_242\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7278:7308  _claimRewards(user, userState) */\n      jump\t// in\n    tag_241:\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7253:7308  uint256 accruedRewards = _claimRewards(user, userState) */\n      swap1\n      pop\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7318:7337  accruedRewards != 0 */\n      dup1\n      iszero\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7314:7458  if (accruedRewards != 0) {... */\n      tag_243\n      jumpi\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7366:7402  unclaimedRewards.add(accruedRewards) */\n      tag_244\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7366:7382  unclaimedRewards */\n      dup4\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7387:7401  accruedRewards */\n      dup3\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7366:7386  unclaimedRewards.add */\n      tag_121\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7366:7402  unclaimedRewards.add(accruedRewards) */\n      jump\t// in\n    tag_244:\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7347:7402  unclaimedRewards = unclaimedRewards.add(accruedRewards) */\n      swap3\n      pop\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7430:7434  user */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7415:7451  RewardsAccrued(user, accruedRewards) */\n      and\n      0x2468f9268c60ad90e2d49edb0032c8a001e733ae888b3ab8e982edf535be1a76\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7436:7450  accruedRewards */\n      dup3\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7415:7451  RewardsAccrued(user, accruedRewards) */\n      mload(0x40)\n      tag_245\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_245:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7314:7458  if (accruedRewards != 0) {... */\n    tag_243:\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7468:7489  unclaimedRewards == 0 */\n      dup3\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7464:7514  if (unclaimedRewards == 0) {... */\n      tag_246\n      jumpi\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7506:7507  0 */\n      0x00\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7499:7507  return 0 */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_220)\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7464:7514  if (unclaimedRewards == 0) {... */\n    tag_246:\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7520:7541  uint256 amountToClaim */\n      0x00\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7553:7569  unclaimedRewards */\n      dup4\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7544:7550  amount */\n      dup10\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7544:7569  amount > unclaimedRewards */\n      gt\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7544:7597  amount > unclaimedRewards ? unclaimedRewards : amount */\n      tag_247\n      jumpi\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7591:7597  amount */\n      dup9\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7544:7597  amount > unclaimedRewards ? unclaimedRewards : amount */\n      jump(tag_248)\n    tag_247:\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7572:7588  unclaimedRewards */\n      dup4\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7544:7597  amount > unclaimedRewards ? unclaimedRewards : amount */\n    tag_248:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7603:7631  _usersUnclaimedRewards[user] */\n      dup1\n      dup10\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7603:7625  _usersUnclaimedRewards */\n      0x35\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7603:7631  _usersUnclaimedRewards[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7634:7666  unclaimedRewards - amountToClaim */\n      dup4\n      dup9\n      sub\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7603:7666  _usersUnclaimedRewards[user] = unclaimedRewards - amountToClaim */\n      swap1\n      sstore\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7706:7742  STAKE_TOKEN.stake(to, amountToClaim) */\n      mload\n      shl(0xe1, 0x56e4bb97)\n      dup2\n      mstore\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7520:7597  uint256 amountToClaim = amount > unclaimedRewards ? unclaimedRewards : amount */\n      swap2\n      swap3\n      pop\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7706:7717  STAKE_TOKEN */\n      immutable(\"0xe4031bdcd38f38dce5d181c6bfd323ad985d3bb4de21e7873a80bd1e2cd8b826\")\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7706:7723  STAKE_TOKEN.stake */\n      and\n      swap1\n      0xadc9772e\n      swap1\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7706:7742  STAKE_TOKEN.stake(to, amountToClaim) */\n      tag_249\n      swap1\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7724:7726  to */\n      dup10\n      swap1\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7520:7597  uint256 amountToClaim = amount > unclaimedRewards ? unclaimedRewards : amount */\n      dup6\n      swap1\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7706:7742  STAKE_TOKEN.stake(to, amountToClaim) */\n      0x04\n      add\n      tag_250\n      jump\t// in\n    tag_249:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_251\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_251:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_253\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_253:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7778:7785  claimer */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7753:7801  RewardsClaimed(user, to, claimer, amountToClaim) */\n      and\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7774:7776  to */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7753:7801  RewardsClaimed(user, to, claimer, amountToClaim) */\n      and\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7768:7772  user */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7753:7801  RewardsClaimed(user, to, claimer, amountToClaim) */\n      and\n      0x5637d7f962248a7f05a7ab69eec6446e31f3d0a299d997f135a65c62806e7891\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7787:7800  amountToClaim */\n      dup5\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7753:7801  RewardsClaimed(user, to, claimer, amountToClaim) */\n      mload(0x40)\n      tag_254\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":7815:7828  amountToClaim */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":6617:7833  function _claimRewards(... */\n    tag_220:\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/incentives/DistributionManager.sol\":4445:5086  function _updateUserAssetInternal(... */\n    tag_118:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/incentives/DistributionManager.sol\":4634:4647  assets[asset] */\n      dup1\n      dup5\n      and\n        /* \"contracts/incentives/DistributionManager.sol\":4589:4596  uint256 */\n      0x00\n        /* \"contracts/incentives/DistributionManager.sol\":4634:4647  assets[asset] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/incentives/DistributionManager.sol\":4634:4640  assets */\n      0x33\n        /* \"contracts/incentives/DistributionManager.sol\":4634:4647  assets[asset] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/incentives/DistributionManager.sol\":4673:4694  assetData.users[user] */\n      swap4\n      dup9\n      and\n      dup4\n      mstore\n        /* \"contracts/incentives/DistributionManager.sol\":4673:4688  assetData.users */\n      0x01\n      dup5\n      add\n        /* \"contracts/incentives/DistributionManager.sol\":4673:4694  assetData.users[user] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"contracts/incentives/DistributionManager.sol\":4589:4596  uint256 */\n      swap1\n      swap2\n        /* \"contracts/incentives/DistributionManager.sol\":4634:4647  assets[asset] */\n      swap1\n        /* \"contracts/incentives/DistributionManager.sol\":4589:4596  uint256 */\n      dup3\n      dup1\n        /* \"contracts/incentives/DistributionManager.sol\":4752:4808  _updateAssetStateInternal(asset, assetData, totalStaked) */\n      tag_256\n        /* \"contracts/incentives/DistributionManager.sol\":4641:4646  asset */\n      dup9\n        /* \"contracts/incentives/DistributionManager.sol\":4634:4647  assets[asset] */\n      dup6\n        /* \"contracts/incentives/DistributionManager.sol\":4796:4807  totalStaked */\n      dup9\n        /* \"contracts/incentives/DistributionManager.sol\":4752:4777  _updateAssetStateInternal */\n      tag_257\n        /* \"contracts/incentives/DistributionManager.sol\":4752:4808  _updateAssetStateInternal(asset, assetData, totalStaked) */\n      jump\t// in\n    tag_256:\n        /* \"contracts/incentives/DistributionManager.sol\":4733:4808  uint256 newIndex = _updateAssetStateInternal(asset, assetData, totalStaked) */\n      swap1\n      pop\n        /* \"contracts/incentives/DistributionManager.sol\":4832:4840  newIndex */\n      dup1\n        /* \"contracts/incentives/DistributionManager.sol\":4819:4828  userIndex */\n      dup4\n        /* \"contracts/incentives/DistributionManager.sol\":4819:4840  userIndex != newIndex */\n      eq\n        /* \"contracts/incentives/DistributionManager.sol\":4815:5054  if (userIndex != newIndex) {... */\n      tag_258\n      jumpi\n        /* \"contracts/incentives/DistributionManager.sol\":4854:4871  stakedByUser != 0 */\n      dup7\n      iszero\n        /* \"contracts/incentives/DistributionManager.sol\":4850:4955  if (stakedByUser != 0) {... */\n      tag_259\n      jumpi\n        /* \"contracts/incentives/DistributionManager.sol\":4900:4946  _getRewards(stakedByUser, newIndex, userIndex) */\n      tag_260\n        /* \"contracts/incentives/DistributionManager.sol\":4912:4924  stakedByUser */\n      dup8\n        /* \"contracts/incentives/DistributionManager.sol\":4926:4934  newIndex */\n      dup3\n        /* \"contracts/incentives/DistributionManager.sol\":4936:4945  userIndex */\n      dup6\n        /* \"contracts/incentives/DistributionManager.sol\":4900:4911  _getRewards */\n      tag_261\n        /* \"contracts/incentives/DistributionManager.sol\":4900:4946  _getRewards(stakedByUser, newIndex, userIndex) */\n      jump\t// in\n    tag_260:\n        /* \"contracts/incentives/DistributionManager.sol\":4883:4946  accruedRewards = _getRewards(stakedByUser, newIndex, userIndex) */\n      swap2\n      pop\n        /* \"contracts/incentives/DistributionManager.sol\":4850:4955  if (stakedByUser != 0) {... */\n    tag_259:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/incentives/DistributionManager.sol\":4963:4984  assetData.users[user] */\n      dup1\n      dup11\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/incentives/DistributionManager.sol\":4963:4978  assetData.users */\n      0x01\n      dup8\n      add\n        /* \"contracts/incentives/DistributionManager.sol\":4963:4984  assetData.users[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/incentives/DistributionManager.sol\":4963:4995  assetData.users[user] = newIndex */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/incentives/DistributionManager.sol\":5008:5047  UserIndexUpdated(user, asset, newIndex) */\n      mload\n      swap2\n      dup11\n      and\n      swap2\n      0xbb123b5c06d5408bbea3c4fef481578175cfb432e3b482c6186f02ed9086585b\n      swap1\n      tag_262\n      swap1\n        /* \"contracts/incentives/DistributionManager.sol\":4987:4995  newIndex */\n      dup6\n      swap1\n        /* \"contracts/incentives/DistributionManager.sol\":5008:5047  UserIndexUpdated(user, asset, newIndex) */\n      tag_36\n      jump\t// in\n    tag_262:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/incentives/DistributionManager.sol\":4815:5054  if (userIndex != newIndex) {... */\n    tag_258:\n      pop\n        /* \"contracts/incentives/DistributionManager.sol\":5067:5081  accruedRewards */\n      swap8\n        /* \"contracts/incentives/DistributionManager.sol\":4445:5086  function _updateUserAssetInternal(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/lib/SafeMath.sol\":448:559  function add(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_121:\n        /* \"contracts/lib/SafeMath.sol\":540:545  x + y */\n      dup1\n      dup3\n      add\n        /* \"contracts/lib/SafeMath.sol\":535:551  (z = x + y) >= x */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"contracts/lib/SafeMath.sol\":527:552  require((z = x + y) >= x) */\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"contracts/incentives/DistributionManager.sol\":2136:2760  function _configureAssets(DistributionTypes.AssetConfigInput[] memory assetsConfigInput)... */\n    tag_175:\n        /* \"contracts/incentives/DistributionManager.sol\":2251:2260  uint256 i */\n      0x00\n        /* \"contracts/incentives/DistributionManager.sol\":2246:2756  for (uint256 i = 0; i < assetsConfigInput.length; i++) {... */\n    tag_266:\n        /* \"contracts/incentives/DistributionManager.sol\":2270:2287  assetsConfigInput */\n      dup2\n        /* \"contracts/incentives/DistributionManager.sol\":2270:2294  assetsConfigInput.length */\n      mload\n        /* \"contracts/incentives/DistributionManager.sol\":2266:2267  i */\n      dup2\n        /* \"contracts/incentives/DistributionManager.sol\":2266:2294  i < assetsConfigInput.length */\n      lt\n        /* \"contracts/incentives/DistributionManager.sol\":2246:2756  for (uint256 i = 0; i < assetsConfigInput.length; i++) {... */\n      iszero\n      tag_208\n      jumpi\n        /* \"contracts/incentives/DistributionManager.sol\":2309:2338  AssetData storage assetConfig */\n      0x00\n        /* \"contracts/incentives/DistributionManager.sol\":2341:2347  assets */\n      0x33\n        /* \"contracts/incentives/DistributionManager.sol\":2341:2385  assets[assetsConfigInput[i].underlyingAsset] */\n      0x00\n        /* \"contracts/incentives/DistributionManager.sol\":2348:2365  assetsConfigInput */\n      dup5\n        /* \"contracts/incentives/DistributionManager.sol\":2366:2367  i */\n      dup5\n        /* \"contracts/incentives/DistributionManager.sol\":2348:2368  assetsConfigInput[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_269\n      jumpi\n      invalid\n    tag_269:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/incentives/DistributionManager.sol\":2348:2384  assetsConfigInput[i].underlyingAsset */\n      0x40\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/incentives/DistributionManager.sol\":2341:2385  assets[assetsConfigInput[i].underlyingAsset] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/incentives/DistributionManager.sol\":2309:2385  AssetData storage assetConfig = assets[assetsConfigInput[i].underlyingAsset] */\n      swap1\n      pop\n        /* \"contracts/incentives/DistributionManager.sol\":2394:2536  _updateAssetStateInternal(... */\n      tag_270\n        /* \"contracts/incentives/DistributionManager.sol\":2429:2446  assetsConfigInput */\n      dup4\n        /* \"contracts/incentives/DistributionManager.sol\":2447:2448  i */\n      dup4\n        /* \"contracts/incentives/DistributionManager.sol\":2429:2449  assetsConfigInput[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_271\n      jumpi\n      invalid\n    tag_271:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/incentives/DistributionManager.sol\":2429:2465  assetsConfigInput[i].underlyingAsset */\n      0x40\n      add\n      mload\n        /* \"contracts/incentives/DistributionManager.sol\":2475:2486  assetConfig */\n      dup3\n        /* \"contracts/incentives/DistributionManager.sol\":2496:2513  assetsConfigInput */\n      dup6\n        /* \"contracts/incentives/DistributionManager.sol\":2514:2515  i */\n      dup6\n        /* \"contracts/incentives/DistributionManager.sol\":2496:2516  assetsConfigInput[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_272\n      jumpi\n      invalid\n    tag_272:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/incentives/DistributionManager.sol\":2496:2528  assetsConfigInput[i].totalStaked */\n      0x20\n      add\n      mload\n        /* \"contracts/incentives/DistributionManager.sol\":2394:2419  _updateAssetStateInternal */\n      tag_257\n        /* \"contracts/incentives/DistributionManager.sol\":2394:2536  _updateAssetStateInternal(... */\n      jump\t// in\n    tag_270:\n      pop\n        /* \"contracts/incentives/DistributionManager.sol\":2577:2594  assetsConfigInput */\n      dup3\n        /* \"contracts/incentives/DistributionManager.sol\":2595:2596  i */\n      dup3\n        /* \"contracts/incentives/DistributionManager.sol\":2577:2597  assetsConfigInput[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_273\n      jumpi\n      invalid\n    tag_273:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n      mload\n        /* \"contracts/incentives/DistributionManager.sol\":2577:2615  assetsConfigInput[i].emissionPerSecond */\n      mload\n        /* \"contracts/incentives/DistributionManager.sol\":2545:2615  assetConfig.emissionPerSecond = assetsConfigInput[i].emissionPerSecond */\n      dup2\n      sload\n      not(0xffffffffffffffffffffffffff)\n      and\n      sub(shl(0x68, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      or\n      dup2\n      sstore\n        /* \"contracts/incentives/DistributionManager.sol\":2657:2677  assetsConfigInput[i] */\n      dup3\n      mload\n      dup4\n      swap1\n        /* \"contracts/incentives/DistributionManager.sol\":2675:2676  i */\n      dup4\n      swap1\n        /* \"contracts/incentives/DistributionManager.sol\":2657:2677  assetsConfigInput[i] */\n      dup2\n      lt\n      tag_274\n      jumpi\n      invalid\n    tag_274:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/incentives/DistributionManager.sol\":2657:2693  assetsConfigInput[i].underlyingAsset */\n      0x40\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/incentives/DistributionManager.sol\":2629:2749  AssetConfigUpdated(... */\n      and\n      0x87fa03892a0556cb6b8f97e6d533a150d4d55fcbf275fff5fa003fa636bcc7fa\n        /* \"contracts/incentives/DistributionManager.sol\":2703:2720  assetsConfigInput */\n      dup5\n        /* \"contracts/incentives/DistributionManager.sol\":2721:2722  i */\n      dup5\n        /* \"contracts/incentives/DistributionManager.sol\":2703:2723  assetsConfigInput[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_275\n      jumpi\n      invalid\n    tag_275:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/incentives/DistributionManager.sol\":2703:2741  assetsConfigInput[i].emissionPerSecond */\n      0x00\n      add\n      mload\n        /* \"contracts/incentives/DistributionManager.sol\":2629:2749  AssetConfigUpdated(... */\n      mload(0x40)\n      tag_276\n      swap2\n      swap1\n      tag_277\n      jump\t// in\n    tag_276:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n      pop\n        /* \"contracts/incentives/DistributionManager.sol\":2296:2299  i++ */\n      0x01\n      add\n        /* \"contracts/incentives/DistributionManager.sol\":2246:2756  for (uint256 i = 0; i < assetsConfigInput.length; i++) {... */\n      jump(tag_266)\n        /* \"contracts/incentives/DistributionManager.sol\":6124:6799  function _getUnclaimedRewards(address user, DistributionTypes.UserStakeInput[] memory stakes)... */\n    tag_200:\n        /* \"contracts/incentives/DistributionManager.sol\":6253:6260  uint256 */\n      0x00\n      dup1\n      dup1\n        /* \"contracts/incentives/DistributionManager.sol\":6303:6768  for (uint256 i = 0; i < stakes.length; i++) {... */\n    tag_279:\n        /* \"contracts/incentives/DistributionManager.sol\":6327:6333  stakes */\n      dup4\n        /* \"contracts/incentives/DistributionManager.sol\":6327:6340  stakes.length */\n      mload\n        /* \"contracts/incentives/DistributionManager.sol\":6323:6324  i */\n      dup2\n        /* \"contracts/incentives/DistributionManager.sol\":6323:6340  i < stakes.length */\n      lt\n        /* \"contracts/incentives/DistributionManager.sol\":6303:6768  for (uint256 i = 0; i < stakes.length; i++) {... */\n      iszero\n      tag_280\n      jumpi\n        /* \"contracts/incentives/DistributionManager.sol\":6355:6384  AssetData storage assetConfig */\n      0x00\n        /* \"contracts/incentives/DistributionManager.sol\":6387:6393  assets */\n      0x33\n        /* \"contracts/incentives/DistributionManager.sol\":6387:6420  assets[stakes[i].underlyingAsset] */\n      0x00\n        /* \"contracts/incentives/DistributionManager.sol\":6394:6400  stakes */\n      dup7\n        /* \"contracts/incentives/DistributionManager.sol\":6401:6402  i */\n      dup5\n        /* \"contracts/incentives/DistributionManager.sol\":6394:6403  stakes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_282\n      jumpi\n      invalid\n    tag_282:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"contracts/incentives/DistributionManager.sol\":6394:6419  stakes[i].underlyingAsset */\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/incentives/DistributionManager.sol\":6387:6420  assets[stakes[i].underlyingAsset] */\n      and\n      dup3\n      mstore\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/incentives/DistributionManager.sol\":6483:6500  assetConfig.index */\n      dup1\n      sload\n        /* \"contracts/incentives/DistributionManager.sol\":6596:6605  stakes[i] */\n      dup8\n      mload\n        /* \"contracts/incentives/DistributionManager.sol\":6387:6420  assets[stakes[i].underlyingAsset] */\n      swap2\n      swap4\n      pop\n        /* \"contracts/incentives/DistributionManager.sol\":6457:6627  _getAssetIndex(... */\n      tag_283\n      swap2\n      shl(0x68, 0x01)\n        /* \"contracts/incentives/DistributionManager.sol\":6483:6500  assetConfig.index */\n      dup3\n      div\n      sub(shl(0x68, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap3\n        /* \"contracts/incentives/DistributionManager.sol\":6512:6541  assetConfig.emissionPerSecond */\n      swap1\n      dup2\n      and\n      swap2\n      shl(0xd0, 0x01)\n        /* \"contracts/incentives/DistributionManager.sol\":6553:6584  assetConfig.lastUpdateTimestamp */\n      swap1\n      swap2\n      div\n      0xffffffffff\n      and\n      swap1\n        /* \"contracts/incentives/DistributionManager.sol\":6596:6605  stakes[i] */\n      dup11\n      swap1\n        /* \"contracts/incentives/DistributionManager.sol\":6603:6604  i */\n      dup9\n      swap1\n        /* \"contracts/incentives/DistributionManager.sol\":6596:6605  stakes[i] */\n      dup2\n      lt\n      tag_284\n      jumpi\n      invalid\n    tag_284:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/incentives/DistributionManager.sol\":6596:6617  stakes[i].totalStaked */\n      0x40\n      add\n      mload\n        /* \"contracts/incentives/DistributionManager.sol\":6457:6471  _getAssetIndex */\n      tag_285\n        /* \"contracts/incentives/DistributionManager.sol\":6457:6627  _getAssetIndex(... */\n      jump\t// in\n    tag_283:\n        /* \"contracts/incentives/DistributionManager.sol\":6428:6627  uint256 assetIndex =... */\n      swap1\n      pop\n        /* \"contracts/incentives/DistributionManager.sol\":6653:6761  accruedRewards.add(... */\n      tag_286\n        /* \"contracts/incentives/DistributionManager.sol\":6681:6753  _getRewards(stakes[i].stakedByUser, assetIndex, assetConfig.users[user]) */\n      tag_287\n        /* \"contracts/incentives/DistributionManager.sol\":6693:6699  stakes */\n      dup8\n        /* \"contracts/incentives/DistributionManager.sol\":6700:6701  i */\n      dup6\n        /* \"contracts/incentives/DistributionManager.sol\":6693:6702  stakes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_288\n      jumpi\n      invalid\n    tag_288:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/incentives/DistributionManager.sol\":6693:6715  stakes[i].stakedByUser */\n      0x20\n      add\n      mload\n        /* \"contracts/incentives/DistributionManager.sol\":6717:6727  assetIndex */\n      dup4\n        /* \"contracts/incentives/DistributionManager.sol\":6729:6740  assetConfig */\n      dup6\n        /* \"contracts/incentives/DistributionManager.sol\":6729:6746  assetConfig.users */\n      0x01\n      add\n        /* \"contracts/incentives/DistributionManager.sol\":6729:6752  assetConfig.users[user] */\n      0x00\n        /* \"contracts/incentives/DistributionManager.sol\":6747:6751  user */\n      dup13\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/incentives/DistributionManager.sol\":6729:6752  assetConfig.users[user] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/incentives/DistributionManager.sol\":6681:6692  _getRewards */\n      tag_261\n        /* \"contracts/incentives/DistributionManager.sol\":6681:6753  _getRewards(stakes[i].stakedByUser, assetIndex, assetConfig.users[user]) */\n      jump\t// in\n    tag_287:\n        /* \"contracts/incentives/DistributionManager.sol\":6653:6667  accruedRewards */\n      dup6\n      swap1\n        /* \"contracts/incentives/DistributionManager.sol\":6653:6671  accruedRewards.add */\n      tag_121\n        /* \"contracts/incentives/DistributionManager.sol\":6653:6761  accruedRewards.add(... */\n      jump\t// in\n    tag_286:\n        /* \"contracts/incentives/DistributionManager.sol\":6636:6761  accruedRewards = accruedRewards.add(... */\n      swap4\n      pop\n      pop\n      pop\n        /* \"contracts/incentives/DistributionManager.sol\":6342:6345  i++ */\n      0x01\n      add\n        /* \"contracts/incentives/DistributionManager.sol\":6303:6768  for (uint256 i = 0; i < stakes.length; i++) {... */\n      jump(tag_279)\n    tag_280:\n      pop\n        /* \"contracts/incentives/DistributionManager.sol\":6780:6794  accruedRewards */\n      swap4\n        /* \"contracts/incentives/DistributionManager.sol\":6124:6799  function _getUnclaimedRewards(address user, DistributionTypes.UserStakeInput[] memory stakes)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":6205:6295  function getRevision() internal pure override returns (uint256) {... */\n    tag_205:\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":1336:1337  1 */\n      0x01\n        /* \"contracts/incentives/StakedTokenIncentivesController.sol\":6205:6295  function getRevision() internal pure override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1198:1543  function safeApprove(... */\n    tag_214:\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1312:1322  value == 0 */\n      dup1\n      iszero\n      dup1\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1311:1373  (value == 0) || (token.allowance(address(this), spender) == 0) */\n      tag_291\n      jumpi\n      pop\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1328:1367  token.allowance(address(this), spender) */\n      0x40\n      dup1\n      mload\n      shl(0xe1, 0x6eb1769f)\n      dup2\n      mstore\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1352:1356  this */\n      address\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1328:1367  token.allowance(address(this), spender) */\n      0x04\n      dup3\n      add\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      0x24\n      dup4\n      add\n      mstore\n      swap2\n      mload\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1328:1343  token.allowance */\n      swap2\n      dup6\n      and\n      swap2\n      0xdd62ed3e\n      swap2\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1328:1367  token.allowance(address(this), spender) */\n      0x44\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1328:1343  token.allowance */\n      dup7\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1328:1367  token.allowance(address(this), spender) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_292\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_292:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_294\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_294:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_295\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_295:\n      pop\n      mload\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1328:1372  token.allowance(address(this), spender) == 0 */\n      iszero\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1311:1373  (value == 0) || (token.allowance(address(this), spender) == 0) */\n    tag_291:\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1296:1443  require(... */\n      tag_296\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x36\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25\n      0x36\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_296:\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1475:1537  abi.encodeWithSelector(token.approve.selector, spender, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      0x24\n      dup3\n      add\n      mstore\n      0x44\n      dup1\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x64\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x095ea7b3)\n      or\n      swap1\n      mstore\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1449:1538  callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n      tag_297\n      swap1\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1468:1473  token */\n      dup5\n      swap1\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1449:1467  callOptionalReturn */\n      tag_298\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1449:1538  callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n      jump\t// in\n    tag_297:\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1198:1543  function safeApprove(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/incentives/DistributionManager.sol\":5390:5851  function _claimRewards(address user, DistributionTypes.UserStakeInput[] memory stakes)... */\n    tag_242:\n        /* \"contracts/incentives/DistributionManager.sol\":5503:5510  uint256 */\n      0x00\n      dup1\n      dup1\n        /* \"contracts/incentives/DistributionManager.sol\":5553:5819  for (uint256 i = 0; i < stakes.length; i++) {... */\n    tag_300:\n        /* \"contracts/incentives/DistributionManager.sol\":5577:5583  stakes */\n      dup4\n        /* \"contracts/incentives/DistributionManager.sol\":5577:5590  stakes.length */\n      mload\n        /* \"contracts/incentives/DistributionManager.sol\":5573:5574  i */\n      dup2\n        /* \"contracts/incentives/DistributionManager.sol\":5573:5590  i < stakes.length */\n      lt\n        /* \"contracts/incentives/DistributionManager.sol\":5553:5819  for (uint256 i = 0; i < stakes.length; i++) {... */\n      iszero\n      tag_280\n      jumpi\n        /* \"contracts/incentives/DistributionManager.sol\":5622:5812  accruedRewards.add(... */\n      tag_303\n        /* \"contracts/incentives/DistributionManager.sol\":5650:5804  _updateUserAssetInternal(... */\n      tag_199\n        /* \"contracts/incentives/DistributionManager.sol\":5686:5690  user */\n      dup7\n        /* \"contracts/incentives/DistributionManager.sol\":5702:5708  stakes */\n      dup7\n        /* \"contracts/incentives/DistributionManager.sol\":5709:5710  i */\n      dup5\n        /* \"contracts/incentives/DistributionManager.sol\":5702:5711  stakes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_305\n      jumpi\n      invalid\n    tag_305:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/incentives/DistributionManager.sol\":5702:5727  stakes[i].underlyingAsset */\n      0x00\n      add\n      mload\n        /* \"contracts/incentives/DistributionManager.sol\":5739:5745  stakes */\n      dup8\n        /* \"contracts/incentives/DistributionManager.sol\":5746:5747  i */\n      dup6\n        /* \"contracts/incentives/DistributionManager.sol\":5739:5748  stakes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_306\n      jumpi\n      invalid\n    tag_306:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/incentives/DistributionManager.sol\":5739:5761  stakes[i].stakedByUser */\n      0x20\n      add\n      mload\n        /* \"contracts/incentives/DistributionManager.sol\":5773:5779  stakes */\n      dup9\n        /* \"contracts/incentives/DistributionManager.sol\":5780:5781  i */\n      dup7\n        /* \"contracts/incentives/DistributionManager.sol\":5773:5782  stakes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_307\n      jumpi\n      invalid\n    tag_307:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/incentives/DistributionManager.sol\":5773:5794  stakes[i].totalStaked */\n      0x40\n      add\n      mload\n        /* \"contracts/incentives/DistributionManager.sol\":5650:5674  _updateUserAssetInternal */\n      tag_118\n        /* \"contracts/incentives/DistributionManager.sol\":5650:5804  _updateUserAssetInternal(... */\n      jump\t// in\n        /* \"contracts/incentives/DistributionManager.sol\":5622:5812  accruedRewards.add(... */\n    tag_303:\n        /* \"contracts/incentives/DistributionManager.sol\":5605:5812  accruedRewards = accruedRewards.add(... */\n      swap2\n      pop\n        /* \"contracts/incentives/DistributionManager.sol\":5592:5595  i++ */\n      0x01\n      add\n        /* \"contracts/incentives/DistributionManager.sol\":5553:5819  for (uint256 i = 0; i < stakes.length; i++) {... */\n      jump(tag_300)\n        /* \"contracts/incentives/DistributionManager.sol\":3104:4040  function _updateAssetStateInternal(... */\n    tag_257:\n        /* \"contracts/incentives/DistributionManager.sol\":3274:3291  assetConfig.index */\n      dup2\n      sload\n        /* \"contracts/incentives/DistributionManager.sol\":3240:3247  uint256 */\n      0x00\n      swap1\n      sub(shl(0x68, 0x01), 0x01)\n      shl(0x68, 0x01)\n        /* \"contracts/incentives/DistributionManager.sol\":3274:3291  assetConfig.index */\n      dup3\n      div\n      dup2\n      and\n      swap2\n        /* \"contracts/incentives/DistributionManager.sol\":3325:3354  assetConfig.emissionPerSecond */\n      swap1\n      dup2\n      and\n      swap1\n        /* \"contracts/incentives/DistributionManager.sol\":3390:3421  assetConfig.lastUpdateTimestamp */\n      0xffffffffff\n      shl(0xd0, 0x01)\n      swap1\n      swap2\n      div\n      and\n        /* \"contracts/incentives/DistributionManager.sol\":3432:3447  block.timestamp */\n      timestamp\n        /* \"contracts/incentives/DistributionManager.sol\":3432:3470  block.timestamp == lastUpdateTimestamp */\n      dup2\n      eq\n        /* \"contracts/incentives/DistributionManager.sol\":3428:3502  if (block.timestamp == lastUpdateTimestamp) {... */\n      iszero\n      tag_309\n      jumpi\n        /* \"contracts/incentives/DistributionManager.sol\":3487:3495  oldIndex */\n      dup3\n        /* \"contracts/incentives/DistributionManager.sol\":3480:3495  return oldIndex */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_176)\n        /* \"contracts/incentives/DistributionManager.sol\":3428:3502  if (block.timestamp == lastUpdateTimestamp) {... */\n    tag_309:\n        /* \"contracts/incentives/DistributionManager.sol\":3508:3524  uint256 newIndex */\n      0x00\n        /* \"contracts/incentives/DistributionManager.sol\":3533:3610  _getAssetIndex(oldIndex, emissionPerSecond, lastUpdateTimestamp, totalStaked) */\n      tag_310\n        /* \"contracts/incentives/DistributionManager.sol\":3548:3556  oldIndex */\n      dup5\n        /* \"contracts/incentives/DistributionManager.sol\":3558:3575  emissionPerSecond */\n      dup5\n        /* \"contracts/incentives/DistributionManager.sol\":3577:3596  lastUpdateTimestamp */\n      dup5\n        /* \"contracts/incentives/DistributionManager.sol\":3598:3609  totalStaked */\n      dup10\n        /* \"contracts/incentives/DistributionManager.sol\":3533:3547  _getAssetIndex */\n      tag_285\n        /* \"contracts/incentives/DistributionManager.sol\":3533:3610  _getAssetIndex(oldIndex, emissionPerSecond, lastUpdateTimestamp, totalStaked) */\n      jump\t// in\n    tag_310:\n        /* \"contracts/incentives/DistributionManager.sol\":3508:3610  uint256 newIndex =... */\n      swap1\n      pop\n        /* \"contracts/incentives/DistributionManager.sol\":3633:3641  oldIndex */\n      dup4\n        /* \"contracts/incentives/DistributionManager.sol\":3621:3629  newIndex */\n      dup2\n        /* \"contracts/incentives/DistributionManager.sol\":3621:3641  newIndex != oldIndex */\n      eq\n        /* \"contracts/incentives/DistributionManager.sol\":3617:4014  if (newIndex != oldIndex) {... */\n      tag_311\n      jumpi\n        /* \"contracts/incentives/DistributionManager.sol\":3680:3688  newIndex */\n      dup1\n        /* \"contracts/incentives/DistributionManager.sol\":3667:3675  newIndex */\n      dup2\n      sub(shl(0x68, 0x01), 0x01)\n        /* \"contracts/incentives/DistributionManager.sol\":3659:3688  uint104(newIndex) == newIndex */\n      and\n      eq\n        /* \"contracts/incentives/DistributionManager.sol\":3651:3707  require(uint104(newIndex) == newIndex, 'Index overflow') */\n      tag_312\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_314\n      jump\t// in\n    tag_312:\n        /* \"contracts/incentives/DistributionManager.sol\":3780:3817  assetConfig.index = uint104(newIndex) */\n      dup7\n      sload\n      not(shl(0x68, 0xffffffffffffffffffffffffff))\n      and\n      shl(0x68, 0x01)\n      sub(shl(0x68, 0x01), 0x01)\n      dup4\n      and\n      mul\n      or\n      not(shl(0xd0, 0xffffffffff))\n        /* \"contracts/incentives/DistributionManager.sol\":3825:3882  assetConfig.lastUpdateTimestamp = uint40(block.timestamp) */\n      and\n      shl(0xd0, 0x01)\n        /* \"contracts/incentives/DistributionManager.sol\":3866:3881  block.timestamp */\n      timestamp\n        /* \"contracts/incentives/DistributionManager.sol\":3825:3882  assetConfig.lastUpdateTimestamp = uint40(block.timestamp) */\n      0xffffffffff\n      and\n      mul\n      or\n      dup8\n      sstore\n        /* \"contracts/incentives/DistributionManager.sol\":3895:3929  AssetIndexUpdated(asset, newIndex) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup10\n      and\n      swap1\n      0x5777ca300dfe5bead41006fbce4389794dbc0ed8d6cccebfaf94630aa04184bc\n      swap1\n      tag_315\n      swap1\n        /* \"contracts/incentives/DistributionManager.sol\":3780:3817  assetConfig.index = uint104(newIndex) */\n      dup5\n      swap1\n        /* \"contracts/incentives/DistributionManager.sol\":3895:3929  AssetIndexUpdated(asset, newIndex) */\n      tag_36\n      jump\t// in\n    tag_315:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/incentives/DistributionManager.sol\":3617:4014  if (newIndex != oldIndex) {... */\n      jump(tag_316)\n    tag_311:\n        /* \"contracts/incentives/DistributionManager.sol\":3950:4007  assetConfig.lastUpdateTimestamp = uint40(block.timestamp) */\n      dup7\n      sload\n      not(shl(0xd0, 0xffffffffff))\n      and\n      shl(0xd0, 0x01)\n        /* \"contracts/incentives/DistributionManager.sol\":3991:4006  block.timestamp */\n      timestamp\n        /* \"contracts/incentives/DistributionManager.sol\":3950:4007  assetConfig.lastUpdateTimestamp = uint40(block.timestamp) */\n      0xffffffffff\n      and\n      mul\n      or\n      dup8\n      sstore\n        /* \"contracts/incentives/DistributionManager.sol\":3617:4014  if (newIndex != oldIndex) {... */\n    tag_316:\n        /* \"contracts/incentives/DistributionManager.sol\":4027:4035  newIndex */\n      swap8\n        /* \"contracts/incentives/DistributionManager.sol\":3104:4040  function _updateAssetStateInternal(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/incentives/DistributionManager.sol\":7144:7380  function _getRewards(... */\n    tag_261:\n        /* \"contracts/incentives/DistributionManager.sol\":7275:7282  uint256 */\n      0x00\n        /* \"contracts/incentives/DistributionManager.sol\":7353:7375  10**uint256(PRECISION) */\n      0x0de0b6b3a7640000\n        /* \"contracts/incentives/DistributionManager.sol\":7297:7350  principalUserBalance.mul(reserveIndex.sub(userIndex)) */\n      tag_318\n        /* \"contracts/incentives/DistributionManager.sol\":7322:7349  reserveIndex.sub(userIndex) */\n      tag_319\n        /* \"contracts/incentives/DistributionManager.sol\":7322:7334  reserveIndex */\n      dup6\n        /* \"contracts/incentives/DistributionManager.sol\":7339:7348  userIndex */\n      dup6\n        /* \"contracts/incentives/DistributionManager.sol\":7322:7338  reserveIndex.sub */\n      tag_320\n        /* \"contracts/incentives/DistributionManager.sol\":7322:7349  reserveIndex.sub(userIndex) */\n      jump\t// in\n    tag_319:\n        /* \"contracts/incentives/DistributionManager.sol\":7297:7317  principalUserBalance */\n      dup7\n      swap1\n        /* \"contracts/incentives/DistributionManager.sol\":7297:7321  principalUserBalance.mul */\n      tag_321\n        /* \"contracts/incentives/DistributionManager.sol\":7297:7350  principalUserBalance.mul(reserveIndex.sub(userIndex)) */\n      jump\t// in\n    tag_318:\n        /* \"contracts/incentives/DistributionManager.sol\":7297:7375  principalUserBalance.mul(reserveIndex.sub(userIndex)) / 10**uint256(PRECISION) */\n      dup2\n      tag_322\n      jumpi\n      invalid\n    tag_322:\n      div\n      swap5\n        /* \"contracts/incentives/DistributionManager.sol\":7144:7380  function _getRewards(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/incentives/DistributionManager.sol\":7833:8571  function _getAssetIndex(... */\n    tag_285:\n        /* \"contracts/incentives/DistributionManager.sol\":8041:8057  _distributionEnd */\n      sload(0x34)\n        /* \"contracts/incentives/DistributionManager.sol\":8000:8007  uint256 */\n      0x00\n      swap1\n        /* \"contracts/incentives/DistributionManager.sol\":8074:8096  emissionPerSecond == 0 */\n      dup5\n      iszero\n      dup1\n        /* \"contracts/incentives/DistributionManager.sol\":8074:8123  emissionPerSecond == 0 ||... */\n      tag_324\n      jumpi\n      pop\n        /* \"contracts/incentives/DistributionManager.sol\":8106:8123  totalBalance == 0 */\n      dup3\n      iszero\n        /* \"contracts/incentives/DistributionManager.sol\":8074:8123  emissionPerSecond == 0 ||... */\n    tag_324:\n        /* \"contracts/incentives/DistributionManager.sol\":8074:8171  emissionPerSecond == 0 ||... */\n      dup1\n      tag_325\n      jumpi\n      pop\n        /* \"contracts/incentives/DistributionManager.sol\":8156:8171  block.timestamp */\n      timestamp\n        /* \"contracts/incentives/DistributionManager.sol\":8133:8152  lastUpdateTimestamp */\n      dup5\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"contracts/incentives/DistributionManager.sol\":8133:8171  lastUpdateTimestamp == block.timestamp */\n      and\n      eq\n        /* \"contracts/incentives/DistributionManager.sol\":8074:8171  emissionPerSecond == 0 ||... */\n    tag_325:\n        /* \"contracts/incentives/DistributionManager.sol\":8074:8219  emissionPerSecond == 0 ||... */\n      dup1\n      tag_326\n      jumpi\n      pop\n        /* \"contracts/incentives/DistributionManager.sol\":8204:8219  distributionEnd */\n      dup1\n        /* \"contracts/incentives/DistributionManager.sol\":8181:8200  lastUpdateTimestamp */\n      dup5\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"contracts/incentives/DistributionManager.sol\":8181:8219  lastUpdateTimestamp >= distributionEnd */\n      and\n      lt\n      iszero\n        /* \"contracts/incentives/DistributionManager.sol\":8074:8219  emissionPerSecond == 0 ||... */\n    tag_326:\n        /* \"contracts/incentives/DistributionManager.sol\":8063:8260  if (... */\n      iszero\n      tag_327\n      jumpi\n        /* \"contracts/incentives/DistributionManager.sol\":8241:8253  currentIndex */\n      dup6\n        /* \"contracts/incentives/DistributionManager.sol\":8234:8253  return currentIndex */\n      swap2\n      pop\n      pop\n      jump(tag_110)\n        /* \"contracts/incentives/DistributionManager.sol\":8063:8260  if (... */\n    tag_327:\n        /* \"contracts/incentives/DistributionManager.sol\":8266:8290  uint256 currentTimestamp */\n      0x00\n        /* \"contracts/incentives/DistributionManager.sol\":8317:8332  distributionEnd */\n      dup2\n        /* \"contracts/incentives/DistributionManager.sol\":8299:8314  block.timestamp */\n      timestamp\n        /* \"contracts/incentives/DistributionManager.sol\":8299:8332  block.timestamp > distributionEnd */\n      gt\n        /* \"contracts/incentives/DistributionManager.sol\":8299:8368  block.timestamp > distributionEnd ? distributionEnd : block.timestamp */\n      tag_328\n      jumpi\n        /* \"contracts/incentives/DistributionManager.sol\":8353:8368  block.timestamp */\n      timestamp\n        /* \"contracts/incentives/DistributionManager.sol\":8299:8368  block.timestamp > distributionEnd ? distributionEnd : block.timestamp */\n      jump(tag_329)\n    tag_328:\n        /* \"contracts/incentives/DistributionManager.sol\":8335:8350  distributionEnd */\n      dup2\n        /* \"contracts/incentives/DistributionManager.sol\":8299:8368  block.timestamp > distributionEnd ? distributionEnd : block.timestamp */\n    tag_329:\n        /* \"contracts/incentives/DistributionManager.sol\":8266:8368  uint256 currentTimestamp =... */\n      swap1\n      pop\n        /* \"contracts/incentives/DistributionManager.sol\":8374:8391  uint256 timeDelta */\n      0x00\n        /* \"contracts/incentives/DistributionManager.sol\":8394:8435  currentTimestamp.sub(lastUpdateTimestamp) */\n      tag_330\n        /* \"contracts/incentives/DistributionManager.sol\":8266:8368  uint256 currentTimestamp =... */\n      dup3\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"contracts/incentives/DistributionManager.sol\":8394:8435  currentTimestamp.sub(lastUpdateTimestamp) */\n      dup9\n      and\n        /* \"contracts/incentives/DistributionManager.sol\":8394:8414  currentTimestamp.sub */\n      tag_320\n        /* \"contracts/incentives/DistributionManager.sol\":8394:8435  currentTimestamp.sub(lastUpdateTimestamp) */\n      jump\t// in\n    tag_330:\n        /* \"contracts/incentives/DistributionManager.sol\":8374:8435  uint256 timeDelta = currentTimestamp.sub(lastUpdateTimestamp) */\n      swap1\n      pop\n        /* \"contracts/incentives/DistributionManager.sol\":8454:8566  emissionPerSecond.mul(timeDelta).mul(10**uint256(PRECISION)).div(totalBalance).add(... */\n      tag_140\n        /* \"contracts/incentives/DistributionManager.sol\":8546:8558  currentIndex */\n      dup9\n        /* \"contracts/incentives/DistributionManager.sol\":8454:8532  emissionPerSecond.mul(timeDelta).mul(10**uint256(PRECISION)).div(totalBalance) */\n      tag_332\n        /* \"contracts/incentives/DistributionManager.sol\":8519:8531  totalBalance */\n      dup8\n        /* \"contracts/incentives/DistributionManager.sol\":8454:8514  emissionPerSecond.mul(timeDelta).mul(10**uint256(PRECISION)) */\n      tag_333\n        /* \"contracts/incentives/DistributionManager.sol\":8491:8513  10**uint256(PRECISION) */\n      0x0de0b6b3a7640000\n        /* \"contracts/incentives/DistributionManager.sol\":8454:8486  emissionPerSecond.mul(timeDelta) */\n      tag_334\n        /* \"contracts/incentives/DistributionManager.sol\":8454:8471  emissionPerSecond */\n      dup14\n        /* \"contracts/incentives/DistributionManager.sol\":8374:8435  uint256 timeDelta = currentTimestamp.sub(lastUpdateTimestamp) */\n      dup9\n        /* \"contracts/incentives/DistributionManager.sol\":8454:8475  emissionPerSecond.mul */\n      tag_321\n        /* \"contracts/incentives/DistributionManager.sol\":8454:8486  emissionPerSecond.mul(timeDelta) */\n      jump\t// in\n    tag_334:\n        /* \"contracts/incentives/DistributionManager.sol\":8454:8490  emissionPerSecond.mul(timeDelta).mul */\n      swap1\n      tag_321\n        /* \"contracts/incentives/DistributionManager.sol\":8454:8514  emissionPerSecond.mul(timeDelta).mul(10**uint256(PRECISION)) */\n      jump\t// in\n    tag_333:\n        /* \"contracts/incentives/DistributionManager.sol\":8454:8518  emissionPerSecond.mul(timeDelta).mul(10**uint256(PRECISION)).div */\n      swap1\n      tag_335\n        /* \"contracts/incentives/DistributionManager.sol\":8454:8532  emissionPerSecond.mul(timeDelta).mul(10**uint256(PRECISION)).div(totalBalance) */\n      jump\t// in\n    tag_332:\n        /* \"contracts/incentives/DistributionManager.sol\":8454:8536  emissionPerSecond.mul(timeDelta).mul(10**uint256(PRECISION)).div(totalBalance).add */\n      swap1\n      tag_121\n        /* \"contracts/incentives/DistributionManager.sol\":8454:8566  emissionPerSecond.mul(timeDelta).mul(10**uint256(PRECISION)).div(totalBalance).add(... */\n      jump\t// in\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1547:2102  function callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_298:\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1630:1657  address(token).isContract() */\n      tag_337\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1638:1643  token */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1630:1655  address(token).isContract */\n      and\n      tag_338\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1630:1657  address(token).isContract() */\n      jump\t// in\n    tag_337:\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1622:1693  require(address(token).isContract(), 'SafeERC20: call to non-contract') */\n      tag_339\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_339:\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1756:1768  bool success */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1770:1793  bytes memory returndata */\n      0x60\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1805:1810  token */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1797:1816  address(token).call */\n      and\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1817:1821  data */\n      dup4\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1797:1822  address(token).call(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_340:\n      0x20\n      dup4\n      lt\n      tag_342\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      not(0x1f)\n      swap1\n      swap3\n      add\n      swap2\n      0x20\n      swap2\n      dup3\n      add\n      swap2\n      add\n      jump(tag_340)\n    tag_342:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_345\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_344)\n    tag_345:\n      0x60\n      swap2\n      pop\n    tag_344:\n      pop\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1755:1822  (bool success, bytes memory returndata) = address(token).call(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1836:1843  success */\n      dup2\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1828:1880  require(success, 'SafeERC20: low-level call failed') */\n      tag_346\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_346:\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1891:1908  returndata.length */\n      dup1\n      mload\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1891:1912  returndata.length > 0 */\n      iszero\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1887:2098  if (returndata.length > 0) {... */\n      tag_119\n      jumpi\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":2025:2035  returndata */\n      dup1\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":2014:2044  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_348\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_348:\n      pop\n      mload\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":2006:2091  require(abi.decode(returndata, (bool)), 'SafeERC20: ERC20 operation did not succeed') */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/lib/SafeMath.sol\":723:834  function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_320:\n        /* \"contracts/lib/SafeMath.sol\":815:820  x - y */\n      dup1\n      dup3\n      sub\n        /* \"contracts/lib/SafeMath.sol\":810:826  (z = x - y) <= x */\n      dup3\n      dup2\n      gt\n      iszero\n        /* \"contracts/lib/SafeMath.sol\":802:827  require((z = x - y) <= x) */\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"contracts/lib/SafeMath.sol\":999:1124  function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_321:\n        /* \"contracts/lib/SafeMath.sol\":1057:1066  uint256 z */\n      0x00\n        /* \"contracts/lib/SafeMath.sol\":1086:1092  x == 0 */\n      dup3\n      iszero\n      dup1\n        /* \"contracts/lib/SafeMath.sol\":1086:1116  x == 0 || (z = x * y) / x == y */\n      tag_353\n      jumpi\n      pop\n      pop\n        /* \"contracts/lib/SafeMath.sol\":1101:1106  x * y */\n      dup2\n      dup2\n      mul\n        /* \"contracts/lib/SafeMath.sol\":1115:1116  y */\n      dup2\n        /* \"contracts/lib/SafeMath.sol\":1110:1111  x */\n      dup4\n        /* \"contracts/lib/SafeMath.sol\":1101:1106  x * y */\n      dup3\n        /* \"contracts/lib/SafeMath.sol\":1110:1111  x */\n      dup2\n        /* \"contracts/lib/SafeMath.sol\":1096:1111  (z = x * y) / x */\n      tag_354\n      jumpi\n      invalid\n    tag_354:\n      div\n        /* \"contracts/lib/SafeMath.sol\":1096:1116  (z = x * y) / x == y */\n      eq\n        /* \"contracts/lib/SafeMath.sol\":1086:1116  x == 0 || (z = x * y) / x == y */\n    tag_353:\n        /* \"contracts/lib/SafeMath.sol\":1078:1117  require(x == 0 || (z = x * y) / x == y) */\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"contracts/lib/SafeMath.sol\":1130:1301  function div(uint256 x, uint256 y) internal pure returns(uint256) {... */\n    tag_335:\n        /* \"contracts/lib/SafeMath.sol\":1187:1194  uint256 */\n      0x00\n        /* \"contracts/lib/SafeMath.sol\":1293:1294  y */\n      dup2\n        /* \"contracts/lib/SafeMath.sol\":1289:1290  x */\n      dup4\n        /* \"contracts/lib/SafeMath.sol\":1289:1294  x / y */\n      dup2\n      tag_357\n      jumpi\n      invalid\n    tag_357:\n      div\n      swap4\n        /* \"contracts/lib/SafeMath.sol\":1130:1301  function div(uint256 x, uint256 y) internal pure returns(uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":743:1329  function isContract(address account) internal view returns (bool) {... */\n    tag_338:\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":803:807  bool */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1242:1262  extcodehash(account) */\n      dup2\n      extcodehash\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1089:1155  0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 */\n      0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1281:1304  codehash != accountHash */\n      dup2\n      dup2\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1281:1323  codehash != accountHash && codehash != 0x0 */\n      tag_110\n      jumpi\n      pop\n      pop\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1308:1323  codehash != 0x0 */\n      iszero\n      iszero\n      swap3\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1273:1324  return (codehash != accountHash && codehash != 0x0) */\n      swap2\n      pop\n      pop\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":743:1329  function isContract(address account) internal view returns (bool) {... */\n      jump\t// out\n    tag_153:\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap1\n      jump\t// out\n    tag_181:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      and(sub(shl(0xa0, 0x01), 0x01), 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:418   */\n    tag_361:\n      0x00\n      dup1\n        /* \"#utility.yul\":147:150   */\n      dup4\n        /* \"#utility.yul\":140:144   */\n      0x1f\n        /* \"#utility.yul\":132:138   */\n      dup5\n        /* \"#utility.yul\":128:145   */\n      add\n        /* \"#utility.yul\":124:151   */\n      slt\n        /* \"#utility.yul\":114:116   */\n      tag_363\n      jumpi\n        /* \"#utility.yul\":172:180   */\n      dup2\n        /* \"#utility.yul\":162:170   */\n      dup3\n        /* \"#utility.yul\":155:181   */\n      revert\n        /* \"#utility.yul\":114:116   */\n    tag_363:\n      pop\n        /* \"#utility.yul\":202:222   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":245:263   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":234:264   */\n      dup2\n      gt\n        /* \"#utility.yul\":231:233   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":284:292   */\n      dup2\n        /* \"#utility.yul\":274:282   */\n      dup3\n        /* \"#utility.yul\":267:293   */\n      revert\n        /* \"#utility.yul\":231:233   */\n    tag_364:\n        /* \"#utility.yul\":328:332   */\n      0x20\n        /* \"#utility.yul\":320:326   */\n      dup4\n        /* \"#utility.yul\":316:333   */\n      add\n        /* \"#utility.yul\":304:333   */\n      swap2\n      pop\n        /* \"#utility.yul\":391:394   */\n      dup4\n        /* \"#utility.yul\":384:388   */\n      0x20\n        /* \"#utility.yul\":376:380   */\n      dup1\n        /* \"#utility.yul\":368:374   */\n      dup4\n        /* \"#utility.yul\":364:381   */\n      mul\n        /* \"#utility.yul\":356:362   */\n      dup6\n        /* \"#utility.yul\":352:382   */\n      add\n        /* \"#utility.yul\":348:389   */\n      add\n        /* \"#utility.yul\":345:395   */\n      gt\n        /* \"#utility.yul\":342:344   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":408:409   */\n      0x00\n        /* \"#utility.yul\":405:406   */\n      dup1\n        /* \"#utility.yul\":398:410   */\n      revert\n        /* \"#utility.yul\":342:344   */\n    tag_365:\n        /* \"#utility.yul\":104:418   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":423:682   */\n    tag_28:\n      0x00\n        /* \"#utility.yul\":535:537   */\n      0x20\n        /* \"#utility.yul\":523:532   */\n      dup3\n        /* \"#utility.yul\":514:521   */\n      dup5\n        /* \"#utility.yul\":510:533   */\n      sub\n        /* \"#utility.yul\":506:538   */\n      slt\n        /* \"#utility.yul\":503:505   */\n      iszero\n      tag_367\n      jumpi\n        /* \"#utility.yul\":556:562   */\n      dup1\n        /* \"#utility.yul\":548:554   */\n      dup2\n        /* \"#utility.yul\":541:563   */\n      revert\n        /* \"#utility.yul\":503:505   */\n    tag_367:\n        /* \"#utility.yul\":600:609   */\n      dup2\n        /* \"#utility.yul\":587:610   */\n      calldataload\n        /* \"#utility.yul\":619:652   */\n      tag_176\n        /* \"#utility.yul\":646:651   */\n      dup2\n        /* \"#utility.yul\":619:652   */\n      tag_369\n      jump\t// in\n        /* \"#utility.yul\":687:950   */\n    tag_213:\n      0x00\n        /* \"#utility.yul\":810:812   */\n      0x20\n        /* \"#utility.yul\":798:807   */\n      dup3\n        /* \"#utility.yul\":789:796   */\n      dup5\n        /* \"#utility.yul\":785:808   */\n      sub\n        /* \"#utility.yul\":781:813   */\n      slt\n        /* \"#utility.yul\":778:780   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":831:837   */\n      dup1\n        /* \"#utility.yul\":823:829   */\n      dup2\n        /* \"#utility.yul\":816:838   */\n      revert\n        /* \"#utility.yul\":778:780   */\n    tag_371:\n        /* \"#utility.yul\":868:877   */\n      dup2\n        /* \"#utility.yul\":862:878   */\n      mload\n        /* \"#utility.yul\":887:920   */\n      tag_176\n        /* \"#utility.yul\":914:919   */\n      dup2\n        /* \"#utility.yul\":887:920   */\n      tag_369\n      jump\t// in\n        /* \"#utility.yul\":955:1357   */\n    tag_52:\n      0x00\n      dup1\n        /* \"#utility.yul\":1084:1086   */\n      0x40\n        /* \"#utility.yul\":1072:1081   */\n      dup4\n        /* \"#utility.yul\":1063:1070   */\n      dup6\n        /* \"#utility.yul\":1059:1082   */\n      sub\n        /* \"#utility.yul\":1055:1087   */\n      slt\n        /* \"#utility.yul\":1052:1054   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":1105:1111   */\n      dup1\n        /* \"#utility.yul\":1097:1103   */\n      dup2\n        /* \"#utility.yul\":1090:1112   */\n      revert\n        /* \"#utility.yul\":1052:1054   */\n    tag_374:\n        /* \"#utility.yul\":1149:1158   */\n      dup3\n        /* \"#utility.yul\":1136:1159   */\n      calldataload\n        /* \"#utility.yul\":1168:1201   */\n      tag_375\n        /* \"#utility.yul\":1195:1200   */\n      dup2\n        /* \"#utility.yul\":1168:1201   */\n      tag_369\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":1220:1225   */\n      swap2\n      pop\n        /* \"#utility.yul\":1277:1279   */\n      0x20\n        /* \"#utility.yul\":1262:1280   */\n      dup4\n      add\n        /* \"#utility.yul\":1249:1281   */\n      calldataload\n        /* \"#utility.yul\":1290:1325   */\n      tag_376\n        /* \"#utility.yul\":1249:1281   */\n      dup2\n        /* \"#utility.yul\":1290:1325   */\n      tag_369\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":1344:1351   */\n      dup1\n        /* \"#utility.yul\":1334:1351   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1042:1357   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1362:1757   */\n    tag_48:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":1508:1510   */\n      0x60\n        /* \"#utility.yul\":1496:1505   */\n      dup5\n        /* \"#utility.yul\":1487:1494   */\n      dup7\n        /* \"#utility.yul\":1483:1506   */\n      sub\n        /* \"#utility.yul\":1479:1511   */\n      slt\n        /* \"#utility.yul\":1476:1478   */\n      iszero\n      tag_378\n      jumpi\n        /* \"#utility.yul\":1529:1535   */\n      dup1\n        /* \"#utility.yul\":1521:1527   */\n      dup2\n        /* \"#utility.yul\":1514:1536   */\n      revert\n        /* \"#utility.yul\":1476:1478   */\n    tag_378:\n        /* \"#utility.yul\":1573:1582   */\n      dup4\n        /* \"#utility.yul\":1560:1583   */\n      calldataload\n        /* \"#utility.yul\":1592:1625   */\n      tag_379\n        /* \"#utility.yul\":1619:1624   */\n      dup2\n        /* \"#utility.yul\":1592:1625   */\n      tag_369\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":1644:1649   */\n      swap6\n        /* \"#utility.yul\":1696:1698   */\n      0x20\n        /* \"#utility.yul\":1681:1699   */\n      dup6\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":1747:1749   */\n      0x40\n        /* \"#utility.yul\":1732:1750   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":1719:1751   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":1466:1757   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1762:2362   */\n    tag_75:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":1926:1928   */\n      0x40\n        /* \"#utility.yul\":1914:1923   */\n      dup5\n        /* \"#utility.yul\":1905:1912   */\n      dup7\n        /* \"#utility.yul\":1901:1924   */\n      sub\n        /* \"#utility.yul\":1897:1929   */\n      slt\n        /* \"#utility.yul\":1894:1896   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":1947:1953   */\n      dup3\n        /* \"#utility.yul\":1939:1945   */\n      dup4\n        /* \"#utility.yul\":1932:1954   */\n      revert\n        /* \"#utility.yul\":1894:1896   */\n    tag_381:\n        /* \"#utility.yul\":1992:2001   */\n      dup4\n        /* \"#utility.yul\":1979:2002   */\n      calldataload\n        /* \"#utility.yul\":2025:2043   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2017:2023   */\n      dup2\n        /* \"#utility.yul\":2014:2044   */\n      gt\n        /* \"#utility.yul\":2011:2013   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":2062:2068   */\n      dup4\n        /* \"#utility.yul\":2054:2060   */\n      dup5\n        /* \"#utility.yul\":2047:2069   */\n      revert\n        /* \"#utility.yul\":2011:2013   */\n    tag_382:\n        /* \"#utility.yul\":2106:2182   */\n      tag_383\n        /* \"#utility.yul\":2174:2181   */\n      dup7\n        /* \"#utility.yul\":2165:2171   */\n      dup3\n        /* \"#utility.yul\":2154:2163   */\n      dup8\n        /* \"#utility.yul\":2150:2172   */\n      add\n        /* \"#utility.yul\":2106:2182   */\n      tag_361\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":2201:2209   */\n      swap1\n      swap5\n      pop\n        /* \"#utility.yul\":2080:2182   */\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":2286:2288   */\n      0x20\n        /* \"#utility.yul\":2271:2289   */\n      dup5\n      add\n        /* \"#utility.yul\":2258:2290   */\n      calldataload\n        /* \"#utility.yul\":2299:2332   */\n      tag_384\n        /* \"#utility.yul\":2258:2290   */\n      dup2\n        /* \"#utility.yul\":2299:2332   */\n      tag_369\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":2351:2356   */\n      dup1\n        /* \"#utility.yul\":2341:2356   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1884:2362   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2367:3182   */\n    tag_71:\n      0x00\n      dup1\n      0x00\n      dup1\n        /* \"#utility.yul\":2566:2568   */\n      0x40\n        /* \"#utility.yul\":2554:2563   */\n      dup6\n        /* \"#utility.yul\":2545:2552   */\n      dup8\n        /* \"#utility.yul\":2541:2564   */\n      sub\n        /* \"#utility.yul\":2537:2569   */\n      slt\n        /* \"#utility.yul\":2534:2536   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":2587:2593   */\n      dup1\n        /* \"#utility.yul\":2579:2585   */\n      dup2\n        /* \"#utility.yul\":2572:2594   */\n      revert\n        /* \"#utility.yul\":2534:2536   */\n    tag_386:\n        /* \"#utility.yul\":2632:2641   */\n      dup5\n        /* \"#utility.yul\":2619:2642   */\n      calldataload\n        /* \"#utility.yul\":2661:2679   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2702:2704   */\n      dup1\n        /* \"#utility.yul\":2694:2700   */\n      dup3\n        /* \"#utility.yul\":2691:2705   */\n      gt\n        /* \"#utility.yul\":2688:2690   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":2723:2729   */\n      dup3\n        /* \"#utility.yul\":2715:2721   */\n      dup4\n        /* \"#utility.yul\":2708:2730   */\n      revert\n        /* \"#utility.yul\":2688:2690   */\n    tag_387:\n        /* \"#utility.yul\":2767:2843   */\n      tag_388\n        /* \"#utility.yul\":2835:2842   */\n      dup9\n        /* \"#utility.yul\":2826:2832   */\n      dup4\n        /* \"#utility.yul\":2815:2824   */\n      dup10\n        /* \"#utility.yul\":2811:2833   */\n      add\n        /* \"#utility.yul\":2767:2843   */\n      tag_361\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":2862:2870   */\n      swap1\n      swap7\n      pop\n        /* \"#utility.yul\":2741:2843   */\n      swap5\n      pop\n        /* \"#utility.yul\":2950:2952   */\n      0x20\n        /* \"#utility.yul\":2935:2953   */\n      dup8\n      add\n        /* \"#utility.yul\":2922:2954   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2966:2982   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2963:2965   */\n      iszero\n      tag_389\n      jumpi\n        /* \"#utility.yul\":3000:3006   */\n      dup3\n        /* \"#utility.yul\":2992:2998   */\n      dup4\n        /* \"#utility.yul\":2985:3007   */\n      revert\n        /* \"#utility.yul\":2963:2965   */\n    tag_389:\n      pop\n        /* \"#utility.yul\":3044:3122   */\n      tag_390\n        /* \"#utility.yul\":3114:3121   */\n      dup8\n        /* \"#utility.yul\":3103:3111   */\n      dup3\n        /* \"#utility.yul\":3092:3101   */\n      dup9\n        /* \"#utility.yul\":3088:3112   */\n      add\n        /* \"#utility.yul\":3044:3122   */\n      tag_361\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":2524:3182   */\n      swap6\n      swap9\n      swap5\n      swap8\n      pop\n        /* \"#utility.yul\":3141:3149   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2524:3182   */\n      jump\t// out\n        /* \"#utility.yul\":3187:3855   */\n    tag_43:\n      0x00\n      dup1\n      0x00\n      dup1\n        /* \"#utility.yul\":3368:3370   */\n      0x60\n        /* \"#utility.yul\":3356:3365   */\n      dup6\n        /* \"#utility.yul\":3347:3354   */\n      dup8\n        /* \"#utility.yul\":3343:3366   */\n      sub\n        /* \"#utility.yul\":3339:3371   */\n      slt\n        /* \"#utility.yul\":3336:3338   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":3389:3395   */\n      dup4\n        /* \"#utility.yul\":3381:3387   */\n      dup5\n        /* \"#utility.yul\":3374:3396   */\n      revert\n        /* \"#utility.yul\":3336:3338   */\n    tag_392:\n        /* \"#utility.yul\":3434:3443   */\n      dup5\n        /* \"#utility.yul\":3421:3444   */\n      calldataload\n        /* \"#utility.yul\":3467:3485   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3459:3465   */\n      dup2\n        /* \"#utility.yul\":3456:3486   */\n      gt\n        /* \"#utility.yul\":3453:3455   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":3504:3510   */\n      dup5\n        /* \"#utility.yul\":3496:3502   */\n      dup6\n        /* \"#utility.yul\":3489:3511   */\n      revert\n        /* \"#utility.yul\":3453:3455   */\n    tag_393:\n        /* \"#utility.yul\":3548:3624   */\n      tag_394\n        /* \"#utility.yul\":3616:3623   */\n      dup8\n        /* \"#utility.yul\":3607:3613   */\n      dup3\n        /* \"#utility.yul\":3596:3605   */\n      dup9\n        /* \"#utility.yul\":3592:3614   */\n      add\n        /* \"#utility.yul\":3548:3624   */\n      tag_361\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":3643:3651   */\n      swap1\n      swap6\n      pop\n        /* \"#utility.yul\":3522:3624   */\n      swap4\n      pop\n      pop\n        /* \"#utility.yul\":3725:3727   */\n      0x20\n        /* \"#utility.yul\":3710:3728   */\n      dup6\n      add\n        /* \"#utility.yul\":3697:3729   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":3779:3781   */\n      0x40\n        /* \"#utility.yul\":3764:3782   */\n      dup6\n      add\n        /* \"#utility.yul\":3751:3783   */\n      calldataload\n        /* \"#utility.yul\":3792:3825   */\n      tag_395\n        /* \"#utility.yul\":3751:3783   */\n      dup2\n        /* \"#utility.yul\":3792:3825   */\n      tag_369\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":3326:3855   */\n      swap4\n      swap7\n      swap3\n      swap6\n      pop\n      swap1\n      swap4\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3860:4672   */\n    tag_61:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":4058:4061   */\n      0x80\n        /* \"#utility.yul\":4046:4055   */\n      dup7\n        /* \"#utility.yul\":4037:4044   */\n      dup9\n        /* \"#utility.yul\":4033:4056   */\n      sub\n        /* \"#utility.yul\":4029:4062   */\n      slt\n        /* \"#utility.yul\":4026:4028   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":4080:4086   */\n      dup1\n        /* \"#utility.yul\":4072:4078   */\n      dup2\n        /* \"#utility.yul\":4065:4087   */\n      revert\n        /* \"#utility.yul\":4026:4028   */\n    tag_397:\n        /* \"#utility.yul\":4125:4134   */\n      dup6\n        /* \"#utility.yul\":4112:4135   */\n      calldataload\n        /* \"#utility.yul\":4158:4176   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4150:4156   */\n      dup2\n        /* \"#utility.yul\":4147:4177   */\n      gt\n        /* \"#utility.yul\":4144:4146   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":4195:4201   */\n      dup2\n        /* \"#utility.yul\":4187:4193   */\n      dup3\n        /* \"#utility.yul\":4180:4202   */\n      revert\n        /* \"#utility.yul\":4144:4146   */\n    tag_398:\n        /* \"#utility.yul\":4239:4315   */\n      tag_399\n        /* \"#utility.yul\":4307:4314   */\n      dup9\n        /* \"#utility.yul\":4298:4304   */\n      dup3\n        /* \"#utility.yul\":4287:4296   */\n      dup10\n        /* \"#utility.yul\":4283:4305   */\n      add\n        /* \"#utility.yul\":4239:4315   */\n      tag_361\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":4334:4342   */\n      swap1\n      swap7\n      pop\n        /* \"#utility.yul\":4213:4315   */\n      swap5\n      pop\n      pop\n        /* \"#utility.yul\":4416:4418   */\n      0x20\n        /* \"#utility.yul\":4401:4419   */\n      dup7\n      add\n        /* \"#utility.yul\":4388:4420   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":4470:4472   */\n      0x40\n        /* \"#utility.yul\":4455:4473   */\n      dup7\n      add\n        /* \"#utility.yul\":4442:4474   */\n      calldataload\n        /* \"#utility.yul\":4483:4516   */\n      tag_400\n        /* \"#utility.yul\":4442:4474   */\n      dup2\n        /* \"#utility.yul\":4483:4516   */\n      tag_369\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":4535:4540   */\n      swap2\n      pop\n        /* \"#utility.yul\":4592:4594   */\n      0x60\n        /* \"#utility.yul\":4577:4595   */\n      dup7\n      add\n        /* \"#utility.yul\":4564:4596   */\n      calldataload\n        /* \"#utility.yul\":4605:4640   */\n      tag_401\n        /* \"#utility.yul\":4564:4596   */\n      dup2\n        /* \"#utility.yul\":4605:4640   */\n      tag_369\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":4659:4666   */\n      dup1\n        /* \"#utility.yul\":4649:4666   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4016:4672   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4677:4867   */\n    tag_57:\n      0x00\n        /* \"#utility.yul\":4789:4791   */\n      0x20\n        /* \"#utility.yul\":4777:4786   */\n      dup3\n        /* \"#utility.yul\":4768:4775   */\n      dup5\n        /* \"#utility.yul\":4764:4787   */\n      sub\n        /* \"#utility.yul\":4760:4792   */\n      slt\n        /* \"#utility.yul\":4757:4759   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":4810:4816   */\n      dup1\n        /* \"#utility.yul\":4802:4808   */\n      dup2\n        /* \"#utility.yul\":4795:4817   */\n      revert\n        /* \"#utility.yul\":4757:4759   */\n    tag_403:\n      pop\n        /* \"#utility.yul\":4838:4861   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":4747:4867   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4872:5066   */\n    tag_172:\n      0x00\n        /* \"#utility.yul\":4995:4997   */\n      0x20\n        /* \"#utility.yul\":4983:4992   */\n      dup3\n        /* \"#utility.yul\":4974:4981   */\n      dup5\n        /* \"#utility.yul\":4970:4993   */\n      sub\n        /* \"#utility.yul\":4966:4998   */\n      slt\n        /* \"#utility.yul\":4963:4965   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":5016:5022   */\n      dup1\n        /* \"#utility.yul\":5008:5014   */\n      dup2\n        /* \"#utility.yul\":5001:5023   */\n      revert\n        /* \"#utility.yul\":4963:4965   */\n    tag_405:\n      pop\n        /* \"#utility.yul\":5044:5060   */\n      mload\n      swap2\n        /* \"#utility.yul\":4953:5066   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5071:5326   */\n    tag_195:\n      0x00\n      dup1\n        /* \"#utility.yul\":5211:5213   */\n      0x40\n        /* \"#utility.yul\":5199:5208   */\n      dup4\n        /* \"#utility.yul\":5190:5197   */\n      dup6\n        /* \"#utility.yul\":5186:5209   */\n      sub\n        /* \"#utility.yul\":5182:5214   */\n      slt\n        /* \"#utility.yul\":5179:5181   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":5232:5238   */\n      dup2\n        /* \"#utility.yul\":5224:5230   */\n      dup3\n        /* \"#utility.yul\":5217:5239   */\n      revert\n        /* \"#utility.yul\":5179:5181   */\n    tag_407:\n      pop\n      pop\n        /* \"#utility.yul\":5260:5276   */\n      dup1\n      mload\n        /* \"#utility.yul\":5316:5318   */\n      0x20\n        /* \"#utility.yul\":5301:5319   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":5295:5320   */\n      mload\n        /* \"#utility.yul\":5260:5276   */\n      swap1\n      swap3\n        /* \"#utility.yul\":5295:5320   */\n      swap1\n      swap2\n      pop\n        /* \"#utility.yul\":5169:5326   */\n      jump\t// out\n        /* \"#utility.yul\":5331:5534   */\n    tag_68:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5495:5527   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5477:5528   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5465:5467   */\n      0x20\n        /* \"#utility.yul\":5450:5468   */\n      add\n      swap1\n        /* \"#utility.yul\":5432:5534   */\n      jump\t// out\n        /* \"#utility.yul\":5539:5813   */\n    tag_250:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5731:5763   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":5713:5764   */\n      dup3\n      mstore\n        /* \"#utility.yul\":5795:5797   */\n      0x20\n        /* \"#utility.yul\":5780:5798   */\n      dup3\n      add\n        /* \"#utility.yul\":5773:5807   */\n      mstore\n        /* \"#utility.yul\":5701:5703   */\n      0x40\n        /* \"#utility.yul\":5686:5704   */\n      add\n      swap1\n        /* \"#utility.yul\":5668:5813   */\n      jump\t// out\n        /* \"#utility.yul\":6057:6401   */\n    tag_137:\n        /* \"#utility.yul\":6259:6261   */\n      0x20\n        /* \"#utility.yul\":6241:6262   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6298:6300   */\n      0x14\n        /* \"#utility.yul\":6278:6296   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6271:6301   */\n      mstore\n      shl(0x60, 0x494e56414c49445f555345525f41444452455353)\n        /* \"#utility.yul\":6332:6334   */\n      0x40\n        /* \"#utility.yul\":6317:6335   */\n      dup3\n      add\n        /* \"#utility.yul\":6310:6360   */\n      mstore\n        /* \"#utility.yul\":6392:6394   */\n      0x60\n        /* \"#utility.yul\":6377:6395   */\n      add\n      swap1\n        /* \"#utility.yul\":6231:6401   */\n      jump\t// out\n        /* \"#utility.yul\":6406:6748   */\n    tag_113:\n        /* \"#utility.yul\":6608:6610   */\n      0x20\n        /* \"#utility.yul\":6590:6611   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6647:6649   */\n      0x12\n        /* \"#utility.yul\":6627:6645   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6620:6650   */\n      mstore\n      shl(0x70, 0x494e56414c49445f544f5f41444452455353)\n        /* \"#utility.yul\":6681:6683   */\n      0x40\n        /* \"#utility.yul\":6666:6684   */\n      dup3\n      add\n        /* \"#utility.yul\":6659:6707   */\n      mstore\n        /* \"#utility.yul\":6739:6741   */\n      0x60\n        /* \"#utility.yul\":6724:6742   */\n      add\n      swap1\n        /* \"#utility.yul\":6580:6748   */\n      jump\t// out\n        /* \"#utility.yul\":6753:7098   */\n    tag_148:\n        /* \"#utility.yul\":6955:6957   */\n      0x20\n        /* \"#utility.yul\":6937:6958   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6994:6996   */\n      0x15\n        /* \"#utility.yul\":6974:6992   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6967:6997   */\n      mstore\n      shl(0x59, 0x24a72b20a624a22fa1a7a72324a3aaa920aa24a7a7)\n        /* \"#utility.yul\":7028:7030   */\n      0x40\n        /* \"#utility.yul\":7013:7031   */\n      dup3\n      add\n        /* \"#utility.yul\":7006:7057   */\n      mstore\n        /* \"#utility.yul\":7089:7091   */\n      0x60\n        /* \"#utility.yul\":7074:7092   */\n      add\n      swap1\n        /* \"#utility.yul\":6927:7098   */\n      jump\t// out\n        /* \"#utility.yul\":7103:7441   */\n    tag_314:\n        /* \"#utility.yul\":7305:7307   */\n      0x20\n        /* \"#utility.yul\":7287:7308   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7344:7346   */\n      0x0e\n        /* \"#utility.yul\":7324:7342   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7317:7347   */\n      mstore\n      shl(0x90, 0x496e646578206f766572666c6f77)\n        /* \"#utility.yul\":7378:7380   */\n      0x40\n        /* \"#utility.yul\":7363:7381   */\n      dup3\n      add\n        /* \"#utility.yul\":7356:7400   */\n      mstore\n        /* \"#utility.yul\":7432:7434   */\n      0x60\n        /* \"#utility.yul\":7417:7435   */\n      add\n      swap1\n        /* \"#utility.yul\":7277:7441   */\n      jump\t// out\n        /* \"#utility.yul\":7446:7791   */\n    tag_127:\n        /* \"#utility.yul\":7648:7650   */\n      0x20\n        /* \"#utility.yul\":7630:7651   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7687:7689   */\n      0x15\n        /* \"#utility.yul\":7667:7685   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7660:7690   */\n      mstore\n      shl(0x59, 0x27a7262cafa2a6a4a9a9a4a7a72fa6a0a720a3a2a9)\n        /* \"#utility.yul\":7721:7723   */\n      0x40\n        /* \"#utility.yul\":7706:7724   */\n      dup3\n      add\n        /* \"#utility.yul\":7699:7750   */\n      mstore\n        /* \"#utility.yul\":7782:7784   */\n      0x60\n        /* \"#utility.yul\":7767:7785   */\n      add\n      swap1\n        /* \"#utility.yul\":7620:7791   */\n      jump\t// out\n        /* \"#utility.yul\":7796:8140   */\n    tag_133:\n        /* \"#utility.yul\":7998:8000   */\n      0x20\n        /* \"#utility.yul\":7980:8001   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8037:8039   */\n      0x14\n        /* \"#utility.yul\":8017:8035   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8010:8040   */\n      mstore\n      shl(0x62, 0x10d3105253515497d5539055551213d492569151)\n        /* \"#utility.yul\":8071:8073   */\n      0x40\n        /* \"#utility.yul\":8056:8074   */\n      dup3\n      add\n        /* \"#utility.yul\":8049:8099   */\n      mstore\n        /* \"#utility.yul\":8131:8133   */\n      0x60\n        /* \"#utility.yul\":8116:8134   */\n      add\n      swap1\n        /* \"#utility.yul\":7970:8140   */\n      jump\t// out\n        /* \"#utility.yul\":8145:8357   */\n    tag_277:\n      sub(shl(0x68, 0x01), 0x01)\n        /* \"#utility.yul\":8309:8350   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":8291:8351   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8279:8281   */\n      0x20\n        /* \"#utility.yul\":8264:8282   */\n      add\n      swap1\n        /* \"#utility.yul\":8246:8357   */\n      jump\t// out\n        /* \"#utility.yul\":8362:8763   */\n    tag_104:\n      sub(shl(0x68, 0x01), 0x01)\n        /* \"#utility.yul\":8627:8642   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":8609:8643   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8679:8694   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":8674:8676   */\n      0x20\n        /* \"#utility.yul\":8659:8677   */\n      dup3\n      add\n        /* \"#utility.yul\":8652:8695   */\n      mstore\n        /* \"#utility.yul\":8743:8755   */\n      0xffffffffff\n        /* \"#utility.yul\":8731:8756   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":8726:8728   */\n      0x40\n        /* \"#utility.yul\":8711:8729   */\n      dup3\n      add\n        /* \"#utility.yul\":8704:8757   */\n      mstore\n        /* \"#utility.yul\":8550:8552   */\n      0x60\n        /* \"#utility.yul\":8535:8553   */\n      add\n      swap1\n        /* \"#utility.yul\":8517:8763   */\n      jump\t// out\n        /* \"#utility.yul\":8768:8945   */\n    tag_36:\n        /* \"#utility.yul\":8914:8939   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":8902:8904   */\n      0x20\n        /* \"#utility.yul\":8887:8905   */\n      add\n      swap1\n        /* \"#utility.yul\":8869:8945   */\n      jump\t// out\n        /* \"#utility.yul\":8950:9269   */\n    tag_31:\n        /* \"#utility.yul\":9152:9177   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":9208:9210   */\n      0x20\n        /* \"#utility.yul\":9193:9211   */\n      dup4\n      add\n        /* \"#utility.yul\":9186:9220   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":9251:9253   */\n      0x40\n        /* \"#utility.yul\":9236:9254   */\n      dup3\n      add\n        /* \"#utility.yul\":9229:9263   */\n      mstore\n        /* \"#utility.yul\":9140:9142   */\n      0x60\n        /* \"#utility.yul\":9125:9143   */\n      add\n      swap1\n        /* \"#utility.yul\":9107:9269   */\n      jump\t// out\n        /* \"#utility.yul\":9274:9458   */\n    tag_87:\n        /* \"#utility.yul\":9446:9450   */\n      0xff\n        /* \"#utility.yul\":9434:9451   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":9416:9452   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9404:9406   */\n      0x20\n        /* \"#utility.yul\":9389:9407   */\n      add\n      swap1\n        /* \"#utility.yul\":9371:9458   */\n      jump\t// out\n        /* \"#utility.yul\":9463:9596   */\n    tag_369:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9540:9571   */\n      dup2\n      and\n        /* \"#utility.yul\":9530:9572   */\n      dup2\n      eq\n        /* \"#utility.yul\":9520:9522   */\n      tag_423\n      jumpi\n        /* \"#utility.yul\":9586:9587   */\n      0x00\n        /* \"#utility.yul\":9583:9584   */\n      dup1\n        /* \"#utility.yul\":9576:9588   */\n      revert\n        /* \"#utility.yul\":9520:9522   */\n    tag_423:\n        /* \"#utility.yul\":9510:9596   */\n      pop\n      jump\t// out\n    stop\n    data_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4 436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n    data_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25 5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365\n\n    auxdata: 0xa2646970667358221220d94e1a7bc1c2da8e7f89644f4c7824cbb4d6c28be01bda08c043c6db1633574f64736f6c63430007050033\n}\n","legacyAssembly":{".code":[{"begin":1115,"end":7835,"name":"PUSH","source":7,"value":"C0"},{"begin":1115,"end":7835,"name":"PUSH","source":7,"value":"40"},{"begin":1115,"end":7835,"name":"MSTORE","source":7},{"begin":924,"end":925,"name":"PUSH","source":5,"value":"0"},{"begin":881,"end":925,"name":"DUP1","source":5},{"begin":881,"end":925,"name":"SSTORE","source":5},{"begin":1877,"end":2027,"name":"CALLVALUE","source":7},{"begin":1877,"end":2027,"name":"DUP1","source":7},{"begin":1877,"end":2027,"name":"ISZERO","source":7},{"begin":1877,"end":2027,"name":"PUSH [tag]","source":7,"value":"1"},{"begin":1877,"end":2027,"name":"JUMPI","source":7},{"begin":1877,"end":2027,"name":"PUSH","source":7,"value":"0"},{"begin":1877,"end":2027,"name":"DUP1","source":7},{"begin":1877,"end":2027,"name":"REVERT","source":7},{"begin":1877,"end":2027,"name":"tag","source":7,"value":"1"},{"begin":1877,"end":2027,"name":"JUMPDEST","source":7},{"begin":1877,"end":2027,"name":"POP","source":7},{"begin":1877,"end":2027,"name":"PUSH","source":7,"value":"40"},{"begin":1877,"end":2027,"name":"MLOAD","source":7},{"begin":1877,"end":2027,"name":"PUSHSIZE","source":7},{"begin":1877,"end":2027,"name":"CODESIZE","source":7},{"begin":1877,"end":2027,"name":"SUB","source":7},{"begin":1877,"end":2027,"name":"DUP1","source":7},{"begin":1877,"end":2027,"name":"PUSHSIZE","source":7},{"begin":1877,"end":2027,"name":"DUP4","source":7},{"begin":1877,"end":2027,"name":"CODECOPY","source":7},{"begin":1877,"end":2027,"name":"DUP2","source":7},{"begin":1877,"end":2027,"name":"ADD","source":7},{"begin":1877,"end":2027,"name":"PUSH","source":7,"value":"40"},{"begin":1877,"end":2027,"name":"DUP2","source":7},{"begin":1877,"end":2027,"name":"SWAP1","source":7},{"begin":1877,"end":2027,"name":"MSTORE","source":7},{"begin":1877,"end":2027,"name":"PUSH [tag]","source":7,"value":"2"},{"begin":1877,"end":2027,"name":"SWAP2","source":7},{"begin":1877,"end":2027,"name":"PUSH [tag]","source":7,"value":"3"},{"begin":1877,"end":2027,"name":"JUMP","source":7,"value":"[in]"},{"begin":1877,"end":2027,"name":"tag","source":7,"value":"2"},{"begin":1877,"end":2027,"name":"JUMPDEST","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"60"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":990,"end":1024,"name":"PUSH","source":6,"value":"60"},{"begin":990,"end":1024,"name":"SWAP2","source":6},{"begin":990,"end":1024,"name":"DUP3","source":6},{"begin":990,"end":1024,"name":"SHL","source":6},{"begin":990,"end":1024,"name":"DUP2","source":6},{"begin":990,"end":1024,"name":"AND","source":6},{"begin":990,"end":1024,"name":"PUSH","source":6,"value":"80"},{"begin":990,"end":1024,"name":"MSTORE","source":6},{"begin":1998,"end":2022,"name":"SWAP2","source":7},{"begin":1998,"end":2022,"name":"SWAP1","source":7},{"begin":1998,"end":2022,"name":"SHL","source":7},{"begin":1998,"end":2022,"name":"AND","source":7},{"begin":1998,"end":2022,"name":"PUSH","source":7,"value":"A0"},{"begin":1998,"end":2022,"name":"MSTORE","source":7},{"begin":1115,"end":7835,"name":"PUSH [tag]","source":7,"value":"9"},{"begin":1115,"end":7835,"name":"JUMP","source":7},{"begin":14,"end":444,"name":"tag","source":14,"value":"3"},{"begin":14,"end":444,"name":"JUMPDEST","source":14},{"begin":14,"end":444,"name":"PUSH","source":14,"value":"0"},{"begin":14,"end":444,"name":"DUP1","source":14},{"begin":185,"end":187,"name":"PUSH","source":14,"value":"40"},{"begin":173,"end":182,"name":"DUP4","source":14},{"begin":164,"end":171,"name":"DUP6","source":14},{"begin":160,"end":183,"name":"SUB","source":14},{"begin":156,"end":188,"name":"SLT","source":14},{"begin":153,"end":155,"name":"ISZERO","source":14},{"begin":153,"end":155,"name":"PUSH [tag]","source":14,"value":"11"},{"begin":153,"end":155,"name":"JUMPI","source":14},{"begin":206,"end":212,"name":"DUP2","source":14},{"begin":198,"end":204,"name":"DUP3","source":14},{"begin":191,"end":213,"name":"REVERT","source":14},{"begin":153,"end":155,"name":"tag","source":14,"value":"11"},{"begin":153,"end":155,"name":"JUMPDEST","source":14},{"begin":243,"end":252,"name":"DUP3","source":14},{"begin":237,"end":253,"name":"MLOAD","source":14},{"begin":262,"end":295,"name":"PUSH [tag]","source":14,"value":"12"},{"begin":289,"end":294,"name":"DUP2","source":14},{"begin":262,"end":295,"name":"PUSH [tag]","source":14,"value":"13"},{"begin":262,"end":295,"name":"JUMP","source":14,"value":"[in]"},{"begin":262,"end":295,"name":"tag","source":14,"value":"12"},{"begin":262,"end":295,"name":"JUMPDEST","source":14},{"begin":364,"end":366,"name":"PUSH","source":14,"value":"20"},{"begin":349,"end":367,"name":"DUP5","source":14},{"begin":349,"end":367,"name":"ADD","source":14},{"begin":343,"end":368,"name":"MLOAD","source":14},{"begin":314,"end":319,"name":"SWAP1","source":14},{"begin":314,"end":319,"name":"SWAP3","source":14},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":377,"end":412,"name":"PUSH [tag]","source":14,"value":"14"},{"begin":343,"end":368,"name":"DUP2","source":14},{"begin":377,"end":412,"name":"PUSH [tag]","source":14,"value":"13"},{"begin":377,"end":412,"name":"JUMP","source":14,"value":"[in]"},{"begin":377,"end":412,"name":"tag","source":14,"value":"14"},{"begin":377,"end":412,"name":"JUMPDEST","source":14},{"begin":431,"end":438,"name":"DUP1","source":14},{"begin":421,"end":438,"name":"SWAP2","source":14},{"begin":421,"end":438,"name":"POP","source":14},{"begin":421,"end":438,"name":"POP","source":14},{"begin":143,"end":444,"name":"SWAP3","source":14},{"begin":143,"end":444,"name":"POP","source":14},{"begin":143,"end":444,"name":"SWAP3","source":14},{"begin":143,"end":444,"name":"SWAP1","source":14},{"begin":143,"end":444,"name":"POP","source":14},{"begin":143,"end":444,"name":"JUMP","source":14,"value":"[out]"},{"begin":449,"end":582,"name":"tag","source":14,"value":"13"},{"begin":449,"end":582,"name":"JUMPDEST","source":14},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":526,"end":557,"name":"DUP2","source":14},{"begin":526,"end":557,"name":"AND","source":14},{"begin":516,"end":558,"name":"DUP2","source":14},{"begin":516,"end":558,"name":"EQ","source":14},{"begin":506,"end":508,"name":"PUSH [tag]","source":14,"value":"16"},{"begin":506,"end":508,"name":"JUMPI","source":14},{"begin":572,"end":573,"name":"PUSH","source":14,"value":"0"},{"begin":569,"end":570,"name":"DUP1","source":14},{"begin":562,"end":574,"name":"REVERT","source":14},{"begin":506,"end":508,"name":"tag","source":14,"value":"16"},{"begin":506,"end":508,"name":"JUMPDEST","source":14},{"begin":496,"end":582,"name":"POP","source":14},{"begin":496,"end":582,"name":"JUMP","source":14,"value":"[out]"},{"begin":496,"end":582,"name":"tag","source":14,"value":"9"},{"begin":496,"end":582,"name":"JUMPDEST","source":14},{"begin":1115,"end":7835,"name":"PUSH","source":7,"value":"80"},{"begin":1115,"end":7835,"name":"MLOAD","source":7},{"begin":1115,"end":7835,"name":"PUSH","source":7,"value":"60"},{"begin":1115,"end":7835,"name":"SHR","source":7},{"begin":1115,"end":7835,"name":"PUSH","source":7,"value":"A0"},{"begin":1115,"end":7835,"name":"MLOAD","source":7},{"begin":1115,"end":7835,"name":"PUSH","source":7,"value":"60"},{"begin":1115,"end":7835,"name":"SHR","source":7},{"begin":1115,"end":7835,"name":"PUSH #[$]","source":7,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":1115,"end":7835,"name":"PUSH [$]","source":7,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":1115,"end":7835,"name":"PUSH","source":7,"value":"0"},{"begin":1115,"end":7835,"name":"CODECOPY","source":7},{"begin":1115,"end":7835,"name":"ASSIGNIMMUTABLE","source":7,"value":"1205"},{"begin":1115,"end":7835,"name":"ASSIGNIMMUTABLE","source":7,"value":"588"},{"begin":1115,"end":7835,"name":"PUSH #[$]","source":7,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":1115,"end":7835,"name":"PUSH","source":7,"value":"0"},{"begin":1115,"end":7835,"name":"RETURN","source":7}],".data":{"0":{".auxdata":"a2646970667358221220d94e1a7bc1c2da8e7f89644f4c7824cbb4d6c28be01bda08c043c6db1633574f64736f6c63430007050033",".code":[{"begin":1115,"end":7835,"name":"PUSH","source":7,"value":"80"},{"begin":1115,"end":7835,"name":"PUSH","source":7,"value":"40"},{"begin":1115,"end":7835,"name":"MSTORE","source":7},{"begin":1115,"end":7835,"name":"CALLVALUE","source":7},{"begin":1115,"end":7835,"name":"DUP1","source":7},{"begin":1115,"end":7835,"name":"ISZERO","source":7},{"begin":1115,"end":7835,"name":"PUSH [tag]","source":7,"value":"1"},{"begin":1115,"end":7835,"name":"JUMPI","source":7},{"begin":1115,"end":7835,"name":"PUSH","source":7,"value":"0"},{"begin":1115,"end":7835,"name":"DUP1","source":7},{"begin":1115,"end":7835,"name":"REVERT","source":7},{"begin":1115,"end":7835,"name":"tag","source":7,"value":"1"},{"begin":1115,"end":7835,"name":"JUMPDEST","source":7},{"begin":1115,"end":7835,"name":"POP","source":7},{"begin":1115,"end":7835,"name":"PUSH","source":7,"value":"4"},{"begin":1115,"end":7835,"name":"CALLDATASIZE","source":7},{"begin":1115,"end":7835,"name":"LT","source":7},{"begin":1115,"end":7835,"name":"PUSH [tag]","source":7,"value":"2"},{"begin":1115,"end":7835,"name":"JUMPI","source":7},{"begin":1115,"end":7835,"name":"PUSH","source":7,"value":"0"},{"begin":1115,"end":7835,"name":"CALLDATALOAD","source":7},{"begin":1115,"end":7835,"name":"PUSH","source":7,"value":"E0"},{"begin":1115,"end":7835,"name":"SHR","source":7},{"begin":1115,"end":7835,"name":"DUP1","source":7},{"begin":1115,"end":7835,"name":"PUSH","source":7,"value":"8B599F26"},{"begin":1115,"end":7835,"name":"GT","source":7},{"begin":1115,"end":7835,"name":"PUSH [tag]","source":7,"value":"23"},{"begin":1115,"end":7835,"name":"JUMPI","source":7},{"begin":1115,"end":7835,"name":"DUP1","source":7},{"begin":1115,"end":7835,"name":"PUSH","source":7,"value":"CBCBB507"},{"begin":1115,"end":7835,"name":"GT","source":7},{"begin":1115,"end":7835,"name":"PUSH [tag]","source":7,"value":"24"},{"begin":1115,"end":7835,"name":"JUMPI","source":7},{"begin":1115,"end":7835,"name":"DUP1","source":7},{"begin":1115,"end":7835,"name":"PUSH","source":7,"value":"CBCBB507"},{"begin":1115,"end":7835,"name":"EQ","source":7},{"begin":1115,"end":7835,"name":"PUSH [tag]","source":7,"value":"18"},{"begin":1115,"end":7835,"name":"JUMPI","source":7},{"begin":1115,"end":7835,"name":"DUP1","source":7},{"begin":1115,"end":7835,"name":"PUSH","source":7,"value":"CC69AFEC"},{"begin":1115,"end":7835,"name":"EQ","source":7},{"begin":1115,"end":7835,"name":"PUSH [tag]","source":7,"value":"14"},{"begin":1115,"end":7835,"name":"JUMPI","source":7},{"begin":1115,"end":7835,"name":"DUP1","source":7},{"begin":1115,"end":7835,"name":"PUSH","source":7,"value":"DDE43CBA"},{"begin":1115,"end":7835,"name":"EQ","source":7},{"begin":1115,"end":7835,"name":"PUSH [tag]","source":7,"value":"20"},{"begin":1115,"end":7835,"name":"JUMPI","source":7},{"begin":1115,"end":7835,"name":"DUP1","source":7},{"begin":1115,"end":7835,"name":"PUSH","source":7,"value":"F11B8188"},{"begin":1115,"end":7835,"name":"EQ","source":7},{"begin":1115,"end":7835,"name":"PUSH [tag]","source":7,"value":"21"},{"begin":1115,"end":7835,"name":"JUMPI","source":7},{"begin":1115,"end":7835,"name":"DUP1","source":7},{"begin":1115,"end":7835,"name":"PUSH","source":7,"value":"F5CF673B"},{"begin":1115,"end":7835,"name":"EQ","source":7},{"begin":1115,"end":7835,"name":"PUSH [tag]","source":7,"value":"22"},{"begin":1115,"end":7835,"name":"JUMPI","source":7},{"begin":1115,"end":7835,"name":"PUSH [tag]","source":7,"value":"2"},{"begin":1115,"end":7835,"name":"JUMP","source":7},{"begin":1115,"end":7835,"name":"tag","source":7,"value":"24"},{"begin":1115,"end":7835,"name":"JUMPDEST","source":7},{"begin":1115,"end":7835,"name":"DUP1","source":7},{"begin":1115,"end":7835,"name":"PUSH","source":7,"value":"8B599F26"},{"begin":1115,"end":7835,"name":"EQ","source":7},{"begin":1115,"end":7835,"name":"PUSH [tag]","source":7,"value":"13"},{"begin":1115,"end":7835,"name":"JUMPI","source":7},{"begin":1115,"end":7835,"name":"DUP1","source":7},{"begin":1115,"end":7835,"name":"PUSH","source":7,"value":"919CD40F"},{"begin":1115,"end":7835,"name":"EQ","source":7},{"begin":1115,"end":7835,"name":"PUSH [tag]","source":7,"value":"14"},{"begin":1115,"end":7835,"name":"JUMPI","source":7},{"begin":1115,"end":7835,"name":"DUP1","source":7},{"begin":1115,"end":7835,"name":"PUSH","source":7,"value":"99248EA7"},{"begin":1115,"end":7835,"name":"EQ","source":7},{"begin":1115,"end":7835,"name":"PUSH [tag]","source":7,"value":"15"},{"begin":1115,"end":7835,"name":"JUMPI","source":7},{"begin":1115,"end":7835,"name":"DUP1","source":7},{"begin":1115,"end":7835,"name":"PUSH","source":7,"value":"AAF5EB68"},{"begin":1115,"end":7835,"name":"EQ","source":7},{"begin":1115,"end":7835,"name":"PUSH [tag]","source":7,"value":"16"},{"begin":1115,"end":7835,"name":"JUMPI","source":7},{"begin":1115,"end":7835,"name":"DUP1","source":7},{"begin":1115,"end":7835,"name":"PUSH","source":7,"value":"C4D66DE8"},{"begin":1115,"end":7835,"name":"EQ","source":7},{"begin":1115,"end":7835,"name":"PUSH [tag]","source":7,"value":"17"},{"begin":1115,"end":7835,"name":"JUMPI","source":7},{"begin":1115,"end":7835,"name":"PUSH [tag]","source":7,"value":"2"},{"begin":1115,"end":7835,"name":"JUMP","source":7},{"begin":1115,"end":7835,"name":"tag","source":7,"value":"23"},{"begin":1115,"end":7835,"name":"JUMPDEST","source":7},{"begin":1115,"end":7835,"name":"DUP1","source":7},{"begin":1115,"end":7835,"name":"PUSH","source":7,"value":"3373EE4C"},{"begin":1115,"end":7835,"name":"GT","source":7},{"begin":1115,"end":7835,"name":"PUSH [tag]","source":7,"value":"25"},{"begin":1115,"end":7835,"name":"JUMPI","source":7},{"begin":1115,"end":7835,"name":"DUP1","source":7},{"begin":1115,"end":7835,"name":"PUSH","source":7,"value":"3373EE4C"},{"begin":1115,"end":7835,"name":"EQ","source":7},{"begin":1115,"end":7835,"name":"PUSH [tag]","source":7,"value":"8"},{"begin":1115,"end":7835,"name":"JUMPI","source":7},{"begin":1115,"end":7835,"name":"DUP1","source":7},{"begin":1115,"end":7835,"name":"PUSH","source":7,"value":"39CCBDD3"},{"begin":1115,"end":7835,"name":"EQ","source":7},{"begin":1115,"end":7835,"name":"PUSH [tag]","source":7,"value":"9"},{"begin":1115,"end":7835,"name":"JUMPI","source":7},{"begin":1115,"end":7835,"name":"DUP1","source":7},{"begin":1115,"end":7835,"name":"PUSH","source":7,"value":"6D34B96E"},{"begin":1115,"end":7835,"name":"EQ","source":7},{"begin":1115,"end":7835,"name":"PUSH [tag]","source":7,"value":"10"},{"begin":1115,"end":7835,"name":"JUMPI","source":7},{"begin":1115,"end":7835,"name":"DUP1","source":7},{"begin":1115,"end":7835,"name":"PUSH","source":7,"value":"74D945EC"},{"begin":1115,"end":7835,"name":"EQ","source":7},{"begin":1115,"end":7835,"name":"PUSH [tag]","source":7,"value":"11"},{"begin":1115,"end":7835,"name":"JUMPI","source":7},{"begin":1115,"end":7835,"name":"DUP1","source":7},{"begin":1115,"end":7835,"name":"PUSH","source":7,"value":"79F171B2"},{"begin":1115,"end":7835,"name":"EQ","source":7},{"begin":1115,"end":7835,"name":"PUSH [tag]","source":7,"value":"12"},{"begin":1115,"end":7835,"name":"JUMPI","source":7},{"begin":1115,"end":7835,"name":"PUSH [tag]","source":7,"value":"2"},{"begin":1115,"end":7835,"name":"JUMP","source":7},{"begin":1115,"end":7835,"name":"tag","source":7,"value":"25"},{"begin":1115,"end":7835,"name":"JUMPDEST","source":7},{"begin":1115,"end":7835,"name":"DUP1","source":7},{"begin":1115,"end":7835,"name":"PUSH","source":7,"value":"1652E7B7"},{"begin":1115,"end":7835,"name":"EQ","source":7},{"begin":1115,"end":7835,"name":"PUSH [tag]","source":7,"value":"3"},{"begin":1115,"end":7835,"name":"JUMPI","source":7},{"begin":1115,"end":7835,"name":"DUP1","source":7},{"begin":1115,"end":7835,"name":"PUSH","source":7,"value":"198FA81E"},{"begin":1115,"end":7835,"name":"EQ","source":7},{"begin":1115,"end":7835,"name":"PUSH [tag]","source":7,"value":"4"},{"begin":1115,"end":7835,"name":"JUMPI","source":7},{"begin":1115,"end":7835,"name":"DUP1","source":7},{"begin":1115,"end":7835,"name":"PUSH","source":7,"value":"1C39B672"},{"begin":1115,"end":7835,"name":"EQ","source":7},{"begin":1115,"end":7835,"name":"PUSH [tag]","source":7,"value":"5"},{"begin":1115,"end":7835,"name":"JUMPI","source":7},{"begin":1115,"end":7835,"name":"DUP1","source":7},{"begin":1115,"end":7835,"name":"PUSH","source":7,"value":"3111E7B3"},{"begin":1115,"end":7835,"name":"EQ","source":7},{"begin":1115,"end":7835,"name":"PUSH [tag]","source":7,"value":"6"},{"begin":1115,"end":7835,"name":"JUMPI","source":7},{"begin":1115,"end":7835,"name":"DUP1","source":7},{"begin":1115,"end":7835,"name":"PUSH","source":7,"value":"31873E2E"},{"begin":1115,"end":7835,"name":"EQ","source":7},{"begin":1115,"end":7835,"name":"PUSH [tag]","source":7,"value":"7"},{"begin":1115,"end":7835,"name":"JUMPI","source":7},{"begin":1115,"end":7835,"name":"tag","source":7,"value":"2"},{"begin":1115,"end":7835,"name":"JUMPDEST","source":7},{"begin":1115,"end":7835,"name":"PUSH","source":7,"value":"0"},{"begin":1115,"end":7835,"name":"DUP1","source":7},{"begin":1115,"end":7835,"name":"REVERT","source":7},{"begin":1795,"end":1996,"name":"tag","source":6,"value":"3"},{"begin":1795,"end":1996,"name":"JUMPDEST","source":6},{"begin":1795,"end":1996,"name":"PUSH [tag]","source":6,"value":"26"},{"begin":1795,"end":1996,"name":"PUSH [tag]","source":6,"value":"27"},{"begin":1795,"end":1996,"name":"CALLDATASIZE","source":6},{"begin":1795,"end":1996,"name":"PUSH","source":6,"value":"4"},{"begin":1795,"end":1996,"name":"PUSH [tag]","source":6,"value":"28"},{"begin":1795,"end":1996,"name":"JUMP","source":6,"value":"[in]"},{"begin":1795,"end":1996,"name":"tag","source":6,"value":"27"},{"begin":1795,"end":1996,"name":"JUMPDEST","source":6},{"begin":1795,"end":1996,"name":"PUSH [tag]","source":6,"value":"29"},{"begin":1795,"end":1996,"name":"JUMP","source":6,"value":"[in]"},{"begin":1795,"end":1996,"name":"tag","source":6,"value":"26"},{"begin":1795,"end":1996,"name":"JUMPDEST","source":6},{"begin":1795,"end":1996,"name":"PUSH","source":6,"value":"40"},{"begin":1795,"end":1996,"name":"MLOAD","source":6},{"begin":1795,"end":1996,"name":"PUSH [tag]","source":6,"value":"30"},{"begin":1795,"end":1996,"name":"SWAP4","source":6},{"begin":1795,"end":1996,"name":"SWAP3","source":6},{"begin":1795,"end":1996,"name":"SWAP2","source":6},{"begin":1795,"end":1996,"name":"SWAP1","source":6},{"begin":1795,"end":1996,"name":"PUSH [tag]","source":6,"value":"31"},{"begin":1795,"end":1996,"name":"JUMP","source":6,"value":"[in]"},{"begin":1795,"end":1996,"name":"tag","source":6,"value":"30"},{"begin":1795,"end":1996,"name":"JUMPDEST","source":6},{"begin":1795,"end":1996,"name":"PUSH","source":6,"value":"40"},{"begin":1795,"end":1996,"name":"MLOAD","source":6},{"begin":1795,"end":1996,"name":"DUP1","source":6},{"begin":1795,"end":1996,"name":"SWAP2","source":6},{"begin":1795,"end":1996,"name":"SUB","source":6},{"begin":1795,"end":1996,"name":"SWAP1","source":6},{"begin":1795,"end":1996,"name":"RETURN","source":6},{"begin":5840,"end":5976,"name":"tag","source":7,"value":"4"},{"begin":5840,"end":5976,"name":"JUMPDEST","source":7},{"begin":5840,"end":5976,"name":"PUSH [tag]","source":7,"value":"32"},{"begin":5840,"end":5976,"name":"PUSH [tag]","source":7,"value":"33"},{"begin":5840,"end":5976,"name":"CALLDATASIZE","source":7},{"begin":5840,"end":5976,"name":"PUSH","source":7,"value":"4"},{"begin":5840,"end":5976,"name":"PUSH [tag]","source":7,"value":"28"},{"begin":5840,"end":5976,"name":"JUMP","source":7,"value":"[in]"},{"begin":5840,"end":5976,"name":"tag","source":7,"value":"33"},{"begin":5840,"end":5976,"name":"JUMPDEST","source":7},{"begin":5840,"end":5976,"name":"PUSH [tag]","source":7,"value":"34"},{"begin":5840,"end":5976,"name":"JUMP","source":7,"value":"[in]"},{"begin":5840,"end":5976,"name":"tag","source":7,"value":"32"},{"begin":5840,"end":5976,"name":"JUMPDEST","source":7},{"begin":5840,"end":5976,"name":"PUSH","source":7,"value":"40"},{"begin":5840,"end":5976,"name":"MLOAD","source":7},{"begin":5840,"end":5976,"name":"PUSH [tag]","source":7,"value":"30"},{"begin":5840,"end":5976,"name":"SWAP2","source":7},{"begin":5840,"end":5976,"name":"SWAP1","source":7},{"begin":5840,"end":5976,"name":"PUSH [tag]","source":7,"value":"36"},{"begin":5840,"end":5976,"name":"JUMP","source":7,"value":"[in]"},{"begin":1342,"end":1393,"name":"tag","source":7,"value":"5"},{"begin":1342,"end":1393,"name":"JUMPDEST","source":7},{"begin":1342,"end":1393,"name":"PUSH [tag]","source":7,"value":"37"},{"begin":1342,"end":1393,"name":"PUSH [tag]","source":7,"value":"38"},{"begin":1342,"end":1393,"name":"JUMP","source":7,"value":"[in]"},{"begin":1342,"end":1393,"name":"tag","source":7,"value":"37"},{"begin":1342,"end":1393,"name":"JUMPDEST","source":7},{"begin":1342,"end":1393,"name":"PUSH","source":7,"value":"40"},{"begin":1342,"end":1393,"name":"MLOAD","source":7},{"begin":1342,"end":1393,"name":"PUSH [tag]","source":7,"value":"30"},{"begin":1342,"end":1393,"name":"SWAP2","source":7},{"begin":1342,"end":1393,"name":"SWAP1","source":7},{"begin":1342,"end":1393,"name":"PUSH [tag]","source":7,"value":"68"},{"begin":1342,"end":1393,"name":"JUMP","source":7,"value":"[in]"},{"begin":4411,"end":4668,"name":"tag","source":7,"value":"6"},{"begin":4411,"end":4668,"name":"JUMPDEST","source":7},{"begin":4411,"end":4668,"name":"PUSH [tag]","source":7,"value":"32"},{"begin":4411,"end":4668,"name":"PUSH [tag]","source":7,"value":"42"},{"begin":4411,"end":4668,"name":"CALLDATASIZE","source":7},{"begin":4411,"end":4668,"name":"PUSH","source":7,"value":"4"},{"begin":4411,"end":4668,"name":"PUSH [tag]","source":7,"value":"43"},{"begin":4411,"end":4668,"name":"JUMP","source":7,"value":"[in]"},{"begin":4411,"end":4668,"name":"tag","source":7,"value":"42"},{"begin":4411,"end":4668,"name":"JUMPDEST","source":7},{"begin":4411,"end":4668,"name":"PUSH [tag]","source":7,"value":"44"},{"begin":4411,"end":4668,"name":"JUMP","source":7,"value":"[in]"},{"begin":3257,"end":3646,"name":"tag","source":7,"value":"7"},{"begin":3257,"end":3646,"name":"JUMPDEST","source":7},{"begin":3257,"end":3646,"name":"PUSH [tag]","source":7,"value":"46"},{"begin":3257,"end":3646,"name":"PUSH [tag]","source":7,"value":"47"},{"begin":3257,"end":3646,"name":"CALLDATASIZE","source":7},{"begin":3257,"end":3646,"name":"PUSH","source":7,"value":"4"},{"begin":3257,"end":3646,"name":"PUSH [tag]","source":7,"value":"48"},{"begin":3257,"end":3646,"name":"JUMP","source":7,"value":"[in]"},{"begin":3257,"end":3646,"name":"tag","source":7,"value":"47"},{"begin":3257,"end":3646,"name":"JUMPDEST","source":7},{"begin":3257,"end":3646,"name":"PUSH [tag]","source":7,"value":"49"},{"begin":3257,"end":3646,"name":"JUMP","source":7,"value":"[in]"},{"begin":3257,"end":3646,"name":"tag","source":7,"value":"46"},{"begin":3257,"end":3646,"name":"JUMPDEST","source":7},{"begin":3257,"end":3646,"name":"STOP","source":7},{"begin":1611,"end":1748,"name":"tag","source":6,"value":"8"},{"begin":1611,"end":1748,"name":"JUMPDEST","source":6},{"begin":1611,"end":1748,"name":"PUSH [tag]","source":6,"value":"32"},{"begin":1611,"end":1748,"name":"PUSH [tag]","source":6,"value":"51"},{"begin":1611,"end":1748,"name":"CALLDATASIZE","source":6},{"begin":1611,"end":1748,"name":"PUSH","source":6,"value":"4"},{"begin":1611,"end":1748,"name":"PUSH [tag]","source":6,"value":"52"},{"begin":1611,"end":1748,"name":"JUMP","source":6,"value":"[in]"},{"begin":1611,"end":1748,"name":"tag","source":6,"value":"51"},{"begin":1611,"end":1748,"name":"JUMPDEST","source":6},{"begin":1611,"end":1748,"name":"PUSH [tag]","source":6,"value":"53"},{"begin":1611,"end":1748,"name":"JUMP","source":6,"value":"[in]"},{"begin":1076,"end":1262,"name":"tag","source":6,"value":"9"},{"begin":1076,"end":1262,"name":"JUMPDEST","source":6},{"begin":1076,"end":1262,"name":"PUSH [tag]","source":6,"value":"46"},{"begin":1076,"end":1262,"name":"PUSH [tag]","source":6,"value":"56"},{"begin":1076,"end":1262,"name":"CALLDATASIZE","source":6},{"begin":1076,"end":1262,"name":"PUSH","source":6,"value":"4"},{"begin":1076,"end":1262,"name":"PUSH [tag]","source":6,"value":"57"},{"begin":1076,"end":1262,"name":"JUMP","source":6,"value":"[in]"},{"begin":1076,"end":1262,"name":"tag","source":6,"value":"56"},{"begin":1076,"end":1262,"name":"JUMPDEST","source":6},{"begin":1076,"end":1262,"name":"PUSH [tag]","source":6,"value":"58"},{"begin":1076,"end":1262,"name":"JUMP","source":6,"value":"[in]"},{"begin":4716,"end":5091,"name":"tag","source":7,"value":"10"},{"begin":4716,"end":5091,"name":"JUMPDEST","source":7},{"begin":4716,"end":5091,"name":"PUSH [tag]","source":7,"value":"32"},{"begin":4716,"end":5091,"name":"PUSH [tag]","source":7,"value":"60"},{"begin":4716,"end":5091,"name":"CALLDATASIZE","source":7},{"begin":4716,"end":5091,"name":"PUSH","source":7,"value":"4"},{"begin":4716,"end":5091,"name":"PUSH [tag]","source":7,"value":"61"},{"begin":4716,"end":5091,"name":"JUMP","source":7,"value":"[in]"},{"begin":4716,"end":5091,"name":"tag","source":7,"value":"60"},{"begin":4716,"end":5091,"name":"JUMPDEST","source":7},{"begin":4716,"end":5091,"name":"PUSH [tag]","source":7,"value":"62"},{"begin":4716,"end":5091,"name":"JUMP","source":7,"value":"[in]"},{"begin":5674,"end":5792,"name":"tag","source":7,"value":"11"},{"begin":5674,"end":5792,"name":"JUMPDEST","source":7},{"begin":5674,"end":5792,"name":"PUSH [tag]","source":7,"value":"37"},{"begin":5674,"end":5792,"name":"PUSH [tag]","source":7,"value":"65"},{"begin":5674,"end":5792,"name":"CALLDATASIZE","source":7},{"begin":5674,"end":5792,"name":"PUSH","source":7,"value":"4"},{"begin":5674,"end":5792,"name":"PUSH [tag]","source":7,"value":"28"},{"begin":5674,"end":5792,"name":"JUMP","source":7,"value":"[in]"},{"begin":5674,"end":5792,"name":"tag","source":7,"value":"65"},{"begin":5674,"end":5792,"name":"JUMPDEST","source":7},{"begin":5674,"end":5792,"name":"PUSH [tag]","source":7,"value":"66"},{"begin":5674,"end":5792,"name":"JUMP","source":7,"value":"[in]"},{"begin":2444,"end":3209,"name":"tag","source":7,"value":"12"},{"begin":2444,"end":3209,"name":"JUMPDEST","source":7},{"begin":2444,"end":3209,"name":"PUSH [tag]","source":7,"value":"46"},{"begin":2444,"end":3209,"name":"PUSH [tag]","source":7,"value":"70"},{"begin":2444,"end":3209,"name":"CALLDATASIZE","source":7},{"begin":2444,"end":3209,"name":"PUSH","source":7,"value":"4"},{"begin":2444,"end":3209,"name":"PUSH [tag]","source":7,"value":"71"},{"begin":2444,"end":3209,"name":"JUMP","source":7,"value":"[in]"},{"begin":2444,"end":3209,"name":"tag","source":7,"value":"70"},{"begin":2444,"end":3209,"name":"JUMPDEST","source":7},{"begin":2444,"end":3209,"name":"PUSH [tag]","source":7,"value":"72"},{"begin":2444,"end":3209,"name":"JUMP","source":7,"value":"[in]"},{"begin":3694,"end":4363,"name":"tag","source":7,"value":"13"},{"begin":3694,"end":4363,"name":"JUMPDEST","source":7},{"begin":3694,"end":4363,"name":"PUSH [tag]","source":7,"value":"32"},{"begin":3694,"end":4363,"name":"PUSH [tag]","source":7,"value":"74"},{"begin":3694,"end":4363,"name":"CALLDATASIZE","source":7},{"begin":3694,"end":4363,"name":"PUSH","source":7,"value":"4"},{"begin":3694,"end":4363,"name":"PUSH [tag]","source":7,"value":"75"},{"begin":3694,"end":4363,"name":"JUMP","source":7,"value":"[in]"},{"begin":3694,"end":4363,"name":"tag","source":7,"value":"74"},{"begin":3694,"end":4363,"name":"JUMPDEST","source":7},{"begin":3694,"end":4363,"name":"PUSH [tag]","source":7,"value":"76"},{"begin":3694,"end":4363,"name":"JUMP","source":7,"value":"[in]"},{"begin":1461,"end":1564,"name":"tag","source":6,"value":"14"},{"begin":1461,"end":1564,"name":"JUMPDEST","source":6},{"begin":1461,"end":1564,"name":"PUSH [tag]","source":6,"value":"32"},{"begin":1461,"end":1564,"name":"PUSH [tag]","source":6,"value":"79"},{"begin":1461,"end":1564,"name":"JUMP","source":6,"value":"[in]"},{"begin":6024,"end":6127,"name":"tag","source":7,"value":"15"},{"begin":6024,"end":6127,"name":"JUMPDEST","source":7},{"begin":6024,"end":6127,"name":"PUSH [tag]","source":7,"value":"37"},{"begin":6024,"end":6127,"name":"PUSH [tag]","source":7,"value":"82"},{"begin":6024,"end":6127,"name":"JUMP","source":7,"value":"[in]"},{"begin":703,"end":739,"name":"tag","source":6,"value":"16"},{"begin":703,"end":739,"name":"JUMPDEST","source":6},{"begin":703,"end":739,"name":"PUSH [tag]","source":6,"value":"84"},{"begin":703,"end":739,"name":"PUSH [tag]","source":6,"value":"85"},{"begin":703,"end":739,"name":"JUMP","source":6,"value":"[in]"},{"begin":703,"end":739,"name":"tag","source":6,"value":"84"},{"begin":703,"end":739,"name":"JUMPDEST","source":6},{"begin":703,"end":739,"name":"PUSH","source":6,"value":"40"},{"begin":703,"end":739,"name":"MLOAD","source":6},{"begin":703,"end":739,"name":"PUSH [tag]","source":6,"value":"30"},{"begin":703,"end":739,"name":"SWAP2","source":6},{"begin":703,"end":739,"name":"SWAP1","source":6},{"begin":703,"end":739,"name":"PUSH [tag]","source":6,"value":"87"},{"begin":703,"end":739,"name":"JUMP","source":6,"value":"[in]"},{"begin":2180,"end":2396,"name":"tag","source":7,"value":"17"},{"begin":2180,"end":2396,"name":"JUMPDEST","source":7},{"begin":2180,"end":2396,"name":"PUSH [tag]","source":7,"value":"46"},{"begin":2180,"end":2396,"name":"PUSH [tag]","source":7,"value":"89"},{"begin":2180,"end":2396,"name":"CALLDATASIZE","source":7},{"begin":2180,"end":2396,"name":"PUSH","source":7,"value":"4"},{"begin":2180,"end":2396,"name":"PUSH [tag]","source":7,"value":"28"},{"begin":2180,"end":2396,"name":"JUMP","source":7,"value":"[in]"},{"begin":2180,"end":2396,"name":"tag","source":7,"value":"89"},{"begin":2180,"end":2396,"name":"JUMPDEST","source":7},{"begin":2180,"end":2396,"name":"PUSH [tag]","source":7,"value":"90"},{"begin":2180,"end":2396,"name":"JUMP","source":7,"value":"[in]"},{"begin":657,"end":698,"name":"tag","source":6,"value":"18"},{"begin":657,"end":698,"name":"JUMPDEST","source":6},{"begin":657,"end":698,"name":"PUSH [tag]","source":6,"value":"37"},{"begin":657,"end":698,"name":"PUSH [tag]","source":6,"value":"92"},{"begin":657,"end":698,"name":"JUMP","source":6,"value":"[in]"},{"begin":1301,"end":1337,"name":"tag","source":7,"value":"20"},{"begin":1301,"end":1337,"name":"JUMPDEST","source":7},{"begin":1301,"end":1337,"name":"PUSH [tag]","source":7,"value":"32"},{"begin":1301,"end":1337,"name":"PUSH [tag]","source":7,"value":"98"},{"begin":1301,"end":1337,"name":"JUMP","source":7,"value":"[in]"},{"begin":744,"end":787,"name":"tag","source":6,"value":"21"},{"begin":744,"end":787,"name":"JUMPDEST","source":6},{"begin":744,"end":787,"name":"PUSH [tag]","source":6,"value":"100"},{"begin":744,"end":787,"name":"PUSH [tag]","source":6,"value":"101"},{"begin":744,"end":787,"name":"CALLDATASIZE","source":6},{"begin":744,"end":787,"name":"PUSH","source":6,"value":"4"},{"begin":744,"end":787,"name":"PUSH [tag]","source":6,"value":"28"},{"begin":744,"end":787,"name":"JUMP","source":6,"value":"[in]"},{"begin":744,"end":787,"name":"tag","source":6,"value":"101"},{"begin":744,"end":787,"name":"JUMPDEST","source":6},{"begin":744,"end":787,"name":"PUSH [tag]","source":6,"value":"102"},{"begin":744,"end":787,"name":"JUMP","source":6,"value":"[in]"},{"begin":744,"end":787,"name":"tag","source":6,"value":"100"},{"begin":744,"end":787,"name":"JUMPDEST","source":6},{"begin":744,"end":787,"name":"PUSH","source":6,"value":"40"},{"begin":744,"end":787,"name":"MLOAD","source":6},{"begin":744,"end":787,"name":"PUSH [tag]","source":6,"value":"30"},{"begin":744,"end":787,"name":"SWAP4","source":6},{"begin":744,"end":787,"name":"SWAP3","source":6},{"begin":744,"end":787,"name":"SWAP2","source":6},{"begin":744,"end":787,"name":"SWAP1","source":6},{"begin":744,"end":787,"name":"PUSH [tag]","source":6,"value":"104"},{"begin":744,"end":787,"name":"JUMP","source":6,"value":"[in]"},{"begin":5458,"end":5626,"name":"tag","source":7,"value":"22"},{"begin":5458,"end":5626,"name":"JUMPDEST","source":7},{"begin":5458,"end":5626,"name":"PUSH [tag]","source":7,"value":"46"},{"begin":5458,"end":5626,"name":"PUSH [tag]","source":7,"value":"106"},{"begin":5458,"end":5626,"name":"CALLDATASIZE","source":7},{"begin":5458,"end":5626,"name":"PUSH","source":7,"value":"4"},{"begin":5458,"end":5626,"name":"PUSH [tag]","source":7,"value":"52"},{"begin":5458,"end":5626,"name":"JUMP","source":7,"value":"[in]"},{"begin":5458,"end":5626,"name":"tag","source":7,"value":"106"},{"begin":5458,"end":5626,"name":"JUMPDEST","source":7},{"begin":5458,"end":5626,"name":"PUSH [tag]","source":7,"value":"107"},{"begin":5458,"end":5626,"name":"JUMP","source":7,"value":"[in]"},{"begin":1795,"end":1996,"name":"tag","source":6,"value":"29"},{"begin":1795,"end":1996,"name":"JUMPDEST","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":1903,"end":1916,"name":"AND","source":6},{"begin":1862,"end":1869,"name":"PUSH","source":6,"value":"0"},{"begin":1903,"end":1916,"name":"SWAP1","source":6},{"begin":1903,"end":1916,"name":"DUP2","source":6},{"begin":1903,"end":1916,"name":"MSTORE","source":6},{"begin":1903,"end":1909,"name":"PUSH","source":6,"value":"33"},{"begin":1903,"end":1916,"name":"PUSH","source":6,"value":"20"},{"begin":1903,"end":1916,"name":"MSTORE","source":6},{"begin":1903,"end":1916,"name":"PUSH","source":6,"value":"40"},{"begin":1903,"end":1916,"name":"SWAP1","source":6},{"begin":1903,"end":1916,"name":"KECCAK256","source":6},{"begin":1903,"end":1922,"name":"SLOAD","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"68"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":1903,"end":1922,"name":"DUP2","source":6},{"begin":1903,"end":1922,"name":"DIV","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"68"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":1903,"end":1922,"name":"SWAP1","source":6},{"begin":1903,"end":1922,"name":"DUP2","source":6},{"begin":1903,"end":1922,"name":"AND","source":6},{"begin":1903,"end":1922,"name":"SWAP3","source":6},{"begin":1924,"end":1955,"name":"SWAP1","source":6},{"begin":1924,"end":1955,"name":"DUP3","source":6},{"begin":1924,"end":1955,"name":"AND","source":6},{"begin":1924,"end":1955,"name":"SWAP2","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"D0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":1957,"end":1990,"name":"SWAP1","source":6},{"begin":1957,"end":1990,"name":"DIV","source":6},{"begin":1957,"end":1990,"name":"PUSH","source":6,"value":"FFFFFFFFFF"},{"begin":1957,"end":1990,"name":"AND","source":6},{"begin":1957,"end":1990,"name":"SWAP1","source":6},{"begin":1795,"end":1996,"name":"JUMP","source":6,"value":"[out]"},{"begin":5840,"end":5976,"name":"tag","source":7,"value":"34"},{"begin":5840,"end":5976,"name":"JUMPDEST","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":5942,"end":5971,"name":"AND","source":7},{"begin":5920,"end":5927,"name":"PUSH","source":7,"value":"0"},{"begin":5942,"end":5971,"name":"SWAP1","source":7},{"begin":5942,"end":5971,"name":"DUP2","source":7},{"begin":5942,"end":5971,"name":"MSTORE","source":7},{"begin":5942,"end":5964,"name":"PUSH","source":7,"value":"35"},{"begin":5942,"end":5971,"name":"PUSH","source":7,"value":"20"},{"begin":5942,"end":5971,"name":"MSTORE","source":7},{"begin":5942,"end":5971,"name":"PUSH","source":7,"value":"40"},{"begin":5942,"end":5971,"name":"SWAP1","source":7},{"begin":5942,"end":5971,"name":"KECCAK256","source":7},{"begin":5942,"end":5971,"name":"SLOAD","source":7},{"begin":5942,"end":5971,"name":"SWAP1","source":7},{"begin":5840,"end":5976,"name":"JUMP","source":7,"value":"[out]"},{"begin":1342,"end":1393,"name":"tag","source":7,"value":"38"},{"begin":1342,"end":1393,"name":"JUMPDEST","source":7},{"begin":1342,"end":1393,"name":"PUSHIMMUTABLE","source":7,"value":"1205"},{"begin":1342,"end":1393,"name":"DUP2","source":7},{"begin":1342,"end":1393,"name":"JUMP","source":7,"value":"[out]"},{"begin":4411,"end":4668,"name":"tag","source":7,"value":"44"},{"begin":4411,"end":4668,"name":"JUMPDEST","source":7},{"begin":4531,"end":4538,"name":"PUSH","source":7,"value":"0"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":4554,"end":4570,"name":"DUP3","source":7},{"begin":4554,"end":4570,"name":"AND","source":7},{"begin":4546,"end":4593,"name":"PUSH [tag]","source":7,"value":"111"},{"begin":4546,"end":4593,"name":"JUMPI","source":7},{"begin":4546,"end":4593,"name":"PUSH","source":7,"value":"40"},{"begin":4546,"end":4593,"name":"MLOAD","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"461BCD"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E5"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":4546,"end":4593,"name":"DUP2","source":7},{"begin":4546,"end":4593,"name":"MSTORE","source":7},{"begin":4546,"end":4593,"name":"PUSH","source":7,"value":"4"},{"begin":4546,"end":4593,"name":"ADD","source":7},{"begin":4546,"end":4593,"name":"PUSH [tag]","source":7,"value":"112"},{"begin":4546,"end":4593,"name":"SWAP1","source":7},{"begin":4546,"end":4593,"name":"PUSH [tag]","source":7,"value":"113"},{"begin":4546,"end":4593,"name":"JUMP","source":7,"value":"[in]"},{"begin":4546,"end":4593,"name":"tag","source":7,"value":"112"},{"begin":4546,"end":4593,"name":"JUMPDEST","source":7},{"begin":4546,"end":4593,"name":"PUSH","source":7,"value":"40"},{"begin":4546,"end":4593,"name":"MLOAD","source":7},{"begin":4546,"end":4593,"name":"DUP1","source":7},{"begin":4546,"end":4593,"name":"SWAP2","source":7},{"begin":4546,"end":4593,"name":"SUB","source":7},{"begin":4546,"end":4593,"name":"SWAP1","source":7},{"begin":4546,"end":4593,"name":"REVERT","source":7},{"begin":4546,"end":4593,"name":"tag","source":7,"value":"111"},{"begin":4546,"end":4593,"name":"JUMPDEST","source":7},{"begin":4606,"end":4663,"name":"PUSH [tag]","source":7,"value":"114"},{"begin":4620,"end":4626,"name":"DUP6","source":7},{"begin":4620,"end":4626,"name":"DUP6","source":7},{"begin":4628,"end":4634,"name":"DUP6","source":7},{"begin":4636,"end":4646,"name":"CALLER","source":7},{"begin":4648,"end":4658,"name":"CALLER","source":7},{"begin":4660,"end":4662,"name":"DUP8","source":7},{"begin":4606,"end":4619,"name":"PUSH [tag]","source":7,"value":"115"},{"begin":4606,"end":4663,"name":"JUMP","source":7,"value":"[in]"},{"begin":4606,"end":4663,"name":"tag","source":7,"value":"114"},{"begin":4606,"end":4663,"name":"JUMPDEST","source":7},{"begin":4599,"end":4663,"name":"SWAP1","source":7},{"begin":4599,"end":4663,"name":"POP","source":7},{"begin":4411,"end":4668,"name":"tag","source":7,"value":"110"},{"begin":4411,"end":4668,"name":"JUMPDEST","source":7},{"begin":4411,"end":4668,"name":"SWAP5","source":7},{"begin":4411,"end":4668,"name":"SWAP4","source":7},{"begin":4411,"end":4668,"name":"POP","source":7},{"begin":4411,"end":4668,"name":"POP","source":7},{"begin":4411,"end":4668,"name":"POP","source":7},{"begin":4411,"end":4668,"name":"POP","source":7},{"begin":4411,"end":4668,"name":"JUMP","source":7,"value":"[out]"},{"begin":3257,"end":3646,"name":"tag","source":7,"value":"49"},{"begin":3257,"end":3646,"name":"JUMPDEST","source":7},{"begin":3375,"end":3397,"name":"PUSH","source":7,"value":"0"},{"begin":3400,"end":3468,"name":"PUSH [tag]","source":7,"value":"117"},{"begin":3425,"end":3429,"name":"DUP5","source":7},{"begin":3431,"end":3441,"name":"CALLER","source":7},{"begin":3443,"end":3454,"name":"DUP5","source":7},{"begin":3456,"end":3467,"name":"DUP7","source":7},{"begin":3400,"end":3424,"name":"PUSH [tag]","source":7,"value":"118"},{"begin":3400,"end":3468,"name":"JUMP","source":7,"value":"[in]"},{"begin":3400,"end":3468,"name":"tag","source":7,"value":"117"},{"begin":3400,"end":3468,"name":"JUMPDEST","source":7},{"begin":3375,"end":3468,"name":"SWAP1","source":7},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":3478,"end":3497,"name":"DUP1","source":7},{"begin":3478,"end":3497,"name":"ISZERO","source":7},{"begin":3474,"end":3642,"name":"PUSH [tag]","source":7,"value":"119"},{"begin":3474,"end":3642,"name":"JUMPI","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":3538,"end":3566,"name":"DUP5","source":7},{"begin":3538,"end":3566,"name":"AND","source":7},{"begin":3538,"end":3566,"name":"PUSH","source":7,"value":"0"},{"begin":3538,"end":3566,"name":"SWAP1","source":7},{"begin":3538,"end":3566,"name":"DUP2","source":7},{"begin":3538,"end":3566,"name":"MSTORE","source":7},{"begin":3538,"end":3560,"name":"PUSH","source":7,"value":"35"},{"begin":3538,"end":3566,"name":"PUSH","source":7,"value":"20"},{"begin":3538,"end":3566,"name":"MSTORE","source":7},{"begin":3538,"end":3566,"name":"PUSH","source":7,"value":"40"},{"begin":3538,"end":3566,"name":"SWAP1","source":7},{"begin":3538,"end":3566,"name":"KECCAK256","source":7},{"begin":3538,"end":3566,"name":"SLOAD","source":7},{"begin":3538,"end":3586,"name":"PUSH [tag]","source":7,"value":"120"},{"begin":3538,"end":3586,"name":"SWAP1","source":7},{"begin":3571,"end":3585,"name":"DUP3","source":7},{"begin":3538,"end":3570,"name":"PUSH [tag]","source":7,"value":"121"},{"begin":3538,"end":3586,"name":"JUMP","source":7,"value":"[in]"},{"begin":3538,"end":3586,"name":"tag","source":7,"value":"120"},{"begin":3538,"end":3586,"name":"JUMPDEST","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":3507,"end":3535,"name":"DUP6","source":7},{"begin":3507,"end":3535,"name":"AND","source":7},{"begin":3507,"end":3535,"name":"PUSH","source":7,"value":"0"},{"begin":3507,"end":3535,"name":"DUP2","source":7},{"begin":3507,"end":3535,"name":"DUP2","source":7},{"begin":3507,"end":3535,"name":"MSTORE","source":7},{"begin":3507,"end":3529,"name":"PUSH","source":7,"value":"35"},{"begin":3507,"end":3535,"name":"PUSH","source":7,"value":"20"},{"begin":3507,"end":3535,"name":"MSTORE","source":7},{"begin":3507,"end":3535,"name":"PUSH","source":7,"value":"40"},{"begin":3507,"end":3535,"name":"SWAP1","source":7},{"begin":3507,"end":3535,"name":"DUP2","source":7},{"begin":3507,"end":3535,"name":"SWAP1","source":7},{"begin":3507,"end":3535,"name":"KECCAK256","source":7},{"begin":3507,"end":3586,"name":"SWAP3","source":7},{"begin":3507,"end":3586,"name":"SWAP1","source":7},{"begin":3507,"end":3586,"name":"SWAP3","source":7},{"begin":3507,"end":3586,"name":"SSTORE","source":7},{"begin":3599,"end":3635,"name":"SWAP1","source":7},{"begin":3599,"end":3635,"name":"MLOAD","source":7},{"begin":3599,"end":3635,"name":"PUSH","source":7,"value":"2468F9268C60AD90E2D49EDB0032C8A001E733AE888B3AB8E982EDF535BE1A76"},{"begin":3599,"end":3635,"name":"SWAP1","source":7},{"begin":3599,"end":3635,"name":"PUSH [tag]","source":7,"value":"122"},{"begin":3599,"end":3635,"name":"SWAP1","source":7},{"begin":3620,"end":3634,"name":"DUP5","source":7},{"begin":3620,"end":3634,"name":"SWAP1","source":7},{"begin":3599,"end":3635,"name":"PUSH [tag]","source":7,"value":"36"},{"begin":3599,"end":3635,"name":"JUMP","source":7,"value":"[in]"},{"begin":3599,"end":3635,"name":"tag","source":7,"value":"122"},{"begin":3599,"end":3635,"name":"JUMPDEST","source":7},{"begin":3599,"end":3635,"name":"PUSH","source":7,"value":"40"},{"begin":3599,"end":3635,"name":"MLOAD","source":7},{"begin":3599,"end":3635,"name":"DUP1","source":7},{"begin":3599,"end":3635,"name":"SWAP2","source":7},{"begin":3599,"end":3635,"name":"SUB","source":7},{"begin":3599,"end":3635,"name":"SWAP1","source":7},{"begin":3599,"end":3635,"name":"LOG2","source":7},{"begin":3474,"end":3642,"name":"tag","source":7,"value":"119"},{"begin":3474,"end":3642,"name":"JUMPDEST","source":7},{"begin":3257,"end":3646,"name":"POP","source":7},{"begin":3257,"end":3646,"name":"POP","source":7},{"begin":3257,"end":3646,"name":"POP","source":7},{"begin":3257,"end":3646,"name":"POP","source":7},{"begin":3257,"end":3646,"name":"JUMP","source":7,"value":"[out]"},{"begin":1611,"end":1748,"name":"tag","source":6,"value":"53"},{"begin":1611,"end":1748,"name":"JUMPDEST","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":1718,"end":1731,"name":"DUP1","source":6},{"begin":1718,"end":1731,"name":"DUP3","source":6},{"begin":1718,"end":1731,"name":"AND","source":6},{"begin":1696,"end":1703,"name":"PUSH","source":6,"value":"0"},{"begin":1718,"end":1731,"name":"SWAP1","source":6},{"begin":1718,"end":1731,"name":"DUP2","source":6},{"begin":1718,"end":1731,"name":"MSTORE","source":6},{"begin":1718,"end":1724,"name":"PUSH","source":6,"value":"33"},{"begin":1718,"end":1731,"name":"PUSH","source":6,"value":"20"},{"begin":1718,"end":1731,"name":"SWAP1","source":6},{"begin":1718,"end":1731,"name":"DUP2","source":6},{"begin":1718,"end":1731,"name":"MSTORE","source":6},{"begin":1718,"end":1731,"name":"PUSH","source":6,"value":"40"},{"begin":1718,"end":1731,"name":"DUP1","source":6},{"begin":1718,"end":1731,"name":"DUP4","source":6},{"begin":1718,"end":1731,"name":"KECCAK256","source":6},{"begin":1718,"end":1743,"name":"SWAP4","source":6},{"begin":1718,"end":1743,"name":"DUP7","source":6},{"begin":1718,"end":1743,"name":"AND","source":6},{"begin":1718,"end":1743,"name":"DUP4","source":6},{"begin":1718,"end":1743,"name":"MSTORE","source":6},{"begin":1718,"end":1737,"name":"PUSH","source":6,"value":"1"},{"begin":1718,"end":1737,"name":"SWAP1","source":6},{"begin":1718,"end":1737,"name":"SWAP4","source":6},{"begin":1718,"end":1737,"name":"ADD","source":6},{"begin":1718,"end":1743,"name":"SWAP1","source":6},{"begin":1718,"end":1743,"name":"MSTORE","source":6},{"begin":1718,"end":1743,"name":"KECCAK256","source":6},{"begin":1718,"end":1743,"name":"SLOAD","source":6},{"begin":1611,"end":1748,"name":"tag","source":6,"value":"123"},{"begin":1611,"end":1748,"name":"JUMPDEST","source":6},{"begin":1611,"end":1748,"name":"SWAP3","source":6},{"begin":1611,"end":1748,"name":"SWAP2","source":6},{"begin":1611,"end":1748,"name":"POP","source":6},{"begin":1611,"end":1748,"name":"POP","source":6},{"begin":1611,"end":1748,"name":"JUMP","source":6,"value":"[out]"},{"begin":1076,"end":1262,"name":"tag","source":6,"value":"58"},{"begin":1076,"end":1262,"name":"JUMPDEST","source":6},{"begin":875,"end":885,"name":"CALLER","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":889,"end":905,"name":"PUSHIMMUTABLE","source":6,"value":"588"},{"begin":875,"end":905,"name":"AND","source":6},{"begin":875,"end":905,"name":"EQ","source":6},{"begin":867,"end":931,"name":"PUSH [tag]","source":6,"value":"125"},{"begin":867,"end":931,"name":"JUMPI","source":6},{"begin":867,"end":931,"name":"PUSH","source":6,"value":"40"},{"begin":867,"end":931,"name":"MLOAD","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"461BCD"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E5"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":867,"end":931,"name":"DUP2","source":6},{"begin":867,"end":931,"name":"MSTORE","source":6},{"begin":867,"end":931,"name":"PUSH","source":6,"value":"4"},{"begin":867,"end":931,"name":"ADD","source":6},{"begin":867,"end":931,"name":"PUSH [tag]","source":6,"value":"112"},{"begin":867,"end":931,"name":"SWAP1","source":6},{"begin":867,"end":931,"name":"PUSH [tag]","source":6,"value":"127"},{"begin":867,"end":931,"name":"JUMP","source":6,"value":"[in]"},{"begin":867,"end":931,"name":"tag","source":6,"value":"125"},{"begin":867,"end":931,"name":"JUMPDEST","source":6},{"begin":1173,"end":1189,"name":"PUSH","source":6,"value":"34"},{"begin":1173,"end":1207,"name":"DUP2","source":6},{"begin":1173,"end":1207,"name":"SWAP1","source":6},{"begin":1173,"end":1207,"name":"SSTORE","source":6},{"begin":1218,"end":1257,"name":"PUSH","source":6,"value":"40"},{"begin":1218,"end":1257,"name":"MLOAD","source":6},{"begin":1218,"end":1257,"name":"PUSH","source":6,"value":"1CC1849A6602C3E91F2088CADEA4381CC5717F2F28584197060ED2EBB434C16F"},{"begin":1218,"end":1257,"name":"SWAP1","source":6},{"begin":1218,"end":1257,"name":"PUSH [tag]","source":6,"value":"129"},{"begin":1218,"end":1257,"name":"SWAP1","source":6},{"begin":1192,"end":1207,"name":"DUP4","source":6},{"begin":1192,"end":1207,"name":"SWAP1","source":6},{"begin":1218,"end":1257,"name":"PUSH [tag]","source":6,"value":"36"},{"begin":1218,"end":1257,"name":"JUMP","source":6,"value":"[in]"},{"begin":1218,"end":1257,"name":"tag","source":6,"value":"129"},{"begin":1218,"end":1257,"name":"JUMPDEST","source":6},{"begin":1218,"end":1257,"name":"PUSH","source":6,"value":"40"},{"begin":1218,"end":1257,"name":"MLOAD","source":6},{"begin":1218,"end":1257,"name":"DUP1","source":6},{"begin":1218,"end":1257,"name":"SWAP2","source":6},{"begin":1218,"end":1257,"name":"SUB","source":6},{"begin":1218,"end":1257,"name":"SWAP1","source":6},{"begin":1218,"end":1257,"name":"LOG1","source":6},{"begin":1076,"end":1262,"name":"POP","source":6},{"begin":1076,"end":1262,"name":"JUMP","source":6,"value":"[out]"},{"begin":4716,"end":5091,"name":"tag","source":7,"value":"62"},{"begin":4716,"end":5091,"name":"JUMPDEST","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":1800,"end":1825,"name":"DUP1","source":7},{"begin":1800,"end":1825,"name":"DUP4","source":7},{"begin":1800,"end":1825,"name":"AND","source":7},{"begin":4903,"end":4910,"name":"PUSH","source":7,"value":"0"},{"begin":1800,"end":1825,"name":"SWAP1","source":7},{"begin":1800,"end":1825,"name":"DUP2","source":7},{"begin":1800,"end":1825,"name":"MSTORE","source":7},{"begin":1800,"end":1819,"name":"PUSH","source":7,"value":"36"},{"begin":1800,"end":1825,"name":"PUSH","source":7,"value":"20"},{"begin":1800,"end":1825,"name":"MSTORE","source":7},{"begin":1800,"end":1825,"name":"PUSH","source":7,"value":"40"},{"begin":1800,"end":1825,"name":"DUP2","source":7},{"begin":1800,"end":1825,"name":"KECCAK256","source":7},{"begin":1800,"end":1825,"name":"SLOAD","source":7},{"begin":4903,"end":4910,"name":"SWAP1","source":7},{"begin":4903,"end":4910,"name":"SWAP2","source":7},{"begin":4876,"end":4886,"name":"CALLER","source":7},{"begin":4876,"end":4886,"name":"SWAP2","source":7},{"begin":4888,"end":4892,"name":"DUP6","source":7},{"begin":4888,"end":4892,"name":"SWAP2","source":7},{"begin":1800,"end":1825,"name":"AND","source":7},{"begin":1800,"end":1836,"name":"DUP3","source":7},{"begin":1800,"end":1836,"name":"EQ","source":7},{"begin":1792,"end":1861,"name":"PUSH [tag]","source":7,"value":"131"},{"begin":1792,"end":1861,"name":"JUMPI","source":7},{"begin":1792,"end":1861,"name":"PUSH","source":7,"value":"40"},{"begin":1792,"end":1861,"name":"MLOAD","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"461BCD"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E5"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":1792,"end":1861,"name":"DUP2","source":7},{"begin":1792,"end":1861,"name":"MSTORE","source":7},{"begin":1792,"end":1861,"name":"PUSH","source":7,"value":"4"},{"begin":1792,"end":1861,"name":"ADD","source":7},{"begin":1792,"end":1861,"name":"PUSH [tag]","source":7,"value":"112"},{"begin":1792,"end":1861,"name":"SWAP1","source":7},{"begin":1792,"end":1861,"name":"PUSH [tag]","source":7,"value":"133"},{"begin":1792,"end":1861,"name":"JUMP","source":7,"value":"[in]"},{"begin":1792,"end":1861,"name":"tag","source":7,"value":"131"},{"begin":1792,"end":1861,"name":"JUMPDEST","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":4926,"end":4944,"name":"DUP6","source":7},{"begin":4926,"end":4944,"name":"AND","source":7},{"begin":4918,"end":4969,"name":"PUSH [tag]","source":7,"value":"135"},{"begin":4918,"end":4969,"name":"JUMPI","source":7},{"begin":4918,"end":4969,"name":"PUSH","source":7,"value":"40"},{"begin":4918,"end":4969,"name":"MLOAD","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"461BCD"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E5"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":4918,"end":4969,"name":"DUP2","source":7},{"begin":4918,"end":4969,"name":"MSTORE","source":7},{"begin":4918,"end":4969,"name":"PUSH","source":7,"value":"4"},{"begin":4918,"end":4969,"name":"ADD","source":7},{"begin":4918,"end":4969,"name":"PUSH [tag]","source":7,"value":"112"},{"begin":4918,"end":4969,"name":"SWAP1","source":7},{"begin":4918,"end":4969,"name":"PUSH [tag]","source":7,"value":"137"},{"begin":4918,"end":4969,"name":"JUMP","source":7,"value":"[in]"},{"begin":4918,"end":4969,"name":"tag","source":7,"value":"135"},{"begin":4918,"end":4969,"name":"JUMPDEST","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":4983,"end":4999,"name":"DUP5","source":7},{"begin":4983,"end":4999,"name":"AND","source":7},{"begin":4975,"end":5022,"name":"PUSH [tag]","source":7,"value":"138"},{"begin":4975,"end":5022,"name":"JUMPI","source":7},{"begin":4975,"end":5022,"name":"PUSH","source":7,"value":"40"},{"begin":4975,"end":5022,"name":"MLOAD","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"461BCD"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E5"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":4975,"end":5022,"name":"DUP2","source":7},{"begin":4975,"end":5022,"name":"MSTORE","source":7},{"begin":4975,"end":5022,"name":"PUSH","source":7,"value":"4"},{"begin":4975,"end":5022,"name":"ADD","source":7},{"begin":4975,"end":5022,"name":"PUSH [tag]","source":7,"value":"112"},{"begin":4975,"end":5022,"name":"SWAP1","source":7},{"begin":4975,"end":5022,"name":"PUSH [tag]","source":7,"value":"113"},{"begin":4975,"end":5022,"name":"JUMP","source":7,"value":"[in]"},{"begin":4975,"end":5022,"name":"tag","source":7,"value":"138"},{"begin":4975,"end":5022,"name":"JUMPDEST","source":7},{"begin":5035,"end":5086,"name":"PUSH [tag]","source":7,"value":"140"},{"begin":5049,"end":5055,"name":"DUP9","source":7},{"begin":5049,"end":5055,"name":"DUP9","source":7},{"begin":5057,"end":5063,"name":"DUP9","source":7},{"begin":5065,"end":5075,"name":"CALLER","source":7},{"begin":5077,"end":5081,"name":"DUP10","source":7},{"begin":5083,"end":5085,"name":"DUP10","source":7},{"begin":5035,"end":5048,"name":"PUSH [tag]","source":7,"value":"115"},{"begin":5035,"end":5086,"name":"JUMP","source":7,"value":"[in]"},{"begin":5035,"end":5086,"name":"tag","source":7,"value":"140"},{"begin":5035,"end":5086,"name":"JUMPDEST","source":7},{"begin":5028,"end":5086,"name":"SWAP9","source":7},{"begin":4716,"end":5091,"name":"SWAP8","source":7},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":4716,"end":5091,"name":"JUMP","source":7,"value":"[out]"},{"begin":5674,"end":5792,"name":"tag","source":7,"value":"66"},{"begin":5674,"end":5792,"name":"JUMPDEST","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":5762,"end":5787,"name":"SWAP1","source":7},{"begin":5762,"end":5787,"name":"DUP2","source":7},{"begin":5762,"end":5787,"name":"AND","source":7},{"begin":5740,"end":5747,"name":"PUSH","source":7,"value":"0"},{"begin":5762,"end":5787,"name":"SWAP1","source":7},{"begin":5762,"end":5787,"name":"DUP2","source":7},{"begin":5762,"end":5787,"name":"MSTORE","source":7},{"begin":5762,"end":5781,"name":"PUSH","source":7,"value":"36"},{"begin":5762,"end":5787,"name":"PUSH","source":7,"value":"20"},{"begin":5762,"end":5787,"name":"MSTORE","source":7},{"begin":5762,"end":5787,"name":"PUSH","source":7,"value":"40"},{"begin":5762,"end":5787,"name":"SWAP1","source":7},{"begin":5762,"end":5787,"name":"KECCAK256","source":7},{"begin":5762,"end":5787,"name":"SLOAD","source":7},{"begin":5762,"end":5787,"name":"AND","source":7},{"begin":5762,"end":5787,"name":"SWAP1","source":7},{"begin":5674,"end":5792,"name":"JUMP","source":7,"value":"[out]"},{"begin":2444,"end":3209,"name":"tag","source":7,"value":"72"},{"begin":2444,"end":3209,"name":"JUMPDEST","source":7},{"begin":875,"end":885,"name":"CALLER","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":889,"end":905,"name":"PUSHIMMUTABLE","source":6,"value":"588"},{"begin":875,"end":905,"name":"AND","source":6},{"begin":875,"end":905,"name":"EQ","source":6},{"begin":867,"end":931,"name":"PUSH [tag]","source":6,"value":"143"},{"begin":867,"end":931,"name":"JUMPI","source":6},{"begin":867,"end":931,"name":"PUSH","source":6,"value":"40"},{"begin":867,"end":931,"name":"MLOAD","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"461BCD"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E5"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":867,"end":931,"name":"DUP2","source":6},{"begin":867,"end":931,"name":"MSTORE","source":6},{"begin":867,"end":931,"name":"PUSH","source":6,"value":"4"},{"begin":867,"end":931,"name":"ADD","source":6},{"begin":867,"end":931,"name":"PUSH [tag]","source":6,"value":"112"},{"begin":867,"end":931,"name":"SWAP1","source":6},{"begin":867,"end":931,"name":"PUSH [tag]","source":6,"value":"127"},{"begin":867,"end":931,"name":"JUMP","source":6,"value":"[in]"},{"begin":867,"end":931,"name":"tag","source":6,"value":"143"},{"begin":867,"end":931,"name":"JUMPDEST","source":6},{"begin":2601,"end":2643,"name":"DUP3","source":7},{"begin":2601,"end":2643,"name":"DUP2","source":7},{"begin":2601,"end":2643,"name":"EQ","source":7},{"begin":2593,"end":2669,"name":"PUSH [tag]","source":7,"value":"146"},{"begin":2593,"end":2669,"name":"JUMPI","source":7},{"begin":2593,"end":2669,"name":"PUSH","source":7,"value":"40"},{"begin":2593,"end":2669,"name":"MLOAD","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"461BCD"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E5"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":2593,"end":2669,"name":"DUP2","source":7},{"begin":2593,"end":2669,"name":"MSTORE","source":7},{"begin":2593,"end":2669,"name":"PUSH","source":7,"value":"4"},{"begin":2593,"end":2669,"name":"ADD","source":7},{"begin":2593,"end":2669,"name":"PUSH [tag]","source":7,"value":"112"},{"begin":2593,"end":2669,"name":"SWAP1","source":7},{"begin":2593,"end":2669,"name":"PUSH [tag]","source":7,"value":"148"},{"begin":2593,"end":2669,"name":"JUMP","source":7,"value":"[in]"},{"begin":2593,"end":2669,"name":"tag","source":7,"value":"146"},{"begin":2593,"end":2669,"name":"JUMPDEST","source":7},{"begin":2676,"end":2732,"name":"PUSH","source":7,"value":"60"},{"begin":2782,"end":2788,"name":"DUP4","source":7},{"begin":2741,"end":2796,"name":"PUSH","source":7,"value":"FFFFFFFFFFFFFFFF"},{"begin":2741,"end":2796,"name":"DUP2","source":7},{"begin":2741,"end":2796,"name":"GT","source":7},{"begin":2741,"end":2796,"name":"DUP1","source":7},{"begin":2741,"end":2796,"name":"ISZERO","source":7},{"begin":2741,"end":2796,"name":"PUSH [tag]","source":7,"value":"149"},{"begin":2741,"end":2796,"name":"JUMPI","source":7},{"begin":2741,"end":2796,"name":"PUSH","source":7,"value":"0"},{"begin":2741,"end":2796,"name":"DUP1","source":7},{"begin":2741,"end":2796,"name":"REVERT","source":7},{"begin":2741,"end":2796,"name":"tag","source":7,"value":"149"},{"begin":2741,"end":2796,"name":"JUMPDEST","source":7},{"begin":2741,"end":2796,"name":"POP","source":7},{"begin":2741,"end":2796,"name":"PUSH","source":7,"value":"40"},{"begin":2741,"end":2796,"name":"MLOAD","source":7},{"begin":2741,"end":2796,"name":"SWAP1","source":7},{"begin":2741,"end":2796,"name":"DUP1","source":7},{"begin":2741,"end":2796,"name":"DUP3","source":7},{"begin":2741,"end":2796,"name":"MSTORE","source":7},{"begin":2741,"end":2796,"name":"DUP1","source":7},{"begin":2741,"end":2796,"name":"PUSH","source":7,"value":"20"},{"begin":2741,"end":2796,"name":"MUL","source":7},{"begin":2741,"end":2796,"name":"PUSH","source":7,"value":"20"},{"begin":2741,"end":2796,"name":"ADD","source":7},{"begin":2741,"end":2796,"name":"DUP3","source":7},{"begin":2741,"end":2796,"name":"ADD","source":7},{"begin":2741,"end":2796,"name":"PUSH","source":7,"value":"40"},{"begin":2741,"end":2796,"name":"MSTORE","source":7},{"begin":2741,"end":2796,"name":"DUP1","source":7},{"begin":2741,"end":2796,"name":"ISZERO","source":7},{"begin":2741,"end":2796,"name":"PUSH [tag]","source":7,"value":"150"},{"begin":2741,"end":2796,"name":"JUMPI","source":7},{"begin":2741,"end":2796,"name":"DUP2","source":7},{"begin":2741,"end":2796,"name":"PUSH","source":7,"value":"20"},{"begin":2741,"end":2796,"name":"ADD","source":7},{"begin":2741,"end":2796,"name":"tag","source":7,"value":"151"},{"begin":2741,"end":2796,"name":"JUMPDEST","source":7},{"begin":2741,"end":2796,"name":"PUSH [tag]","source":7,"value":"152"},{"begin":2741,"end":2796,"name":"PUSH [tag]","source":7,"value":"153"},{"begin":2741,"end":2796,"name":"JUMP","source":7,"value":"[in]"},{"begin":2741,"end":2796,"name":"tag","source":7,"value":"152"},{"begin":2741,"end":2796,"name":"JUMPDEST","source":7},{"begin":2741,"end":2796,"name":"DUP2","source":7},{"begin":2741,"end":2796,"name":"MSTORE","source":7},{"begin":2741,"end":2796,"name":"PUSH","source":7,"value":"20"},{"begin":2741,"end":2796,"name":"ADD","source":7},{"begin":2741,"end":2796,"name":"SWAP1","source":7},{"begin":2741,"end":2796,"name":"PUSH","source":7,"value":"1"},{"begin":2741,"end":2796,"name":"SWAP1","source":7},{"begin":2741,"end":2796,"name":"SUB","source":7},{"begin":2741,"end":2796,"name":"SWAP1","source":7},{"begin":2741,"end":2796,"name":"DUP2","source":7},{"begin":2741,"end":2796,"name":"PUSH [tag]","source":7,"value":"151"},{"begin":2741,"end":2796,"name":"JUMPI","source":7},{"begin":2741,"end":2796,"name":"SWAP1","source":7},{"begin":2741,"end":2796,"name":"POP","source":7},{"begin":2741,"end":2796,"name":"tag","source":7,"value":"150"},{"begin":2741,"end":2796,"name":"JUMPDEST","source":7},{"begin":2741,"end":2796,"name":"POP","source":7},{"begin":2676,"end":2796,"name":"SWAP1","source":7},{"begin":2676,"end":2796,"name":"POP","source":7},{"begin":2808,"end":2817,"name":"PUSH","source":7,"value":"0"},{"begin":2803,"end":3169,"name":"tag","source":7,"value":"154"},{"begin":2803,"end":3169,"name":"JUMPDEST","source":7},{"begin":2823,"end":2840,"name":"DUP5","source":7},{"begin":2823,"end":2840,"name":"DUP2","source":7},{"begin":2823,"end":2840,"name":"LT","source":7},{"begin":2803,"end":3169,"name":"ISZERO","source":7},{"begin":2803,"end":3169,"name":"PUSH [tag]","source":7,"value":"155"},{"begin":2803,"end":3169,"name":"JUMPI","source":7},{"begin":2889,"end":2895,"name":"DUP6","source":7},{"begin":2889,"end":2895,"name":"DUP6","source":7},{"begin":2896,"end":2897,"name":"DUP3","source":7},{"begin":2889,"end":2898,"name":"DUP2","source":7},{"begin":2889,"end":2898,"name":"DUP2","source":7},{"begin":2889,"end":2898,"name":"LT","source":7},{"begin":2889,"end":2898,"name":"PUSH [tag]","source":7,"value":"157"},{"begin":2889,"end":2898,"name":"JUMPI","source":7},{"begin":2889,"end":2898,"name":"INVALID","source":7},{"begin":2889,"end":2898,"name":"tag","source":7,"value":"157"},{"begin":2889,"end":2898,"name":"JUMPDEST","source":7},{"begin":2889,"end":2898,"name":"SWAP1","source":7},{"begin":2889,"end":2898,"name":"POP","source":7},{"begin":2889,"end":2898,"name":"PUSH","source":7,"value":"20"},{"begin":2889,"end":2898,"name":"MUL","source":7},{"begin":2889,"end":2898,"name":"ADD","source":7},{"begin":2889,"end":2898,"name":"PUSH","source":7,"value":"20"},{"begin":2889,"end":2898,"name":"DUP2","source":7},{"begin":2889,"end":2898,"name":"ADD","source":7},{"begin":2889,"end":2898,"name":"SWAP1","source":7},{"begin":2889,"end":2898,"name":"PUSH [tag]","source":7,"value":"158"},{"begin":2889,"end":2898,"name":"SWAP2","source":7},{"begin":2889,"end":2898,"name":"SWAP1","source":7},{"begin":2889,"end":2898,"name":"PUSH [tag]","source":7,"value":"28"},{"begin":2889,"end":2898,"name":"JUMP","source":7,"value":"[in]"},{"begin":2889,"end":2898,"name":"tag","source":7,"value":"158"},{"begin":2889,"end":2898,"name":"JUMPDEST","source":7},{"begin":2855,"end":2867,"name":"DUP3","source":7},{"begin":2868,"end":2869,"name":"DUP3","source":7},{"begin":2855,"end":2870,"name":"DUP2","source":7},{"begin":2855,"end":2870,"name":"MLOAD","source":7},{"begin":2855,"end":2870,"name":"DUP2","source":7},{"begin":2855,"end":2870,"name":"LT","source":7},{"begin":2855,"end":2870,"name":"PUSH [tag]","source":7,"value":"159"},{"begin":2855,"end":2870,"name":"JUMPI","source":7},{"begin":2855,"end":2870,"name":"INVALID","source":7},{"begin":2855,"end":2870,"name":"tag","source":7,"value":"159"},{"begin":2855,"end":2870,"name":"JUMPDEST","source":7},{"begin":2855,"end":2870,"name":"PUSH","source":7,"value":"20"},{"begin":2855,"end":2870,"name":"MUL","source":7},{"begin":2855,"end":2870,"name":"PUSH","source":7,"value":"20"},{"begin":2855,"end":2870,"name":"ADD","source":7},{"begin":2855,"end":2870,"name":"ADD","source":7},{"begin":2855,"end":2870,"name":"MLOAD","source":7},{"begin":2855,"end":2886,"name":"PUSH","source":7,"value":"40"},{"begin":2855,"end":2886,"name":"ADD","source":7},{"begin":2855,"end":2898,"name":"SWAP1","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":2855,"end":2898,"name":"AND","source":7},{"begin":2855,"end":2898,"name":"SWAP1","source":7},{"begin":2855,"end":2898,"name":"DUP2","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":2855,"end":2898,"name":"AND","source":7},{"begin":2855,"end":2898,"name":"DUP2","source":7},{"begin":2855,"end":2898,"name":"MSTORE","source":7},{"begin":2855,"end":2898,"name":"POP","source":7},{"begin":2855,"end":2898,"name":"POP","source":7},{"begin":2950,"end":2968,"name":"DUP4","source":7},{"begin":2950,"end":2968,"name":"DUP4","source":7},{"begin":2969,"end":2970,"name":"DUP3","source":7},{"begin":2950,"end":2971,"name":"DUP2","source":7},{"begin":2950,"end":2971,"name":"DUP2","source":7},{"begin":2950,"end":2971,"name":"LT","source":7},{"begin":2950,"end":2971,"name":"PUSH [tag]","source":7,"value":"160"},{"begin":2950,"end":2971,"name":"JUMPI","source":7},{"begin":2950,"end":2971,"name":"INVALID","source":7},{"begin":2950,"end":2971,"name":"tag","source":7,"value":"160"},{"begin":2950,"end":2971,"name":"JUMPDEST","source":7},{"begin":2950,"end":2971,"name":"SWAP1","source":7},{"begin":2950,"end":2971,"name":"POP","source":7},{"begin":2950,"end":2971,"name":"PUSH","source":7,"value":"20"},{"begin":2950,"end":2971,"name":"MUL","source":7},{"begin":2950,"end":2971,"name":"ADD","source":7},{"begin":2950,"end":2971,"name":"CALLDATALOAD","source":7},{"begin":2906,"end":2918,"name":"DUP3","source":7},{"begin":2919,"end":2920,"name":"DUP3","source":7},{"begin":2906,"end":2921,"name":"DUP2","source":7},{"begin":2906,"end":2921,"name":"MLOAD","source":7},{"begin":2906,"end":2921,"name":"DUP2","source":7},{"begin":2906,"end":2921,"name":"LT","source":7},{"begin":2906,"end":2921,"name":"PUSH [tag]","source":7,"value":"161"},{"begin":2906,"end":2921,"name":"JUMPI","source":7},{"begin":2906,"end":2921,"name":"INVALID","source":7},{"begin":2906,"end":2921,"name":"tag","source":7,"value":"161"},{"begin":2906,"end":2921,"name":"JUMPDEST","source":7},{"begin":2906,"end":2921,"name":"PUSH","source":7,"value":"20"},{"begin":2906,"end":2921,"name":"SWAP1","source":7},{"begin":2906,"end":2921,"name":"DUP2","source":7},{"begin":2906,"end":2921,"name":"MUL","source":7},{"begin":2906,"end":2921,"name":"SWAP2","source":7},{"begin":2906,"end":2921,"name":"SWAP1","source":7},{"begin":2906,"end":2921,"name":"SWAP2","source":7},{"begin":2906,"end":2921,"name":"ADD","source":7},{"begin":2906,"end":2921,"name":"ADD","source":7},{"begin":2906,"end":2921,"name":"MLOAD","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"68"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":2906,"end":2972,"name":"SWAP1","source":7},{"begin":2906,"end":2972,"name":"SWAP2","source":7},{"begin":2906,"end":2972,"name":"AND","source":7},{"begin":2906,"end":2972,"name":"SWAP1","source":7},{"begin":2906,"end":2972,"name":"MSTORE","source":7},{"begin":3026,"end":3044,"name":"DUP4","source":7},{"begin":3026,"end":3044,"name":"DUP4","source":7},{"begin":3045,"end":3046,"name":"DUP3","source":7},{"begin":3026,"end":3047,"name":"DUP2","source":7},{"begin":3026,"end":3047,"name":"DUP2","source":7},{"begin":3026,"end":3047,"name":"LT","source":7},{"begin":3026,"end":3047,"name":"PUSH [tag]","source":7,"value":"162"},{"begin":3026,"end":3047,"name":"JUMPI","source":7},{"begin":3026,"end":3047,"name":"INVALID","source":7},{"begin":3026,"end":3047,"name":"tag","source":7,"value":"162"},{"begin":3026,"end":3047,"name":"JUMPDEST","source":7},{"begin":3026,"end":3047,"name":"SWAP1","source":7},{"begin":3026,"end":3047,"name":"POP","source":7},{"begin":3026,"end":3047,"name":"PUSH","source":7,"value":"20"},{"begin":3026,"end":3047,"name":"MUL","source":7},{"begin":3026,"end":3047,"name":"ADD","source":7},{"begin":3026,"end":3047,"name":"CALLDATALOAD","source":7},{"begin":2989,"end":3001,"name":"DUP3","source":7},{"begin":3002,"end":3003,"name":"DUP3","source":7},{"begin":2989,"end":3004,"name":"DUP2","source":7},{"begin":2989,"end":3004,"name":"MLOAD","source":7},{"begin":2989,"end":3004,"name":"DUP2","source":7},{"begin":2989,"end":3004,"name":"LT","source":7},{"begin":2989,"end":3004,"name":"PUSH [tag]","source":7,"value":"163"},{"begin":2989,"end":3004,"name":"JUMPI","source":7},{"begin":2989,"end":3004,"name":"INVALID","source":7},{"begin":2989,"end":3004,"name":"tag","source":7,"value":"163"},{"begin":2989,"end":3004,"name":"JUMPDEST","source":7},{"begin":2989,"end":3004,"name":"PUSH","source":7,"value":"20"},{"begin":2989,"end":3004,"name":"MUL","source":7},{"begin":2989,"end":3004,"name":"PUSH","source":7,"value":"20"},{"begin":2989,"end":3004,"name":"ADD","source":7},{"begin":2989,"end":3004,"name":"ADD","source":7},{"begin":2989,"end":3004,"name":"MLOAD","source":7},{"begin":2989,"end":3022,"name":"PUSH","source":7,"value":"0"},{"begin":2989,"end":3022,"name":"ADD","source":7},{"begin":2989,"end":3022,"name":"MLOAD","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"68"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":2989,"end":3047,"name":"AND","source":7},{"begin":2989,"end":3047,"name":"EQ","source":7},{"begin":2981,"end":3073,"name":"PUSH [tag]","source":7,"value":"164"},{"begin":2981,"end":3073,"name":"JUMPI","source":7},{"begin":2981,"end":3073,"name":"PUSH","source":7,"value":"40"},{"begin":2981,"end":3073,"name":"MLOAD","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"461BCD"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E5"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":2981,"end":3073,"name":"DUP2","source":7},{"begin":2981,"end":3073,"name":"MSTORE","source":7},{"begin":2981,"end":3073,"name":"PUSH","source":7,"value":"4"},{"begin":2981,"end":3073,"name":"ADD","source":7},{"begin":2981,"end":3073,"name":"PUSH [tag]","source":7,"value":"112"},{"begin":2981,"end":3073,"name":"SWAP1","source":7},{"begin":2981,"end":3073,"name":"PUSH [tag]","source":7,"value":"148"},{"begin":2981,"end":3073,"name":"JUMP","source":7,"value":"[in]"},{"begin":2981,"end":3073,"name":"tag","source":7,"value":"164"},{"begin":2981,"end":3073,"name":"JUMPDEST","source":7},{"begin":3132,"end":3138,"name":"DUP6","source":7},{"begin":3132,"end":3138,"name":"DUP6","source":7},{"begin":3139,"end":3140,"name":"DUP3","source":7},{"begin":3132,"end":3141,"name":"DUP2","source":7},{"begin":3132,"end":3141,"name":"DUP2","source":7},{"begin":3132,"end":3141,"name":"LT","source":7},{"begin":3132,"end":3141,"name":"PUSH [tag]","source":7,"value":"166"},{"begin":3132,"end":3141,"name":"JUMPI","source":7},{"begin":3132,"end":3141,"name":"INVALID","source":7},{"begin":3132,"end":3141,"name":"tag","source":7,"value":"166"},{"begin":3132,"end":3141,"name":"JUMPDEST","source":7},{"begin":3132,"end":3141,"name":"SWAP1","source":7},{"begin":3132,"end":3141,"name":"POP","source":7},{"begin":3132,"end":3141,"name":"PUSH","source":7,"value":"20"},{"begin":3132,"end":3141,"name":"MUL","source":7},{"begin":3132,"end":3141,"name":"ADD","source":7},{"begin":3132,"end":3141,"name":"PUSH","source":7,"value":"20"},{"begin":3132,"end":3141,"name":"DUP2","source":7},{"begin":3132,"end":3141,"name":"ADD","source":7},{"begin":3132,"end":3141,"name":"SWAP1","source":7},{"begin":3132,"end":3141,"name":"PUSH [tag]","source":7,"value":"167"},{"begin":3132,"end":3141,"name":"SWAP2","source":7},{"begin":3132,"end":3141,"name":"SWAP1","source":7},{"begin":3132,"end":3141,"name":"PUSH [tag]","source":7,"value":"28"},{"begin":3132,"end":3141,"name":"JUMP","source":7,"value":"[in]"},{"begin":3132,"end":3141,"name":"tag","source":7,"value":"167"},{"begin":3132,"end":3141,"name":"JUMPDEST","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":3112,"end":3160,"name":"AND","source":7},{"begin":3112,"end":3160,"name":"PUSH","source":7,"value":"B1BF962D"},{"begin":3112,"end":3162,"name":"PUSH","source":7,"value":"40"},{"begin":3112,"end":3162,"name":"MLOAD","source":7},{"begin":3112,"end":3162,"name":"DUP2","source":7},{"begin":3112,"end":3162,"name":"PUSH","source":7,"value":"FFFFFFFF"},{"begin":3112,"end":3162,"name":"AND","source":7},{"begin":3112,"end":3162,"name":"PUSH","source":7,"value":"E0"},{"begin":3112,"end":3162,"name":"SHL","source":7},{"begin":3112,"end":3162,"name":"DUP2","source":7},{"begin":3112,"end":3162,"name":"MSTORE","source":7},{"begin":3112,"end":3162,"name":"PUSH","source":7,"value":"4"},{"begin":3112,"end":3162,"name":"ADD","source":7},{"begin":3112,"end":3162,"name":"PUSH","source":7,"value":"20"},{"begin":3112,"end":3162,"name":"PUSH","source":7,"value":"40"},{"begin":3112,"end":3162,"name":"MLOAD","source":7},{"begin":3112,"end":3162,"name":"DUP1","source":7},{"begin":3112,"end":3162,"name":"DUP4","source":7},{"begin":3112,"end":3162,"name":"SUB","source":7},{"begin":3112,"end":3162,"name":"DUP2","source":7},{"begin":3112,"end":3162,"name":"DUP7","source":7},{"begin":3112,"end":3162,"name":"DUP1","source":7},{"begin":3112,"end":3162,"name":"EXTCODESIZE","source":7},{"begin":3112,"end":3162,"name":"ISZERO","source":7},{"begin":3112,"end":3162,"name":"DUP1","source":7},{"begin":3112,"end":3162,"name":"ISZERO","source":7},{"begin":3112,"end":3162,"name":"PUSH [tag]","source":7,"value":"168"},{"begin":3112,"end":3162,"name":"JUMPI","source":7},{"begin":3112,"end":3162,"name":"PUSH","source":7,"value":"0"},{"begin":3112,"end":3162,"name":"DUP1","source":7},{"begin":3112,"end":3162,"name":"REVERT","source":7},{"begin":3112,"end":3162,"name":"tag","source":7,"value":"168"},{"begin":3112,"end":3162,"name":"JUMPDEST","source":7},{"begin":3112,"end":3162,"name":"POP","source":7},{"begin":3112,"end":3162,"name":"GAS","source":7},{"begin":3112,"end":3162,"name":"STATICCALL","source":7},{"begin":3112,"end":3162,"name":"ISZERO","source":7},{"begin":3112,"end":3162,"name":"DUP1","source":7},{"begin":3112,"end":3162,"name":"ISZERO","source":7},{"begin":3112,"end":3162,"name":"PUSH [tag]","source":7,"value":"170"},{"begin":3112,"end":3162,"name":"JUMPI","source":7},{"begin":3112,"end":3162,"name":"RETURNDATASIZE","source":7},{"begin":3112,"end":3162,"name":"PUSH","source":7,"value":"0"},{"begin":3112,"end":3162,"name":"DUP1","source":7},{"begin":3112,"end":3162,"name":"RETURNDATACOPY","source":7},{"begin":3112,"end":3162,"name":"RETURNDATASIZE","source":7},{"begin":3112,"end":3162,"name":"PUSH","source":7,"value":"0"},{"begin":3112,"end":3162,"name":"REVERT","source":7},{"begin":3112,"end":3162,"name":"tag","source":7,"value":"170"},{"begin":3112,"end":3162,"name":"JUMPDEST","source":7},{"begin":3112,"end":3162,"name":"POP","source":7},{"begin":3112,"end":3162,"name":"POP","source":7},{"begin":3112,"end":3162,"name":"POP","source":7},{"begin":3112,"end":3162,"name":"POP","source":7},{"begin":3112,"end":3162,"name":"PUSH","source":7,"value":"40"},{"begin":3112,"end":3162,"name":"MLOAD","source":7},{"begin":3112,"end":3162,"name":"RETURNDATASIZE","source":7},{"begin":3112,"end":3162,"name":"PUSH","source":7,"value":"1F"},{"begin":3112,"end":3162,"name":"NOT","source":7},{"begin":3112,"end":3162,"name":"PUSH","source":7,"value":"1F"},{"begin":3112,"end":3162,"name":"DUP3","source":7},{"begin":3112,"end":3162,"name":"ADD","source":7},{"begin":3112,"end":3162,"name":"AND","source":7},{"begin":3112,"end":3162,"name":"DUP3","source":7},{"begin":3112,"end":3162,"name":"ADD","source":7},{"begin":3112,"end":3162,"name":"DUP1","source":7},{"begin":3112,"end":3162,"name":"PUSH","source":7,"value":"40"},{"begin":3112,"end":3162,"name":"MSTORE","source":7},{"begin":3112,"end":3162,"name":"POP","source":7},{"begin":3112,"end":3162,"name":"DUP2","source":7},{"begin":3112,"end":3162,"name":"ADD","source":7},{"begin":3112,"end":3162,"name":"SWAP1","source":7},{"begin":3112,"end":3162,"name":"PUSH [tag]","source":7,"value":"171"},{"begin":3112,"end":3162,"name":"SWAP2","source":7},{"begin":3112,"end":3162,"name":"SWAP1","source":7},{"begin":3112,"end":3162,"name":"PUSH [tag]","source":7,"value":"172"},{"begin":3112,"end":3162,"name":"JUMP","source":7,"value":"[in]"},{"begin":3112,"end":3162,"name":"tag","source":7,"value":"171"},{"begin":3112,"end":3162,"name":"JUMPDEST","source":7},{"begin":3082,"end":3094,"name":"DUP3","source":7},{"begin":3095,"end":3096,"name":"DUP3","source":7},{"begin":3082,"end":3097,"name":"DUP2","source":7},{"begin":3082,"end":3097,"name":"MLOAD","source":7},{"begin":3082,"end":3097,"name":"DUP2","source":7},{"begin":3082,"end":3097,"name":"LT","source":7},{"begin":3082,"end":3097,"name":"PUSH [tag]","source":7,"value":"173"},{"begin":3082,"end":3097,"name":"JUMPI","source":7},{"begin":3082,"end":3097,"name":"INVALID","source":7},{"begin":3082,"end":3097,"name":"tag","source":7,"value":"173"},{"begin":3082,"end":3097,"name":"JUMPDEST","source":7},{"begin":3082,"end":3097,"name":"PUSH","source":7,"value":"20"},{"begin":3082,"end":3097,"name":"SWAP1","source":7},{"begin":3082,"end":3097,"name":"DUP2","source":7},{"begin":3082,"end":3097,"name":"MUL","source":7},{"begin":3082,"end":3097,"name":"SWAP2","source":7},{"begin":3082,"end":3097,"name":"SWAP1","source":7},{"begin":3082,"end":3097,"name":"SWAP2","source":7},{"begin":3082,"end":3097,"name":"ADD","source":7},{"begin":3082,"end":3097,"name":"DUP2","source":7},{"begin":3082,"end":3097,"name":"ADD","source":7},{"begin":3082,"end":3097,"name":"MLOAD","source":7},{"begin":3082,"end":3109,"name":"ADD","source":7},{"begin":3082,"end":3162,"name":"MSTORE","source":7},{"begin":2842,"end":2845,"name":"PUSH","source":7,"value":"1"},{"begin":2842,"end":2845,"name":"ADD","source":7},{"begin":2803,"end":3169,"name":"PUSH [tag]","source":7,"value":"154"},{"begin":2803,"end":3169,"name":"JUMP","source":7},{"begin":2803,"end":3169,"name":"tag","source":7,"value":"155"},{"begin":2803,"end":3169,"name":"JUMPDEST","source":7},{"begin":2803,"end":3169,"name":"POP","source":7},{"begin":3174,"end":3204,"name":"PUSH [tag]","source":7,"value":"174"},{"begin":3191,"end":3203,"name":"DUP2","source":7},{"begin":3174,"end":3190,"name":"PUSH [tag]","source":7,"value":"175"},{"begin":3174,"end":3204,"name":"JUMP","source":7,"value":"[in]"},{"begin":3174,"end":3204,"name":"tag","source":7,"value":"174"},{"begin":3174,"end":3204,"name":"JUMPDEST","source":7},{"begin":937,"end":938,"name":"POP","source":6},{"begin":2444,"end":3209,"name":"POP","source":7},{"begin":2444,"end":3209,"name":"POP","source":7},{"begin":2444,"end":3209,"name":"POP","source":7},{"begin":2444,"end":3209,"name":"POP","source":7},{"begin":2444,"end":3209,"name":"JUMP","source":7,"value":"[out]"},{"begin":3694,"end":4363,"name":"tag","source":7,"value":"76"},{"begin":3694,"end":4363,"name":"JUMPDEST","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":3854,"end":3882,"name":"DUP2","source":7},{"begin":3854,"end":3882,"name":"AND","source":7},{"begin":3810,"end":3817,"name":"PUSH","source":7,"value":"0"},{"begin":3854,"end":3882,"name":"SWAP1","source":7},{"begin":3854,"end":3882,"name":"DUP2","source":7},{"begin":3854,"end":3882,"name":"MSTORE","source":7},{"begin":3854,"end":3876,"name":"PUSH","source":7,"value":"35"},{"begin":3854,"end":3882,"name":"PUSH","source":7,"value":"20"},{"begin":3854,"end":3882,"name":"MSTORE","source":7},{"begin":3854,"end":3882,"name":"PUSH","source":7,"value":"40"},{"begin":3854,"end":3882,"name":"DUP2","source":7},{"begin":3854,"end":3882,"name":"KECCAK256","source":7},{"begin":3854,"end":3882,"name":"SLOAD","source":7},{"begin":3889,"end":3940,"name":"PUSH","source":7,"value":"60"},{"begin":3988,"end":3994,"name":"DUP5","source":7},{"begin":3949,"end":4002,"name":"PUSH","source":7,"value":"FFFFFFFFFFFFFFFF"},{"begin":3949,"end":4002,"name":"DUP2","source":7},{"begin":3949,"end":4002,"name":"GT","source":7},{"begin":3949,"end":4002,"name":"DUP1","source":7},{"begin":3949,"end":4002,"name":"ISZERO","source":7},{"begin":3949,"end":4002,"name":"PUSH [tag]","source":7,"value":"177"},{"begin":3949,"end":4002,"name":"JUMPI","source":7},{"begin":3949,"end":4002,"name":"PUSH","source":7,"value":"0"},{"begin":3949,"end":4002,"name":"DUP1","source":7},{"begin":3949,"end":4002,"name":"REVERT","source":7},{"begin":3949,"end":4002,"name":"tag","source":7,"value":"177"},{"begin":3949,"end":4002,"name":"JUMPDEST","source":7},{"begin":3949,"end":4002,"name":"POP","source":7},{"begin":3949,"end":4002,"name":"PUSH","source":7,"value":"40"},{"begin":3949,"end":4002,"name":"MLOAD","source":7},{"begin":3949,"end":4002,"name":"SWAP1","source":7},{"begin":3949,"end":4002,"name":"DUP1","source":7},{"begin":3949,"end":4002,"name":"DUP3","source":7},{"begin":3949,"end":4002,"name":"MSTORE","source":7},{"begin":3949,"end":4002,"name":"DUP1","source":7},{"begin":3949,"end":4002,"name":"PUSH","source":7,"value":"20"},{"begin":3949,"end":4002,"name":"MUL","source":7},{"begin":3949,"end":4002,"name":"PUSH","source":7,"value":"20"},{"begin":3949,"end":4002,"name":"ADD","source":7},{"begin":3949,"end":4002,"name":"DUP3","source":7},{"begin":3949,"end":4002,"name":"ADD","source":7},{"begin":3949,"end":4002,"name":"PUSH","source":7,"value":"40"},{"begin":3949,"end":4002,"name":"MSTORE","source":7},{"begin":3949,"end":4002,"name":"DUP1","source":7},{"begin":3949,"end":4002,"name":"ISZERO","source":7},{"begin":3949,"end":4002,"name":"PUSH [tag]","source":7,"value":"178"},{"begin":3949,"end":4002,"name":"JUMPI","source":7},{"begin":3949,"end":4002,"name":"DUP2","source":7},{"begin":3949,"end":4002,"name":"PUSH","source":7,"value":"20"},{"begin":3949,"end":4002,"name":"ADD","source":7},{"begin":3949,"end":4002,"name":"tag","source":7,"value":"179"},{"begin":3949,"end":4002,"name":"JUMPDEST","source":7},{"begin":3949,"end":4002,"name":"PUSH [tag]","source":7,"value":"180"},{"begin":3949,"end":4002,"name":"PUSH [tag]","source":7,"value":"181"},{"begin":3949,"end":4002,"name":"JUMP","source":7,"value":"[in]"},{"begin":3949,"end":4002,"name":"tag","source":7,"value":"180"},{"begin":3949,"end":4002,"name":"JUMPDEST","source":7},{"begin":3949,"end":4002,"name":"DUP2","source":7},{"begin":3949,"end":4002,"name":"MSTORE","source":7},{"begin":3949,"end":4002,"name":"PUSH","source":7,"value":"20"},{"begin":3949,"end":4002,"name":"ADD","source":7},{"begin":3949,"end":4002,"name":"SWAP1","source":7},{"begin":3949,"end":4002,"name":"PUSH","source":7,"value":"1"},{"begin":3949,"end":4002,"name":"SWAP1","source":7},{"begin":3949,"end":4002,"name":"SUB","source":7},{"begin":3949,"end":4002,"name":"SWAP1","source":7},{"begin":3949,"end":4002,"name":"DUP2","source":7},{"begin":3949,"end":4002,"name":"PUSH [tag]","source":7,"value":"179"},{"begin":3949,"end":4002,"name":"JUMPI","source":7},{"begin":3949,"end":4002,"name":"SWAP1","source":7},{"begin":3949,"end":4002,"name":"POP","source":7},{"begin":3949,"end":4002,"name":"tag","source":7,"value":"178"},{"begin":3949,"end":4002,"name":"JUMPDEST","source":7},{"begin":3949,"end":4002,"name":"POP","source":7},{"begin":3889,"end":4002,"name":"SWAP1","source":7},{"begin":3889,"end":4002,"name":"POP","source":7},{"begin":4013,"end":4022,"name":"PUSH","source":7,"value":"0"},{"begin":4008,"end":4246,"name":"tag","source":7,"value":"182"},{"begin":4008,"end":4246,"name":"JUMPDEST","source":7},{"begin":4028,"end":4045,"name":"DUP6","source":7},{"begin":4028,"end":4045,"name":"DUP2","source":7},{"begin":4028,"end":4045,"name":"LT","source":7},{"begin":4008,"end":4246,"name":"ISZERO","source":7},{"begin":4008,"end":4246,"name":"PUSH [tag]","source":7,"value":"183"},{"begin":4008,"end":4246,"name":"JUMPI","source":7},{"begin":4091,"end":4097,"name":"DUP7","source":7},{"begin":4091,"end":4097,"name":"DUP7","source":7},{"begin":4098,"end":4099,"name":"DUP3","source":7},{"begin":4091,"end":4100,"name":"DUP2","source":7},{"begin":4091,"end":4100,"name":"DUP2","source":7},{"begin":4091,"end":4100,"name":"LT","source":7},{"begin":4091,"end":4100,"name":"PUSH [tag]","source":7,"value":"185"},{"begin":4091,"end":4100,"name":"JUMPI","source":7},{"begin":4091,"end":4100,"name":"INVALID","source":7},{"begin":4091,"end":4100,"name":"tag","source":7,"value":"185"},{"begin":4091,"end":4100,"name":"JUMPDEST","source":7},{"begin":4091,"end":4100,"name":"SWAP1","source":7},{"begin":4091,"end":4100,"name":"POP","source":7},{"begin":4091,"end":4100,"name":"PUSH","source":7,"value":"20"},{"begin":4091,"end":4100,"name":"MUL","source":7},{"begin":4091,"end":4100,"name":"ADD","source":7},{"begin":4091,"end":4100,"name":"PUSH","source":7,"value":"20"},{"begin":4091,"end":4100,"name":"DUP2","source":7},{"begin":4091,"end":4100,"name":"ADD","source":7},{"begin":4091,"end":4100,"name":"SWAP1","source":7},{"begin":4091,"end":4100,"name":"PUSH [tag]","source":7,"value":"186"},{"begin":4091,"end":4100,"name":"SWAP2","source":7},{"begin":4091,"end":4100,"name":"SWAP1","source":7},{"begin":4091,"end":4100,"name":"PUSH [tag]","source":7,"value":"28"},{"begin":4091,"end":4100,"name":"JUMP","source":7,"value":"[in]"},{"begin":4091,"end":4100,"name":"tag","source":7,"value":"186"},{"begin":4091,"end":4100,"name":"JUMPDEST","source":7},{"begin":4060,"end":4069,"name":"DUP3","source":7},{"begin":4070,"end":4071,"name":"DUP3","source":7},{"begin":4060,"end":4072,"name":"DUP2","source":7},{"begin":4060,"end":4072,"name":"MLOAD","source":7},{"begin":4060,"end":4072,"name":"DUP2","source":7},{"begin":4060,"end":4072,"name":"LT","source":7},{"begin":4060,"end":4072,"name":"PUSH [tag]","source":7,"value":"187"},{"begin":4060,"end":4072,"name":"JUMPI","source":7},{"begin":4060,"end":4072,"name":"INVALID","source":7},{"begin":4060,"end":4072,"name":"tag","source":7,"value":"187"},{"begin":4060,"end":4072,"name":"JUMPDEST","source":7},{"begin":4060,"end":4072,"name":"PUSH","source":7,"value":"20"},{"begin":4060,"end":4072,"name":"SWAP1","source":7},{"begin":4060,"end":4072,"name":"DUP2","source":7},{"begin":4060,"end":4072,"name":"MUL","source":7},{"begin":4060,"end":4072,"name":"SWAP2","source":7},{"begin":4060,"end":4072,"name":"SWAP1","source":7},{"begin":4060,"end":4072,"name":"SWAP2","source":7},{"begin":4060,"end":4072,"name":"ADD","source":7},{"begin":4060,"end":4072,"name":"ADD","source":7},{"begin":4060,"end":4072,"name":"MLOAD","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":4060,"end":4100,"name":"SWAP1","source":7},{"begin":4060,"end":4100,"name":"SWAP2","source":7},{"begin":4060,"end":4100,"name":"AND","source":7},{"begin":4060,"end":4100,"name":"SWAP1","source":7},{"begin":4060,"end":4100,"name":"MSTORE","source":7},{"begin":4184,"end":4190,"name":"DUP7","source":7},{"begin":4184,"end":4190,"name":"DUP7","source":7},{"begin":4191,"end":4192,"name":"DUP3","source":7},{"begin":4184,"end":4193,"name":"DUP2","source":7},{"begin":4184,"end":4193,"name":"DUP2","source":7},{"begin":4184,"end":4193,"name":"LT","source":7},{"begin":4184,"end":4193,"name":"PUSH [tag]","source":7,"value":"188"},{"begin":4184,"end":4193,"name":"JUMPI","source":7},{"begin":4184,"end":4193,"name":"INVALID","source":7},{"begin":4184,"end":4193,"name":"tag","source":7,"value":"188"},{"begin":4184,"end":4193,"name":"JUMPDEST","source":7},{"begin":4184,"end":4193,"name":"SWAP1","source":7},{"begin":4184,"end":4193,"name":"POP","source":7},{"begin":4184,"end":4193,"name":"PUSH","source":7,"value":"20"},{"begin":4184,"end":4193,"name":"MUL","source":7},{"begin":4184,"end":4193,"name":"ADD","source":7},{"begin":4184,"end":4193,"name":"PUSH","source":7,"value":"20"},{"begin":4184,"end":4193,"name":"DUP2","source":7},{"begin":4184,"end":4193,"name":"ADD","source":7},{"begin":4184,"end":4193,"name":"SWAP1","source":7},{"begin":4184,"end":4193,"name":"PUSH [tag]","source":7,"value":"189"},{"begin":4184,"end":4193,"name":"SWAP2","source":7},{"begin":4184,"end":4193,"name":"SWAP1","source":7},{"begin":4184,"end":4193,"name":"PUSH [tag]","source":7,"value":"28"},{"begin":4184,"end":4193,"name":"JUMP","source":7,"value":"[in]"},{"begin":4184,"end":4193,"name":"tag","source":7,"value":"189"},{"begin":4184,"end":4193,"name":"JUMPDEST","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":4164,"end":4233,"name":"AND","source":7},{"begin":4164,"end":4233,"name":"PUSH","source":7,"value":"AFBCDC9"},{"begin":4234,"end":4238,"name":"DUP7","source":7},{"begin":4164,"end":4239,"name":"PUSH","source":7,"value":"40"},{"begin":4164,"end":4239,"name":"MLOAD","source":7},{"begin":4164,"end":4239,"name":"DUP3","source":7},{"begin":4164,"end":4239,"name":"PUSH","source":7,"value":"FFFFFFFF"},{"begin":4164,"end":4239,"name":"AND","source":7},{"begin":4164,"end":4239,"name":"PUSH","source":7,"value":"E0"},{"begin":4164,"end":4239,"name":"SHL","source":7},{"begin":4164,"end":4239,"name":"DUP2","source":7},{"begin":4164,"end":4239,"name":"MSTORE","source":7},{"begin":4164,"end":4239,"name":"PUSH","source":7,"value":"4"},{"begin":4164,"end":4239,"name":"ADD","source":7},{"begin":4164,"end":4239,"name":"PUSH [tag]","source":7,"value":"190"},{"begin":4164,"end":4239,"name":"SWAP2","source":7},{"begin":4164,"end":4239,"name":"SWAP1","source":7},{"begin":4164,"end":4239,"name":"PUSH [tag]","source":7,"value":"68"},{"begin":4164,"end":4239,"name":"JUMP","source":7,"value":"[in]"},{"begin":4164,"end":4239,"name":"tag","source":7,"value":"190"},{"begin":4164,"end":4239,"name":"JUMPDEST","source":7},{"begin":4164,"end":4239,"name":"PUSH","source":7,"value":"40"},{"begin":4164,"end":4239,"name":"DUP1","source":7},{"begin":4164,"end":4239,"name":"MLOAD","source":7},{"begin":4164,"end":4239,"name":"DUP1","source":7},{"begin":4164,"end":4239,"name":"DUP4","source":7},{"begin":4164,"end":4239,"name":"SUB","source":7},{"begin":4164,"end":4239,"name":"DUP2","source":7},{"begin":4164,"end":4239,"name":"DUP7","source":7},{"begin":4164,"end":4239,"name":"DUP1","source":7},{"begin":4164,"end":4239,"name":"EXTCODESIZE","source":7},{"begin":4164,"end":4239,"name":"ISZERO","source":7},{"begin":4164,"end":4239,"name":"DUP1","source":7},{"begin":4164,"end":4239,"name":"ISZERO","source":7},{"begin":4164,"end":4239,"name":"PUSH [tag]","source":7,"value":"191"},{"begin":4164,"end":4239,"name":"JUMPI","source":7},{"begin":4164,"end":4239,"name":"PUSH","source":7,"value":"0"},{"begin":4164,"end":4239,"name":"DUP1","source":7},{"begin":4164,"end":4239,"name":"REVERT","source":7},{"begin":4164,"end":4239,"name":"tag","source":7,"value":"191"},{"begin":4164,"end":4239,"name":"JUMPDEST","source":7},{"begin":4164,"end":4239,"name":"POP","source":7},{"begin":4164,"end":4239,"name":"GAS","source":7},{"begin":4164,"end":4239,"name":"STATICCALL","source":7},{"begin":4164,"end":4239,"name":"ISZERO","source":7},{"begin":4164,"end":4239,"name":"DUP1","source":7},{"begin":4164,"end":4239,"name":"ISZERO","source":7},{"begin":4164,"end":4239,"name":"PUSH [tag]","source":7,"value":"193"},{"begin":4164,"end":4239,"name":"JUMPI","source":7},{"begin":4164,"end":4239,"name":"RETURNDATASIZE","source":7},{"begin":4164,"end":4239,"name":"PUSH","source":7,"value":"0"},{"begin":4164,"end":4239,"name":"DUP1","source":7},{"begin":4164,"end":4239,"name":"RETURNDATACOPY","source":7},{"begin":4164,"end":4239,"name":"RETURNDATASIZE","source":7},{"begin":4164,"end":4239,"name":"PUSH","source":7,"value":"0"},{"begin":4164,"end":4239,"name":"REVERT","source":7},{"begin":4164,"end":4239,"name":"tag","source":7,"value":"193"},{"begin":4164,"end":4239,"name":"JUMPDEST","source":7},{"begin":4164,"end":4239,"name":"POP","source":7},{"begin":4164,"end":4239,"name":"POP","source":7},{"begin":4164,"end":4239,"name":"POP","source":7},{"begin":4164,"end":4239,"name":"POP","source":7},{"begin":4164,"end":4239,"name":"PUSH","source":7,"value":"40"},{"begin":4164,"end":4239,"name":"MLOAD","source":7},{"begin":4164,"end":4239,"name":"RETURNDATASIZE","source":7},{"begin":4164,"end":4239,"name":"PUSH","source":7,"value":"1F"},{"begin":4164,"end":4239,"name":"NOT","source":7},{"begin":4164,"end":4239,"name":"PUSH","source":7,"value":"1F"},{"begin":4164,"end":4239,"name":"DUP3","source":7},{"begin":4164,"end":4239,"name":"ADD","source":7},{"begin":4164,"end":4239,"name":"AND","source":7},{"begin":4164,"end":4239,"name":"DUP3","source":7},{"begin":4164,"end":4239,"name":"ADD","source":7},{"begin":4164,"end":4239,"name":"DUP1","source":7},{"begin":4164,"end":4239,"name":"PUSH","source":7,"value":"40"},{"begin":4164,"end":4239,"name":"MSTORE","source":7},{"begin":4164,"end":4239,"name":"POP","source":7},{"begin":4164,"end":4239,"name":"DUP2","source":7},{"begin":4164,"end":4239,"name":"ADD","source":7},{"begin":4164,"end":4239,"name":"SWAP1","source":7},{"begin":4164,"end":4239,"name":"PUSH [tag]","source":7,"value":"194"},{"begin":4164,"end":4239,"name":"SWAP2","source":7},{"begin":4164,"end":4239,"name":"SWAP1","source":7},{"begin":4164,"end":4239,"name":"PUSH [tag]","source":7,"value":"195"},{"begin":4164,"end":4239,"name":"JUMP","source":7,"value":"[in]"},{"begin":4164,"end":4239,"name":"tag","source":7,"value":"194"},{"begin":4164,"end":4239,"name":"JUMPDEST","source":7},{"begin":4109,"end":4118,"name":"DUP4","source":7},{"begin":4119,"end":4120,"name":"DUP4","source":7},{"begin":4109,"end":4121,"name":"DUP2","source":7},{"begin":4109,"end":4121,"name":"MLOAD","source":7},{"begin":4109,"end":4121,"name":"DUP2","source":7},{"begin":4109,"end":4121,"name":"LT","source":7},{"begin":4109,"end":4121,"name":"PUSH [tag]","source":7,"value":"196"},{"begin":4109,"end":4121,"name":"JUMPI","source":7},{"begin":4109,"end":4121,"name":"INVALID","source":7},{"begin":4109,"end":4121,"name":"tag","source":7,"value":"196"},{"begin":4109,"end":4121,"name":"JUMPDEST","source":7},{"begin":4109,"end":4121,"name":"PUSH","source":7,"value":"20"},{"begin":4109,"end":4121,"name":"MUL","source":7},{"begin":4109,"end":4121,"name":"PUSH","source":7,"value":"20"},{"begin":4109,"end":4121,"name":"ADD","source":7},{"begin":4109,"end":4121,"name":"ADD","source":7},{"begin":4109,"end":4121,"name":"MLOAD","source":7},{"begin":4109,"end":4134,"name":"PUSH","source":7,"value":"20"},{"begin":4109,"end":4134,"name":"ADD","source":7},{"begin":4136,"end":4145,"name":"DUP5","source":7},{"begin":4146,"end":4147,"name":"DUP5","source":7},{"begin":4136,"end":4148,"name":"DUP2","source":7},{"begin":4136,"end":4148,"name":"MLOAD","source":7},{"begin":4136,"end":4148,"name":"DUP2","source":7},{"begin":4136,"end":4148,"name":"LT","source":7},{"begin":4136,"end":4148,"name":"PUSH [tag]","source":7,"value":"197"},{"begin":4136,"end":4148,"name":"JUMPI","source":7},{"begin":4136,"end":4148,"name":"INVALID","source":7},{"begin":4136,"end":4148,"name":"tag","source":7,"value":"197"},{"begin":4136,"end":4148,"name":"JUMPDEST","source":7},{"begin":4136,"end":4148,"name":"PUSH","source":7,"value":"20"},{"begin":4136,"end":4148,"name":"SWAP1","source":7},{"begin":4136,"end":4148,"name":"DUP2","source":7},{"begin":4136,"end":4148,"name":"MUL","source":7},{"begin":4136,"end":4148,"name":"SWAP2","source":7},{"begin":4136,"end":4148,"name":"SWAP1","source":7},{"begin":4136,"end":4148,"name":"SWAP2","source":7},{"begin":4136,"end":4148,"name":"ADD","source":7},{"begin":4136,"end":4148,"name":"ADD","source":7},{"begin":4136,"end":4148,"name":"MLOAD","source":7},{"begin":4136,"end":4160,"name":"PUSH","source":7,"value":"40"},{"begin":4136,"end":4160,"name":"ADD","source":7},{"begin":4108,"end":4239,"name":"SWAP2","source":7},{"begin":4108,"end":4239,"name":"SWAP1","source":7},{"begin":4108,"end":4239,"name":"SWAP2","source":7},{"begin":4108,"end":4239,"name":"MSTORE","source":7},{"begin":4108,"end":4239,"name":"MSTORE","source":7},{"begin":4047,"end":4050,"name":"PUSH","source":7,"value":"1"},{"begin":4047,"end":4050,"name":"ADD","source":7},{"begin":4008,"end":4246,"name":"PUSH [tag]","source":7,"value":"182"},{"begin":4008,"end":4246,"name":"JUMP","source":7},{"begin":4008,"end":4246,"name":"tag","source":7,"value":"183"},{"begin":4008,"end":4246,"name":"JUMPDEST","source":7},{"begin":4008,"end":4246,"name":"POP","source":7},{"begin":4270,"end":4329,"name":"PUSH [tag]","source":7,"value":"198"},{"begin":4291,"end":4328,"name":"PUSH [tag]","source":7,"value":"199"},{"begin":4312,"end":4316,"name":"DUP6","source":7},{"begin":4318,"end":4327,"name":"DUP4","source":7},{"begin":4291,"end":4311,"name":"PUSH [tag]","source":7,"value":"200"},{"begin":4291,"end":4328,"name":"JUMP","source":7,"value":"[in]"},{"begin":4291,"end":4328,"name":"tag","source":7,"value":"199"},{"begin":4291,"end":4328,"name":"JUMPDEST","source":7},{"begin":4270,"end":4286,"name":"DUP4","source":7},{"begin":4270,"end":4286,"name":"SWAP1","source":7},{"begin":4270,"end":4290,"name":"PUSH [tag]","source":7,"value":"121"},{"begin":4270,"end":4329,"name":"JUMP","source":7,"value":"[in]"},{"begin":4270,"end":4329,"name":"tag","source":7,"value":"198"},{"begin":4270,"end":4329,"name":"JUMPDEST","source":7},{"begin":4251,"end":4329,"name":"SWAP3","source":7},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":3694,"end":4363,"name":"tag","source":7,"value":"176"},{"begin":3694,"end":4363,"name":"JUMPDEST","source":7},{"begin":3694,"end":4363,"name":"SWAP4","source":7},{"begin":3694,"end":4363,"name":"SWAP3","source":7},{"begin":3694,"end":4363,"name":"POP","source":7},{"begin":3694,"end":4363,"name":"POP","source":7},{"begin":3694,"end":4363,"name":"POP","source":7},{"begin":3694,"end":4363,"name":"JUMP","source":7,"value":"[out]"},{"begin":1461,"end":1564,"name":"tag","source":6,"value":"79"},{"begin":1461,"end":1564,"name":"JUMPDEST","source":6},{"begin":1543,"end":1559,"name":"PUSH","source":6,"value":"34"},{"begin":1543,"end":1559,"name":"SLOAD","source":6},{"begin":1461,"end":1564,"name":"SWAP1","source":6},{"begin":1461,"end":1564,"name":"JUMP","source":6,"value":"[out]"},{"begin":6024,"end":6127,"name":"tag","source":7,"value":"82"},{"begin":6024,"end":6127,"name":"JUMPDEST","source":7},{"begin":6110,"end":6121,"name":"PUSHIMMUTABLE","source":7,"value":"1205"},{"begin":6024,"end":6127,"name":"SWAP1","source":7},{"begin":6024,"end":6127,"name":"JUMP","source":7,"value":"[out]"},{"begin":703,"end":739,"name":"tag","source":6,"value":"85"},{"begin":703,"end":739,"name":"JUMPDEST","source":6},{"begin":737,"end":739,"name":"PUSH","source":6,"value":"12"},{"begin":703,"end":739,"name":"DUP2","source":6},{"begin":703,"end":739,"name":"JUMP","source":6,"value":"[out]"},{"begin":2180,"end":2396,"name":"tag","source":7,"value":"90"},{"begin":2180,"end":2396,"name":"JUMPDEST","source":7},{"begin":1040,"end":1056,"name":"PUSH","source":5,"value":"0"},{"begin":1059,"end":1072,"name":"PUSH [tag]","source":5,"value":"204"},{"begin":1059,"end":1070,"name":"PUSH [tag]","source":5,"value":"205"},{"begin":1059,"end":1072,"name":"JUMP","source":5,"value":"[in]"},{"begin":1059,"end":1072,"name":"tag","source":5,"value":"204"},{"begin":1059,"end":1072,"name":"JUMPDEST","source":5},{"begin":1040,"end":1072,"name":"SWAP1","source":5},{"begin":1040,"end":1072,"name":"POP","source":5},{"begin":1097,"end":1120,"name":"PUSH","source":5,"value":"0"},{"begin":1097,"end":1120,"name":"SLOAD","source":5},{"begin":1086,"end":1094,"name":"DUP2","source":5},{"begin":1086,"end":1120,"name":"GT","source":5},{"begin":1078,"end":1171,"name":"PUSH [tag]","source":5,"value":"206"},{"begin":1078,"end":1171,"name":"JUMPI","source":5},{"begin":1078,"end":1171,"name":"PUSH","source":5,"value":"40"},{"begin":1078,"end":1171,"name":"MLOAD","source":5},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"461BCD"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E5"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":1078,"end":1171,"name":"DUP2","source":5},{"begin":1078,"end":1171,"name":"MSTORE","source":5},{"begin":1078,"end":1171,"name":"PUSH","source":5,"value":"4"},{"begin":1078,"end":1171,"name":"ADD","source":5},{"begin":1078,"end":1171,"name":"DUP1","source":5},{"begin":1078,"end":1171,"name":"DUP1","source":5},{"begin":1078,"end":1171,"name":"PUSH","source":5,"value":"20"},{"begin":1078,"end":1171,"name":"ADD","source":5},{"begin":1078,"end":1171,"name":"DUP3","source":5},{"begin":1078,"end":1171,"name":"DUP2","source":5},{"begin":1078,"end":1171,"name":"SUB","source":5},{"begin":1078,"end":1171,"name":"DUP3","source":5},{"begin":1078,"end":1171,"name":"MSTORE","source":5},{"begin":1078,"end":1171,"name":"PUSH","source":5,"value":"2E"},{"begin":1078,"end":1171,"name":"DUP2","source":5},{"begin":1078,"end":1171,"name":"MSTORE","source":5},{"begin":1078,"end":1171,"name":"PUSH","source":5,"value":"20"},{"begin":1078,"end":1171,"name":"ADD","source":5},{"begin":1078,"end":1171,"name":"DUP1","source":5},{"begin":1078,"end":1171,"name":"PUSH data","source":5,"value":"9FBBA6C4DCAC9134893B633B9564F36435B3F927C1D5FA152C5C14B20CECB1A4"},{"begin":1078,"end":1171,"name":"PUSH","source":5,"value":"2E"},{"begin":1078,"end":1171,"name":"SWAP2","source":5},{"begin":1078,"end":1171,"name":"CODECOPY","source":5},{"begin":1078,"end":1171,"name":"PUSH","source":5,"value":"40"},{"begin":1078,"end":1171,"name":"ADD","source":5},{"begin":1078,"end":1171,"name":"SWAP2","source":5},{"begin":1078,"end":1171,"name":"POP","source":5},{"begin":1078,"end":1171,"name":"POP","source":5},{"begin":1078,"end":1171,"name":"PUSH","source":5,"value":"40"},{"begin":1078,"end":1171,"name":"MLOAD","source":5},{"begin":1078,"end":1171,"name":"DUP1","source":5},{"begin":1078,"end":1171,"name":"SWAP2","source":5},{"begin":1078,"end":1171,"name":"SUB","source":5},{"begin":1078,"end":1171,"name":"SWAP1","source":5},{"begin":1078,"end":1171,"name":"REVERT","source":5},{"begin":1078,"end":1171,"name":"tag","source":5,"value":"206"},{"begin":1078,"end":1171,"name":"JUMPDEST","source":5},{"begin":1204,"end":1212,"name":"DUP1","source":5},{"begin":1178,"end":1201,"name":"PUSH","source":5,"value":"0"},{"begin":1178,"end":1212,"name":"DUP2","source":5},{"begin":1178,"end":1212,"name":"SWAP1","source":5},{"begin":1178,"end":1212,"name":"SSTORE","source":5},{"begin":1178,"end":1212,"name":"POP","source":5},{"begin":2304,"end":2391,"name":"PUSH [tag]","source":7,"value":"208"},{"begin":2359,"end":2370,"name":"PUSHIMMUTABLE","source":7,"value":"1205"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"0"},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":2311,"end":2322,"name":"PUSHIMMUTABLE","source":7,"value":"1205"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":2311,"end":2335,"name":"AND","source":7},{"begin":2311,"end":2335,"name":"PUSH","source":7,"value":"312F6B83"},{"begin":2311,"end":2337,"name":"PUSH","source":7,"value":"40"},{"begin":2311,"end":2337,"name":"MLOAD","source":7},{"begin":2311,"end":2337,"name":"DUP2","source":7},{"begin":2311,"end":2337,"name":"PUSH","source":7,"value":"FFFFFFFF"},{"begin":2311,"end":2337,"name":"AND","source":7},{"begin":2311,"end":2337,"name":"PUSH","source":7,"value":"E0"},{"begin":2311,"end":2337,"name":"SHL","source":7},{"begin":2311,"end":2337,"name":"DUP2","source":7},{"begin":2311,"end":2337,"name":"MSTORE","source":7},{"begin":2311,"end":2337,"name":"PUSH","source":7,"value":"4"},{"begin":2311,"end":2337,"name":"ADD","source":7},{"begin":2311,"end":2337,"name":"PUSH","source":7,"value":"20"},{"begin":2311,"end":2337,"name":"PUSH","source":7,"value":"40"},{"begin":2311,"end":2337,"name":"MLOAD","source":7},{"begin":2311,"end":2337,"name":"DUP1","source":7},{"begin":2311,"end":2337,"name":"DUP4","source":7},{"begin":2311,"end":2337,"name":"SUB","source":7},{"begin":2311,"end":2337,"name":"DUP2","source":7},{"begin":2311,"end":2337,"name":"DUP7","source":7},{"begin":2311,"end":2337,"name":"DUP1","source":7},{"begin":2311,"end":2337,"name":"EXTCODESIZE","source":7},{"begin":2311,"end":2337,"name":"ISZERO","source":7},{"begin":2311,"end":2337,"name":"DUP1","source":7},{"begin":2311,"end":2337,"name":"ISZERO","source":7},{"begin":2311,"end":2337,"name":"PUSH [tag]","source":7,"value":"209"},{"begin":2311,"end":2337,"name":"JUMPI","source":7},{"begin":2311,"end":2337,"name":"PUSH","source":7,"value":"0"},{"begin":2311,"end":2337,"name":"DUP1","source":7},{"begin":2311,"end":2337,"name":"REVERT","source":7},{"begin":2311,"end":2337,"name":"tag","source":7,"value":"209"},{"begin":2311,"end":2337,"name":"JUMPDEST","source":7},{"begin":2311,"end":2337,"name":"POP","source":7},{"begin":2311,"end":2337,"name":"GAS","source":7},{"begin":2311,"end":2337,"name":"STATICCALL","source":7},{"begin":2311,"end":2337,"name":"ISZERO","source":7},{"begin":2311,"end":2337,"name":"DUP1","source":7},{"begin":2311,"end":2337,"name":"ISZERO","source":7},{"begin":2311,"end":2337,"name":"PUSH [tag]","source":7,"value":"211"},{"begin":2311,"end":2337,"name":"JUMPI","source":7},{"begin":2311,"end":2337,"name":"RETURNDATASIZE","source":7},{"begin":2311,"end":2337,"name":"PUSH","source":7,"value":"0"},{"begin":2311,"end":2337,"name":"DUP1","source":7},{"begin":2311,"end":2337,"name":"RETURNDATACOPY","source":7},{"begin":2311,"end":2337,"name":"RETURNDATASIZE","source":7},{"begin":2311,"end":2337,"name":"PUSH","source":7,"value":"0"},{"begin":2311,"end":2337,"name":"REVERT","source":7},{"begin":2311,"end":2337,"name":"tag","source":7,"value":"211"},{"begin":2311,"end":2337,"name":"JUMPDEST","source":7},{"begin":2311,"end":2337,"name":"POP","source":7},{"begin":2311,"end":2337,"name":"POP","source":7},{"begin":2311,"end":2337,"name":"POP","source":7},{"begin":2311,"end":2337,"name":"POP","source":7},{"begin":2311,"end":2337,"name":"PUSH","source":7,"value":"40"},{"begin":2311,"end":2337,"name":"MLOAD","source":7},{"begin":2311,"end":2337,"name":"RETURNDATASIZE","source":7},{"begin":2311,"end":2337,"name":"PUSH","source":7,"value":"1F"},{"begin":2311,"end":2337,"name":"NOT","source":7},{"begin":2311,"end":2337,"name":"PUSH","source":7,"value":"1F"},{"begin":2311,"end":2337,"name":"DUP3","source":7},{"begin":2311,"end":2337,"name":"ADD","source":7},{"begin":2311,"end":2337,"name":"AND","source":7},{"begin":2311,"end":2337,"name":"DUP3","source":7},{"begin":2311,"end":2337,"name":"ADD","source":7},{"begin":2311,"end":2337,"name":"DUP1","source":7},{"begin":2311,"end":2337,"name":"PUSH","source":7,"value":"40"},{"begin":2311,"end":2337,"name":"MSTORE","source":7},{"begin":2311,"end":2337,"name":"POP","source":7},{"begin":2311,"end":2337,"name":"DUP2","source":7},{"begin":2311,"end":2337,"name":"ADD","source":7},{"begin":2311,"end":2337,"name":"SWAP1","source":7},{"begin":2311,"end":2337,"name":"PUSH [tag]","source":7,"value":"212"},{"begin":2311,"end":2337,"name":"SWAP2","source":7},{"begin":2311,"end":2337,"name":"SWAP1","source":7},{"begin":2311,"end":2337,"name":"PUSH [tag]","source":7,"value":"213"},{"begin":2311,"end":2337,"name":"JUMP","source":7,"value":"[in]"},{"begin":2311,"end":2337,"name":"tag","source":7,"value":"212"},{"begin":2311,"end":2337,"name":"JUMPDEST","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":2304,"end":2350,"name":"AND","source":7},{"begin":2304,"end":2350,"name":"SWAP2","source":7},{"begin":2304,"end":2391,"name":"SWAP1","source":7},{"begin":2304,"end":2350,"name":"PUSH [tag]","source":7,"value":"214"},{"begin":2304,"end":2391,"name":"JUMP","source":7,"value":"[in]"},{"begin":2304,"end":2391,"name":"tag","source":7,"value":"208"},{"begin":2304,"end":2391,"name":"JUMPDEST","source":7},{"begin":2180,"end":2396,"name":"POP","source":7},{"begin":2180,"end":2396,"name":"POP","source":7},{"begin":2180,"end":2396,"name":"JUMP","source":7,"value":"[out]"},{"begin":657,"end":698,"name":"tag","source":6,"value":"92"},{"begin":657,"end":698,"name":"JUMPDEST","source":6},{"begin":657,"end":698,"name":"PUSHIMMUTABLE","source":6,"value":"588"},{"begin":657,"end":698,"name":"DUP2","source":6},{"begin":657,"end":698,"name":"JUMP","source":6,"value":"[out]"},{"begin":1301,"end":1337,"name":"tag","source":7,"value":"98"},{"begin":1301,"end":1337,"name":"JUMPDEST","source":7},{"begin":1336,"end":1337,"name":"PUSH","source":7,"value":"1"},{"begin":1301,"end":1337,"name":"DUP2","source":7},{"begin":1301,"end":1337,"name":"JUMP","source":7,"value":"[out]"},{"begin":744,"end":787,"name":"tag","source":6,"value":"102"},{"begin":744,"end":787,"name":"JUMPDEST","source":6},{"begin":744,"end":787,"name":"PUSH","source":6,"value":"33"},{"begin":744,"end":787,"name":"PUSH","source":6,"value":"20"},{"begin":744,"end":787,"name":"MSTORE","source":6},{"begin":744,"end":787,"name":"PUSH","source":6,"value":"0"},{"begin":744,"end":787,"name":"SWAP1","source":6},{"begin":744,"end":787,"name":"DUP2","source":6},{"begin":744,"end":787,"name":"MSTORE","source":6},{"begin":744,"end":787,"name":"PUSH","source":6,"value":"40"},{"begin":744,"end":787,"name":"SWAP1","source":6},{"begin":744,"end":787,"name":"KECCAK256","source":6},{"begin":744,"end":787,"name":"SLOAD","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"68"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":744,"end":787,"name":"DUP1","source":6},{"begin":744,"end":787,"name":"DUP3","source":6},{"begin":744,"end":787,"name":"AND","source":6},{"begin":744,"end":787,"name":"SWAP2","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"68"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":744,"end":787,"name":"DUP2","source":6},{"begin":744,"end":787,"name":"DIV","source":6},{"begin":744,"end":787,"name":"SWAP1","source":6},{"begin":744,"end":787,"name":"SWAP2","source":6},{"begin":744,"end":787,"name":"AND","source":6},{"begin":744,"end":787,"name":"SWAP1","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"D0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":744,"end":787,"name":"SWAP1","source":6},{"begin":744,"end":787,"name":"DIV","source":6},{"begin":744,"end":787,"name":"PUSH","source":6,"value":"FFFFFFFFFF"},{"begin":744,"end":787,"name":"AND","source":6},{"begin":744,"end":787,"name":"DUP4","source":6},{"begin":744,"end":787,"name":"JUMP","source":6,"value":"[out]"},{"begin":5458,"end":5626,"name":"tag","source":7,"value":"107"},{"begin":5458,"end":5626,"name":"JUMPDEST","source":7},{"begin":875,"end":885,"name":"CALLER","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":889,"end":905,"name":"PUSHIMMUTABLE","source":6,"value":"588"},{"begin":875,"end":905,"name":"AND","source":6},{"begin":875,"end":905,"name":"EQ","source":6},{"begin":867,"end":931,"name":"PUSH [tag]","source":6,"value":"217"},{"begin":867,"end":931,"name":"JUMPI","source":6},{"begin":867,"end":931,"name":"PUSH","source":6,"value":"40"},{"begin":867,"end":931,"name":"MLOAD","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"461BCD"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E5"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":867,"end":931,"name":"DUP2","source":6},{"begin":867,"end":931,"name":"MSTORE","source":6},{"begin":867,"end":931,"name":"PUSH","source":6,"value":"4"},{"begin":867,"end":931,"name":"ADD","source":6},{"begin":867,"end":931,"name":"PUSH [tag]","source":6,"value":"112"},{"begin":867,"end":931,"name":"SWAP1","source":6},{"begin":867,"end":931,"name":"PUSH [tag]","source":6,"value":"127"},{"begin":867,"end":931,"name":"JUMP","source":6,"value":"[in]"},{"begin":867,"end":931,"name":"tag","source":6,"value":"217"},{"begin":867,"end":931,"name":"JUMPDEST","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":5552,"end":5577,"name":"DUP3","source":7},{"begin":5552,"end":5577,"name":"DUP2","source":7},{"begin":5552,"end":5577,"name":"AND","source":7},{"begin":5552,"end":5577,"name":"PUSH","source":7,"value":"0"},{"begin":5552,"end":5577,"name":"DUP2","source":7},{"begin":5552,"end":5577,"name":"DUP2","source":7},{"begin":5552,"end":5577,"name":"MSTORE","source":7},{"begin":5552,"end":5571,"name":"PUSH","source":7,"value":"36"},{"begin":5552,"end":5577,"name":"PUSH","source":7,"value":"20"},{"begin":5552,"end":5577,"name":"MSTORE","source":7},{"begin":5552,"end":5577,"name":"PUSH","source":7,"value":"40"},{"begin":5552,"end":5577,"name":"DUP1","source":7},{"begin":5552,"end":5577,"name":"DUP3","source":7},{"begin":5552,"end":5577,"name":"KECCAK256","source":7},{"begin":5552,"end":5586,"name":"DUP1","source":7},{"begin":5552,"end":5586,"name":"SLOAD","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":5552,"end":5586,"name":"AND","source":7},{"begin":5552,"end":5586,"name":"SWAP5","source":7},{"begin":5552,"end":5586,"name":"DUP7","source":7},{"begin":5552,"end":5586,"name":"AND","source":7},{"begin":5552,"end":5586,"name":"SWAP5","source":7},{"begin":5552,"end":5586,"name":"DUP6","source":7},{"begin":5552,"end":5586,"name":"OR","source":7},{"begin":5552,"end":5586,"name":"SWAP1","source":7},{"begin":5552,"end":5586,"name":"SSTORE","source":7},{"begin":5597,"end":5621,"name":"MLOAD","source":7},{"begin":5597,"end":5621,"name":"PUSH","source":7,"value":"4925EAFC82D0C4D67889898EEED64B18488AB19811E61620F387026DEC126A28"},{"begin":5597,"end":5621,"name":"SWAP2","source":7},{"begin":5552,"end":5577,"name":"SWAP1","source":7},{"begin":5597,"end":5621,"name":"LOG3","source":7},{"begin":5458,"end":5626,"name":"POP","source":7},{"begin":5458,"end":5626,"name":"POP","source":7},{"begin":5458,"end":5626,"name":"JUMP","source":7,"value":"[out]"},{"begin":6617,"end":7833,"name":"tag","source":7,"value":"115"},{"begin":6617,"end":7833,"name":"JUMPDEST","source":7},{"begin":6768,"end":6775,"name":"PUSH","source":7,"value":"0"},{"begin":6787,"end":6798,"name":"DUP5","source":7},{"begin":6783,"end":6823,"name":"PUSH [tag]","source":7,"value":"221"},{"begin":6783,"end":6823,"name":"JUMPI","source":7},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":6815,"end":6816,"name":"PUSH","source":7,"value":"0"},{"begin":6808,"end":6816,"name":"PUSH [tag]","source":7,"value":"220"},{"begin":6808,"end":6816,"name":"JUMP","source":7},{"begin":6783,"end":6823,"name":"tag","source":7,"value":"221"},{"begin":6783,"end":6823,"name":"JUMPDEST","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":6855,"end":6883,"name":"DUP4","source":7},{"begin":6855,"end":6883,"name":"AND","source":7},{"begin":6828,"end":6852,"name":"PUSH","source":7,"value":"0"},{"begin":6855,"end":6883,"name":"SWAP1","source":7},{"begin":6855,"end":6883,"name":"DUP2","source":7},{"begin":6855,"end":6883,"name":"MSTORE","source":7},{"begin":6855,"end":6877,"name":"PUSH","source":7,"value":"35"},{"begin":6855,"end":6883,"name":"PUSH","source":7,"value":"20"},{"begin":6855,"end":6883,"name":"MSTORE","source":7},{"begin":6855,"end":6883,"name":"PUSH","source":7,"value":"40"},{"begin":6855,"end":6883,"name":"SWAP1","source":7},{"begin":6855,"end":6883,"name":"KECCAK256","source":7},{"begin":6855,"end":6883,"name":"SLOAD","source":7},{"begin":6890,"end":6941,"name":"PUSH","source":7,"value":"60"},{"begin":6989,"end":6995,"name":"DUP8","source":7},{"begin":6950,"end":7003,"name":"PUSH","source":7,"value":"FFFFFFFFFFFFFFFF"},{"begin":6950,"end":7003,"name":"DUP2","source":7},{"begin":6950,"end":7003,"name":"GT","source":7},{"begin":6950,"end":7003,"name":"DUP1","source":7},{"begin":6950,"end":7003,"name":"ISZERO","source":7},{"begin":6950,"end":7003,"name":"PUSH [tag]","source":7,"value":"222"},{"begin":6950,"end":7003,"name":"JUMPI","source":7},{"begin":6950,"end":7003,"name":"PUSH","source":7,"value":"0"},{"begin":6950,"end":7003,"name":"DUP1","source":7},{"begin":6950,"end":7003,"name":"REVERT","source":7},{"begin":6950,"end":7003,"name":"tag","source":7,"value":"222"},{"begin":6950,"end":7003,"name":"JUMPDEST","source":7},{"begin":6950,"end":7003,"name":"POP","source":7},{"begin":6950,"end":7003,"name":"PUSH","source":7,"value":"40"},{"begin":6950,"end":7003,"name":"MLOAD","source":7},{"begin":6950,"end":7003,"name":"SWAP1","source":7},{"begin":6950,"end":7003,"name":"DUP1","source":7},{"begin":6950,"end":7003,"name":"DUP3","source":7},{"begin":6950,"end":7003,"name":"MSTORE","source":7},{"begin":6950,"end":7003,"name":"DUP1","source":7},{"begin":6950,"end":7003,"name":"PUSH","source":7,"value":"20"},{"begin":6950,"end":7003,"name":"MUL","source":7},{"begin":6950,"end":7003,"name":"PUSH","source":7,"value":"20"},{"begin":6950,"end":7003,"name":"ADD","source":7},{"begin":6950,"end":7003,"name":"DUP3","source":7},{"begin":6950,"end":7003,"name":"ADD","source":7},{"begin":6950,"end":7003,"name":"PUSH","source":7,"value":"40"},{"begin":6950,"end":7003,"name":"MSTORE","source":7},{"begin":6950,"end":7003,"name":"DUP1","source":7},{"begin":6950,"end":7003,"name":"ISZERO","source":7},{"begin":6950,"end":7003,"name":"PUSH [tag]","source":7,"value":"223"},{"begin":6950,"end":7003,"name":"JUMPI","source":7},{"begin":6950,"end":7003,"name":"DUP2","source":7},{"begin":6950,"end":7003,"name":"PUSH","source":7,"value":"20"},{"begin":6950,"end":7003,"name":"ADD","source":7},{"begin":6950,"end":7003,"name":"tag","source":7,"value":"224"},{"begin":6950,"end":7003,"name":"JUMPDEST","source":7},{"begin":6950,"end":7003,"name":"PUSH [tag]","source":7,"value":"225"},{"begin":6950,"end":7003,"name":"PUSH [tag]","source":7,"value":"181"},{"begin":6950,"end":7003,"name":"JUMP","source":7,"value":"[in]"},{"begin":6950,"end":7003,"name":"tag","source":7,"value":"225"},{"begin":6950,"end":7003,"name":"JUMPDEST","source":7},{"begin":6950,"end":7003,"name":"DUP2","source":7},{"begin":6950,"end":7003,"name":"MSTORE","source":7},{"begin":6950,"end":7003,"name":"PUSH","source":7,"value":"20"},{"begin":6950,"end":7003,"name":"ADD","source":7},{"begin":6950,"end":7003,"name":"SWAP1","source":7},{"begin":6950,"end":7003,"name":"PUSH","source":7,"value":"1"},{"begin":6950,"end":7003,"name":"SWAP1","source":7},{"begin":6950,"end":7003,"name":"SUB","source":7},{"begin":6950,"end":7003,"name":"SWAP1","source":7},{"begin":6950,"end":7003,"name":"DUP2","source":7},{"begin":6950,"end":7003,"name":"PUSH [tag]","source":7,"value":"224"},{"begin":6950,"end":7003,"name":"JUMPI","source":7},{"begin":6950,"end":7003,"name":"SWAP1","source":7},{"begin":6950,"end":7003,"name":"POP","source":7},{"begin":6950,"end":7003,"name":"tag","source":7,"value":"223"},{"begin":6950,"end":7003,"name":"JUMPDEST","source":7},{"begin":6950,"end":7003,"name":"POP","source":7},{"begin":6890,"end":7003,"name":"SWAP1","source":7},{"begin":6890,"end":7003,"name":"POP","source":7},{"begin":7014,"end":7023,"name":"PUSH","source":7,"value":"0"},{"begin":7009,"end":7247,"name":"tag","source":7,"value":"226"},{"begin":7009,"end":7247,"name":"JUMPDEST","source":7},{"begin":7029,"end":7046,"name":"DUP9","source":7},{"begin":7029,"end":7046,"name":"DUP2","source":7},{"begin":7029,"end":7046,"name":"LT","source":7},{"begin":7009,"end":7247,"name":"ISZERO","source":7},{"begin":7009,"end":7247,"name":"PUSH [tag]","source":7,"value":"227"},{"begin":7009,"end":7247,"name":"JUMPI","source":7},{"begin":7092,"end":7098,"name":"DUP10","source":7},{"begin":7092,"end":7098,"name":"DUP10","source":7},{"begin":7099,"end":7100,"name":"DUP3","source":7},{"begin":7092,"end":7101,"name":"DUP2","source":7},{"begin":7092,"end":7101,"name":"DUP2","source":7},{"begin":7092,"end":7101,"name":"LT","source":7},{"begin":7092,"end":7101,"name":"PUSH [tag]","source":7,"value":"229"},{"begin":7092,"end":7101,"name":"JUMPI","source":7},{"begin":7092,"end":7101,"name":"INVALID","source":7},{"begin":7092,"end":7101,"name":"tag","source":7,"value":"229"},{"begin":7092,"end":7101,"name":"JUMPDEST","source":7},{"begin":7092,"end":7101,"name":"SWAP1","source":7},{"begin":7092,"end":7101,"name":"POP","source":7},{"begin":7092,"end":7101,"name":"PUSH","source":7,"value":"20"},{"begin":7092,"end":7101,"name":"MUL","source":7},{"begin":7092,"end":7101,"name":"ADD","source":7},{"begin":7092,"end":7101,"name":"PUSH","source":7,"value":"20"},{"begin":7092,"end":7101,"name":"DUP2","source":7},{"begin":7092,"end":7101,"name":"ADD","source":7},{"begin":7092,"end":7101,"name":"SWAP1","source":7},{"begin":7092,"end":7101,"name":"PUSH [tag]","source":7,"value":"230"},{"begin":7092,"end":7101,"name":"SWAP2","source":7},{"begin":7092,"end":7101,"name":"SWAP1","source":7},{"begin":7092,"end":7101,"name":"PUSH [tag]","source":7,"value":"28"},{"begin":7092,"end":7101,"name":"JUMP","source":7,"value":"[in]"},{"begin":7092,"end":7101,"name":"tag","source":7,"value":"230"},{"begin":7092,"end":7101,"name":"JUMPDEST","source":7},{"begin":7061,"end":7070,"name":"DUP3","source":7},{"begin":7071,"end":7072,"name":"DUP3","source":7},{"begin":7061,"end":7073,"name":"DUP2","source":7},{"begin":7061,"end":7073,"name":"MLOAD","source":7},{"begin":7061,"end":7073,"name":"DUP2","source":7},{"begin":7061,"end":7073,"name":"LT","source":7},{"begin":7061,"end":7073,"name":"PUSH [tag]","source":7,"value":"231"},{"begin":7061,"end":7073,"name":"JUMPI","source":7},{"begin":7061,"end":7073,"name":"INVALID","source":7},{"begin":7061,"end":7073,"name":"tag","source":7,"value":"231"},{"begin":7061,"end":7073,"name":"JUMPDEST","source":7},{"begin":7061,"end":7073,"name":"PUSH","source":7,"value":"20"},{"begin":7061,"end":7073,"name":"SWAP1","source":7},{"begin":7061,"end":7073,"name":"DUP2","source":7},{"begin":7061,"end":7073,"name":"MUL","source":7},{"begin":7061,"end":7073,"name":"SWAP2","source":7},{"begin":7061,"end":7073,"name":"SWAP1","source":7},{"begin":7061,"end":7073,"name":"SWAP2","source":7},{"begin":7061,"end":7073,"name":"ADD","source":7},{"begin":7061,"end":7073,"name":"ADD","source":7},{"begin":7061,"end":7073,"name":"MLOAD","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":7061,"end":7101,"name":"SWAP1","source":7},{"begin":7061,"end":7101,"name":"SWAP2","source":7},{"begin":7061,"end":7101,"name":"AND","source":7},{"begin":7061,"end":7101,"name":"SWAP1","source":7},{"begin":7061,"end":7101,"name":"MSTORE","source":7},{"begin":7185,"end":7191,"name":"DUP10","source":7},{"begin":7185,"end":7191,"name":"DUP10","source":7},{"begin":7192,"end":7193,"name":"DUP3","source":7},{"begin":7185,"end":7194,"name":"DUP2","source":7},{"begin":7185,"end":7194,"name":"DUP2","source":7},{"begin":7185,"end":7194,"name":"LT","source":7},{"begin":7185,"end":7194,"name":"PUSH [tag]","source":7,"value":"232"},{"begin":7185,"end":7194,"name":"JUMPI","source":7},{"begin":7185,"end":7194,"name":"INVALID","source":7},{"begin":7185,"end":7194,"name":"tag","source":7,"value":"232"},{"begin":7185,"end":7194,"name":"JUMPDEST","source":7},{"begin":7185,"end":7194,"name":"SWAP1","source":7},{"begin":7185,"end":7194,"name":"POP","source":7},{"begin":7185,"end":7194,"name":"PUSH","source":7,"value":"20"},{"begin":7185,"end":7194,"name":"MUL","source":7},{"begin":7185,"end":7194,"name":"ADD","source":7},{"begin":7185,"end":7194,"name":"PUSH","source":7,"value":"20"},{"begin":7185,"end":7194,"name":"DUP2","source":7},{"begin":7185,"end":7194,"name":"ADD","source":7},{"begin":7185,"end":7194,"name":"SWAP1","source":7},{"begin":7185,"end":7194,"name":"PUSH [tag]","source":7,"value":"233"},{"begin":7185,"end":7194,"name":"SWAP2","source":7},{"begin":7185,"end":7194,"name":"SWAP1","source":7},{"begin":7185,"end":7194,"name":"PUSH [tag]","source":7,"value":"28"},{"begin":7185,"end":7194,"name":"JUMP","source":7,"value":"[in]"},{"begin":7185,"end":7194,"name":"tag","source":7,"value":"233"},{"begin":7185,"end":7194,"name":"JUMPDEST","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":7165,"end":7234,"name":"AND","source":7},{"begin":7165,"end":7234,"name":"PUSH","source":7,"value":"AFBCDC9"},{"begin":7235,"end":7239,"name":"DUP8","source":7},{"begin":7165,"end":7240,"name":"PUSH","source":7,"value":"40"},{"begin":7165,"end":7240,"name":"MLOAD","source":7},{"begin":7165,"end":7240,"name":"DUP3","source":7},{"begin":7165,"end":7240,"name":"PUSH","source":7,"value":"FFFFFFFF"},{"begin":7165,"end":7240,"name":"AND","source":7},{"begin":7165,"end":7240,"name":"PUSH","source":7,"value":"E0"},{"begin":7165,"end":7240,"name":"SHL","source":7},{"begin":7165,"end":7240,"name":"DUP2","source":7},{"begin":7165,"end":7240,"name":"MSTORE","source":7},{"begin":7165,"end":7240,"name":"PUSH","source":7,"value":"4"},{"begin":7165,"end":7240,"name":"ADD","source":7},{"begin":7165,"end":7240,"name":"PUSH [tag]","source":7,"value":"234"},{"begin":7165,"end":7240,"name":"SWAP2","source":7},{"begin":7165,"end":7240,"name":"SWAP1","source":7},{"begin":7165,"end":7240,"name":"PUSH [tag]","source":7,"value":"68"},{"begin":7165,"end":7240,"name":"JUMP","source":7,"value":"[in]"},{"begin":7165,"end":7240,"name":"tag","source":7,"value":"234"},{"begin":7165,"end":7240,"name":"JUMPDEST","source":7},{"begin":7165,"end":7240,"name":"PUSH","source":7,"value":"40"},{"begin":7165,"end":7240,"name":"DUP1","source":7},{"begin":7165,"end":7240,"name":"MLOAD","source":7},{"begin":7165,"end":7240,"name":"DUP1","source":7},{"begin":7165,"end":7240,"name":"DUP4","source":7},{"begin":7165,"end":7240,"name":"SUB","source":7},{"begin":7165,"end":7240,"name":"DUP2","source":7},{"begin":7165,"end":7240,"name":"DUP7","source":7},{"begin":7165,"end":7240,"name":"DUP1","source":7},{"begin":7165,"end":7240,"name":"EXTCODESIZE","source":7},{"begin":7165,"end":7240,"name":"ISZERO","source":7},{"begin":7165,"end":7240,"name":"DUP1","source":7},{"begin":7165,"end":7240,"name":"ISZERO","source":7},{"begin":7165,"end":7240,"name":"PUSH [tag]","source":7,"value":"235"},{"begin":7165,"end":7240,"name":"JUMPI","source":7},{"begin":7165,"end":7240,"name":"PUSH","source":7,"value":"0"},{"begin":7165,"end":7240,"name":"DUP1","source":7},{"begin":7165,"end":7240,"name":"REVERT","source":7},{"begin":7165,"end":7240,"name":"tag","source":7,"value":"235"},{"begin":7165,"end":7240,"name":"JUMPDEST","source":7},{"begin":7165,"end":7240,"name":"POP","source":7},{"begin":7165,"end":7240,"name":"GAS","source":7},{"begin":7165,"end":7240,"name":"STATICCALL","source":7},{"begin":7165,"end":7240,"name":"ISZERO","source":7},{"begin":7165,"end":7240,"name":"DUP1","source":7},{"begin":7165,"end":7240,"name":"ISZERO","source":7},{"begin":7165,"end":7240,"name":"PUSH [tag]","source":7,"value":"237"},{"begin":7165,"end":7240,"name":"JUMPI","source":7},{"begin":7165,"end":7240,"name":"RETURNDATASIZE","source":7},{"begin":7165,"end":7240,"name":"PUSH","source":7,"value":"0"},{"begin":7165,"end":7240,"name":"DUP1","source":7},{"begin":7165,"end":7240,"name":"RETURNDATACOPY","source":7},{"begin":7165,"end":7240,"name":"RETURNDATASIZE","source":7},{"begin":7165,"end":7240,"name":"PUSH","source":7,"value":"0"},{"begin":7165,"end":7240,"name":"REVERT","source":7},{"begin":7165,"end":7240,"name":"tag","source":7,"value":"237"},{"begin":7165,"end":7240,"name":"JUMPDEST","source":7},{"begin":7165,"end":7240,"name":"POP","source":7},{"begin":7165,"end":7240,"name":"POP","source":7},{"begin":7165,"end":7240,"name":"POP","source":7},{"begin":7165,"end":7240,"name":"POP","source":7},{"begin":7165,"end":7240,"name":"PUSH","source":7,"value":"40"},{"begin":7165,"end":7240,"name":"MLOAD","source":7},{"begin":7165,"end":7240,"name":"RETURNDATASIZE","source":7},{"begin":7165,"end":7240,"name":"PUSH","source":7,"value":"1F"},{"begin":7165,"end":7240,"name":"NOT","source":7},{"begin":7165,"end":7240,"name":"PUSH","source":7,"value":"1F"},{"begin":7165,"end":7240,"name":"DUP3","source":7},{"begin":7165,"end":7240,"name":"ADD","source":7},{"begin":7165,"end":7240,"name":"AND","source":7},{"begin":7165,"end":7240,"name":"DUP3","source":7},{"begin":7165,"end":7240,"name":"ADD","source":7},{"begin":7165,"end":7240,"name":"DUP1","source":7},{"begin":7165,"end":7240,"name":"PUSH","source":7,"value":"40"},{"begin":7165,"end":7240,"name":"MSTORE","source":7},{"begin":7165,"end":7240,"name":"POP","source":7},{"begin":7165,"end":7240,"name":"DUP2","source":7},{"begin":7165,"end":7240,"name":"ADD","source":7},{"begin":7165,"end":7240,"name":"SWAP1","source":7},{"begin":7165,"end":7240,"name":"PUSH [tag]","source":7,"value":"238"},{"begin":7165,"end":7240,"name":"SWAP2","source":7},{"begin":7165,"end":7240,"name":"SWAP1","source":7},{"begin":7165,"end":7240,"name":"PUSH [tag]","source":7,"value":"195"},{"begin":7165,"end":7240,"name":"JUMP","source":7,"value":"[in]"},{"begin":7165,"end":7240,"name":"tag","source":7,"value":"238"},{"begin":7165,"end":7240,"name":"JUMPDEST","source":7},{"begin":7110,"end":7119,"name":"DUP4","source":7},{"begin":7120,"end":7121,"name":"DUP4","source":7},{"begin":7110,"end":7122,"name":"DUP2","source":7},{"begin":7110,"end":7122,"name":"MLOAD","source":7},{"begin":7110,"end":7122,"name":"DUP2","source":7},{"begin":7110,"end":7122,"name":"LT","source":7},{"begin":7110,"end":7122,"name":"PUSH [tag]","source":7,"value":"239"},{"begin":7110,"end":7122,"name":"JUMPI","source":7},{"begin":7110,"end":7122,"name":"INVALID","source":7},{"begin":7110,"end":7122,"name":"tag","source":7,"value":"239"},{"begin":7110,"end":7122,"name":"JUMPDEST","source":7},{"begin":7110,"end":7122,"name":"PUSH","source":7,"value":"20"},{"begin":7110,"end":7122,"name":"MUL","source":7},{"begin":7110,"end":7122,"name":"PUSH","source":7,"value":"20"},{"begin":7110,"end":7122,"name":"ADD","source":7},{"begin":7110,"end":7122,"name":"ADD","source":7},{"begin":7110,"end":7122,"name":"MLOAD","source":7},{"begin":7110,"end":7135,"name":"PUSH","source":7,"value":"20"},{"begin":7110,"end":7135,"name":"ADD","source":7},{"begin":7137,"end":7146,"name":"DUP5","source":7},{"begin":7147,"end":7148,"name":"DUP5","source":7},{"begin":7137,"end":7149,"name":"DUP2","source":7},{"begin":7137,"end":7149,"name":"MLOAD","source":7},{"begin":7137,"end":7149,"name":"DUP2","source":7},{"begin":7137,"end":7149,"name":"LT","source":7},{"begin":7137,"end":7149,"name":"PUSH [tag]","source":7,"value":"240"},{"begin":7137,"end":7149,"name":"JUMPI","source":7},{"begin":7137,"end":7149,"name":"INVALID","source":7},{"begin":7137,"end":7149,"name":"tag","source":7,"value":"240"},{"begin":7137,"end":7149,"name":"JUMPDEST","source":7},{"begin":7137,"end":7149,"name":"PUSH","source":7,"value":"20"},{"begin":7137,"end":7149,"name":"SWAP1","source":7},{"begin":7137,"end":7149,"name":"DUP2","source":7},{"begin":7137,"end":7149,"name":"MUL","source":7},{"begin":7137,"end":7149,"name":"SWAP2","source":7},{"begin":7137,"end":7149,"name":"SWAP1","source":7},{"begin":7137,"end":7149,"name":"SWAP2","source":7},{"begin":7137,"end":7149,"name":"ADD","source":7},{"begin":7137,"end":7149,"name":"ADD","source":7},{"begin":7137,"end":7149,"name":"MLOAD","source":7},{"begin":7137,"end":7161,"name":"PUSH","source":7,"value":"40"},{"begin":7137,"end":7161,"name":"ADD","source":7},{"begin":7109,"end":7240,"name":"SWAP2","source":7},{"begin":7109,"end":7240,"name":"SWAP1","source":7},{"begin":7109,"end":7240,"name":"SWAP2","source":7},{"begin":7109,"end":7240,"name":"MSTORE","source":7},{"begin":7109,"end":7240,"name":"MSTORE","source":7},{"begin":7048,"end":7051,"name":"PUSH","source":7,"value":"1"},{"begin":7048,"end":7051,"name":"ADD","source":7},{"begin":7009,"end":7247,"name":"PUSH [tag]","source":7,"value":"226"},{"begin":7009,"end":7247,"name":"JUMP","source":7},{"begin":7009,"end":7247,"name":"tag","source":7,"value":"227"},{"begin":7009,"end":7247,"name":"JUMPDEST","source":7},{"begin":7009,"end":7247,"name":"POP","source":7},{"begin":7253,"end":7275,"name":"PUSH","source":7,"value":"0"},{"begin":7278,"end":7308,"name":"PUSH [tag]","source":7,"value":"241"},{"begin":7292,"end":7296,"name":"DUP7","source":7},{"begin":7298,"end":7307,"name":"DUP4","source":7},{"begin":7278,"end":7291,"name":"PUSH [tag]","source":7,"value":"242"},{"begin":7278,"end":7308,"name":"JUMP","source":7,"value":"[in]"},{"begin":7278,"end":7308,"name":"tag","source":7,"value":"241"},{"begin":7278,"end":7308,"name":"JUMPDEST","source":7},{"begin":7253,"end":7308,"name":"SWAP1","source":7},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":7318,"end":7337,"name":"DUP1","source":7},{"begin":7318,"end":7337,"name":"ISZERO","source":7},{"begin":7314,"end":7458,"name":"PUSH [tag]","source":7,"value":"243"},{"begin":7314,"end":7458,"name":"JUMPI","source":7},{"begin":7366,"end":7402,"name":"PUSH [tag]","source":7,"value":"244"},{"begin":7366,"end":7382,"name":"DUP4","source":7},{"begin":7387,"end":7401,"name":"DUP3","source":7},{"begin":7366,"end":7386,"name":"PUSH [tag]","source":7,"value":"121"},{"begin":7366,"end":7402,"name":"JUMP","source":7,"value":"[in]"},{"begin":7366,"end":7402,"name":"tag","source":7,"value":"244"},{"begin":7366,"end":7402,"name":"JUMPDEST","source":7},{"begin":7347,"end":7402,"name":"SWAP3","source":7},{"begin":7347,"end":7402,"name":"POP","source":7},{"begin":7430,"end":7434,"name":"DUP6","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":7415,"end":7451,"name":"AND","source":7},{"begin":7415,"end":7451,"name":"PUSH","source":7,"value":"2468F9268C60AD90E2D49EDB0032C8A001E733AE888B3AB8E982EDF535BE1A76"},{"begin":7436,"end":7450,"name":"DUP3","source":7},{"begin":7415,"end":7451,"name":"PUSH","source":7,"value":"40"},{"begin":7415,"end":7451,"name":"MLOAD","source":7},{"begin":7415,"end":7451,"name":"PUSH [tag]","source":7,"value":"245"},{"begin":7415,"end":7451,"name":"SWAP2","source":7},{"begin":7415,"end":7451,"name":"SWAP1","source":7},{"begin":7415,"end":7451,"name":"PUSH [tag]","source":7,"value":"36"},{"begin":7415,"end":7451,"name":"JUMP","source":7,"value":"[in]"},{"begin":7415,"end":7451,"name":"tag","source":7,"value":"245"},{"begin":7415,"end":7451,"name":"JUMPDEST","source":7},{"begin":7415,"end":7451,"name":"PUSH","source":7,"value":"40"},{"begin":7415,"end":7451,"name":"MLOAD","source":7},{"begin":7415,"end":7451,"name":"DUP1","source":7},{"begin":7415,"end":7451,"name":"SWAP2","source":7},{"begin":7415,"end":7451,"name":"SUB","source":7},{"begin":7415,"end":7451,"name":"SWAP1","source":7},{"begin":7415,"end":7451,"name":"LOG2","source":7},{"begin":7314,"end":7458,"name":"tag","source":7,"value":"243"},{"begin":7314,"end":7458,"name":"JUMPDEST","source":7},{"begin":7468,"end":7489,"name":"DUP3","source":7},{"begin":7464,"end":7514,"name":"PUSH [tag]","source":7,"value":"246"},{"begin":7464,"end":7514,"name":"JUMPI","source":7},{"begin":7506,"end":7507,"name":"PUSH","source":7,"value":"0"},{"begin":7499,"end":7507,"name":"SWAP4","source":7},{"begin":7499,"end":7507,"name":"POP","source":7},{"begin":7499,"end":7507,"name":"POP","source":7},{"begin":7499,"end":7507,"name":"POP","source":7},{"begin":7499,"end":7507,"name":"POP","source":7},{"begin":7499,"end":7507,"name":"PUSH [tag]","source":7,"value":"220"},{"begin":7499,"end":7507,"name":"JUMP","source":7},{"begin":7464,"end":7514,"name":"tag","source":7,"value":"246"},{"begin":7464,"end":7514,"name":"JUMPDEST","source":7},{"begin":7520,"end":7541,"name":"PUSH","source":7,"value":"0"},{"begin":7553,"end":7569,"name":"DUP4","source":7},{"begin":7544,"end":7550,"name":"DUP10","source":7},{"begin":7544,"end":7569,"name":"GT","source":7},{"begin":7544,"end":7597,"name":"PUSH [tag]","source":7,"value":"247"},{"begin":7544,"end":7597,"name":"JUMPI","source":7},{"begin":7591,"end":7597,"name":"DUP9","source":7},{"begin":7544,"end":7597,"name":"PUSH [tag]","source":7,"value":"248"},{"begin":7544,"end":7597,"name":"JUMP","source":7},{"begin":7544,"end":7597,"name":"tag","source":7,"value":"247"},{"begin":7544,"end":7597,"name":"JUMPDEST","source":7},{"begin":7572,"end":7588,"name":"DUP4","source":7},{"begin":7544,"end":7597,"name":"tag","source":7,"value":"248"},{"begin":7544,"end":7597,"name":"JUMPDEST","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":7603,"end":7631,"name":"DUP1","source":7},{"begin":7603,"end":7631,"name":"DUP10","source":7},{"begin":7603,"end":7631,"name":"AND","source":7},{"begin":7603,"end":7631,"name":"PUSH","source":7,"value":"0"},{"begin":7603,"end":7631,"name":"SWAP1","source":7},{"begin":7603,"end":7631,"name":"DUP2","source":7},{"begin":7603,"end":7631,"name":"MSTORE","source":7},{"begin":7603,"end":7625,"name":"PUSH","source":7,"value":"35"},{"begin":7603,"end":7631,"name":"PUSH","source":7,"value":"20"},{"begin":7603,"end":7631,"name":"MSTORE","source":7},{"begin":7603,"end":7631,"name":"PUSH","source":7,"value":"40"},{"begin":7603,"end":7631,"name":"SWAP1","source":7},{"begin":7603,"end":7631,"name":"DUP2","source":7},{"begin":7603,"end":7631,"name":"SWAP1","source":7},{"begin":7603,"end":7631,"name":"KECCAK256","source":7},{"begin":7634,"end":7666,"name":"DUP4","source":7},{"begin":7634,"end":7666,"name":"DUP9","source":7},{"begin":7634,"end":7666,"name":"SUB","source":7},{"begin":7603,"end":7666,"name":"SWAP1","source":7},{"begin":7603,"end":7666,"name":"SSTORE","source":7},{"begin":7706,"end":7742,"name":"MLOAD","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"56E4BB97"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E1"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":7706,"end":7742,"name":"DUP2","source":7},{"begin":7706,"end":7742,"name":"MSTORE","source":7},{"begin":7520,"end":7597,"name":"SWAP2","source":7},{"begin":7520,"end":7597,"name":"SWAP3","source":7},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":7706,"end":7717,"name":"PUSHIMMUTABLE","source":7,"value":"1205"},{"begin":7706,"end":7723,"name":"AND","source":7},{"begin":7706,"end":7723,"name":"SWAP1","source":7},{"begin":7706,"end":7723,"name":"PUSH","source":7,"value":"ADC9772E"},{"begin":7706,"end":7723,"name":"SWAP1","source":7},{"begin":7706,"end":7742,"name":"PUSH [tag]","source":7,"value":"249"},{"begin":7706,"end":7742,"name":"SWAP1","source":7},{"begin":7724,"end":7726,"name":"DUP10","source":7},{"begin":7724,"end":7726,"name":"SWAP1","source":7},{"begin":7520,"end":7597,"name":"DUP6","source":7},{"begin":7520,"end":7597,"name":"SWAP1","source":7},{"begin":7706,"end":7742,"name":"PUSH","source":7,"value":"4"},{"begin":7706,"end":7742,"name":"ADD","source":7},{"begin":7706,"end":7742,"name":"PUSH [tag]","source":7,"value":"250"},{"begin":7706,"end":7742,"name":"JUMP","source":7,"value":"[in]"},{"begin":7706,"end":7742,"name":"tag","source":7,"value":"249"},{"begin":7706,"end":7742,"name":"JUMPDEST","source":7},{"begin":7706,"end":7742,"name":"PUSH","source":7,"value":"0"},{"begin":7706,"end":7742,"name":"PUSH","source":7,"value":"40"},{"begin":7706,"end":7742,"name":"MLOAD","source":7},{"begin":7706,"end":7742,"name":"DUP1","source":7},{"begin":7706,"end":7742,"name":"DUP4","source":7},{"begin":7706,"end":7742,"name":"SUB","source":7},{"begin":7706,"end":7742,"name":"DUP2","source":7},{"begin":7706,"end":7742,"name":"PUSH","source":7,"value":"0"},{"begin":7706,"end":7742,"name":"DUP8","source":7},{"begin":7706,"end":7742,"name":"DUP1","source":7},{"begin":7706,"end":7742,"name":"EXTCODESIZE","source":7},{"begin":7706,"end":7742,"name":"ISZERO","source":7},{"begin":7706,"end":7742,"name":"DUP1","source":7},{"begin":7706,"end":7742,"name":"ISZERO","source":7},{"begin":7706,"end":7742,"name":"PUSH [tag]","source":7,"value":"251"},{"begin":7706,"end":7742,"name":"JUMPI","source":7},{"begin":7706,"end":7742,"name":"PUSH","source":7,"value":"0"},{"begin":7706,"end":7742,"name":"DUP1","source":7},{"begin":7706,"end":7742,"name":"REVERT","source":7},{"begin":7706,"end":7742,"name":"tag","source":7,"value":"251"},{"begin":7706,"end":7742,"name":"JUMPDEST","source":7},{"begin":7706,"end":7742,"name":"POP","source":7},{"begin":7706,"end":7742,"name":"GAS","source":7},{"begin":7706,"end":7742,"name":"CALL","source":7},{"begin":7706,"end":7742,"name":"ISZERO","source":7},{"begin":7706,"end":7742,"name":"DUP1","source":7},{"begin":7706,"end":7742,"name":"ISZERO","source":7},{"begin":7706,"end":7742,"name":"PUSH [tag]","source":7,"value":"253"},{"begin":7706,"end":7742,"name":"JUMPI","source":7},{"begin":7706,"end":7742,"name":"RETURNDATASIZE","source":7},{"begin":7706,"end":7742,"name":"PUSH","source":7,"value":"0"},{"begin":7706,"end":7742,"name":"DUP1","source":7},{"begin":7706,"end":7742,"name":"RETURNDATACOPY","source":7},{"begin":7706,"end":7742,"name":"RETURNDATASIZE","source":7},{"begin":7706,"end":7742,"name":"PUSH","source":7,"value":"0"},{"begin":7706,"end":7742,"name":"REVERT","source":7},{"begin":7706,"end":7742,"name":"tag","source":7,"value":"253"},{"begin":7706,"end":7742,"name":"JUMPDEST","source":7},{"begin":7706,"end":7742,"name":"POP","source":7},{"begin":7706,"end":7742,"name":"POP","source":7},{"begin":7706,"end":7742,"name":"POP","source":7},{"begin":7706,"end":7742,"name":"POP","source":7},{"begin":7778,"end":7785,"name":"DUP8","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":7753,"end":7801,"name":"AND","source":7},{"begin":7774,"end":7776,"name":"DUP7","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":7753,"end":7801,"name":"AND","source":7},{"begin":7768,"end":7772,"name":"DUP9","source":7},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":7753,"end":7801,"name":"AND","source":7},{"begin":7753,"end":7801,"name":"PUSH","source":7,"value":"5637D7F962248A7F05A7AB69EEC6446E31F3D0A299D997F135A65C62806E7891"},{"begin":7787,"end":7800,"name":"DUP5","source":7},{"begin":7753,"end":7801,"name":"PUSH","source":7,"value":"40"},{"begin":7753,"end":7801,"name":"MLOAD","source":7},{"begin":7753,"end":7801,"name":"PUSH [tag]","source":7,"value":"254"},{"begin":7753,"end":7801,"name":"SWAP2","source":7},{"begin":7753,"end":7801,"name":"SWAP1","source":7},{"begin":7753,"end":7801,"name":"PUSH [tag]","source":7,"value":"36"},{"begin":7753,"end":7801,"name":"JUMP","source":7,"value":"[in]"},{"begin":7753,"end":7801,"name":"tag","source":7,"value":"254"},{"begin":7753,"end":7801,"name":"JUMPDEST","source":7},{"begin":7753,"end":7801,"name":"PUSH","source":7,"value":"40"},{"begin":7753,"end":7801,"name":"MLOAD","source":7},{"begin":7753,"end":7801,"name":"DUP1","source":7},{"begin":7753,"end":7801,"name":"SWAP2","source":7},{"begin":7753,"end":7801,"name":"SUB","source":7},{"begin":7753,"end":7801,"name":"SWAP1","source":7},{"begin":7753,"end":7801,"name":"LOG4","source":7},{"begin":7815,"end":7828,"name":"SWAP4","source":7},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":6617,"end":7833,"name":"tag","source":7,"value":"220"},{"begin":6617,"end":7833,"name":"JUMPDEST","source":7},{"begin":6617,"end":7833,"name":"SWAP7","source":7},{"begin":6617,"end":7833,"name":"SWAP6","source":7},{"begin":6617,"end":7833,"name":"POP","source":7},{"begin":6617,"end":7833,"name":"POP","source":7},{"begin":6617,"end":7833,"name":"POP","source":7},{"begin":6617,"end":7833,"name":"POP","source":7},{"begin":6617,"end":7833,"name":"POP","source":7},{"begin":6617,"end":7833,"name":"POP","source":7},{"begin":6617,"end":7833,"name":"JUMP","source":7,"value":"[out]"},{"begin":4445,"end":5086,"name":"tag","source":6,"value":"118"},{"begin":4445,"end":5086,"name":"JUMPDEST","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":4634,"end":4647,"name":"DUP1","source":6},{"begin":4634,"end":4647,"name":"DUP5","source":6},{"begin":4634,"end":4647,"name":"AND","source":6},{"begin":4589,"end":4596,"name":"PUSH","source":6,"value":"0"},{"begin":4634,"end":4647,"name":"SWAP1","source":6},{"begin":4634,"end":4647,"name":"DUP2","source":6},{"begin":4634,"end":4647,"name":"MSTORE","source":6},{"begin":4634,"end":4640,"name":"PUSH","source":6,"value":"33"},{"begin":4634,"end":4647,"name":"PUSH","source":6,"value":"20"},{"begin":4634,"end":4647,"name":"SWAP1","source":6},{"begin":4634,"end":4647,"name":"DUP2","source":6},{"begin":4634,"end":4647,"name":"MSTORE","source":6},{"begin":4634,"end":4647,"name":"PUSH","source":6,"value":"40"},{"begin":4634,"end":4647,"name":"DUP1","source":6},{"begin":4634,"end":4647,"name":"DUP4","source":6},{"begin":4634,"end":4647,"name":"KECCAK256","source":6},{"begin":4673,"end":4694,"name":"SWAP4","source":6},{"begin":4673,"end":4694,"name":"DUP9","source":6},{"begin":4673,"end":4694,"name":"AND","source":6},{"begin":4673,"end":4694,"name":"DUP4","source":6},{"begin":4673,"end":4694,"name":"MSTORE","source":6},{"begin":4673,"end":4688,"name":"PUSH","source":6,"value":"1"},{"begin":4673,"end":4688,"name":"DUP5","source":6},{"begin":4673,"end":4688,"name":"ADD","source":6},{"begin":4673,"end":4694,"name":"SWAP1","source":6},{"begin":4673,"end":4694,"name":"SWAP2","source":6},{"begin":4673,"end":4694,"name":"MSTORE","source":6},{"begin":4673,"end":4694,"name":"DUP2","source":6},{"begin":4673,"end":4694,"name":"KECCAK256","source":6},{"begin":4673,"end":4694,"name":"SLOAD","source":6},{"begin":4589,"end":4596,"name":"SWAP1","source":6},{"begin":4589,"end":4596,"name":"SWAP2","source":6},{"begin":4634,"end":4647,"name":"SWAP1","source":6},{"begin":4589,"end":4596,"name":"DUP3","source":6},{"begin":4589,"end":4596,"name":"DUP1","source":6},{"begin":4752,"end":4808,"name":"PUSH [tag]","source":6,"value":"256"},{"begin":4641,"end":4646,"name":"DUP9","source":6},{"begin":4634,"end":4647,"name":"DUP6","source":6},{"begin":4796,"end":4807,"name":"DUP9","source":6},{"begin":4752,"end":4777,"name":"PUSH [tag]","source":6,"value":"257"},{"begin":4752,"end":4808,"name":"JUMP","source":6,"value":"[in]"},{"begin":4752,"end":4808,"name":"tag","source":6,"value":"256"},{"begin":4752,"end":4808,"name":"JUMPDEST","source":6},{"begin":4733,"end":4808,"name":"SWAP1","source":6},{"begin":4733,"end":4808,"name":"POP","source":6},{"begin":4832,"end":4840,"name":"DUP1","source":6},{"begin":4819,"end":4828,"name":"DUP4","source":6},{"begin":4819,"end":4840,"name":"EQ","source":6},{"begin":4815,"end":5054,"name":"PUSH [tag]","source":6,"value":"258"},{"begin":4815,"end":5054,"name":"JUMPI","source":6},{"begin":4854,"end":4871,"name":"DUP7","source":6},{"begin":4854,"end":4871,"name":"ISZERO","source":6},{"begin":4850,"end":4955,"name":"PUSH [tag]","source":6,"value":"259"},{"begin":4850,"end":4955,"name":"JUMPI","source":6},{"begin":4900,"end":4946,"name":"PUSH [tag]","source":6,"value":"260"},{"begin":4912,"end":4924,"name":"DUP8","source":6},{"begin":4926,"end":4934,"name":"DUP3","source":6},{"begin":4936,"end":4945,"name":"DUP6","source":6},{"begin":4900,"end":4911,"name":"PUSH [tag]","source":6,"value":"261"},{"begin":4900,"end":4946,"name":"JUMP","source":6,"value":"[in]"},{"begin":4900,"end":4946,"name":"tag","source":6,"value":"260"},{"begin":4900,"end":4946,"name":"JUMPDEST","source":6},{"begin":4883,"end":4946,"name":"SWAP2","source":6},{"begin":4883,"end":4946,"name":"POP","source":6},{"begin":4850,"end":4955,"name":"tag","source":6,"value":"259"},{"begin":4850,"end":4955,"name":"JUMPDEST","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":4963,"end":4984,"name":"DUP1","source":6},{"begin":4963,"end":4984,"name":"DUP11","source":6},{"begin":4963,"end":4984,"name":"AND","source":6},{"begin":4963,"end":4984,"name":"PUSH","source":6,"value":"0"},{"begin":4963,"end":4984,"name":"DUP2","source":6},{"begin":4963,"end":4984,"name":"DUP2","source":6},{"begin":4963,"end":4984,"name":"MSTORE","source":6},{"begin":4963,"end":4978,"name":"PUSH","source":6,"value":"1"},{"begin":4963,"end":4978,"name":"DUP8","source":6},{"begin":4963,"end":4978,"name":"ADD","source":6},{"begin":4963,"end":4984,"name":"PUSH","source":6,"value":"20"},{"begin":4963,"end":4984,"name":"MSTORE","source":6},{"begin":4963,"end":4984,"name":"PUSH","source":6,"value":"40"},{"begin":4963,"end":4984,"name":"SWAP1","source":6},{"begin":4963,"end":4984,"name":"DUP2","source":6},{"begin":4963,"end":4984,"name":"SWAP1","source":6},{"begin":4963,"end":4984,"name":"KECCAK256","source":6},{"begin":4963,"end":4995,"name":"DUP5","source":6},{"begin":4963,"end":4995,"name":"SWAP1","source":6},{"begin":4963,"end":4995,"name":"SSTORE","source":6},{"begin":5008,"end":5047,"name":"MLOAD","source":6},{"begin":5008,"end":5047,"name":"SWAP2","source":6},{"begin":5008,"end":5047,"name":"DUP11","source":6},{"begin":5008,"end":5047,"name":"AND","source":6},{"begin":5008,"end":5047,"name":"SWAP2","source":6},{"begin":5008,"end":5047,"name":"PUSH","source":6,"value":"BB123B5C06D5408BBEA3C4FEF481578175CFB432E3B482C6186F02ED9086585B"},{"begin":5008,"end":5047,"name":"SWAP1","source":6},{"begin":5008,"end":5047,"name":"PUSH [tag]","source":6,"value":"262"},{"begin":5008,"end":5047,"name":"SWAP1","source":6},{"begin":4987,"end":4995,"name":"DUP6","source":6},{"begin":4987,"end":4995,"name":"SWAP1","source":6},{"begin":5008,"end":5047,"name":"PUSH [tag]","source":6,"value":"36"},{"begin":5008,"end":5047,"name":"JUMP","source":6,"value":"[in]"},{"begin":5008,"end":5047,"name":"tag","source":6,"value":"262"},{"begin":5008,"end":5047,"name":"JUMPDEST","source":6},{"begin":5008,"end":5047,"name":"PUSH","source":6,"value":"40"},{"begin":5008,"end":5047,"name":"MLOAD","source":6},{"begin":5008,"end":5047,"name":"DUP1","source":6},{"begin":5008,"end":5047,"name":"SWAP2","source":6},{"begin":5008,"end":5047,"name":"SUB","source":6},{"begin":5008,"end":5047,"name":"SWAP1","source":6},{"begin":5008,"end":5047,"name":"LOG3","source":6},{"begin":4815,"end":5054,"name":"tag","source":6,"value":"258"},{"begin":4815,"end":5054,"name":"JUMPDEST","source":6},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":5067,"end":5081,"name":"SWAP8","source":6},{"begin":4445,"end":5086,"name":"SWAP7","source":6},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":4445,"end":5086,"name":"JUMP","source":6,"value":"[out]"},{"begin":448,"end":559,"name":"tag","source":13,"value":"121"},{"begin":448,"end":559,"name":"JUMPDEST","source":13},{"begin":540,"end":545,"name":"DUP1","source":13},{"begin":540,"end":545,"name":"DUP3","source":13},{"begin":540,"end":545,"name":"ADD","source":13},{"begin":535,"end":551,"name":"DUP3","source":13},{"begin":535,"end":551,"name":"DUP2","source":13},{"begin":535,"end":551,"name":"LT","source":13},{"begin":535,"end":551,"name":"ISZERO","source":13},{"begin":527,"end":552,"name":"PUSH [tag]","source":13,"value":"123"},{"begin":527,"end":552,"name":"JUMPI","source":13},{"begin":527,"end":552,"name":"PUSH","source":13,"value":"0"},{"begin":527,"end":552,"name":"DUP1","source":13},{"begin":527,"end":552,"name":"REVERT","source":13},{"begin":2136,"end":2760,"name":"tag","source":6,"value":"175"},{"begin":2136,"end":2760,"name":"JUMPDEST","source":6},{"begin":2251,"end":2260,"name":"PUSH","source":6,"value":"0"},{"begin":2246,"end":2756,"name":"tag","source":6,"value":"266"},{"begin":2246,"end":2756,"name":"JUMPDEST","source":6},{"begin":2270,"end":2287,"name":"DUP2","source":6},{"begin":2270,"end":2294,"name":"MLOAD","source":6},{"begin":2266,"end":2267,"name":"DUP2","source":6},{"begin":2266,"end":2294,"name":"LT","source":6},{"begin":2246,"end":2756,"name":"ISZERO","source":6},{"begin":2246,"end":2756,"name":"PUSH [tag]","source":6,"value":"208"},{"begin":2246,"end":2756,"name":"JUMPI","source":6},{"begin":2309,"end":2338,"name":"PUSH","source":6,"value":"0"},{"begin":2341,"end":2347,"name":"PUSH","source":6,"value":"33"},{"begin":2341,"end":2385,"name":"PUSH","source":6,"value":"0"},{"begin":2348,"end":2365,"name":"DUP5","source":6},{"begin":2366,"end":2367,"name":"DUP5","source":6},{"begin":2348,"end":2368,"name":"DUP2","source":6},{"begin":2348,"end":2368,"name":"MLOAD","source":6},{"begin":2348,"end":2368,"name":"DUP2","source":6},{"begin":2348,"end":2368,"name":"LT","source":6},{"begin":2348,"end":2368,"name":"PUSH [tag]","source":6,"value":"269"},{"begin":2348,"end":2368,"name":"JUMPI","source":6},{"begin":2348,"end":2368,"name":"INVALID","source":6},{"begin":2348,"end":2368,"name":"tag","source":6,"value":"269"},{"begin":2348,"end":2368,"name":"JUMPDEST","source":6},{"begin":2348,"end":2368,"name":"PUSH","source":6,"value":"20"},{"begin":2348,"end":2368,"name":"MUL","source":6},{"begin":2348,"end":2368,"name":"PUSH","source":6,"value":"20"},{"begin":2348,"end":2368,"name":"ADD","source":6},{"begin":2348,"end":2368,"name":"ADD","source":6},{"begin":2348,"end":2368,"name":"MLOAD","source":6},{"begin":2348,"end":2384,"name":"PUSH","source":6,"value":"40"},{"begin":2348,"end":2384,"name":"ADD","source":6},{"begin":2348,"end":2384,"name":"MLOAD","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":2341,"end":2385,"name":"AND","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":2341,"end":2385,"name":"AND","source":6},{"begin":2341,"end":2385,"name":"DUP2","source":6},{"begin":2341,"end":2385,"name":"MSTORE","source":6},{"begin":2341,"end":2385,"name":"PUSH","source":6,"value":"20"},{"begin":2341,"end":2385,"name":"ADD","source":6},{"begin":2341,"end":2385,"name":"SWAP1","source":6},{"begin":2341,"end":2385,"name":"DUP2","source":6},{"begin":2341,"end":2385,"name":"MSTORE","source":6},{"begin":2341,"end":2385,"name":"PUSH","source":6,"value":"20"},{"begin":2341,"end":2385,"name":"ADD","source":6},{"begin":2341,"end":2385,"name":"PUSH","source":6,"value":"0"},{"begin":2341,"end":2385,"name":"KECCAK256","source":6},{"begin":2309,"end":2385,"name":"SWAP1","source":6},{"begin":2309,"end":2385,"name":"POP","source":6},{"begin":2394,"end":2536,"name":"PUSH [tag]","source":6,"value":"270"},{"begin":2429,"end":2446,"name":"DUP4","source":6},{"begin":2447,"end":2448,"name":"DUP4","source":6},{"begin":2429,"end":2449,"name":"DUP2","source":6},{"begin":2429,"end":2449,"name":"MLOAD","source":6},{"begin":2429,"end":2449,"name":"DUP2","source":6},{"begin":2429,"end":2449,"name":"LT","source":6},{"begin":2429,"end":2449,"name":"PUSH [tag]","source":6,"value":"271"},{"begin":2429,"end":2449,"name":"JUMPI","source":6},{"begin":2429,"end":2449,"name":"INVALID","source":6},{"begin":2429,"end":2449,"name":"tag","source":6,"value":"271"},{"begin":2429,"end":2449,"name":"JUMPDEST","source":6},{"begin":2429,"end":2449,"name":"PUSH","source":6,"value":"20"},{"begin":2429,"end":2449,"name":"MUL","source":6},{"begin":2429,"end":2449,"name":"PUSH","source":6,"value":"20"},{"begin":2429,"end":2449,"name":"ADD","source":6},{"begin":2429,"end":2449,"name":"ADD","source":6},{"begin":2429,"end":2449,"name":"MLOAD","source":6},{"begin":2429,"end":2465,"name":"PUSH","source":6,"value":"40"},{"begin":2429,"end":2465,"name":"ADD","source":6},{"begin":2429,"end":2465,"name":"MLOAD","source":6},{"begin":2475,"end":2486,"name":"DUP3","source":6},{"begin":2496,"end":2513,"name":"DUP6","source":6},{"begin":2514,"end":2515,"name":"DUP6","source":6},{"begin":2496,"end":2516,"name":"DUP2","source":6},{"begin":2496,"end":2516,"name":"MLOAD","source":6},{"begin":2496,"end":2516,"name":"DUP2","source":6},{"begin":2496,"end":2516,"name":"LT","source":6},{"begin":2496,"end":2516,"name":"PUSH [tag]","source":6,"value":"272"},{"begin":2496,"end":2516,"name":"JUMPI","source":6},{"begin":2496,"end":2516,"name":"INVALID","source":6},{"begin":2496,"end":2516,"name":"tag","source":6,"value":"272"},{"begin":2496,"end":2516,"name":"JUMPDEST","source":6},{"begin":2496,"end":2516,"name":"PUSH","source":6,"value":"20"},{"begin":2496,"end":2516,"name":"MUL","source":6},{"begin":2496,"end":2516,"name":"PUSH","source":6,"value":"20"},{"begin":2496,"end":2516,"name":"ADD","source":6},{"begin":2496,"end":2516,"name":"ADD","source":6},{"begin":2496,"end":2516,"name":"MLOAD","source":6},{"begin":2496,"end":2528,"name":"PUSH","source":6,"value":"20"},{"begin":2496,"end":2528,"name":"ADD","source":6},{"begin":2496,"end":2528,"name":"MLOAD","source":6},{"begin":2394,"end":2419,"name":"PUSH [tag]","source":6,"value":"257"},{"begin":2394,"end":2536,"name":"JUMP","source":6,"value":"[in]"},{"begin":2394,"end":2536,"name":"tag","source":6,"value":"270"},{"begin":2394,"end":2536,"name":"JUMPDEST","source":6},{"begin":2394,"end":2536,"name":"POP","source":6},{"begin":2577,"end":2594,"name":"DUP3","source":6},{"begin":2595,"end":2596,"name":"DUP3","source":6},{"begin":2577,"end":2597,"name":"DUP2","source":6},{"begin":2577,"end":2597,"name":"MLOAD","source":6},{"begin":2577,"end":2597,"name":"DUP2","source":6},{"begin":2577,"end":2597,"name":"LT","source":6},{"begin":2577,"end":2597,"name":"PUSH [tag]","source":6,"value":"273"},{"begin":2577,"end":2597,"name":"JUMPI","source":6},{"begin":2577,"end":2597,"name":"INVALID","source":6},{"begin":2577,"end":2597,"name":"tag","source":6,"value":"273"},{"begin":2577,"end":2597,"name":"JUMPDEST","source":6},{"begin":2577,"end":2597,"name":"PUSH","source":6,"value":"20"},{"begin":2577,"end":2597,"name":"SWAP1","source":6},{"begin":2577,"end":2597,"name":"DUP2","source":6},{"begin":2577,"end":2597,"name":"MUL","source":6},{"begin":2577,"end":2597,"name":"SWAP2","source":6},{"begin":2577,"end":2597,"name":"SWAP1","source":6},{"begin":2577,"end":2597,"name":"SWAP2","source":6},{"begin":2577,"end":2597,"name":"ADD","source":6},{"begin":2577,"end":2597,"name":"ADD","source":6},{"begin":2577,"end":2597,"name":"MLOAD","source":6},{"begin":2577,"end":2615,"name":"MLOAD","source":6},{"begin":2545,"end":2615,"name":"DUP2","source":6},{"begin":2545,"end":2615,"name":"SLOAD","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":2545,"end":2615,"name":"AND","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"68"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":2545,"end":2615,"name":"SWAP1","source":6},{"begin":2545,"end":2615,"name":"SWAP2","source":6},{"begin":2545,"end":2615,"name":"AND","source":6},{"begin":2545,"end":2615,"name":"OR","source":6},{"begin":2545,"end":2615,"name":"DUP2","source":6},{"begin":2545,"end":2615,"name":"SSTORE","source":6},{"begin":2657,"end":2677,"name":"DUP3","source":6},{"begin":2657,"end":2677,"name":"MLOAD","source":6},{"begin":2657,"end":2677,"name":"DUP4","source":6},{"begin":2657,"end":2677,"name":"SWAP1","source":6},{"begin":2675,"end":2676,"name":"DUP4","source":6},{"begin":2675,"end":2676,"name":"SWAP1","source":6},{"begin":2657,"end":2677,"name":"DUP2","source":6},{"begin":2657,"end":2677,"name":"LT","source":6},{"begin":2657,"end":2677,"name":"PUSH [tag]","source":6,"value":"274"},{"begin":2657,"end":2677,"name":"JUMPI","source":6},{"begin":2657,"end":2677,"name":"INVALID","source":6},{"begin":2657,"end":2677,"name":"tag","source":6,"value":"274"},{"begin":2657,"end":2677,"name":"JUMPDEST","source":6},{"begin":2657,"end":2677,"name":"PUSH","source":6,"value":"20"},{"begin":2657,"end":2677,"name":"MUL","source":6},{"begin":2657,"end":2677,"name":"PUSH","source":6,"value":"20"},{"begin":2657,"end":2677,"name":"ADD","source":6},{"begin":2657,"end":2677,"name":"ADD","source":6},{"begin":2657,"end":2677,"name":"MLOAD","source":6},{"begin":2657,"end":2693,"name":"PUSH","source":6,"value":"40"},{"begin":2657,"end":2693,"name":"ADD","source":6},{"begin":2657,"end":2693,"name":"MLOAD","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":2629,"end":2749,"name":"AND","source":6},{"begin":2629,"end":2749,"name":"PUSH","source":6,"value":"87FA03892A0556CB6B8F97E6D533A150D4D55FCBF275FFF5FA003FA636BCC7FA"},{"begin":2703,"end":2720,"name":"DUP5","source":6},{"begin":2721,"end":2722,"name":"DUP5","source":6},{"begin":2703,"end":2723,"name":"DUP2","source":6},{"begin":2703,"end":2723,"name":"MLOAD","source":6},{"begin":2703,"end":2723,"name":"DUP2","source":6},{"begin":2703,"end":2723,"name":"LT","source":6},{"begin":2703,"end":2723,"name":"PUSH [tag]","source":6,"value":"275"},{"begin":2703,"end":2723,"name":"JUMPI","source":6},{"begin":2703,"end":2723,"name":"INVALID","source":6},{"begin":2703,"end":2723,"name":"tag","source":6,"value":"275"},{"begin":2703,"end":2723,"name":"JUMPDEST","source":6},{"begin":2703,"end":2723,"name":"PUSH","source":6,"value":"20"},{"begin":2703,"end":2723,"name":"MUL","source":6},{"begin":2703,"end":2723,"name":"PUSH","source":6,"value":"20"},{"begin":2703,"end":2723,"name":"ADD","source":6},{"begin":2703,"end":2723,"name":"ADD","source":6},{"begin":2703,"end":2723,"name":"MLOAD","source":6},{"begin":2703,"end":2741,"name":"PUSH","source":6,"value":"0"},{"begin":2703,"end":2741,"name":"ADD","source":6},{"begin":2703,"end":2741,"name":"MLOAD","source":6},{"begin":2629,"end":2749,"name":"PUSH","source":6,"value":"40"},{"begin":2629,"end":2749,"name":"MLOAD","source":6},{"begin":2629,"end":2749,"name":"PUSH [tag]","source":6,"value":"276"},{"begin":2629,"end":2749,"name":"SWAP2","source":6},{"begin":2629,"end":2749,"name":"SWAP1","source":6},{"begin":2629,"end":2749,"name":"PUSH [tag]","source":6,"value":"277"},{"begin":2629,"end":2749,"name":"JUMP","source":6,"value":"[in]"},{"begin":2629,"end":2749,"name":"tag","source":6,"value":"276"},{"begin":2629,"end":2749,"name":"JUMPDEST","source":6},{"begin":2629,"end":2749,"name":"PUSH","source":6,"value":"40"},{"begin":2629,"end":2749,"name":"MLOAD","source":6},{"begin":2629,"end":2749,"name":"DUP1","source":6},{"begin":2629,"end":2749,"name":"SWAP2","source":6},{"begin":2629,"end":2749,"name":"SUB","source":6},{"begin":2629,"end":2749,"name":"SWAP1","source":6},{"begin":2629,"end":2749,"name":"LOG2","source":6},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":2296,"end":2299,"name":"PUSH","source":6,"value":"1"},{"begin":2296,"end":2299,"name":"ADD","source":6},{"begin":2246,"end":2756,"name":"PUSH [tag]","source":6,"value":"266"},{"begin":2246,"end":2756,"name":"JUMP","source":6},{"begin":6124,"end":6799,"name":"tag","source":6,"value":"200"},{"begin":6124,"end":6799,"name":"JUMPDEST","source":6},{"begin":6253,"end":6260,"name":"PUSH","source":6,"value":"0"},{"begin":6253,"end":6260,"name":"DUP1","source":6},{"begin":6253,"end":6260,"name":"DUP1","source":6},{"begin":6303,"end":6768,"name":"tag","source":6,"value":"279"},{"begin":6303,"end":6768,"name":"JUMPDEST","source":6},{"begin":6327,"end":6333,"name":"DUP4","source":6},{"begin":6327,"end":6340,"name":"MLOAD","source":6},{"begin":6323,"end":6324,"name":"DUP2","source":6},{"begin":6323,"end":6340,"name":"LT","source":6},{"begin":6303,"end":6768,"name":"ISZERO","source":6},{"begin":6303,"end":6768,"name":"PUSH [tag]","source":6,"value":"280"},{"begin":6303,"end":6768,"name":"JUMPI","source":6},{"begin":6355,"end":6384,"name":"PUSH","source":6,"value":"0"},{"begin":6387,"end":6393,"name":"PUSH","source":6,"value":"33"},{"begin":6387,"end":6420,"name":"PUSH","source":6,"value":"0"},{"begin":6394,"end":6400,"name":"DUP7","source":6},{"begin":6401,"end":6402,"name":"DUP5","source":6},{"begin":6394,"end":6403,"name":"DUP2","source":6},{"begin":6394,"end":6403,"name":"MLOAD","source":6},{"begin":6394,"end":6403,"name":"DUP2","source":6},{"begin":6394,"end":6403,"name":"LT","source":6},{"begin":6394,"end":6403,"name":"PUSH [tag]","source":6,"value":"282"},{"begin":6394,"end":6403,"name":"JUMPI","source":6},{"begin":6394,"end":6403,"name":"INVALID","source":6},{"begin":6394,"end":6403,"name":"tag","source":6,"value":"282"},{"begin":6394,"end":6403,"name":"JUMPDEST","source":6},{"begin":6394,"end":6403,"name":"PUSH","source":6,"value":"20"},{"begin":6394,"end":6403,"name":"SWAP1","source":6},{"begin":6394,"end":6403,"name":"DUP2","source":6},{"begin":6394,"end":6403,"name":"MUL","source":6},{"begin":6394,"end":6403,"name":"SWAP2","source":6},{"begin":6394,"end":6403,"name":"SWAP1","source":6},{"begin":6394,"end":6403,"name":"SWAP2","source":6},{"begin":6394,"end":6403,"name":"ADD","source":6},{"begin":6394,"end":6403,"name":"DUP2","source":6},{"begin":6394,"end":6403,"name":"ADD","source":6},{"begin":6394,"end":6403,"name":"MLOAD","source":6},{"begin":6394,"end":6419,"name":"MLOAD","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":6387,"end":6420,"name":"AND","source":6},{"begin":6387,"end":6420,"name":"DUP3","source":6},{"begin":6387,"end":6420,"name":"MSTORE","source":6},{"begin":6387,"end":6420,"name":"DUP2","source":6},{"begin":6387,"end":6420,"name":"ADD","source":6},{"begin":6387,"end":6420,"name":"SWAP2","source":6},{"begin":6387,"end":6420,"name":"SWAP1","source":6},{"begin":6387,"end":6420,"name":"SWAP2","source":6},{"begin":6387,"end":6420,"name":"MSTORE","source":6},{"begin":6387,"end":6420,"name":"PUSH","source":6,"value":"40"},{"begin":6387,"end":6420,"name":"ADD","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"0"},{"begin":6387,"end":6420,"name":"SWAP1","source":6},{"begin":6387,"end":6420,"name":"DUP2","source":6},{"begin":6387,"end":6420,"name":"KECCAK256","source":6},{"begin":6483,"end":6500,"name":"DUP1","source":6},{"begin":6483,"end":6500,"name":"SLOAD","source":6},{"begin":6596,"end":6605,"name":"DUP8","source":6},{"begin":6596,"end":6605,"name":"MLOAD","source":6},{"begin":6387,"end":6420,"name":"SWAP2","source":6},{"begin":6387,"end":6420,"name":"SWAP4","source":6},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":6457,"end":6627,"name":"PUSH [tag]","source":6,"value":"283"},{"begin":6457,"end":6627,"name":"SWAP2","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"68"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":6483,"end":6500,"name":"DUP3","source":6},{"begin":6483,"end":6500,"name":"DIV","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"68"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":6483,"end":6500,"name":"SWAP1","source":6},{"begin":6483,"end":6500,"name":"DUP2","source":6},{"begin":6483,"end":6500,"name":"AND","source":6},{"begin":6483,"end":6500,"name":"SWAP3","source":6},{"begin":6512,"end":6541,"name":"SWAP1","source":6},{"begin":6512,"end":6541,"name":"DUP2","source":6},{"begin":6512,"end":6541,"name":"AND","source":6},{"begin":6512,"end":6541,"name":"SWAP2","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"D0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":6553,"end":6584,"name":"SWAP1","source":6},{"begin":6553,"end":6584,"name":"SWAP2","source":6},{"begin":6553,"end":6584,"name":"DIV","source":6},{"begin":6553,"end":6584,"name":"PUSH","source":6,"value":"FFFFFFFFFF"},{"begin":6553,"end":6584,"name":"AND","source":6},{"begin":6553,"end":6584,"name":"SWAP1","source":6},{"begin":6596,"end":6605,"name":"DUP11","source":6},{"begin":6596,"end":6605,"name":"SWAP1","source":6},{"begin":6603,"end":6604,"name":"DUP9","source":6},{"begin":6603,"end":6604,"name":"SWAP1","source":6},{"begin":6596,"end":6605,"name":"DUP2","source":6},{"begin":6596,"end":6605,"name":"LT","source":6},{"begin":6596,"end":6605,"name":"PUSH [tag]","source":6,"value":"284"},{"begin":6596,"end":6605,"name":"JUMPI","source":6},{"begin":6596,"end":6605,"name":"INVALID","source":6},{"begin":6596,"end":6605,"name":"tag","source":6,"value":"284"},{"begin":6596,"end":6605,"name":"JUMPDEST","source":6},{"begin":6596,"end":6605,"name":"PUSH","source":6,"value":"20"},{"begin":6596,"end":6605,"name":"MUL","source":6},{"begin":6596,"end":6605,"name":"PUSH","source":6,"value":"20"},{"begin":6596,"end":6605,"name":"ADD","source":6},{"begin":6596,"end":6605,"name":"ADD","source":6},{"begin":6596,"end":6605,"name":"MLOAD","source":6},{"begin":6596,"end":6617,"name":"PUSH","source":6,"value":"40"},{"begin":6596,"end":6617,"name":"ADD","source":6},{"begin":6596,"end":6617,"name":"MLOAD","source":6},{"begin":6457,"end":6471,"name":"PUSH [tag]","source":6,"value":"285"},{"begin":6457,"end":6627,"name":"JUMP","source":6,"value":"[in]"},{"begin":6457,"end":6627,"name":"tag","source":6,"value":"283"},{"begin":6457,"end":6627,"name":"JUMPDEST","source":6},{"begin":6428,"end":6627,"name":"SWAP1","source":6},{"begin":6428,"end":6627,"name":"POP","source":6},{"begin":6653,"end":6761,"name":"PUSH [tag]","source":6,"value":"286"},{"begin":6681,"end":6753,"name":"PUSH [tag]","source":6,"value":"287"},{"begin":6693,"end":6699,"name":"DUP8","source":6},{"begin":6700,"end":6701,"name":"DUP6","source":6},{"begin":6693,"end":6702,"name":"DUP2","source":6},{"begin":6693,"end":6702,"name":"MLOAD","source":6},{"begin":6693,"end":6702,"name":"DUP2","source":6},{"begin":6693,"end":6702,"name":"LT","source":6},{"begin":6693,"end":6702,"name":"PUSH [tag]","source":6,"value":"288"},{"begin":6693,"end":6702,"name":"JUMPI","source":6},{"begin":6693,"end":6702,"name":"INVALID","source":6},{"begin":6693,"end":6702,"name":"tag","source":6,"value":"288"},{"begin":6693,"end":6702,"name":"JUMPDEST","source":6},{"begin":6693,"end":6702,"name":"PUSH","source":6,"value":"20"},{"begin":6693,"end":6702,"name":"MUL","source":6},{"begin":6693,"end":6702,"name":"PUSH","source":6,"value":"20"},{"begin":6693,"end":6702,"name":"ADD","source":6},{"begin":6693,"end":6702,"name":"ADD","source":6},{"begin":6693,"end":6702,"name":"MLOAD","source":6},{"begin":6693,"end":6715,"name":"PUSH","source":6,"value":"20"},{"begin":6693,"end":6715,"name":"ADD","source":6},{"begin":6693,"end":6715,"name":"MLOAD","source":6},{"begin":6717,"end":6727,"name":"DUP4","source":6},{"begin":6729,"end":6740,"name":"DUP6","source":6},{"begin":6729,"end":6746,"name":"PUSH","source":6,"value":"1"},{"begin":6729,"end":6746,"name":"ADD","source":6},{"begin":6729,"end":6752,"name":"PUSH","source":6,"value":"0"},{"begin":6747,"end":6751,"name":"DUP13","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":6729,"end":6752,"name":"AND","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":6729,"end":6752,"name":"AND","source":6},{"begin":6729,"end":6752,"name":"DUP2","source":6},{"begin":6729,"end":6752,"name":"MSTORE","source":6},{"begin":6729,"end":6752,"name":"PUSH","source":6,"value":"20"},{"begin":6729,"end":6752,"name":"ADD","source":6},{"begin":6729,"end":6752,"name":"SWAP1","source":6},{"begin":6729,"end":6752,"name":"DUP2","source":6},{"begin":6729,"end":6752,"name":"MSTORE","source":6},{"begin":6729,"end":6752,"name":"PUSH","source":6,"value":"20"},{"begin":6729,"end":6752,"name":"ADD","source":6},{"begin":6729,"end":6752,"name":"PUSH","source":6,"value":"0"},{"begin":6729,"end":6752,"name":"KECCAK256","source":6},{"begin":6729,"end":6752,"name":"SLOAD","source":6},{"begin":6681,"end":6692,"name":"PUSH [tag]","source":6,"value":"261"},{"begin":6681,"end":6753,"name":"JUMP","source":6,"value":"[in]"},{"begin":6681,"end":6753,"name":"tag","source":6,"value":"287"},{"begin":6681,"end":6753,"name":"JUMPDEST","source":6},{"begin":6653,"end":6667,"name":"DUP6","source":6},{"begin":6653,"end":6667,"name":"SWAP1","source":6},{"begin":6653,"end":6671,"name":"PUSH [tag]","source":6,"value":"121"},{"begin":6653,"end":6761,"name":"JUMP","source":6,"value":"[in]"},{"begin":6653,"end":6761,"name":"tag","source":6,"value":"286"},{"begin":6653,"end":6761,"name":"JUMPDEST","source":6},{"begin":6636,"end":6761,"name":"SWAP4","source":6},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":6342,"end":6345,"name":"PUSH","source":6,"value":"1"},{"begin":6342,"end":6345,"name":"ADD","source":6},{"begin":6303,"end":6768,"name":"PUSH [tag]","source":6,"value":"279"},{"begin":6303,"end":6768,"name":"JUMP","source":6},{"begin":6303,"end":6768,"name":"tag","source":6,"value":"280"},{"begin":6303,"end":6768,"name":"JUMPDEST","source":6},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":6780,"end":6794,"name":"SWAP4","source":6},{"begin":6124,"end":6799,"name":"SWAP3","source":6},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":6124,"end":6799,"name":"JUMP","source":6,"value":"[out]"},{"begin":6205,"end":6295,"name":"tag","source":7,"value":"205"},{"begin":6205,"end":6295,"name":"JUMPDEST","source":7},{"begin":1336,"end":1337,"name":"PUSH","source":7,"value":"1"},{"begin":6205,"end":6295,"name":"SWAP1","source":7},{"begin":6205,"end":6295,"name":"JUMP","source":7,"value":"[out]"},{"begin":1198,"end":1543,"name":"tag","source":3,"value":"214"},{"begin":1198,"end":1543,"name":"JUMPDEST","source":3},{"begin":1312,"end":1322,"name":"DUP1","source":3},{"begin":1312,"end":1322,"name":"ISZERO","source":3},{"begin":1312,"end":1322,"name":"DUP1","source":3},{"begin":1311,"end":1373,"name":"PUSH [tag]","source":3,"value":"291"},{"begin":1311,"end":1373,"name":"JUMPI","source":3},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":1328,"end":1367,"name":"PUSH","source":3,"value":"40"},{"begin":1328,"end":1367,"name":"DUP1","source":3},{"begin":1328,"end":1367,"name":"MLOAD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"6EB1769F"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E1"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":1328,"end":1367,"name":"DUP2","source":3},{"begin":1328,"end":1367,"name":"MSTORE","source":3},{"begin":1352,"end":1356,"name":"ADDRESS","source":3},{"begin":1328,"end":1367,"name":"PUSH","source":3,"value":"4"},{"begin":1328,"end":1367,"name":"DUP3","source":3},{"begin":1328,"end":1367,"name":"ADD","source":3},{"begin":1328,"end":1367,"name":"MSTORE","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":1328,"end":1367,"name":"DUP5","source":3},{"begin":1328,"end":1367,"name":"DUP2","source":3},{"begin":1328,"end":1367,"name":"AND","source":3},{"begin":1328,"end":1367,"name":"PUSH","source":3,"value":"24"},{"begin":1328,"end":1367,"name":"DUP4","source":3},{"begin":1328,"end":1367,"name":"ADD","source":3},{"begin":1328,"end":1367,"name":"MSTORE","source":3},{"begin":1328,"end":1367,"name":"SWAP2","source":3},{"begin":1328,"end":1367,"name":"MLOAD","source":3},{"begin":1328,"end":1343,"name":"SWAP2","source":3},{"begin":1328,"end":1343,"name":"DUP6","source":3},{"begin":1328,"end":1343,"name":"AND","source":3},{"begin":1328,"end":1343,"name":"SWAP2","source":3},{"begin":1328,"end":1343,"name":"PUSH","source":3,"value":"DD62ED3E"},{"begin":1328,"end":1343,"name":"SWAP2","source":3},{"begin":1328,"end":1367,"name":"PUSH","source":3,"value":"44"},{"begin":1328,"end":1367,"name":"DUP1","source":3},{"begin":1328,"end":1367,"name":"DUP3","source":3},{"begin":1328,"end":1367,"name":"ADD","source":3},{"begin":1328,"end":1367,"name":"SWAP3","source":3},{"begin":1328,"end":1367,"name":"PUSH","source":3,"value":"20"},{"begin":1328,"end":1367,"name":"SWAP3","source":3},{"begin":1328,"end":1367,"name":"SWAP1","source":3},{"begin":1328,"end":1367,"name":"SWAP2","source":3},{"begin":1328,"end":1367,"name":"SWAP1","source":3},{"begin":1328,"end":1367,"name":"DUP3","source":3},{"begin":1328,"end":1367,"name":"SWAP1","source":3},{"begin":1328,"end":1367,"name":"SUB","source":3},{"begin":1328,"end":1367,"name":"ADD","source":3},{"begin":1328,"end":1367,"name":"DUP2","source":3},{"begin":1328,"end":1343,"name":"DUP7","source":3},{"begin":1328,"end":1367,"name":"DUP1","source":3},{"begin":1328,"end":1367,"name":"EXTCODESIZE","source":3},{"begin":1328,"end":1367,"name":"ISZERO","source":3},{"begin":1328,"end":1367,"name":"DUP1","source":3},{"begin":1328,"end":1367,"name":"ISZERO","source":3},{"begin":1328,"end":1367,"name":"PUSH [tag]","source":3,"value":"292"},{"begin":1328,"end":1367,"name":"JUMPI","source":3},{"begin":1328,"end":1367,"name":"PUSH","source":3,"value":"0"},{"begin":1328,"end":1367,"name":"DUP1","source":3},{"begin":1328,"end":1367,"name":"REVERT","source":3},{"begin":1328,"end":1367,"name":"tag","source":3,"value":"292"},{"begin":1328,"end":1367,"name":"JUMPDEST","source":3},{"begin":1328,"end":1367,"name":"POP","source":3},{"begin":1328,"end":1367,"name":"GAS","source":3},{"begin":1328,"end":1367,"name":"STATICCALL","source":3},{"begin":1328,"end":1367,"name":"ISZERO","source":3},{"begin":1328,"end":1367,"name":"DUP1","source":3},{"begin":1328,"end":1367,"name":"ISZERO","source":3},{"begin":1328,"end":1367,"name":"PUSH [tag]","source":3,"value":"294"},{"begin":1328,"end":1367,"name":"JUMPI","source":3},{"begin":1328,"end":1367,"name":"RETURNDATASIZE","source":3},{"begin":1328,"end":1367,"name":"PUSH","source":3,"value":"0"},{"begin":1328,"end":1367,"name":"DUP1","source":3},{"begin":1328,"end":1367,"name":"RETURNDATACOPY","source":3},{"begin":1328,"end":1367,"name":"RETURNDATASIZE","source":3},{"begin":1328,"end":1367,"name":"PUSH","source":3,"value":"0"},{"begin":1328,"end":1367,"name":"REVERT","source":3},{"begin":1328,"end":1367,"name":"tag","source":3,"value":"294"},{"begin":1328,"end":1367,"name":"JUMPDEST","source":3},{"begin":1328,"end":1367,"name":"POP","source":3},{"begin":1328,"end":1367,"name":"POP","source":3},{"begin":1328,"end":1367,"name":"POP","source":3},{"begin":1328,"end":1367,"name":"POP","source":3},{"begin":1328,"end":1367,"name":"PUSH","source":3,"value":"40"},{"begin":1328,"end":1367,"name":"MLOAD","source":3},{"begin":1328,"end":1367,"name":"RETURNDATASIZE","source":3},{"begin":1328,"end":1367,"name":"PUSH","source":3,"value":"20"},{"begin":1328,"end":1367,"name":"DUP2","source":3},{"begin":1328,"end":1367,"name":"LT","source":3},{"begin":1328,"end":1367,"name":"ISZERO","source":3},{"begin":1328,"end":1367,"name":"PUSH [tag]","source":3,"value":"295"},{"begin":1328,"end":1367,"name":"JUMPI","source":3},{"begin":1328,"end":1367,"name":"PUSH","source":3,"value":"0"},{"begin":1328,"end":1367,"name":"DUP1","source":3},{"begin":1328,"end":1367,"name":"REVERT","source":3},{"begin":1328,"end":1367,"name":"tag","source":3,"value":"295"},{"begin":1328,"end":1367,"name":"JUMPDEST","source":3},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":1328,"end":1367,"name":"MLOAD","source":3},{"begin":1328,"end":1372,"name":"ISZERO","source":3},{"begin":1311,"end":1373,"name":"tag","source":3,"value":"291"},{"begin":1311,"end":1373,"name":"JUMPDEST","source":3},{"begin":1296,"end":1443,"name":"PUSH [tag]","source":3,"value":"296"},{"begin":1296,"end":1443,"name":"JUMPI","source":3},{"begin":1296,"end":1443,"name":"PUSH","source":3,"value":"40"},{"begin":1296,"end":1443,"name":"MLOAD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"461BCD"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E5"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":1296,"end":1443,"name":"DUP2","source":3},{"begin":1296,"end":1443,"name":"MSTORE","source":3},{"begin":1296,"end":1443,"name":"PUSH","source":3,"value":"4"},{"begin":1296,"end":1443,"name":"ADD","source":3},{"begin":1296,"end":1443,"name":"DUP1","source":3},{"begin":1296,"end":1443,"name":"DUP1","source":3},{"begin":1296,"end":1443,"name":"PUSH","source":3,"value":"20"},{"begin":1296,"end":1443,"name":"ADD","source":3},{"begin":1296,"end":1443,"name":"DUP3","source":3},{"begin":1296,"end":1443,"name":"DUP2","source":3},{"begin":1296,"end":1443,"name":"SUB","source":3},{"begin":1296,"end":1443,"name":"DUP3","source":3},{"begin":1296,"end":1443,"name":"MSTORE","source":3},{"begin":1296,"end":1443,"name":"PUSH","source":3,"value":"36"},{"begin":1296,"end":1443,"name":"DUP2","source":3},{"begin":1296,"end":1443,"name":"MSTORE","source":3},{"begin":1296,"end":1443,"name":"PUSH","source":3,"value":"20"},{"begin":1296,"end":1443,"name":"ADD","source":3},{"begin":1296,"end":1443,"name":"DUP1","source":3},{"begin":1296,"end":1443,"name":"PUSH data","source":3,"value":"EF945DDB1BFDC0DA870FEB4560D868B047642B4AC7F2FB7F8B7C51CB4A411E25"},{"begin":1296,"end":1443,"name":"PUSH","source":3,"value":"36"},{"begin":1296,"end":1443,"name":"SWAP2","source":3},{"begin":1296,"end":1443,"name":"CODECOPY","source":3},{"begin":1296,"end":1443,"name":"PUSH","source":3,"value":"40"},{"begin":1296,"end":1443,"name":"ADD","source":3},{"begin":1296,"end":1443,"name":"SWAP2","source":3},{"begin":1296,"end":1443,"name":"POP","source":3},{"begin":1296,"end":1443,"name":"POP","source":3},{"begin":1296,"end":1443,"name":"PUSH","source":3,"value":"40"},{"begin":1296,"end":1443,"name":"MLOAD","source":3},{"begin":1296,"end":1443,"name":"DUP1","source":3},{"begin":1296,"end":1443,"name":"SWAP2","source":3},{"begin":1296,"end":1443,"name":"SUB","source":3},{"begin":1296,"end":1443,"name":"SWAP1","source":3},{"begin":1296,"end":1443,"name":"REVERT","source":3},{"begin":1296,"end":1443,"name":"tag","source":3,"value":"296"},{"begin":1296,"end":1443,"name":"JUMPDEST","source":3},{"begin":1475,"end":1537,"name":"PUSH","source":3,"value":"40"},{"begin":1475,"end":1537,"name":"DUP1","source":3},{"begin":1475,"end":1537,"name":"MLOAD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":1475,"end":1537,"name":"DUP5","source":3},{"begin":1475,"end":1537,"name":"AND","source":3},{"begin":1475,"end":1537,"name":"PUSH","source":3,"value":"24"},{"begin":1475,"end":1537,"name":"DUP3","source":3},{"begin":1475,"end":1537,"name":"ADD","source":3},{"begin":1475,"end":1537,"name":"MSTORE","source":3},{"begin":1475,"end":1537,"name":"PUSH","source":3,"value":"44"},{"begin":1475,"end":1537,"name":"DUP1","source":3},{"begin":1475,"end":1537,"name":"DUP3","source":3},{"begin":1475,"end":1537,"name":"ADD","source":3},{"begin":1475,"end":1537,"name":"DUP5","source":3},{"begin":1475,"end":1537,"name":"SWAP1","source":3},{"begin":1475,"end":1537,"name":"MSTORE","source":3},{"begin":1475,"end":1537,"name":"DUP3","source":3},{"begin":1475,"end":1537,"name":"MLOAD","source":3},{"begin":1475,"end":1537,"name":"DUP1","source":3},{"begin":1475,"end":1537,"name":"DUP4","source":3},{"begin":1475,"end":1537,"name":"SUB","source":3},{"begin":1475,"end":1537,"name":"SWAP1","source":3},{"begin":1475,"end":1537,"name":"SWAP2","source":3},{"begin":1475,"end":1537,"name":"ADD","source":3},{"begin":1475,"end":1537,"name":"DUP2","source":3},{"begin":1475,"end":1537,"name":"MSTORE","source":3},{"begin":1475,"end":1537,"name":"PUSH","source":3,"value":"64"},{"begin":1475,"end":1537,"name":"SWAP1","source":3},{"begin":1475,"end":1537,"name":"SWAP2","source":3},{"begin":1475,"end":1537,"name":"ADD","source":3},{"begin":1475,"end":1537,"name":"SWAP1","source":3},{"begin":1475,"end":1537,"name":"SWAP2","source":3},{"begin":1475,"end":1537,"name":"MSTORE","source":3},{"begin":1475,"end":1537,"name":"PUSH","source":3,"value":"20"},{"begin":1475,"end":1537,"name":"DUP2","source":3},{"begin":1475,"end":1537,"name":"ADD","source":3},{"begin":1475,"end":1537,"name":"DUP1","source":3},{"begin":1475,"end":1537,"name":"MLOAD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":1475,"end":1537,"name":"AND","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"95EA7B3"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":1475,"end":1537,"name":"OR","source":3},{"begin":1475,"end":1537,"name":"SWAP1","source":3},{"begin":1475,"end":1537,"name":"MSTORE","source":3},{"begin":1449,"end":1538,"name":"PUSH [tag]","source":3,"value":"297"},{"begin":1449,"end":1538,"name":"SWAP1","source":3},{"begin":1468,"end":1473,"name":"DUP5","source":3},{"begin":1468,"end":1473,"name":"SWAP1","source":3},{"begin":1449,"end":1467,"name":"PUSH [tag]","source":3,"value":"298"},{"begin":1449,"end":1538,"name":"JUMP","source":3,"value":"[in]"},{"begin":1449,"end":1538,"name":"tag","source":3,"value":"297"},{"begin":1449,"end":1538,"name":"JUMPDEST","source":3},{"begin":1198,"end":1543,"name":"POP","source":3},{"begin":1198,"end":1543,"name":"POP","source":3},{"begin":1198,"end":1543,"name":"POP","source":3},{"begin":1198,"end":1543,"name":"JUMP","source":3,"value":"[out]"},{"begin":5390,"end":5851,"name":"tag","source":6,"value":"242"},{"begin":5390,"end":5851,"name":"JUMPDEST","source":6},{"begin":5503,"end":5510,"name":"PUSH","source":6,"value":"0"},{"begin":5503,"end":5510,"name":"DUP1","source":6},{"begin":5503,"end":5510,"name":"DUP1","source":6},{"begin":5553,"end":5819,"name":"tag","source":6,"value":"300"},{"begin":5553,"end":5819,"name":"JUMPDEST","source":6},{"begin":5577,"end":5583,"name":"DUP4","source":6},{"begin":5577,"end":5590,"name":"MLOAD","source":6},{"begin":5573,"end":5574,"name":"DUP2","source":6},{"begin":5573,"end":5590,"name":"LT","source":6},{"begin":5553,"end":5819,"name":"ISZERO","source":6},{"begin":5553,"end":5819,"name":"PUSH [tag]","source":6,"value":"280"},{"begin":5553,"end":5819,"name":"JUMPI","source":6},{"begin":5622,"end":5812,"name":"PUSH [tag]","source":6,"value":"303"},{"begin":5650,"end":5804,"name":"PUSH [tag]","source":6,"value":"199"},{"begin":5686,"end":5690,"name":"DUP7","source":6},{"begin":5702,"end":5708,"name":"DUP7","source":6},{"begin":5709,"end":5710,"name":"DUP5","source":6},{"begin":5702,"end":5711,"name":"DUP2","source":6},{"begin":5702,"end":5711,"name":"MLOAD","source":6},{"begin":5702,"end":5711,"name":"DUP2","source":6},{"begin":5702,"end":5711,"name":"LT","source":6},{"begin":5702,"end":5711,"name":"PUSH [tag]","source":6,"value":"305"},{"begin":5702,"end":5711,"name":"JUMPI","source":6},{"begin":5702,"end":5711,"name":"INVALID","source":6},{"begin":5702,"end":5711,"name":"tag","source":6,"value":"305"},{"begin":5702,"end":5711,"name":"JUMPDEST","source":6},{"begin":5702,"end":5711,"name":"PUSH","source":6,"value":"20"},{"begin":5702,"end":5711,"name":"MUL","source":6},{"begin":5702,"end":5711,"name":"PUSH","source":6,"value":"20"},{"begin":5702,"end":5711,"name":"ADD","source":6},{"begin":5702,"end":5711,"name":"ADD","source":6},{"begin":5702,"end":5711,"name":"MLOAD","source":6},{"begin":5702,"end":5727,"name":"PUSH","source":6,"value":"0"},{"begin":5702,"end":5727,"name":"ADD","source":6},{"begin":5702,"end":5727,"name":"MLOAD","source":6},{"begin":5739,"end":5745,"name":"DUP8","source":6},{"begin":5746,"end":5747,"name":"DUP6","source":6},{"begin":5739,"end":5748,"name":"DUP2","source":6},{"begin":5739,"end":5748,"name":"MLOAD","source":6},{"begin":5739,"end":5748,"name":"DUP2","source":6},{"begin":5739,"end":5748,"name":"LT","source":6},{"begin":5739,"end":5748,"name":"PUSH [tag]","source":6,"value":"306"},{"begin":5739,"end":5748,"name":"JUMPI","source":6},{"begin":5739,"end":5748,"name":"INVALID","source":6},{"begin":5739,"end":5748,"name":"tag","source":6,"value":"306"},{"begin":5739,"end":5748,"name":"JUMPDEST","source":6},{"begin":5739,"end":5748,"name":"PUSH","source":6,"value":"20"},{"begin":5739,"end":5748,"name":"MUL","source":6},{"begin":5739,"end":5748,"name":"PUSH","source":6,"value":"20"},{"begin":5739,"end":5748,"name":"ADD","source":6},{"begin":5739,"end":5748,"name":"ADD","source":6},{"begin":5739,"end":5748,"name":"MLOAD","source":6},{"begin":5739,"end":5761,"name":"PUSH","source":6,"value":"20"},{"begin":5739,"end":5761,"name":"ADD","source":6},{"begin":5739,"end":5761,"name":"MLOAD","source":6},{"begin":5773,"end":5779,"name":"DUP9","source":6},{"begin":5780,"end":5781,"name":"DUP7","source":6},{"begin":5773,"end":5782,"name":"DUP2","source":6},{"begin":5773,"end":5782,"name":"MLOAD","source":6},{"begin":5773,"end":5782,"name":"DUP2","source":6},{"begin":5773,"end":5782,"name":"LT","source":6},{"begin":5773,"end":5782,"name":"PUSH [tag]","source":6,"value":"307"},{"begin":5773,"end":5782,"name":"JUMPI","source":6},{"begin":5773,"end":5782,"name":"INVALID","source":6},{"begin":5773,"end":5782,"name":"tag","source":6,"value":"307"},{"begin":5773,"end":5782,"name":"JUMPDEST","source":6},{"begin":5773,"end":5782,"name":"PUSH","source":6,"value":"20"},{"begin":5773,"end":5782,"name":"MUL","source":6},{"begin":5773,"end":5782,"name":"PUSH","source":6,"value":"20"},{"begin":5773,"end":5782,"name":"ADD","source":6},{"begin":5773,"end":5782,"name":"ADD","source":6},{"begin":5773,"end":5782,"name":"MLOAD","source":6},{"begin":5773,"end":5794,"name":"PUSH","source":6,"value":"40"},{"begin":5773,"end":5794,"name":"ADD","source":6},{"begin":5773,"end":5794,"name":"MLOAD","source":6},{"begin":5650,"end":5674,"name":"PUSH [tag]","source":6,"value":"118"},{"begin":5650,"end":5804,"name":"JUMP","source":6,"value":"[in]"},{"begin":5622,"end":5812,"name":"tag","source":6,"value":"303"},{"begin":5622,"end":5812,"name":"JUMPDEST","source":6},{"begin":5605,"end":5812,"name":"SWAP2","source":6},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":5592,"end":5595,"name":"PUSH","source":6,"value":"1"},{"begin":5592,"end":5595,"name":"ADD","source":6},{"begin":5553,"end":5819,"name":"PUSH [tag]","source":6,"value":"300"},{"begin":5553,"end":5819,"name":"JUMP","source":6},{"begin":3104,"end":4040,"name":"tag","source":6,"value":"257"},{"begin":3104,"end":4040,"name":"JUMPDEST","source":6},{"begin":3274,"end":3291,"name":"DUP2","source":6},{"begin":3274,"end":3291,"name":"SLOAD","source":6},{"begin":3240,"end":3247,"name":"PUSH","source":6,"value":"0"},{"begin":3240,"end":3247,"name":"SWAP1","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"68"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"68"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":3274,"end":3291,"name":"DUP3","source":6},{"begin":3274,"end":3291,"name":"DIV","source":6},{"begin":3274,"end":3291,"name":"DUP2","source":6},{"begin":3274,"end":3291,"name":"AND","source":6},{"begin":3274,"end":3291,"name":"SWAP2","source":6},{"begin":3325,"end":3354,"name":"SWAP1","source":6},{"begin":3325,"end":3354,"name":"DUP2","source":6},{"begin":3325,"end":3354,"name":"AND","source":6},{"begin":3325,"end":3354,"name":"SWAP1","source":6},{"begin":3390,"end":3421,"name":"PUSH","source":6,"value":"FFFFFFFFFF"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"D0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":3390,"end":3421,"name":"SWAP1","source":6},{"begin":3390,"end":3421,"name":"SWAP2","source":6},{"begin":3390,"end":3421,"name":"DIV","source":6},{"begin":3390,"end":3421,"name":"AND","source":6},{"begin":3432,"end":3447,"name":"TIMESTAMP","source":6},{"begin":3432,"end":3470,"name":"DUP2","source":6},{"begin":3432,"end":3470,"name":"EQ","source":6},{"begin":3428,"end":3502,"name":"ISZERO","source":6},{"begin":3428,"end":3502,"name":"PUSH [tag]","source":6,"value":"309"},{"begin":3428,"end":3502,"name":"JUMPI","source":6},{"begin":3487,"end":3495,"name":"DUP3","source":6},{"begin":3480,"end":3495,"name":"SWAP4","source":6},{"begin":3480,"end":3495,"name":"POP","source":6},{"begin":3480,"end":3495,"name":"POP","source":6},{"begin":3480,"end":3495,"name":"POP","source":6},{"begin":3480,"end":3495,"name":"POP","source":6},{"begin":3480,"end":3495,"name":"PUSH [tag]","source":6,"value":"176"},{"begin":3480,"end":3495,"name":"JUMP","source":6},{"begin":3428,"end":3502,"name":"tag","source":6,"value":"309"},{"begin":3428,"end":3502,"name":"JUMPDEST","source":6},{"begin":3508,"end":3524,"name":"PUSH","source":6,"value":"0"},{"begin":3533,"end":3610,"name":"PUSH [tag]","source":6,"value":"310"},{"begin":3548,"end":3556,"name":"DUP5","source":6},{"begin":3558,"end":3575,"name":"DUP5","source":6},{"begin":3577,"end":3596,"name":"DUP5","source":6},{"begin":3598,"end":3609,"name":"DUP10","source":6},{"begin":3533,"end":3547,"name":"PUSH [tag]","source":6,"value":"285"},{"begin":3533,"end":3610,"name":"JUMP","source":6,"value":"[in]"},{"begin":3533,"end":3610,"name":"tag","source":6,"value":"310"},{"begin":3533,"end":3610,"name":"JUMPDEST","source":6},{"begin":3508,"end":3610,"name":"SWAP1","source":6},{"begin":3508,"end":3610,"name":"POP","source":6},{"begin":3633,"end":3641,"name":"DUP4","source":6},{"begin":3621,"end":3629,"name":"DUP2","source":6},{"begin":3621,"end":3641,"name":"EQ","source":6},{"begin":3617,"end":4014,"name":"PUSH [tag]","source":6,"value":"311"},{"begin":3617,"end":4014,"name":"JUMPI","source":6},{"begin":3680,"end":3688,"name":"DUP1","source":6},{"begin":3667,"end":3675,"name":"DUP2","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"68"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":3659,"end":3688,"name":"AND","source":6},{"begin":3659,"end":3688,"name":"EQ","source":6},{"begin":3651,"end":3707,"name":"PUSH [tag]","source":6,"value":"312"},{"begin":3651,"end":3707,"name":"JUMPI","source":6},{"begin":3651,"end":3707,"name":"PUSH","source":6,"value":"40"},{"begin":3651,"end":3707,"name":"MLOAD","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"461BCD"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E5"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":3651,"end":3707,"name":"DUP2","source":6},{"begin":3651,"end":3707,"name":"MSTORE","source":6},{"begin":3651,"end":3707,"name":"PUSH","source":6,"value":"4"},{"begin":3651,"end":3707,"name":"ADD","source":6},{"begin":3651,"end":3707,"name":"PUSH [tag]","source":6,"value":"112"},{"begin":3651,"end":3707,"name":"SWAP1","source":6},{"begin":3651,"end":3707,"name":"PUSH [tag]","source":6,"value":"314"},{"begin":3651,"end":3707,"name":"JUMP","source":6,"value":"[in]"},{"begin":3651,"end":3707,"name":"tag","source":6,"value":"312"},{"begin":3651,"end":3707,"name":"JUMPDEST","source":6},{"begin":3780,"end":3817,"name":"DUP7","source":6},{"begin":3780,"end":3817,"name":"SLOAD","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"FFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"68"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":3780,"end":3817,"name":"AND","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"68"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"68"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":3780,"end":3817,"name":"DUP4","source":6},{"begin":3780,"end":3817,"name":"AND","source":6},{"begin":3780,"end":3817,"name":"MUL","source":6},{"begin":3780,"end":3817,"name":"OR","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"FFFFFFFFFF"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"D0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":3825,"end":3882,"name":"AND","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"D0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":3866,"end":3881,"name":"TIMESTAMP","source":6},{"begin":3825,"end":3882,"name":"PUSH","source":6,"value":"FFFFFFFFFF"},{"begin":3825,"end":3882,"name":"AND","source":6},{"begin":3825,"end":3882,"name":"MUL","source":6},{"begin":3825,"end":3882,"name":"OR","source":6},{"begin":3825,"end":3882,"name":"DUP8","source":6},{"begin":3825,"end":3882,"name":"SSTORE","source":6},{"begin":3895,"end":3929,"name":"PUSH","source":6,"value":"40"},{"begin":3895,"end":3929,"name":"MLOAD","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":3895,"end":3929,"name":"DUP10","source":6},{"begin":3895,"end":3929,"name":"AND","source":6},{"begin":3895,"end":3929,"name":"SWAP1","source":6},{"begin":3895,"end":3929,"name":"PUSH","source":6,"value":"5777CA300DFE5BEAD41006FBCE4389794DBC0ED8D6CCCEBFAF94630AA04184BC"},{"begin":3895,"end":3929,"name":"SWAP1","source":6},{"begin":3895,"end":3929,"name":"PUSH [tag]","source":6,"value":"315"},{"begin":3895,"end":3929,"name":"SWAP1","source":6},{"begin":3780,"end":3817,"name":"DUP5","source":6},{"begin":3780,"end":3817,"name":"SWAP1","source":6},{"begin":3895,"end":3929,"name":"PUSH [tag]","source":6,"value":"36"},{"begin":3895,"end":3929,"name":"JUMP","source":6,"value":"[in]"},{"begin":3895,"end":3929,"name":"tag","source":6,"value":"315"},{"begin":3895,"end":3929,"name":"JUMPDEST","source":6},{"begin":3895,"end":3929,"name":"PUSH","source":6,"value":"40"},{"begin":3895,"end":3929,"name":"MLOAD","source":6},{"begin":3895,"end":3929,"name":"DUP1","source":6},{"begin":3895,"end":3929,"name":"SWAP2","source":6},{"begin":3895,"end":3929,"name":"SUB","source":6},{"begin":3895,"end":3929,"name":"SWAP1","source":6},{"begin":3895,"end":3929,"name":"LOG2","source":6},{"begin":3617,"end":4014,"name":"PUSH [tag]","source":6,"value":"316"},{"begin":3617,"end":4014,"name":"JUMP","source":6},{"begin":3617,"end":4014,"name":"tag","source":6,"value":"311"},{"begin":3617,"end":4014,"name":"JUMPDEST","source":6},{"begin":3950,"end":4007,"name":"DUP7","source":6},{"begin":3950,"end":4007,"name":"SLOAD","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"FFFFFFFFFF"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"D0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":3950,"end":4007,"name":"AND","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"D0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":3991,"end":4006,"name":"TIMESTAMP","source":6},{"begin":3950,"end":4007,"name":"PUSH","source":6,"value":"FFFFFFFFFF"},{"begin":3950,"end":4007,"name":"AND","source":6},{"begin":3950,"end":4007,"name":"MUL","source":6},{"begin":3950,"end":4007,"name":"OR","source":6},{"begin":3950,"end":4007,"name":"DUP8","source":6},{"begin":3950,"end":4007,"name":"SSTORE","source":6},{"begin":3617,"end":4014,"name":"tag","source":6,"value":"316"},{"begin":3617,"end":4014,"name":"JUMPDEST","source":6},{"begin":4027,"end":4035,"name":"SWAP8","source":6},{"begin":3104,"end":4040,"name":"SWAP7","source":6},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":3104,"end":4040,"name":"JUMP","source":6,"value":"[out]"},{"begin":7144,"end":7380,"name":"tag","source":6,"value":"261"},{"begin":7144,"end":7380,"name":"JUMPDEST","source":6},{"begin":7275,"end":7282,"name":"PUSH","source":6,"value":"0"},{"begin":7353,"end":7375,"name":"PUSH","source":6,"value":"DE0B6B3A7640000"},{"begin":7297,"end":7350,"name":"PUSH [tag]","source":6,"value":"318"},{"begin":7322,"end":7349,"name":"PUSH [tag]","source":6,"value":"319"},{"begin":7322,"end":7334,"name":"DUP6","source":6},{"begin":7339,"end":7348,"name":"DUP6","source":6},{"begin":7322,"end":7338,"name":"PUSH [tag]","source":6,"value":"320"},{"begin":7322,"end":7349,"name":"JUMP","source":6,"value":"[in]"},{"begin":7322,"end":7349,"name":"tag","source":6,"value":"319"},{"begin":7322,"end":7349,"name":"JUMPDEST","source":6},{"begin":7297,"end":7317,"name":"DUP7","source":6},{"begin":7297,"end":7317,"name":"SWAP1","source":6},{"begin":7297,"end":7321,"name":"PUSH [tag]","source":6,"value":"321"},{"begin":7297,"end":7350,"name":"JUMP","source":6,"value":"[in]"},{"begin":7297,"end":7350,"name":"tag","source":6,"value":"318"},{"begin":7297,"end":7350,"name":"JUMPDEST","source":6},{"begin":7297,"end":7375,"name":"DUP2","source":6},{"begin":7297,"end":7375,"name":"PUSH [tag]","source":6,"value":"322"},{"begin":7297,"end":7375,"name":"JUMPI","source":6},{"begin":7297,"end":7375,"name":"INVALID","source":6},{"begin":7297,"end":7375,"name":"tag","source":6,"value":"322"},{"begin":7297,"end":7375,"name":"JUMPDEST","source":6},{"begin":7297,"end":7375,"name":"DIV","source":6},{"begin":7297,"end":7375,"name":"SWAP5","source":6},{"begin":7144,"end":7380,"name":"SWAP4","source":6},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":7144,"end":7380,"name":"JUMP","source":6,"value":"[out]"},{"begin":7833,"end":8571,"name":"tag","source":6,"value":"285"},{"begin":7833,"end":8571,"name":"JUMPDEST","source":6},{"begin":8041,"end":8057,"name":"PUSH","source":6,"value":"34"},{"begin":8041,"end":8057,"name":"SLOAD","source":6},{"begin":8000,"end":8007,"name":"PUSH","source":6,"value":"0"},{"begin":8000,"end":8007,"name":"SWAP1","source":6},{"begin":8074,"end":8096,"name":"DUP5","source":6},{"begin":8074,"end":8096,"name":"ISZERO","source":6},{"begin":8074,"end":8096,"name":"DUP1","source":6},{"begin":8074,"end":8123,"name":"PUSH [tag]","source":6,"value":"324"},{"begin":8074,"end":8123,"name":"JUMPI","source":6},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":8106,"end":8123,"name":"DUP3","source":6},{"begin":8106,"end":8123,"name":"ISZERO","source":6},{"begin":8074,"end":8123,"name":"tag","source":6,"value":"324"},{"begin":8074,"end":8123,"name":"JUMPDEST","source":6},{"begin":8074,"end":8171,"name":"DUP1","source":6},{"begin":8074,"end":8171,"name":"PUSH [tag]","source":6,"value":"325"},{"begin":8074,"end":8171,"name":"JUMPI","source":6},{"begin":8074,"end":8171,"name":"POP","source":6},{"begin":8156,"end":8171,"name":"TIMESTAMP","source":6},{"begin":8133,"end":8152,"name":"DUP5","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"80"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":8133,"end":8171,"name":"AND","source":6},{"begin":8133,"end":8171,"name":"EQ","source":6},{"begin":8074,"end":8171,"name":"tag","source":6,"value":"325"},{"begin":8074,"end":8171,"name":"JUMPDEST","source":6},{"begin":8074,"end":8219,"name":"DUP1","source":6},{"begin":8074,"end":8219,"name":"PUSH [tag]","source":6,"value":"326"},{"begin":8074,"end":8219,"name":"JUMPI","source":6},{"begin":8074,"end":8219,"name":"POP","source":6},{"begin":8204,"end":8219,"name":"DUP1","source":6},{"begin":8181,"end":8200,"name":"DUP5","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"80"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":8181,"end":8219,"name":"AND","source":6},{"begin":8181,"end":8219,"name":"LT","source":6},{"begin":8181,"end":8219,"name":"ISZERO","source":6},{"begin":8074,"end":8219,"name":"tag","source":6,"value":"326"},{"begin":8074,"end":8219,"name":"JUMPDEST","source":6},{"begin":8063,"end":8260,"name":"ISZERO","source":6},{"begin":8063,"end":8260,"name":"PUSH [tag]","source":6,"value":"327"},{"begin":8063,"end":8260,"name":"JUMPI","source":6},{"begin":8241,"end":8253,"name":"DUP6","source":6},{"begin":8234,"end":8253,"name":"SWAP2","source":6},{"begin":8234,"end":8253,"name":"POP","source":6},{"begin":8234,"end":8253,"name":"POP","source":6},{"begin":8234,"end":8253,"name":"PUSH [tag]","source":6,"value":"110"},{"begin":8234,"end":8253,"name":"JUMP","source":6},{"begin":8063,"end":8260,"name":"tag","source":6,"value":"327"},{"begin":8063,"end":8260,"name":"JUMPDEST","source":6},{"begin":8266,"end":8290,"name":"PUSH","source":6,"value":"0"},{"begin":8317,"end":8332,"name":"DUP2","source":6},{"begin":8299,"end":8314,"name":"TIMESTAMP","source":6},{"begin":8299,"end":8332,"name":"GT","source":6},{"begin":8299,"end":8368,"name":"PUSH [tag]","source":6,"value":"328"},{"begin":8299,"end":8368,"name":"JUMPI","source":6},{"begin":8353,"end":8368,"name":"TIMESTAMP","source":6},{"begin":8299,"end":8368,"name":"PUSH [tag]","source":6,"value":"329"},{"begin":8299,"end":8368,"name":"JUMP","source":6},{"begin":8299,"end":8368,"name":"tag","source":6,"value":"328"},{"begin":8299,"end":8368,"name":"JUMPDEST","source":6},{"begin":8335,"end":8350,"name":"DUP2","source":6},{"begin":8299,"end":8368,"name":"tag","source":6,"value":"329"},{"begin":8299,"end":8368,"name":"JUMPDEST","source":6},{"begin":8266,"end":8368,"name":"SWAP1","source":6},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":8374,"end":8391,"name":"PUSH","source":6,"value":"0"},{"begin":8394,"end":8435,"name":"PUSH [tag]","source":6,"value":"330"},{"begin":8266,"end":8368,"name":"DUP3","source":6},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"80"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":8394,"end":8435,"name":"DUP9","source":6},{"begin":8394,"end":8435,"name":"AND","source":6},{"begin":8394,"end":8414,"name":"PUSH [tag]","source":6,"value":"320"},{"begin":8394,"end":8435,"name":"JUMP","source":6,"value":"[in]"},{"begin":8394,"end":8435,"name":"tag","source":6,"value":"330"},{"begin":8394,"end":8435,"name":"JUMPDEST","source":6},{"begin":8374,"end":8435,"name":"SWAP1","source":6},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":8454,"end":8566,"name":"PUSH [tag]","source":6,"value":"140"},{"begin":8546,"end":8558,"name":"DUP9","source":6},{"begin":8454,"end":8532,"name":"PUSH [tag]","source":6,"value":"332"},{"begin":8519,"end":8531,"name":"DUP8","source":6},{"begin":8454,"end":8514,"name":"PUSH [tag]","source":6,"value":"333"},{"begin":8491,"end":8513,"name":"PUSH","source":6,"value":"DE0B6B3A7640000"},{"begin":8454,"end":8486,"name":"PUSH [tag]","source":6,"value":"334"},{"begin":8454,"end":8471,"name":"DUP14","source":6},{"begin":8374,"end":8435,"name":"DUP9","source":6},{"begin":8454,"end":8475,"name":"PUSH [tag]","source":6,"value":"321"},{"begin":8454,"end":8486,"name":"JUMP","source":6,"value":"[in]"},{"begin":8454,"end":8486,"name":"tag","source":6,"value":"334"},{"begin":8454,"end":8486,"name":"JUMPDEST","source":6},{"begin":8454,"end":8490,"name":"SWAP1","source":6},{"begin":8454,"end":8490,"name":"PUSH [tag]","source":6,"value":"321"},{"begin":8454,"end":8514,"name":"JUMP","source":6,"value":"[in]"},{"begin":8454,"end":8514,"name":"tag","source":6,"value":"333"},{"begin":8454,"end":8514,"name":"JUMPDEST","source":6},{"begin":8454,"end":8518,"name":"SWAP1","source":6},{"begin":8454,"end":8518,"name":"PUSH [tag]","source":6,"value":"335"},{"begin":8454,"end":8532,"name":"JUMP","source":6,"value":"[in]"},{"begin":8454,"end":8532,"name":"tag","source":6,"value":"332"},{"begin":8454,"end":8532,"name":"JUMPDEST","source":6},{"begin":8454,"end":8536,"name":"SWAP1","source":6},{"begin":8454,"end":8536,"name":"PUSH [tag]","source":6,"value":"121"},{"begin":8454,"end":8566,"name":"JUMP","source":6,"value":"[in]"},{"begin":1547,"end":2102,"name":"tag","source":3,"value":"298"},{"begin":1547,"end":2102,"name":"JUMPDEST","source":3},{"begin":1630,"end":1657,"name":"PUSH [tag]","source":3,"value":"337"},{"begin":1638,"end":1643,"name":"DUP3","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":1630,"end":1655,"name":"AND","source":3},{"begin":1630,"end":1655,"name":"PUSH [tag]","source":3,"value":"338"},{"begin":1630,"end":1657,"name":"JUMP","source":3,"value":"[in]"},{"begin":1630,"end":1657,"name":"tag","source":3,"value":"337"},{"begin":1630,"end":1657,"name":"JUMPDEST","source":3},{"begin":1622,"end":1693,"name":"PUSH [tag]","source":3,"value":"339"},{"begin":1622,"end":1693,"name":"JUMPI","source":3},{"begin":1622,"end":1693,"name":"PUSH","source":3,"value":"40"},{"begin":1622,"end":1693,"name":"DUP1","source":3},{"begin":1622,"end":1693,"name":"MLOAD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"461BCD"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E5"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":1622,"end":1693,"name":"DUP2","source":3},{"begin":1622,"end":1693,"name":"MSTORE","source":3},{"begin":1622,"end":1693,"name":"PUSH","source":3,"value":"20"},{"begin":1622,"end":1693,"name":"PUSH","source":3,"value":"4"},{"begin":1622,"end":1693,"name":"DUP3","source":3},{"begin":1622,"end":1693,"name":"ADD","source":3},{"begin":1622,"end":1693,"name":"MSTORE","source":3},{"begin":1622,"end":1693,"name":"PUSH","source":3,"value":"1F"},{"begin":1622,"end":1693,"name":"PUSH","source":3,"value":"24"},{"begin":1622,"end":1693,"name":"DUP3","source":3},{"begin":1622,"end":1693,"name":"ADD","source":3},{"begin":1622,"end":1693,"name":"MSTORE","source":3},{"begin":1622,"end":1693,"name":"PUSH","source":3,"value":"5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400"},{"begin":1622,"end":1693,"name":"PUSH","source":3,"value":"44"},{"begin":1622,"end":1693,"name":"DUP3","source":3},{"begin":1622,"end":1693,"name":"ADD","source":3},{"begin":1622,"end":1693,"name":"MSTORE","source":3},{"begin":1622,"end":1693,"name":"SWAP1","source":3},{"begin":1622,"end":1693,"name":"MLOAD","source":3},{"begin":1622,"end":1693,"name":"SWAP1","source":3},{"begin":1622,"end":1693,"name":"DUP2","source":3},{"begin":1622,"end":1693,"name":"SWAP1","source":3},{"begin":1622,"end":1693,"name":"SUB","source":3},{"begin":1622,"end":1693,"name":"PUSH","source":3,"value":"64"},{"begin":1622,"end":1693,"name":"ADD","source":3},{"begin":1622,"end":1693,"name":"SWAP1","source":3},{"begin":1622,"end":1693,"name":"REVERT","source":3},{"begin":1622,"end":1693,"name":"tag","source":3,"value":"339"},{"begin":1622,"end":1693,"name":"JUMPDEST","source":3},{"begin":1756,"end":1768,"name":"PUSH","source":3,"value":"0"},{"begin":1770,"end":1793,"name":"PUSH","source":3,"value":"60"},{"begin":1805,"end":1810,"name":"DUP4","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":1797,"end":1816,"name":"AND","source":3},{"begin":1817,"end":1821,"name":"DUP4","source":3},{"begin":1797,"end":1822,"name":"PUSH","source":3,"value":"40"},{"begin":1797,"end":1822,"name":"MLOAD","source":3},{"begin":1797,"end":1822,"name":"DUP1","source":3},{"begin":1797,"end":1822,"name":"DUP3","source":3},{"begin":1797,"end":1822,"name":"DUP1","source":3},{"begin":1797,"end":1822,"name":"MLOAD","source":3},{"begin":1797,"end":1822,"name":"SWAP1","source":3},{"begin":1797,"end":1822,"name":"PUSH","source":3,"value":"20"},{"begin":1797,"end":1822,"name":"ADD","source":3},{"begin":1797,"end":1822,"name":"SWAP1","source":3},{"begin":1797,"end":1822,"name":"DUP1","source":3},{"begin":1797,"end":1822,"name":"DUP4","source":3},{"begin":1797,"end":1822,"name":"DUP4","source":3},{"begin":1797,"end":1822,"name":"tag","source":3,"value":"340"},{"begin":1797,"end":1822,"name":"JUMPDEST","source":3},{"begin":1797,"end":1822,"name":"PUSH","source":3,"value":"20"},{"begin":1797,"end":1822,"name":"DUP4","source":3},{"begin":1797,"end":1822,"name":"LT","source":3},{"begin":1797,"end":1822,"name":"PUSH [tag]","source":3,"value":"342"},{"begin":1797,"end":1822,"name":"JUMPI","source":3},{"begin":1797,"end":1822,"name":"DUP1","source":3},{"begin":1797,"end":1822,"name":"MLOAD","source":3},{"begin":1797,"end":1822,"name":"DUP3","source":3},{"begin":1797,"end":1822,"name":"MSTORE","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1F"},{"begin":-1,"end":-1,"name":"NOT","source":-1},{"begin":1797,"end":1822,"name":"SWAP1","source":3},{"begin":1797,"end":1822,"name":"SWAP3","source":3},{"begin":1797,"end":1822,"name":"ADD","source":3},{"begin":1797,"end":1822,"name":"SWAP2","source":3},{"begin":1797,"end":1822,"name":"PUSH","source":3,"value":"20"},{"begin":1797,"end":1822,"name":"SWAP2","source":3},{"begin":1797,"end":1822,"name":"DUP3","source":3},{"begin":1797,"end":1822,"name":"ADD","source":3},{"begin":1797,"end":1822,"name":"SWAP2","source":3},{"begin":1797,"end":1822,"name":"ADD","source":3},{"begin":1797,"end":1822,"name":"PUSH [tag]","source":3,"value":"340"},{"begin":1797,"end":1822,"name":"JUMP","source":3},{"begin":1797,"end":1822,"name":"tag","source":3,"value":"342"},{"begin":1797,"end":1822,"name":"JUMPDEST","source":3},{"begin":1797,"end":1822,"name":"PUSH","source":3,"value":"1"},{"begin":1797,"end":1822,"name":"DUP4","source":3},{"begin":1797,"end":1822,"name":"PUSH","source":3,"value":"20"},{"begin":1797,"end":1822,"name":"SUB","source":3},{"begin":1797,"end":1822,"name":"PUSH","source":3,"value":"100"},{"begin":1797,"end":1822,"name":"EXP","source":3},{"begin":1797,"end":1822,"name":"SUB","source":3},{"begin":1797,"end":1822,"name":"DUP1","source":3},{"begin":1797,"end":1822,"name":"NOT","source":3},{"begin":1797,"end":1822,"name":"DUP3","source":3},{"begin":1797,"end":1822,"name":"MLOAD","source":3},{"begin":1797,"end":1822,"name":"AND","source":3},{"begin":1797,"end":1822,"name":"DUP2","source":3},{"begin":1797,"end":1822,"name":"DUP5","source":3},{"begin":1797,"end":1822,"name":"MLOAD","source":3},{"begin":1797,"end":1822,"name":"AND","source":3},{"begin":1797,"end":1822,"name":"DUP1","source":3},{"begin":1797,"end":1822,"name":"DUP3","source":3},{"begin":1797,"end":1822,"name":"OR","source":3},{"begin":1797,"end":1822,"name":"DUP6","source":3},{"begin":1797,"end":1822,"name":"MSTORE","source":3},{"begin":1797,"end":1822,"name":"POP","source":3},{"begin":1797,"end":1822,"name":"POP","source":3},{"begin":1797,"end":1822,"name":"POP","source":3},{"begin":1797,"end":1822,"name":"POP","source":3},{"begin":1797,"end":1822,"name":"POP","source":3},{"begin":1797,"end":1822,"name":"POP","source":3},{"begin":1797,"end":1822,"name":"SWAP1","source":3},{"begin":1797,"end":1822,"name":"POP","source":3},{"begin":1797,"end":1822,"name":"ADD","source":3},{"begin":1797,"end":1822,"name":"SWAP2","source":3},{"begin":1797,"end":1822,"name":"POP","source":3},{"begin":1797,"end":1822,"name":"POP","source":3},{"begin":1797,"end":1822,"name":"PUSH","source":3,"value":"0"},{"begin":1797,"end":1822,"name":"PUSH","source":3,"value":"40"},{"begin":1797,"end":1822,"name":"MLOAD","source":3},{"begin":1797,"end":1822,"name":"DUP1","source":3},{"begin":1797,"end":1822,"name":"DUP4","source":3},{"begin":1797,"end":1822,"name":"SUB","source":3},{"begin":1797,"end":1822,"name":"DUP2","source":3},{"begin":1797,"end":1822,"name":"PUSH","source":3,"value":"0"},{"begin":1797,"end":1822,"name":"DUP7","source":3},{"begin":1797,"end":1822,"name":"GAS","source":3},{"begin":1797,"end":1822,"name":"CALL","source":3},{"begin":1797,"end":1822,"name":"SWAP2","source":3},{"begin":1797,"end":1822,"name":"POP","source":3},{"begin":1797,"end":1822,"name":"POP","source":3},{"begin":1797,"end":1822,"name":"RETURNDATASIZE","source":3},{"begin":1797,"end":1822,"name":"DUP1","source":3},{"begin":1797,"end":1822,"name":"PUSH","source":3,"value":"0"},{"begin":1797,"end":1822,"name":"DUP2","source":3},{"begin":1797,"end":1822,"name":"EQ","source":3},{"begin":1797,"end":1822,"name":"PUSH [tag]","source":3,"value":"345"},{"begin":1797,"end":1822,"name":"JUMPI","source":3},{"begin":1797,"end":1822,"name":"PUSH","source":3,"value":"40"},{"begin":1797,"end":1822,"name":"MLOAD","source":3},{"begin":1797,"end":1822,"name":"SWAP2","source":3},{"begin":1797,"end":1822,"name":"POP","source":3},{"begin":1797,"end":1822,"name":"PUSH","source":3,"value":"1F"},{"begin":1797,"end":1822,"name":"NOT","source":3},{"begin":1797,"end":1822,"name":"PUSH","source":3,"value":"3F"},{"begin":1797,"end":1822,"name":"RETURNDATASIZE","source":3},{"begin":1797,"end":1822,"name":"ADD","source":3},{"begin":1797,"end":1822,"name":"AND","source":3},{"begin":1797,"end":1822,"name":"DUP3","source":3},{"begin":1797,"end":1822,"name":"ADD","source":3},{"begin":1797,"end":1822,"name":"PUSH","source":3,"value":"40"},{"begin":1797,"end":1822,"name":"MSTORE","source":3},{"begin":1797,"end":1822,"name":"RETURNDATASIZE","source":3},{"begin":1797,"end":1822,"name":"DUP3","source":3},{"begin":1797,"end":1822,"name":"MSTORE","source":3},{"begin":1797,"end":1822,"name":"RETURNDATASIZE","source":3},{"begin":1797,"end":1822,"name":"PUSH","source":3,"value":"0"},{"begin":1797,"end":1822,"name":"PUSH","source":3,"value":"20"},{"begin":1797,"end":1822,"name":"DUP5","source":3},{"begin":1797,"end":1822,"name":"ADD","source":3},{"begin":1797,"end":1822,"name":"RETURNDATACOPY","source":3},{"begin":1797,"end":1822,"name":"PUSH [tag]","source":3,"value":"344"},{"begin":1797,"end":1822,"name":"JUMP","source":3},{"begin":1797,"end":1822,"name":"tag","source":3,"value":"345"},{"begin":1797,"end":1822,"name":"JUMPDEST","source":3},{"begin":1797,"end":1822,"name":"PUSH","source":3,"value":"60"},{"begin":1797,"end":1822,"name":"SWAP2","source":3},{"begin":1797,"end":1822,"name":"POP","source":3},{"begin":1797,"end":1822,"name":"tag","source":3,"value":"344"},{"begin":1797,"end":1822,"name":"JUMPDEST","source":3},{"begin":1797,"end":1822,"name":"POP","source":3},{"begin":1755,"end":1822,"name":"SWAP2","source":3},{"begin":1755,"end":1822,"name":"POP","source":3},{"begin":1755,"end":1822,"name":"SWAP2","source":3},{"begin":1755,"end":1822,"name":"POP","source":3},{"begin":1836,"end":1843,"name":"DUP2","source":3},{"begin":1828,"end":1880,"name":"PUSH [tag]","source":3,"value":"346"},{"begin":1828,"end":1880,"name":"JUMPI","source":3},{"begin":1828,"end":1880,"name":"PUSH","source":3,"value":"40"},{"begin":1828,"end":1880,"name":"DUP1","source":3},{"begin":1828,"end":1880,"name":"MLOAD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"461BCD"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E5"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":1828,"end":1880,"name":"DUP2","source":3},{"begin":1828,"end":1880,"name":"MSTORE","source":3},{"begin":1828,"end":1880,"name":"PUSH","source":3,"value":"20"},{"begin":1828,"end":1880,"name":"PUSH","source":3,"value":"4"},{"begin":1828,"end":1880,"name":"DUP3","source":3},{"begin":1828,"end":1880,"name":"ADD","source":3},{"begin":1828,"end":1880,"name":"DUP2","source":3},{"begin":1828,"end":1880,"name":"SWAP1","source":3},{"begin":1828,"end":1880,"name":"MSTORE","source":3},{"begin":1828,"end":1880,"name":"PUSH","source":3,"value":"24"},{"begin":1828,"end":1880,"name":"DUP3","source":3},{"begin":1828,"end":1880,"name":"ADD","source":3},{"begin":1828,"end":1880,"name":"MSTORE","source":3},{"begin":1828,"end":1880,"name":"PUSH","source":3,"value":"5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"},{"begin":1828,"end":1880,"name":"PUSH","source":3,"value":"44"},{"begin":1828,"end":1880,"name":"DUP3","source":3},{"begin":1828,"end":1880,"name":"ADD","source":3},{"begin":1828,"end":1880,"name":"MSTORE","source":3},{"begin":1828,"end":1880,"name":"SWAP1","source":3},{"begin":1828,"end":1880,"name":"MLOAD","source":3},{"begin":1828,"end":1880,"name":"SWAP1","source":3},{"begin":1828,"end":1880,"name":"DUP2","source":3},{"begin":1828,"end":1880,"name":"SWAP1","source":3},{"begin":1828,"end":1880,"name":"SUB","source":3},{"begin":1828,"end":1880,"name":"PUSH","source":3,"value":"64"},{"begin":1828,"end":1880,"name":"ADD","source":3},{"begin":1828,"end":1880,"name":"SWAP1","source":3},{"begin":1828,"end":1880,"name":"REVERT","source":3},{"begin":1828,"end":1880,"name":"tag","source":3,"value":"346"},{"begin":1828,"end":1880,"name":"JUMPDEST","source":3},{"begin":1891,"end":1908,"name":"DUP1","source":3},{"begin":1891,"end":1908,"name":"MLOAD","source":3},{"begin":1891,"end":1912,"name":"ISZERO","source":3},{"begin":1887,"end":2098,"name":"PUSH [tag]","source":3,"value":"119"},{"begin":1887,"end":2098,"name":"JUMPI","source":3},{"begin":2025,"end":2035,"name":"DUP1","source":3},{"begin":2014,"end":2044,"name":"DUP1","source":3},{"begin":2014,"end":2044,"name":"PUSH","source":3,"value":"20"},{"begin":2014,"end":2044,"name":"ADD","source":3},{"begin":2014,"end":2044,"name":"SWAP1","source":3},{"begin":2014,"end":2044,"name":"MLOAD","source":3},{"begin":2014,"end":2044,"name":"PUSH","source":3,"value":"20"},{"begin":2014,"end":2044,"name":"DUP2","source":3},{"begin":2014,"end":2044,"name":"LT","source":3},{"begin":2014,"end":2044,"name":"ISZERO","source":3},{"begin":2014,"end":2044,"name":"PUSH [tag]","source":3,"value":"348"},{"begin":2014,"end":2044,"name":"JUMPI","source":3},{"begin":2014,"end":2044,"name":"PUSH","source":3,"value":"0"},{"begin":2014,"end":2044,"name":"DUP1","source":3},{"begin":2014,"end":2044,"name":"REVERT","source":3},{"begin":2014,"end":2044,"name":"tag","source":3,"value":"348"},{"begin":2014,"end":2044,"name":"JUMPDEST","source":3},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":2014,"end":2044,"name":"MLOAD","source":3},{"begin":2006,"end":2091,"name":"PUSH [tag]","source":3,"value":"119"},{"begin":2006,"end":2091,"name":"JUMPI","source":3},{"begin":2006,"end":2091,"name":"PUSH","source":3,"value":"40"},{"begin":2006,"end":2091,"name":"MLOAD","source":3},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"461BCD"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"E5"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":2006,"end":2091,"name":"DUP2","source":3},{"begin":2006,"end":2091,"name":"MSTORE","source":3},{"begin":2006,"end":2091,"name":"PUSH","source":3,"value":"4"},{"begin":2006,"end":2091,"name":"ADD","source":3},{"begin":2006,"end":2091,"name":"DUP1","source":3},{"begin":2006,"end":2091,"name":"DUP1","source":3},{"begin":2006,"end":2091,"name":"PUSH","source":3,"value":"20"},{"begin":2006,"end":2091,"name":"ADD","source":3},{"begin":2006,"end":2091,"name":"DUP3","source":3},{"begin":2006,"end":2091,"name":"DUP2","source":3},{"begin":2006,"end":2091,"name":"SUB","source":3},{"begin":2006,"end":2091,"name":"DUP3","source":3},{"begin":2006,"end":2091,"name":"MSTORE","source":3},{"begin":2006,"end":2091,"name":"PUSH","source":3,"value":"2A"},{"begin":2006,"end":2091,"name":"DUP2","source":3},{"begin":2006,"end":2091,"name":"MSTORE","source":3},{"begin":2006,"end":2091,"name":"PUSH","source":3,"value":"20"},{"begin":2006,"end":2091,"name":"ADD","source":3},{"begin":2006,"end":2091,"name":"DUP1","source":3},{"begin":2006,"end":2091,"name":"PUSH data","source":3,"value":"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"},{"begin":2006,"end":2091,"name":"PUSH","source":3,"value":"2A"},{"begin":2006,"end":2091,"name":"SWAP2","source":3},{"begin":2006,"end":2091,"name":"CODECOPY","source":3},{"begin":2006,"end":2091,"name":"PUSH","source":3,"value":"40"},{"begin":2006,"end":2091,"name":"ADD","source":3},{"begin":2006,"end":2091,"name":"SWAP2","source":3},{"begin":2006,"end":2091,"name":"POP","source":3},{"begin":2006,"end":2091,"name":"POP","source":3},{"begin":2006,"end":2091,"name":"PUSH","source":3,"value":"40"},{"begin":2006,"end":2091,"name":"MLOAD","source":3},{"begin":2006,"end":2091,"name":"DUP1","source":3},{"begin":2006,"end":2091,"name":"SWAP2","source":3},{"begin":2006,"end":2091,"name":"SUB","source":3},{"begin":2006,"end":2091,"name":"SWAP1","source":3},{"begin":2006,"end":2091,"name":"REVERT","source":3},{"begin":723,"end":834,"name":"tag","source":13,"value":"320"},{"begin":723,"end":834,"name":"JUMPDEST","source":13},{"begin":815,"end":820,"name":"DUP1","source":13},{"begin":815,"end":820,"name":"DUP3","source":13},{"begin":815,"end":820,"name":"SUB","source":13},{"begin":810,"end":826,"name":"DUP3","source":13},{"begin":810,"end":826,"name":"DUP2","source":13},{"begin":810,"end":826,"name":"GT","source":13},{"begin":810,"end":826,"name":"ISZERO","source":13},{"begin":802,"end":827,"name":"PUSH [tag]","source":13,"value":"123"},{"begin":802,"end":827,"name":"JUMPI","source":13},{"begin":802,"end":827,"name":"PUSH","source":13,"value":"0"},{"begin":802,"end":827,"name":"DUP1","source":13},{"begin":802,"end":827,"name":"REVERT","source":13},{"begin":999,"end":1124,"name":"tag","source":13,"value":"321"},{"begin":999,"end":1124,"name":"JUMPDEST","source":13},{"begin":1057,"end":1066,"name":"PUSH","source":13,"value":"0"},{"begin":1086,"end":1092,"name":"DUP3","source":13},{"begin":1086,"end":1092,"name":"ISZERO","source":13},{"begin":1086,"end":1092,"name":"DUP1","source":13},{"begin":1086,"end":1116,"name":"PUSH [tag]","source":13,"value":"353"},{"begin":1086,"end":1116,"name":"JUMPI","source":13},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":1101,"end":1106,"name":"DUP2","source":13},{"begin":1101,"end":1106,"name":"DUP2","source":13},{"begin":1101,"end":1106,"name":"MUL","source":13},{"begin":1115,"end":1116,"name":"DUP2","source":13},{"begin":1110,"end":1111,"name":"DUP4","source":13},{"begin":1101,"end":1106,"name":"DUP3","source":13},{"begin":1110,"end":1111,"name":"DUP2","source":13},{"begin":1096,"end":1111,"name":"PUSH [tag]","source":13,"value":"354"},{"begin":1096,"end":1111,"name":"JUMPI","source":13},{"begin":1096,"end":1111,"name":"INVALID","source":13},{"begin":1096,"end":1111,"name":"tag","source":13,"value":"354"},{"begin":1096,"end":1111,"name":"JUMPDEST","source":13},{"begin":1096,"end":1111,"name":"DIV","source":13},{"begin":1096,"end":1116,"name":"EQ","source":13},{"begin":1086,"end":1116,"name":"tag","source":13,"value":"353"},{"begin":1086,"end":1116,"name":"JUMPDEST","source":13},{"begin":1078,"end":1117,"name":"PUSH [tag]","source":13,"value":"123"},{"begin":1078,"end":1117,"name":"JUMPI","source":13},{"begin":1078,"end":1117,"name":"PUSH","source":13,"value":"0"},{"begin":1078,"end":1117,"name":"DUP1","source":13},{"begin":1078,"end":1117,"name":"REVERT","source":13},{"begin":1130,"end":1301,"name":"tag","source":13,"value":"335"},{"begin":1130,"end":1301,"name":"JUMPDEST","source":13},{"begin":1187,"end":1194,"name":"PUSH","source":13,"value":"0"},{"begin":1293,"end":1294,"name":"DUP2","source":13},{"begin":1289,"end":1290,"name":"DUP4","source":13},{"begin":1289,"end":1294,"name":"DUP2","source":13},{"begin":1289,"end":1294,"name":"PUSH [tag]","source":13,"value":"357"},{"begin":1289,"end":1294,"name":"JUMPI","source":13},{"begin":1289,"end":1294,"name":"INVALID","source":13},{"begin":1289,"end":1294,"name":"tag","source":13,"value":"357"},{"begin":1289,"end":1294,"name":"JUMPDEST","source":13},{"begin":1289,"end":1294,"name":"DIV","source":13},{"begin":1289,"end":1294,"name":"SWAP4","source":13},{"begin":1130,"end":1301,"name":"SWAP3","source":13},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":1130,"end":1301,"name":"JUMP","source":13,"value":"[out]"},{"begin":743,"end":1329,"name":"tag","source":2,"value":"338"},{"begin":743,"end":1329,"name":"JUMPDEST","source":2},{"begin":803,"end":807,"name":"PUSH","source":2,"value":"0"},{"begin":1242,"end":1262,"name":"DUP2","source":2},{"begin":1242,"end":1262,"name":"EXTCODEHASH","source":2},{"begin":1089,"end":1155,"name":"PUSH","source":2,"value":"C5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"},{"begin":1281,"end":1304,"name":"DUP2","source":2},{"begin":1281,"end":1304,"name":"DUP2","source":2},{"begin":1281,"end":1304,"name":"EQ","source":2},{"begin":1281,"end":1304,"name":"DUP1","source":2},{"begin":1281,"end":1304,"name":"ISZERO","source":2},{"begin":1281,"end":1304,"name":"SWAP1","source":2},{"begin":1281,"end":1323,"name":"PUSH [tag]","source":2,"value":"110"},{"begin":1281,"end":1323,"name":"JUMPI","source":2},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":1308,"end":1323,"name":"ISZERO","source":2},{"begin":1308,"end":1323,"name":"ISZERO","source":2},{"begin":1308,"end":1323,"name":"SWAP3","source":2},{"begin":1273,"end":1324,"name":"SWAP2","source":2},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":743,"end":1329,"name":"JUMP","source":2,"value":"[out]"},{"begin":-1,"end":-1,"name":"tag","source":-1,"value":"153"},{"begin":-1,"end":-1,"name":"JUMPDEST","source":-1},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"40"},{"begin":-1,"end":-1,"name":"DUP1","source":-1},{"begin":-1,"end":-1,"name":"MLOAD","source":-1},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"60"},{"begin":-1,"end":-1,"name":"DUP2","source":-1},{"begin":-1,"end":-1,"name":"ADD","source":-1},{"begin":-1,"end":-1,"name":"DUP3","source":-1},{"begin":-1,"end":-1,"name":"MSTORE","source":-1},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"0"},{"begin":-1,"end":-1,"name":"DUP1","source":-1},{"begin":-1,"end":-1,"name":"DUP3","source":-1},{"begin":-1,"end":-1,"name":"MSTORE","source":-1},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"20"},{"begin":-1,"end":-1,"name":"DUP3","source":-1},{"begin":-1,"end":-1,"name":"ADD","source":-1},{"begin":-1,"end":-1,"name":"DUP2","source":-1},{"begin":-1,"end":-1,"name":"SWAP1","source":-1},{"begin":-1,"end":-1,"name":"MSTORE","source":-1},{"begin":-1,"end":-1,"name":"SWAP2","source":-1},{"begin":-1,"end":-1,"name":"DUP2","source":-1},{"begin":-1,"end":-1,"name":"ADD","source":-1},{"begin":-1,"end":-1,"name":"SWAP2","source":-1},{"begin":-1,"end":-1,"name":"SWAP1","source":-1},{"begin":-1,"end":-1,"name":"SWAP2","source":-1},{"begin":-1,"end":-1,"name":"MSTORE","source":-1},{"begin":-1,"end":-1,"name":"SWAP1","source":-1},{"begin":-1,"end":-1,"name":"JUMP","source":-1,"value":"[out]"},{"begin":-1,"end":-1,"name":"tag","source":-1,"value":"181"},{"begin":-1,"end":-1,"name":"JUMPDEST","source":-1},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"40"},{"begin":-1,"end":-1,"name":"MLOAD","source":-1},{"begin":-1,"end":-1,"name":"DUP1","source":-1},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"60"},{"begin":-1,"end":-1,"name":"ADD","source":-1},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"40"},{"begin":-1,"end":-1,"name":"MSTORE","source":-1},{"begin":-1,"end":-1,"name":"DUP1","source":-1},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"0"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":-1,"end":-1,"name":"AND","source":-1},{"begin":-1,"end":-1,"name":"DUP2","source":-1},{"begin":-1,"end":-1,"name":"MSTORE","source":-1},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"20"},{"begin":-1,"end":-1,"name":"ADD","source":-1},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"0"},{"begin":-1,"end":-1,"name":"DUP2","source":-1},{"begin":-1,"end":-1,"name":"MSTORE","source":-1},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"20"},{"begin":-1,"end":-1,"name":"ADD","source":-1},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"0"},{"begin":-1,"end":-1,"name":"DUP2","source":-1},{"begin":-1,"end":-1,"name":"MSTORE","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"SWAP1","source":-1},{"begin":-1,"end":-1,"name":"JUMP","source":-1,"value":"[out]"},{"begin":14,"end":418,"name":"tag","source":14,"value":"361"},{"begin":14,"end":418,"name":"JUMPDEST","source":14},{"begin":14,"end":418,"name":"PUSH","source":14,"value":"0"},{"begin":14,"end":418,"name":"DUP1","source":14},{"begin":147,"end":150,"name":"DUP4","source":14},{"begin":140,"end":144,"name":"PUSH","source":14,"value":"1F"},{"begin":132,"end":138,"name":"DUP5","source":14},{"begin":128,"end":145,"name":"ADD","source":14},{"begin":124,"end":151,"name":"SLT","source":14},{"begin":114,"end":116,"name":"PUSH [tag]","source":14,"value":"363"},{"begin":114,"end":116,"name":"JUMPI","source":14},{"begin":172,"end":180,"name":"DUP2","source":14},{"begin":162,"end":170,"name":"DUP3","source":14},{"begin":155,"end":181,"name":"REVERT","source":14},{"begin":114,"end":116,"name":"tag","source":14,"value":"363"},{"begin":114,"end":116,"name":"JUMPDEST","source":14},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":202,"end":222,"name":"DUP2","source":14},{"begin":202,"end":222,"name":"CALLDATALOAD","source":14},{"begin":245,"end":263,"name":"PUSH","source":14,"value":"FFFFFFFFFFFFFFFF"},{"begin":234,"end":264,"name":"DUP2","source":14},{"begin":234,"end":264,"name":"GT","source":14},{"begin":231,"end":233,"name":"ISZERO","source":14},{"begin":231,"end":233,"name":"PUSH [tag]","source":14,"value":"364"},{"begin":231,"end":233,"name":"JUMPI","source":14},{"begin":284,"end":292,"name":"DUP2","source":14},{"begin":274,"end":282,"name":"DUP3","source":14},{"begin":267,"end":293,"name":"REVERT","source":14},{"begin":231,"end":233,"name":"tag","source":14,"value":"364"},{"begin":231,"end":233,"name":"JUMPDEST","source":14},{"begin":328,"end":332,"name":"PUSH","source":14,"value":"20"},{"begin":320,"end":326,"name":"DUP4","source":14},{"begin":316,"end":333,"name":"ADD","source":14},{"begin":304,"end":333,"name":"SWAP2","source":14},{"begin":304,"end":333,"name":"POP","source":14},{"begin":391,"end":394,"name":"DUP4","source":14},{"begin":384,"end":388,"name":"PUSH","source":14,"value":"20"},{"begin":376,"end":380,"name":"DUP1","source":14},{"begin":368,"end":374,"name":"DUP4","source":14},{"begin":364,"end":381,"name":"MUL","source":14},{"begin":356,"end":362,"name":"DUP6","source":14},{"begin":352,"end":382,"name":"ADD","source":14},{"begin":348,"end":389,"name":"ADD","source":14},{"begin":345,"end":395,"name":"GT","source":14},{"begin":342,"end":344,"name":"ISZERO","source":14},{"begin":342,"end":344,"name":"PUSH [tag]","source":14,"value":"365"},{"begin":342,"end":344,"name":"JUMPI","source":14},{"begin":408,"end":409,"name":"PUSH","source":14,"value":"0"},{"begin":405,"end":406,"name":"DUP1","source":14},{"begin":398,"end":410,"name":"REVERT","source":14},{"begin":342,"end":344,"name":"tag","source":14,"value":"365"},{"begin":342,"end":344,"name":"JUMPDEST","source":14},{"begin":104,"end":418,"name":"SWAP3","source":14},{"begin":104,"end":418,"name":"POP","source":14},{"begin":104,"end":418,"name":"SWAP3","source":14},{"begin":104,"end":418,"name":"SWAP1","source":14},{"begin":104,"end":418,"name":"POP","source":14},{"begin":104,"end":418,"name":"JUMP","source":14,"value":"[out]"},{"begin":423,"end":682,"name":"tag","source":14,"value":"28"},{"begin":423,"end":682,"name":"JUMPDEST","source":14},{"begin":423,"end":682,"name":"PUSH","source":14,"value":"0"},{"begin":535,"end":537,"name":"PUSH","source":14,"value":"20"},{"begin":523,"end":532,"name":"DUP3","source":14},{"begin":514,"end":521,"name":"DUP5","source":14},{"begin":510,"end":533,"name":"SUB","source":14},{"begin":506,"end":538,"name":"SLT","source":14},{"begin":503,"end":505,"name":"ISZERO","source":14},{"begin":503,"end":505,"name":"PUSH [tag]","source":14,"value":"367"},{"begin":503,"end":505,"name":"JUMPI","source":14},{"begin":556,"end":562,"name":"DUP1","source":14},{"begin":548,"end":554,"name":"DUP2","source":14},{"begin":541,"end":563,"name":"REVERT","source":14},{"begin":503,"end":505,"name":"tag","source":14,"value":"367"},{"begin":503,"end":505,"name":"JUMPDEST","source":14},{"begin":600,"end":609,"name":"DUP2","source":14},{"begin":587,"end":610,"name":"CALLDATALOAD","source":14},{"begin":619,"end":652,"name":"PUSH [tag]","source":14,"value":"176"},{"begin":646,"end":651,"name":"DUP2","source":14},{"begin":619,"end":652,"name":"PUSH [tag]","source":14,"value":"369"},{"begin":619,"end":652,"name":"JUMP","source":14,"value":"[in]"},{"begin":687,"end":950,"name":"tag","source":14,"value":"213"},{"begin":687,"end":950,"name":"JUMPDEST","source":14},{"begin":687,"end":950,"name":"PUSH","source":14,"value":"0"},{"begin":810,"end":812,"name":"PUSH","source":14,"value":"20"},{"begin":798,"end":807,"name":"DUP3","source":14},{"begin":789,"end":796,"name":"DUP5","source":14},{"begin":785,"end":808,"name":"SUB","source":14},{"begin":781,"end":813,"name":"SLT","source":14},{"begin":778,"end":780,"name":"ISZERO","source":14},{"begin":778,"end":780,"name":"PUSH [tag]","source":14,"value":"371"},{"begin":778,"end":780,"name":"JUMPI","source":14},{"begin":831,"end":837,"name":"DUP1","source":14},{"begin":823,"end":829,"name":"DUP2","source":14},{"begin":816,"end":838,"name":"REVERT","source":14},{"begin":778,"end":780,"name":"tag","source":14,"value":"371"},{"begin":778,"end":780,"name":"JUMPDEST","source":14},{"begin":868,"end":877,"name":"DUP2","source":14},{"begin":862,"end":878,"name":"MLOAD","source":14},{"begin":887,"end":920,"name":"PUSH [tag]","source":14,"value":"176"},{"begin":914,"end":919,"name":"DUP2","source":14},{"begin":887,"end":920,"name":"PUSH [tag]","source":14,"value":"369"},{"begin":887,"end":920,"name":"JUMP","source":14,"value":"[in]"},{"begin":955,"end":1357,"name":"tag","source":14,"value":"52"},{"begin":955,"end":1357,"name":"JUMPDEST","source":14},{"begin":955,"end":1357,"name":"PUSH","source":14,"value":"0"},{"begin":955,"end":1357,"name":"DUP1","source":14},{"begin":1084,"end":1086,"name":"PUSH","source":14,"value":"40"},{"begin":1072,"end":1081,"name":"DUP4","source":14},{"begin":1063,"end":1070,"name":"DUP6","source":14},{"begin":1059,"end":1082,"name":"SUB","source":14},{"begin":1055,"end":1087,"name":"SLT","source":14},{"begin":1052,"end":1054,"name":"ISZERO","source":14},{"begin":1052,"end":1054,"name":"PUSH [tag]","source":14,"value":"374"},{"begin":1052,"end":1054,"name":"JUMPI","source":14},{"begin":1105,"end":1111,"name":"DUP1","source":14},{"begin":1097,"end":1103,"name":"DUP2","source":14},{"begin":1090,"end":1112,"name":"REVERT","source":14},{"begin":1052,"end":1054,"name":"tag","source":14,"value":"374"},{"begin":1052,"end":1054,"name":"JUMPDEST","source":14},{"begin":1149,"end":1158,"name":"DUP3","source":14},{"begin":1136,"end":1159,"name":"CALLDATALOAD","source":14},{"begin":1168,"end":1201,"name":"PUSH [tag]","source":14,"value":"375"},{"begin":1195,"end":1200,"name":"DUP2","source":14},{"begin":1168,"end":1201,"name":"PUSH [tag]","source":14,"value":"369"},{"begin":1168,"end":1201,"name":"JUMP","source":14,"value":"[in]"},{"begin":1168,"end":1201,"name":"tag","source":14,"value":"375"},{"begin":1168,"end":1201,"name":"JUMPDEST","source":14},{"begin":1220,"end":1225,"name":"SWAP2","source":14},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":1277,"end":1279,"name":"PUSH","source":14,"value":"20"},{"begin":1262,"end":1280,"name":"DUP4","source":14},{"begin":1262,"end":1280,"name":"ADD","source":14},{"begin":1249,"end":1281,"name":"CALLDATALOAD","source":14},{"begin":1290,"end":1325,"name":"PUSH [tag]","source":14,"value":"376"},{"begin":1249,"end":1281,"name":"DUP2","source":14},{"begin":1290,"end":1325,"name":"PUSH [tag]","source":14,"value":"369"},{"begin":1290,"end":1325,"name":"JUMP","source":14,"value":"[in]"},{"begin":1290,"end":1325,"name":"tag","source":14,"value":"376"},{"begin":1290,"end":1325,"name":"JUMPDEST","source":14},{"begin":1344,"end":1351,"name":"DUP1","source":14},{"begin":1334,"end":1351,"name":"SWAP2","source":14},{"begin":1334,"end":1351,"name":"POP","source":14},{"begin":1334,"end":1351,"name":"POP","source":14},{"begin":1042,"end":1357,"name":"SWAP3","source":14},{"begin":1042,"end":1357,"name":"POP","source":14},{"begin":1042,"end":1357,"name":"SWAP3","source":14},{"begin":1042,"end":1357,"name":"SWAP1","source":14},{"begin":1042,"end":1357,"name":"POP","source":14},{"begin":1042,"end":1357,"name":"JUMP","source":14,"value":"[out]"},{"begin":1362,"end":1757,"name":"tag","source":14,"value":"48"},{"begin":1362,"end":1757,"name":"JUMPDEST","source":14},{"begin":1362,"end":1757,"name":"PUSH","source":14,"value":"0"},{"begin":1362,"end":1757,"name":"DUP1","source":14},{"begin":1362,"end":1757,"name":"PUSH","source":14,"value":"0"},{"begin":1508,"end":1510,"name":"PUSH","source":14,"value":"60"},{"begin":1496,"end":1505,"name":"DUP5","source":14},{"begin":1487,"end":1494,"name":"DUP7","source":14},{"begin":1483,"end":1506,"name":"SUB","source":14},{"begin":1479,"end":1511,"name":"SLT","source":14},{"begin":1476,"end":1478,"name":"ISZERO","source":14},{"begin":1476,"end":1478,"name":"PUSH [tag]","source":14,"value":"378"},{"begin":1476,"end":1478,"name":"JUMPI","source":14},{"begin":1529,"end":1535,"name":"DUP1","source":14},{"begin":1521,"end":1527,"name":"DUP2","source":14},{"begin":1514,"end":1536,"name":"REVERT","source":14},{"begin":1476,"end":1478,"name":"tag","source":14,"value":"378"},{"begin":1476,"end":1478,"name":"JUMPDEST","source":14},{"begin":1573,"end":1582,"name":"DUP4","source":14},{"begin":1560,"end":1583,"name":"CALLDATALOAD","source":14},{"begin":1592,"end":1625,"name":"PUSH [tag]","source":14,"value":"379"},{"begin":1619,"end":1624,"name":"DUP2","source":14},{"begin":1592,"end":1625,"name":"PUSH [tag]","source":14,"value":"369"},{"begin":1592,"end":1625,"name":"JUMP","source":14,"value":"[in]"},{"begin":1592,"end":1625,"name":"tag","source":14,"value":"379"},{"begin":1592,"end":1625,"name":"JUMPDEST","source":14},{"begin":1644,"end":1649,"name":"SWAP6","source":14},{"begin":1696,"end":1698,"name":"PUSH","source":14,"value":"20"},{"begin":1681,"end":1699,"name":"DUP6","source":14},{"begin":1681,"end":1699,"name":"ADD","source":14},{"begin":1668,"end":1700,"name":"CALLDATALOAD","source":14},{"begin":1668,"end":1700,"name":"SWAP6","source":14},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":1747,"end":1749,"name":"PUSH","source":14,"value":"40"},{"begin":1732,"end":1750,"name":"SWAP1","source":14},{"begin":1732,"end":1750,"name":"SWAP5","source":14},{"begin":1732,"end":1750,"name":"ADD","source":14},{"begin":1719,"end":1751,"name":"CALLDATALOAD","source":14},{"begin":1719,"end":1751,"name":"SWAP4","source":14},{"begin":1466,"end":1757,"name":"SWAP3","source":14},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":1466,"end":1757,"name":"JUMP","source":14,"value":"[out]"},{"begin":1762,"end":2362,"name":"tag","source":14,"value":"75"},{"begin":1762,"end":2362,"name":"JUMPDEST","source":14},{"begin":1762,"end":2362,"name":"PUSH","source":14,"value":"0"},{"begin":1762,"end":2362,"name":"DUP1","source":14},{"begin":1762,"end":2362,"name":"PUSH","source":14,"value":"0"},{"begin":1926,"end":1928,"name":"PUSH","source":14,"value":"40"},{"begin":1914,"end":1923,"name":"DUP5","source":14},{"begin":1905,"end":1912,"name":"DUP7","source":14},{"begin":1901,"end":1924,"name":"SUB","source":14},{"begin":1897,"end":1929,"name":"SLT","source":14},{"begin":1894,"end":1896,"name":"ISZERO","source":14},{"begin":1894,"end":1896,"name":"PUSH [tag]","source":14,"value":"381"},{"begin":1894,"end":1896,"name":"JUMPI","source":14},{"begin":1947,"end":1953,"name":"DUP3","source":14},{"begin":1939,"end":1945,"name":"DUP4","source":14},{"begin":1932,"end":1954,"name":"REVERT","source":14},{"begin":1894,"end":1896,"name":"tag","source":14,"value":"381"},{"begin":1894,"end":1896,"name":"JUMPDEST","source":14},{"begin":1992,"end":2001,"name":"DUP4","source":14},{"begin":1979,"end":2002,"name":"CALLDATALOAD","source":14},{"begin":2025,"end":2043,"name":"PUSH","source":14,"value":"FFFFFFFFFFFFFFFF"},{"begin":2017,"end":2023,"name":"DUP2","source":14},{"begin":2014,"end":2044,"name":"GT","source":14},{"begin":2011,"end":2013,"name":"ISZERO","source":14},{"begin":2011,"end":2013,"name":"PUSH [tag]","source":14,"value":"382"},{"begin":2011,"end":2013,"name":"JUMPI","source":14},{"begin":2062,"end":2068,"name":"DUP4","source":14},{"begin":2054,"end":2060,"name":"DUP5","source":14},{"begin":2047,"end":2069,"name":"REVERT","source":14},{"begin":2011,"end":2013,"name":"tag","source":14,"value":"382"},{"begin":2011,"end":2013,"name":"JUMPDEST","source":14},{"begin":2106,"end":2182,"name":"PUSH [tag]","source":14,"value":"383"},{"begin":2174,"end":2181,"name":"DUP7","source":14},{"begin":2165,"end":2171,"name":"DUP3","source":14},{"begin":2154,"end":2163,"name":"DUP8","source":14},{"begin":2150,"end":2172,"name":"ADD","source":14},{"begin":2106,"end":2182,"name":"PUSH [tag]","source":14,"value":"361"},{"begin":2106,"end":2182,"name":"JUMP","source":14,"value":"[in]"},{"begin":2106,"end":2182,"name":"tag","source":14,"value":"383"},{"begin":2106,"end":2182,"name":"JUMPDEST","source":14},{"begin":2201,"end":2209,"name":"SWAP1","source":14},{"begin":2201,"end":2209,"name":"SWAP5","source":14},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":2080,"end":2182,"name":"SWAP3","source":14},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":2286,"end":2288,"name":"PUSH","source":14,"value":"20"},{"begin":2271,"end":2289,"name":"DUP5","source":14},{"begin":2271,"end":2289,"name":"ADD","source":14},{"begin":2258,"end":2290,"name":"CALLDATALOAD","source":14},{"begin":2299,"end":2332,"name":"PUSH [tag]","source":14,"value":"384"},{"begin":2258,"end":2290,"name":"DUP2","source":14},{"begin":2299,"end":2332,"name":"PUSH [tag]","source":14,"value":"369"},{"begin":2299,"end":2332,"name":"JUMP","source":14,"value":"[in]"},{"begin":2299,"end":2332,"name":"tag","source":14,"value":"384"},{"begin":2299,"end":2332,"name":"JUMPDEST","source":14},{"begin":2351,"end":2356,"name":"DUP1","source":14},{"begin":2341,"end":2356,"name":"SWAP2","source":14},{"begin":2341,"end":2356,"name":"POP","source":14},{"begin":2341,"end":2356,"name":"POP","source":14},{"begin":1884,"end":2362,"name":"SWAP3","source":14},{"begin":1884,"end":2362,"name":"POP","source":14},{"begin":1884,"end":2362,"name":"SWAP3","source":14},{"begin":1884,"end":2362,"name":"POP","source":14},{"begin":1884,"end":2362,"name":"SWAP3","source":14},{"begin":1884,"end":2362,"name":"JUMP","source":14,"value":"[out]"},{"begin":2367,"end":3182,"name":"tag","source":14,"value":"71"},{"begin":2367,"end":3182,"name":"JUMPDEST","source":14},{"begin":2367,"end":3182,"name":"PUSH","source":14,"value":"0"},{"begin":2367,"end":3182,"name":"DUP1","source":14},{"begin":2367,"end":3182,"name":"PUSH","source":14,"value":"0"},{"begin":2367,"end":3182,"name":"DUP1","source":14},{"begin":2566,"end":2568,"name":"PUSH","source":14,"value":"40"},{"begin":2554,"end":2563,"name":"DUP6","source":14},{"begin":2545,"end":2552,"name":"DUP8","source":14},{"begin":2541,"end":2564,"name":"SUB","source":14},{"begin":2537,"end":2569,"name":"SLT","source":14},{"begin":2534,"end":2536,"name":"ISZERO","source":14},{"begin":2534,"end":2536,"name":"PUSH [tag]","source":14,"value":"386"},{"begin":2534,"end":2536,"name":"JUMPI","source":14},{"begin":2587,"end":2593,"name":"DUP1","source":14},{"begin":2579,"end":2585,"name":"DUP2","source":14},{"begin":2572,"end":2594,"name":"REVERT","source":14},{"begin":2534,"end":2536,"name":"tag","source":14,"value":"386"},{"begin":2534,"end":2536,"name":"JUMPDEST","source":14},{"begin":2632,"end":2641,"name":"DUP5","source":14},{"begin":2619,"end":2642,"name":"CALLDATALOAD","source":14},{"begin":2661,"end":2679,"name":"PUSH","source":14,"value":"FFFFFFFFFFFFFFFF"},{"begin":2702,"end":2704,"name":"DUP1","source":14},{"begin":2694,"end":2700,"name":"DUP3","source":14},{"begin":2691,"end":2705,"name":"GT","source":14},{"begin":2688,"end":2690,"name":"ISZERO","source":14},{"begin":2688,"end":2690,"name":"PUSH [tag]","source":14,"value":"387"},{"begin":2688,"end":2690,"name":"JUMPI","source":14},{"begin":2723,"end":2729,"name":"DUP3","source":14},{"begin":2715,"end":2721,"name":"DUP4","source":14},{"begin":2708,"end":2730,"name":"REVERT","source":14},{"begin":2688,"end":2690,"name":"tag","source":14,"value":"387"},{"begin":2688,"end":2690,"name":"JUMPDEST","source":14},{"begin":2767,"end":2843,"name":"PUSH [tag]","source":14,"value":"388"},{"begin":2835,"end":2842,"name":"DUP9","source":14},{"begin":2826,"end":2832,"name":"DUP4","source":14},{"begin":2815,"end":2824,"name":"DUP10","source":14},{"begin":2811,"end":2833,"name":"ADD","source":14},{"begin":2767,"end":2843,"name":"PUSH [tag]","source":14,"value":"361"},{"begin":2767,"end":2843,"name":"JUMP","source":14,"value":"[in]"},{"begin":2767,"end":2843,"name":"tag","source":14,"value":"388"},{"begin":2767,"end":2843,"name":"JUMPDEST","source":14},{"begin":2862,"end":2870,"name":"SWAP1","source":14},{"begin":2862,"end":2870,"name":"SWAP7","source":14},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":2741,"end":2843,"name":"SWAP5","source":14},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":2950,"end":2952,"name":"PUSH","source":14,"value":"20"},{"begin":2935,"end":2953,"name":"DUP8","source":14},{"begin":2935,"end":2953,"name":"ADD","source":14},{"begin":2922,"end":2954,"name":"CALLDATALOAD","source":14},{"begin":2922,"end":2954,"name":"SWAP2","source":14},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":2966,"end":2982,"name":"DUP1","source":14},{"begin":2966,"end":2982,"name":"DUP3","source":14},{"begin":2966,"end":2982,"name":"GT","source":14},{"begin":2963,"end":2965,"name":"ISZERO","source":14},{"begin":2963,"end":2965,"name":"PUSH [tag]","source":14,"value":"389"},{"begin":2963,"end":2965,"name":"JUMPI","source":14},{"begin":3000,"end":3006,"name":"DUP3","source":14},{"begin":2992,"end":2998,"name":"DUP4","source":14},{"begin":2985,"end":3007,"name":"REVERT","source":14},{"begin":2963,"end":2965,"name":"tag","source":14,"value":"389"},{"begin":2963,"end":2965,"name":"JUMPDEST","source":14},{"begin":2963,"end":2965,"name":"POP","source":14},{"begin":3044,"end":3122,"name":"PUSH [tag]","source":14,"value":"390"},{"begin":3114,"end":3121,"name":"DUP8","source":14},{"begin":3103,"end":3111,"name":"DUP3","source":14},{"begin":3092,"end":3101,"name":"DUP9","source":14},{"begin":3088,"end":3112,"name":"ADD","source":14},{"begin":3044,"end":3122,"name":"PUSH [tag]","source":14,"value":"361"},{"begin":3044,"end":3122,"name":"JUMP","source":14,"value":"[in]"},{"begin":3044,"end":3122,"name":"tag","source":14,"value":"390"},{"begin":3044,"end":3122,"name":"JUMPDEST","source":14},{"begin":2524,"end":3182,"name":"SWAP6","source":14},{"begin":2524,"end":3182,"name":"SWAP9","source":14},{"begin":2524,"end":3182,"name":"SWAP5","source":14},{"begin":2524,"end":3182,"name":"SWAP8","source":14},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":3141,"end":3149,"name":"SWAP6","source":14},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":2524,"end":3182,"name":"JUMP","source":14,"value":"[out]"},{"begin":3187,"end":3855,"name":"tag","source":14,"value":"43"},{"begin":3187,"end":3855,"name":"JUMPDEST","source":14},{"begin":3187,"end":3855,"name":"PUSH","source":14,"value":"0"},{"begin":3187,"end":3855,"name":"DUP1","source":14},{"begin":3187,"end":3855,"name":"PUSH","source":14,"value":"0"},{"begin":3187,"end":3855,"name":"DUP1","source":14},{"begin":3368,"end":3370,"name":"PUSH","source":14,"value":"60"},{"begin":3356,"end":3365,"name":"DUP6","source":14},{"begin":3347,"end":3354,"name":"DUP8","source":14},{"begin":3343,"end":3366,"name":"SUB","source":14},{"begin":3339,"end":3371,"name":"SLT","source":14},{"begin":3336,"end":3338,"name":"ISZERO","source":14},{"begin":3336,"end":3338,"name":"PUSH [tag]","source":14,"value":"392"},{"begin":3336,"end":3338,"name":"JUMPI","source":14},{"begin":3389,"end":3395,"name":"DUP4","source":14},{"begin":3381,"end":3387,"name":"DUP5","source":14},{"begin":3374,"end":3396,"name":"REVERT","source":14},{"begin":3336,"end":3338,"name":"tag","source":14,"value":"392"},{"begin":3336,"end":3338,"name":"JUMPDEST","source":14},{"begin":3434,"end":3443,"name":"DUP5","source":14},{"begin":3421,"end":3444,"name":"CALLDATALOAD","source":14},{"begin":3467,"end":3485,"name":"PUSH","source":14,"value":"FFFFFFFFFFFFFFFF"},{"begin":3459,"end":3465,"name":"DUP2","source":14},{"begin":3456,"end":3486,"name":"GT","source":14},{"begin":3453,"end":3455,"name":"ISZERO","source":14},{"begin":3453,"end":3455,"name":"PUSH [tag]","source":14,"value":"393"},{"begin":3453,"end":3455,"name":"JUMPI","source":14},{"begin":3504,"end":3510,"name":"DUP5","source":14},{"begin":3496,"end":3502,"name":"DUP6","source":14},{"begin":3489,"end":3511,"name":"REVERT","source":14},{"begin":3453,"end":3455,"name":"tag","source":14,"value":"393"},{"begin":3453,"end":3455,"name":"JUMPDEST","source":14},{"begin":3548,"end":3624,"name":"PUSH [tag]","source":14,"value":"394"},{"begin":3616,"end":3623,"name":"DUP8","source":14},{"begin":3607,"end":3613,"name":"DUP3","source":14},{"begin":3596,"end":3605,"name":"DUP9","source":14},{"begin":3592,"end":3614,"name":"ADD","source":14},{"begin":3548,"end":3624,"name":"PUSH [tag]","source":14,"value":"361"},{"begin":3548,"end":3624,"name":"JUMP","source":14,"value":"[in]"},{"begin":3548,"end":3624,"name":"tag","source":14,"value":"394"},{"begin":3548,"end":3624,"name":"JUMPDEST","source":14},{"begin":3643,"end":3651,"name":"SWAP1","source":14},{"begin":3643,"end":3651,"name":"SWAP6","source":14},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":3522,"end":3624,"name":"SWAP4","source":14},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":3725,"end":3727,"name":"PUSH","source":14,"value":"20"},{"begin":3710,"end":3728,"name":"DUP6","source":14},{"begin":3710,"end":3728,"name":"ADD","source":14},{"begin":3697,"end":3729,"name":"CALLDATALOAD","source":14},{"begin":3697,"end":3729,"name":"SWAP2","source":14},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":3779,"end":3781,"name":"PUSH","source":14,"value":"40"},{"begin":3764,"end":3782,"name":"DUP6","source":14},{"begin":3764,"end":3782,"name":"ADD","source":14},{"begin":3751,"end":3783,"name":"CALLDATALOAD","source":14},{"begin":3792,"end":3825,"name":"PUSH [tag]","source":14,"value":"395"},{"begin":3751,"end":3783,"name":"DUP2","source":14},{"begin":3792,"end":3825,"name":"PUSH [tag]","source":14,"value":"369"},{"begin":3792,"end":3825,"name":"JUMP","source":14,"value":"[in]"},{"begin":3792,"end":3825,"name":"tag","source":14,"value":"395"},{"begin":3792,"end":3825,"name":"JUMPDEST","source":14},{"begin":3326,"end":3855,"name":"SWAP4","source":14},{"begin":3326,"end":3855,"name":"SWAP7","source":14},{"begin":3326,"end":3855,"name":"SWAP3","source":14},{"begin":3326,"end":3855,"name":"SWAP6","source":14},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":3326,"end":3855,"name":"SWAP1","source":14},{"begin":3326,"end":3855,"name":"SWAP4","source":14},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":3326,"end":3855,"name":"JUMP","source":14,"value":"[out]"},{"begin":3860,"end":4672,"name":"tag","source":14,"value":"61"},{"begin":3860,"end":4672,"name":"JUMPDEST","source":14},{"begin":3860,"end":4672,"name":"PUSH","source":14,"value":"0"},{"begin":3860,"end":4672,"name":"DUP1","source":14},{"begin":3860,"end":4672,"name":"PUSH","source":14,"value":"0"},{"begin":3860,"end":4672,"name":"DUP1","source":14},{"begin":3860,"end":4672,"name":"PUSH","source":14,"value":"0"},{"begin":4058,"end":4061,"name":"PUSH","source":14,"value":"80"},{"begin":4046,"end":4055,"name":"DUP7","source":14},{"begin":4037,"end":4044,"name":"DUP9","source":14},{"begin":4033,"end":4056,"name":"SUB","source":14},{"begin":4029,"end":4062,"name":"SLT","source":14},{"begin":4026,"end":4028,"name":"ISZERO","source":14},{"begin":4026,"end":4028,"name":"PUSH [tag]","source":14,"value":"397"},{"begin":4026,"end":4028,"name":"JUMPI","source":14},{"begin":4080,"end":4086,"name":"DUP1","source":14},{"begin":4072,"end":4078,"name":"DUP2","source":14},{"begin":4065,"end":4087,"name":"REVERT","source":14},{"begin":4026,"end":4028,"name":"tag","source":14,"value":"397"},{"begin":4026,"end":4028,"name":"JUMPDEST","source":14},{"begin":4125,"end":4134,"name":"DUP6","source":14},{"begin":4112,"end":4135,"name":"CALLDATALOAD","source":14},{"begin":4158,"end":4176,"name":"PUSH","source":14,"value":"FFFFFFFFFFFFFFFF"},{"begin":4150,"end":4156,"name":"DUP2","source":14},{"begin":4147,"end":4177,"name":"GT","source":14},{"begin":4144,"end":4146,"name":"ISZERO","source":14},{"begin":4144,"end":4146,"name":"PUSH [tag]","source":14,"value":"398"},{"begin":4144,"end":4146,"name":"JUMPI","source":14},{"begin":4195,"end":4201,"name":"DUP2","source":14},{"begin":4187,"end":4193,"name":"DUP3","source":14},{"begin":4180,"end":4202,"name":"REVERT","source":14},{"begin":4144,"end":4146,"name":"tag","source":14,"value":"398"},{"begin":4144,"end":4146,"name":"JUMPDEST","source":14},{"begin":4239,"end":4315,"name":"PUSH [tag]","source":14,"value":"399"},{"begin":4307,"end":4314,"name":"DUP9","source":14},{"begin":4298,"end":4304,"name":"DUP3","source":14},{"begin":4287,"end":4296,"name":"DUP10","source":14},{"begin":4283,"end":4305,"name":"ADD","source":14},{"begin":4239,"end":4315,"name":"PUSH [tag]","source":14,"value":"361"},{"begin":4239,"end":4315,"name":"JUMP","source":14,"value":"[in]"},{"begin":4239,"end":4315,"name":"tag","source":14,"value":"399"},{"begin":4239,"end":4315,"name":"JUMPDEST","source":14},{"begin":4334,"end":4342,"name":"SWAP1","source":14},{"begin":4334,"end":4342,"name":"SWAP7","source":14},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":4213,"end":4315,"name":"SWAP5","source":14},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":4416,"end":4418,"name":"PUSH","source":14,"value":"20"},{"begin":4401,"end":4419,"name":"DUP7","source":14},{"begin":4401,"end":4419,"name":"ADD","source":14},{"begin":4388,"end":4420,"name":"CALLDATALOAD","source":14},{"begin":4388,"end":4420,"name":"SWAP3","source":14},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":4470,"end":4472,"name":"PUSH","source":14,"value":"40"},{"begin":4455,"end":4473,"name":"DUP7","source":14},{"begin":4455,"end":4473,"name":"ADD","source":14},{"begin":4442,"end":4474,"name":"CALLDATALOAD","source":14},{"begin":4483,"end":4516,"name":"PUSH [tag]","source":14,"value":"400"},{"begin":4442,"end":4474,"name":"DUP2","source":14},{"begin":4483,"end":4516,"name":"PUSH [tag]","source":14,"value":"369"},{"begin":4483,"end":4516,"name":"JUMP","source":14,"value":"[in]"},{"begin":4483,"end":4516,"name":"tag","source":14,"value":"400"},{"begin":4483,"end":4516,"name":"JUMPDEST","source":14},{"begin":4535,"end":4540,"name":"SWAP2","source":14},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":4592,"end":4594,"name":"PUSH","source":14,"value":"60"},{"begin":4577,"end":4595,"name":"DUP7","source":14},{"begin":4577,"end":4595,"name":"ADD","source":14},{"begin":4564,"end":4596,"name":"CALLDATALOAD","source":14},{"begin":4605,"end":4640,"name":"PUSH [tag]","source":14,"value":"401"},{"begin":4564,"end":4596,"name":"DUP2","source":14},{"begin":4605,"end":4640,"name":"PUSH [tag]","source":14,"value":"369"},{"begin":4605,"end":4640,"name":"JUMP","source":14,"value":"[in]"},{"begin":4605,"end":4640,"name":"tag","source":14,"value":"401"},{"begin":4605,"end":4640,"name":"JUMPDEST","source":14},{"begin":4659,"end":4666,"name":"DUP1","source":14},{"begin":4649,"end":4666,"name":"SWAP2","source":14},{"begin":4649,"end":4666,"name":"POP","source":14},{"begin":4649,"end":4666,"name":"POP","source":14},{"begin":4016,"end":4672,"name":"SWAP3","source":14},{"begin":4016,"end":4672,"name":"SWAP6","source":14},{"begin":4016,"end":4672,"name":"POP","source":14},{"begin":4016,"end":4672,"name":"SWAP3","source":14},{"begin":4016,"end":4672,"name":"SWAP6","source":14},{"begin":4016,"end":4672,"name":"SWAP1","source":14},{"begin":4016,"end":4672,"name":"SWAP4","source":14},{"begin":4016,"end":4672,"name":"POP","source":14},{"begin":4016,"end":4672,"name":"JUMP","source":14,"value":"[out]"},{"begin":4677,"end":4867,"name":"tag","source":14,"value":"57"},{"begin":4677,"end":4867,"name":"JUMPDEST","source":14},{"begin":4677,"end":4867,"name":"PUSH","source":14,"value":"0"},{"begin":4789,"end":4791,"name":"PUSH","source":14,"value":"20"},{"begin":4777,"end":4786,"name":"DUP3","source":14},{"begin":4768,"end":4775,"name":"DUP5","source":14},{"begin":4764,"end":4787,"name":"SUB","source":14},{"begin":4760,"end":4792,"name":"SLT","source":14},{"begin":4757,"end":4759,"name":"ISZERO","source":14},{"begin":4757,"end":4759,"name":"PUSH [tag]","source":14,"value":"403"},{"begin":4757,"end":4759,"name":"JUMPI","source":14},{"begin":4810,"end":4816,"name":"DUP1","source":14},{"begin":4802,"end":4808,"name":"DUP2","source":14},{"begin":4795,"end":4817,"name":"REVERT","source":14},{"begin":4757,"end":4759,"name":"tag","source":14,"value":"403"},{"begin":4757,"end":4759,"name":"JUMPDEST","source":14},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":4838,"end":4861,"name":"CALLDATALOAD","source":14},{"begin":4838,"end":4861,"name":"SWAP2","source":14},{"begin":4747,"end":4867,"name":"SWAP1","source":14},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":4747,"end":4867,"name":"JUMP","source":14,"value":"[out]"},{"begin":4872,"end":5066,"name":"tag","source":14,"value":"172"},{"begin":4872,"end":5066,"name":"JUMPDEST","source":14},{"begin":4872,"end":5066,"name":"PUSH","source":14,"value":"0"},{"begin":4995,"end":4997,"name":"PUSH","source":14,"value":"20"},{"begin":4983,"end":4992,"name":"DUP3","source":14},{"begin":4974,"end":4981,"name":"DUP5","source":14},{"begin":4970,"end":4993,"name":"SUB","source":14},{"begin":4966,"end":4998,"name":"SLT","source":14},{"begin":4963,"end":4965,"name":"ISZERO","source":14},{"begin":4963,"end":4965,"name":"PUSH [tag]","source":14,"value":"405"},{"begin":4963,"end":4965,"name":"JUMPI","source":14},{"begin":5016,"end":5022,"name":"DUP1","source":14},{"begin":5008,"end":5014,"name":"DUP2","source":14},{"begin":5001,"end":5023,"name":"REVERT","source":14},{"begin":4963,"end":4965,"name":"tag","source":14,"value":"405"},{"begin":4963,"end":4965,"name":"JUMPDEST","source":14},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":5044,"end":5060,"name":"MLOAD","source":14},{"begin":5044,"end":5060,"name":"SWAP2","source":14},{"begin":4953,"end":5066,"name":"SWAP1","source":14},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":4953,"end":5066,"name":"JUMP","source":14,"value":"[out]"},{"begin":5071,"end":5326,"name":"tag","source":14,"value":"195"},{"begin":5071,"end":5326,"name":"JUMPDEST","source":14},{"begin":5071,"end":5326,"name":"PUSH","source":14,"value":"0"},{"begin":5071,"end":5326,"name":"DUP1","source":14},{"begin":5211,"end":5213,"name":"PUSH","source":14,"value":"40"},{"begin":5199,"end":5208,"name":"DUP4","source":14},{"begin":5190,"end":5197,"name":"DUP6","source":14},{"begin":5186,"end":5209,"name":"SUB","source":14},{"begin":5182,"end":5214,"name":"SLT","source":14},{"begin":5179,"end":5181,"name":"ISZERO","source":14},{"begin":5179,"end":5181,"name":"PUSH [tag]","source":14,"value":"407"},{"begin":5179,"end":5181,"name":"JUMPI","source":14},{"begin":5232,"end":5238,"name":"DUP2","source":14},{"begin":5224,"end":5230,"name":"DUP3","source":14},{"begin":5217,"end":5239,"name":"REVERT","source":14},{"begin":5179,"end":5181,"name":"tag","source":14,"value":"407"},{"begin":5179,"end":5181,"name":"JUMPDEST","source":14},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":5260,"end":5276,"name":"DUP1","source":14},{"begin":5260,"end":5276,"name":"MLOAD","source":14},{"begin":5316,"end":5318,"name":"PUSH","source":14,"value":"20"},{"begin":5301,"end":5319,"name":"SWAP1","source":14},{"begin":5301,"end":5319,"name":"SWAP2","source":14},{"begin":5301,"end":5319,"name":"ADD","source":14},{"begin":5295,"end":5320,"name":"MLOAD","source":14},{"begin":5260,"end":5276,"name":"SWAP1","source":14},{"begin":5260,"end":5276,"name":"SWAP3","source":14},{"begin":5295,"end":5320,"name":"SWAP1","source":14},{"begin":5295,"end":5320,"name":"SWAP2","source":14},{"begin":-1,"end":-1,"name":"POP","source":-1},{"begin":5169,"end":5326,"name":"JUMP","source":14,"value":"[out]"},{"begin":5331,"end":5534,"name":"tag","source":14,"value":"68"},{"begin":5331,"end":5534,"name":"JUMPDEST","source":14},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":5495,"end":5527,"name":"SWAP2","source":14},{"begin":5495,"end":5527,"name":"SWAP1","source":14},{"begin":5495,"end":5527,"name":"SWAP2","source":14},{"begin":5495,"end":5527,"name":"AND","source":14},{"begin":5477,"end":5528,"name":"DUP2","source":14},{"begin":5477,"end":5528,"name":"MSTORE","source":14},{"begin":5465,"end":5467,"name":"PUSH","source":14,"value":"20"},{"begin":5450,"end":5468,"name":"ADD","source":14},{"begin":5450,"end":5468,"name":"SWAP1","source":14},{"begin":5432,"end":5534,"name":"JUMP","source":14,"value":"[out]"},{"begin":5539,"end":5813,"name":"tag","source":14,"value":"250"},{"begin":5539,"end":5813,"name":"JUMPDEST","source":14},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":5731,"end":5763,"name":"SWAP3","source":14},{"begin":5731,"end":5763,"name":"SWAP1","source":14},{"begin":5731,"end":5763,"name":"SWAP3","source":14},{"begin":5731,"end":5763,"name":"AND","source":14},{"begin":5713,"end":5764,"name":"DUP3","source":14},{"begin":5713,"end":5764,"name":"MSTORE","source":14},{"begin":5795,"end":5797,"name":"PUSH","source":14,"value":"20"},{"begin":5780,"end":5798,"name":"DUP3","source":14},{"begin":5780,"end":5798,"name":"ADD","source":14},{"begin":5773,"end":5807,"name":"MSTORE","source":14},{"begin":5701,"end":5703,"name":"PUSH","source":14,"value":"40"},{"begin":5686,"end":5704,"name":"ADD","source":14},{"begin":5686,"end":5704,"name":"SWAP1","source":14},{"begin":5668,"end":5813,"name":"JUMP","source":14,"value":"[out]"},{"begin":6057,"end":6401,"name":"tag","source":14,"value":"137"},{"begin":6057,"end":6401,"name":"JUMPDEST","source":14},{"begin":6259,"end":6261,"name":"PUSH","source":14,"value":"20"},{"begin":6241,"end":6262,"name":"DUP1","source":14},{"begin":6241,"end":6262,"name":"DUP3","source":14},{"begin":6241,"end":6262,"name":"MSTORE","source":14},{"begin":6298,"end":6300,"name":"PUSH","source":14,"value":"14"},{"begin":6278,"end":6296,"name":"SWAP1","source":14},{"begin":6278,"end":6296,"name":"DUP3","source":14},{"begin":6278,"end":6296,"name":"ADD","source":14},{"begin":6271,"end":6301,"name":"MSTORE","source":14},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"494E56414C49445F555345525F41444452455353"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"60"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":6332,"end":6334,"name":"PUSH","source":14,"value":"40"},{"begin":6317,"end":6335,"name":"DUP3","source":14},{"begin":6317,"end":6335,"name":"ADD","source":14},{"begin":6310,"end":6360,"name":"MSTORE","source":14},{"begin":6392,"end":6394,"name":"PUSH","source":14,"value":"60"},{"begin":6377,"end":6395,"name":"ADD","source":14},{"begin":6377,"end":6395,"name":"SWAP1","source":14},{"begin":6231,"end":6401,"name":"JUMP","source":14,"value":"[out]"},{"begin":6406,"end":6748,"name":"tag","source":14,"value":"113"},{"begin":6406,"end":6748,"name":"JUMPDEST","source":14},{"begin":6608,"end":6610,"name":"PUSH","source":14,"value":"20"},{"begin":6590,"end":6611,"name":"DUP1","source":14},{"begin":6590,"end":6611,"name":"DUP3","source":14},{"begin":6590,"end":6611,"name":"MSTORE","source":14},{"begin":6647,"end":6649,"name":"PUSH","source":14,"value":"12"},{"begin":6627,"end":6645,"name":"SWAP1","source":14},{"begin":6627,"end":6645,"name":"DUP3","source":14},{"begin":6627,"end":6645,"name":"ADD","source":14},{"begin":6620,"end":6650,"name":"MSTORE","source":14},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"494E56414C49445F544F5F41444452455353"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"70"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":6681,"end":6683,"name":"PUSH","source":14,"value":"40"},{"begin":6666,"end":6684,"name":"DUP3","source":14},{"begin":6666,"end":6684,"name":"ADD","source":14},{"begin":6659,"end":6707,"name":"MSTORE","source":14},{"begin":6739,"end":6741,"name":"PUSH","source":14,"value":"60"},{"begin":6724,"end":6742,"name":"ADD","source":14},{"begin":6724,"end":6742,"name":"SWAP1","source":14},{"begin":6580,"end":6748,"name":"JUMP","source":14,"value":"[out]"},{"begin":6753,"end":7098,"name":"tag","source":14,"value":"148"},{"begin":6753,"end":7098,"name":"JUMPDEST","source":14},{"begin":6955,"end":6957,"name":"PUSH","source":14,"value":"20"},{"begin":6937,"end":6958,"name":"DUP1","source":14},{"begin":6937,"end":6958,"name":"DUP3","source":14},{"begin":6937,"end":6958,"name":"MSTORE","source":14},{"begin":6994,"end":6996,"name":"PUSH","source":14,"value":"15"},{"begin":6974,"end":6992,"name":"SWAP1","source":14},{"begin":6974,"end":6992,"name":"DUP3","source":14},{"begin":6974,"end":6992,"name":"ADD","source":14},{"begin":6967,"end":6997,"name":"MSTORE","source":14},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"24A72B20A624A22FA1A7A72324A3AAA920AA24A7A7"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"59"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":7028,"end":7030,"name":"PUSH","source":14,"value":"40"},{"begin":7013,"end":7031,"name":"DUP3","source":14},{"begin":7013,"end":7031,"name":"ADD","source":14},{"begin":7006,"end":7057,"name":"MSTORE","source":14},{"begin":7089,"end":7091,"name":"PUSH","source":14,"value":"60"},{"begin":7074,"end":7092,"name":"ADD","source":14},{"begin":7074,"end":7092,"name":"SWAP1","source":14},{"begin":6927,"end":7098,"name":"JUMP","source":14,"value":"[out]"},{"begin":7103,"end":7441,"name":"tag","source":14,"value":"314"},{"begin":7103,"end":7441,"name":"JUMPDEST","source":14},{"begin":7305,"end":7307,"name":"PUSH","source":14,"value":"20"},{"begin":7287,"end":7308,"name":"DUP1","source":14},{"begin":7287,"end":7308,"name":"DUP3","source":14},{"begin":7287,"end":7308,"name":"MSTORE","source":14},{"begin":7344,"end":7346,"name":"PUSH","source":14,"value":"E"},{"begin":7324,"end":7342,"name":"SWAP1","source":14},{"begin":7324,"end":7342,"name":"DUP3","source":14},{"begin":7324,"end":7342,"name":"ADD","source":14},{"begin":7317,"end":7347,"name":"MSTORE","source":14},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"496E646578206F766572666C6F77"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"90"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":7378,"end":7380,"name":"PUSH","source":14,"value":"40"},{"begin":7363,"end":7381,"name":"DUP3","source":14},{"begin":7363,"end":7381,"name":"ADD","source":14},{"begin":7356,"end":7400,"name":"MSTORE","source":14},{"begin":7432,"end":7434,"name":"PUSH","source":14,"value":"60"},{"begin":7417,"end":7435,"name":"ADD","source":14},{"begin":7417,"end":7435,"name":"SWAP1","source":14},{"begin":7277,"end":7441,"name":"JUMP","source":14,"value":"[out]"},{"begin":7446,"end":7791,"name":"tag","source":14,"value":"127"},{"begin":7446,"end":7791,"name":"JUMPDEST","source":14},{"begin":7648,"end":7650,"name":"PUSH","source":14,"value":"20"},{"begin":7630,"end":7651,"name":"DUP1","source":14},{"begin":7630,"end":7651,"name":"DUP3","source":14},{"begin":7630,"end":7651,"name":"MSTORE","source":14},{"begin":7687,"end":7689,"name":"PUSH","source":14,"value":"15"},{"begin":7667,"end":7685,"name":"SWAP1","source":14},{"begin":7667,"end":7685,"name":"DUP3","source":14},{"begin":7667,"end":7685,"name":"ADD","source":14},{"begin":7660,"end":7690,"name":"MSTORE","source":14},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"27A7262CAFA2A6A4A9A9A4A7A72FA6A0A720A3A2A9"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"59"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":7721,"end":7723,"name":"PUSH","source":14,"value":"40"},{"begin":7706,"end":7724,"name":"DUP3","source":14},{"begin":7706,"end":7724,"name":"ADD","source":14},{"begin":7699,"end":7750,"name":"MSTORE","source":14},{"begin":7782,"end":7784,"name":"PUSH","source":14,"value":"60"},{"begin":7767,"end":7785,"name":"ADD","source":14},{"begin":7767,"end":7785,"name":"SWAP1","source":14},{"begin":7620,"end":7791,"name":"JUMP","source":14,"value":"[out]"},{"begin":7796,"end":8140,"name":"tag","source":14,"value":"133"},{"begin":7796,"end":8140,"name":"JUMPDEST","source":14},{"begin":7998,"end":8000,"name":"PUSH","source":14,"value":"20"},{"begin":7980,"end":8001,"name":"DUP1","source":14},{"begin":7980,"end":8001,"name":"DUP3","source":14},{"begin":7980,"end":8001,"name":"MSTORE","source":14},{"begin":8037,"end":8039,"name":"PUSH","source":14,"value":"14"},{"begin":8017,"end":8035,"name":"SWAP1","source":14},{"begin":8017,"end":8035,"name":"DUP3","source":14},{"begin":8017,"end":8035,"name":"ADD","source":14},{"begin":8010,"end":8040,"name":"MSTORE","source":14},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"10D3105253515497D5539055551213D492569151"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"62"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":8071,"end":8073,"name":"PUSH","source":14,"value":"40"},{"begin":8056,"end":8074,"name":"DUP3","source":14},{"begin":8056,"end":8074,"name":"ADD","source":14},{"begin":8049,"end":8099,"name":"MSTORE","source":14},{"begin":8131,"end":8133,"name":"PUSH","source":14,"value":"60"},{"begin":8116,"end":8134,"name":"ADD","source":14},{"begin":8116,"end":8134,"name":"SWAP1","source":14},{"begin":7970,"end":8140,"name":"JUMP","source":14,"value":"[out]"},{"begin":8145,"end":8357,"name":"tag","source":14,"value":"277"},{"begin":8145,"end":8357,"name":"JUMPDEST","source":14},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"68"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":8309,"end":8350,"name":"SWAP2","source":14},{"begin":8309,"end":8350,"name":"SWAP1","source":14},{"begin":8309,"end":8350,"name":"SWAP2","source":14},{"begin":8309,"end":8350,"name":"AND","source":14},{"begin":8291,"end":8351,"name":"DUP2","source":14},{"begin":8291,"end":8351,"name":"MSTORE","source":14},{"begin":8279,"end":8281,"name":"PUSH","source":14,"value":"20"},{"begin":8264,"end":8282,"name":"ADD","source":14},{"begin":8264,"end":8282,"name":"SWAP1","source":14},{"begin":8246,"end":8357,"name":"JUMP","source":14,"value":"[out]"},{"begin":8362,"end":8763,"name":"tag","source":14,"value":"104"},{"begin":8362,"end":8763,"name":"JUMPDEST","source":14},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"68"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":8627,"end":8642,"name":"SWAP4","source":14},{"begin":8627,"end":8642,"name":"DUP5","source":14},{"begin":8627,"end":8642,"name":"AND","source":14},{"begin":8609,"end":8643,"name":"DUP2","source":14},{"begin":8609,"end":8643,"name":"MSTORE","source":14},{"begin":8679,"end":8694,"name":"SWAP2","source":14},{"begin":8679,"end":8694,"name":"SWAP1","source":14},{"begin":8679,"end":8694,"name":"SWAP3","source":14},{"begin":8679,"end":8694,"name":"AND","source":14},{"begin":8674,"end":8676,"name":"PUSH","source":14,"value":"20"},{"begin":8659,"end":8677,"name":"DUP3","source":14},{"begin":8659,"end":8677,"name":"ADD","source":14},{"begin":8652,"end":8695,"name":"MSTORE","source":14},{"begin":8743,"end":8755,"name":"PUSH","source":14,"value":"FFFFFFFFFF"},{"begin":8731,"end":8756,"name":"SWAP1","source":14},{"begin":8731,"end":8756,"name":"SWAP2","source":14},{"begin":8731,"end":8756,"name":"AND","source":14},{"begin":8726,"end":8728,"name":"PUSH","source":14,"value":"40"},{"begin":8711,"end":8729,"name":"DUP3","source":14},{"begin":8711,"end":8729,"name":"ADD","source":14},{"begin":8704,"end":8757,"name":"MSTORE","source":14},{"begin":8550,"end":8552,"name":"PUSH","source":14,"value":"60"},{"begin":8535,"end":8553,"name":"ADD","source":14},{"begin":8535,"end":8553,"name":"SWAP1","source":14},{"begin":8517,"end":8763,"name":"JUMP","source":14,"value":"[out]"},{"begin":8768,"end":8945,"name":"tag","source":14,"value":"36"},{"begin":8768,"end":8945,"name":"JUMPDEST","source":14},{"begin":8914,"end":8939,"name":"SWAP1","source":14},{"begin":8914,"end":8939,"name":"DUP2","source":14},{"begin":8914,"end":8939,"name":"MSTORE","source":14},{"begin":8902,"end":8904,"name":"PUSH","source":14,"value":"20"},{"begin":8887,"end":8905,"name":"ADD","source":14},{"begin":8887,"end":8905,"name":"SWAP1","source":14},{"begin":8869,"end":8945,"name":"JUMP","source":14,"value":"[out]"},{"begin":8950,"end":9269,"name":"tag","source":14,"value":"31"},{"begin":8950,"end":9269,"name":"JUMPDEST","source":14},{"begin":9152,"end":9177,"name":"SWAP3","source":14},{"begin":9152,"end":9177,"name":"DUP4","source":14},{"begin":9152,"end":9177,"name":"MSTORE","source":14},{"begin":9208,"end":9210,"name":"PUSH","source":14,"value":"20"},{"begin":9193,"end":9211,"name":"DUP4","source":14},{"begin":9193,"end":9211,"name":"ADD","source":14},{"begin":9186,"end":9220,"name":"SWAP2","source":14},{"begin":9186,"end":9220,"name":"SWAP1","source":14},{"begin":9186,"end":9220,"name":"SWAP2","source":14},{"begin":9186,"end":9220,"name":"MSTORE","source":14},{"begin":9251,"end":9253,"name":"PUSH","source":14,"value":"40"},{"begin":9236,"end":9254,"name":"DUP3","source":14},{"begin":9236,"end":9254,"name":"ADD","source":14},{"begin":9229,"end":9263,"name":"MSTORE","source":14},{"begin":9140,"end":9142,"name":"PUSH","source":14,"value":"60"},{"begin":9125,"end":9143,"name":"ADD","source":14},{"begin":9125,"end":9143,"name":"SWAP1","source":14},{"begin":9107,"end":9269,"name":"JUMP","source":14,"value":"[out]"},{"begin":9274,"end":9458,"name":"tag","source":14,"value":"87"},{"begin":9274,"end":9458,"name":"JUMPDEST","source":14},{"begin":9446,"end":9450,"name":"PUSH","source":14,"value":"FF"},{"begin":9434,"end":9451,"name":"SWAP2","source":14},{"begin":9434,"end":9451,"name":"SWAP1","source":14},{"begin":9434,"end":9451,"name":"SWAP2","source":14},{"begin":9434,"end":9451,"name":"AND","source":14},{"begin":9416,"end":9452,"name":"DUP2","source":14},{"begin":9416,"end":9452,"name":"MSTORE","source":14},{"begin":9404,"end":9406,"name":"PUSH","source":14,"value":"20"},{"begin":9389,"end":9407,"name":"ADD","source":14},{"begin":9389,"end":9407,"name":"SWAP1","source":14},{"begin":9371,"end":9458,"name":"JUMP","source":14,"value":"[out]"},{"begin":9463,"end":9596,"name":"tag","source":14,"value":"369"},{"begin":9463,"end":9596,"name":"JUMPDEST","source":14},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"1"},{"begin":-1,"end":-1,"name":"PUSH","source":-1,"value":"A0"},{"begin":-1,"end":-1,"name":"SHL","source":-1},{"begin":-1,"end":-1,"name":"SUB","source":-1},{"begin":9540,"end":9571,"name":"DUP2","source":14},{"begin":9540,"end":9571,"name":"AND","source":14},{"begin":9530,"end":9572,"name":"DUP2","source":14},{"begin":9530,"end":9572,"name":"EQ","source":14},{"begin":9520,"end":9522,"name":"PUSH [tag]","source":14,"value":"423"},{"begin":9520,"end":9522,"name":"JUMPI","source":14},{"begin":9586,"end":9587,"name":"PUSH","source":14,"value":"0"},{"begin":9583,"end":9584,"name":"DUP1","source":14},{"begin":9576,"end":9588,"name":"REVERT","source":14},{"begin":9520,"end":9522,"name":"tag","source":14,"value":"423"},{"begin":9520,"end":9522,"name":"JUMPDEST","source":14},{"begin":9510,"end":9596,"name":"POP","source":14},{"begin":9510,"end":9596,"name":"JUMP","source":14,"value":"[out]"}],".data":{"9FBBA6C4DCAC9134893B633B9564F36435B3F927C1D5FA152C5C14B20CECB1A4":"436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564","E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","EF945DDB1BFDC0DA870FEB4560D868B047642B4AC7F2FB7F8B7C51CB4A411E25":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365"}}}},"bytecode":{"object":"","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1E71 CODESIZE SUB DUP1 PUSH3 0x1E71 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x38 SWAP2 PUSH3 0x58 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 SWAP2 DUP3 SHL DUP2 AND PUSH1 0x80 MSTORE SWAP2 SWAP1 SHL AND PUSH1 0xA0 MSTORE PUSH3 0xAF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x6B JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x78 DUP2 PUSH3 0x96 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH3 0x8B DUP2 PUSH3 0x96 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0xAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH2 0x1D75 PUSH3 0xFC PUSH1 0x0 CODECOPY DUP1 PUSH2 0x305 MSTORE DUP1 PUSH2 0x9A8 MSTORE DUP1 PUSH2 0xA27 MSTORE DUP1 PUSH2 0xA4B MSTORE DUP1 PUSH2 0xE49 MSTORE POP DUP1 PUSH2 0x442 MSTORE DUP1 PUSH2 0x58D MSTORE DUP1 PUSH2 0xAF0 MSTORE DUP1 PUSH2 0xB59 MSTORE POP PUSH2 0x1D75 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B599F26 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xCBCBB507 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCBCBB507 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xCC69AFEC EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xDDE43CBA EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xF11B8188 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xF5CF673B EQ PUSH2 0x295 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x8B599F26 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x919CD40F EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x99248EA7 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x250 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x3373EE4C GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x3373EE4C EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x39CCBDD3 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x6D34B96E EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x74D945EC EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x79F171B2 EQ PUSH2 0x205 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x1652E7B7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x198FA81E EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x1C39B672 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x3111E7B3 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x31873E2E EQ PUSH2 0x1A4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0x186F JUMP JUMPDEST PUSH2 0x2A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16F PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0x186F JUMP JUMPDEST PUSH2 0x2E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH2 0x184 PUSH2 0x303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x1AF3 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x19F CALLDATASIZE PUSH1 0x4 PUSH2 0x19D1 JUMP JUMPDEST PUSH2 0x327 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x1B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x18DF JUMP JUMPDEST PUSH2 0x371 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16F PUSH2 0x1C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x18A7 JUMP JUMPDEST PUSH2 0x406 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0x1AA0 JUMP JUMPDEST PUSH2 0x437 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x1ED CALLDATASIZE PUSH1 0x4 PUSH2 0x1A2E JUMP JUMPDEST PUSH2 0x4BF JUMP JUMPDEST PUSH2 0x184 PUSH2 0x200 CALLDATASIZE PUSH1 0x4 PUSH2 0x186F JUMP JUMPDEST PUSH2 0x564 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0x1968 JUMP JUMPDEST PUSH2 0x582 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x226 CALLDATASIZE PUSH1 0x4 PUSH2 0x1913 JUMP JUMPDEST PUSH2 0x7E7 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x9A6 JUMP JUMPDEST PUSH2 0x243 PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x1C8B JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x25E CALLDATASIZE PUSH1 0x4 PUSH2 0x186F JUMP JUMPDEST PUSH2 0x9CF JUMP JUMPDEST PUSH2 0x184 PUSH2 0xAEE JUMP JUMPDEST PUSH2 0x16F PUSH2 0xB12 JUMP JUMPDEST PUSH2 0x286 PUSH2 0x281 CALLDATASIZE PUSH1 0x4 PUSH2 0x186F JUMP JUMPDEST PUSH2 0xB17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x2A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x18A7 JUMP JUMPDEST PUSH2 0xB4E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x68 SHL DUP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x68 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x35 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x358 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34F SWAP1 PUSH2 0x1B4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x366 DUP6 DUP6 DUP6 CALLER CALLER DUP8 PUSH2 0xBED JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F DUP5 CALLER DUP5 DUP7 PUSH2 0xF17 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x400 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x35 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3AA SWAP1 DUP3 PUSH2 0xFD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x35 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH32 0x2468F9268C60AD90E2D49EDB0032C8A001E733AE888B3AB8E982EDF535BE1A76 SWAP1 PUSH2 0x3F7 SWAP1 DUP5 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE PUSH1 0x1 SWAP1 SWAP4 ADD SWAP1 MSTORE KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x47F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34F SWAP1 PUSH2 0x1BD1 JUMP JUMPDEST PUSH1 0x34 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x1CC1849A6602C3E91F2088CADEA4381CC5717F2F28584197060ED2EBB434C16F SWAP1 PUSH2 0x4B4 SWAP1 DUP4 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x36 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 CALLER SWAP2 DUP6 SWAP2 AND DUP3 EQ PUSH2 0x4FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34F SWAP1 PUSH2 0x1C00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x524 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34F SWAP1 PUSH2 0x1B20 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x54A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34F SWAP1 PUSH2 0x1B4E JUMP JUMPDEST PUSH2 0x558 DUP9 DUP9 DUP9 CALLER DUP10 DUP10 PUSH2 0xBED JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x36 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34F SWAP1 PUSH2 0x1BD1 JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0x5E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34F SWAP1 PUSH2 0x1B7A JUMP JUMPDEST PUSH1 0x60 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x602 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x63C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x629 PUSH2 0x17DC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x621 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x7D6 JUMPI DUP6 DUP6 DUP3 DUP2 DUP2 LT PUSH2 0x656 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x66B SWAP2 SWAP1 PUSH2 0x186F JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x677 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x6A7 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6BA JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x68 SHL SUB SWAP1 SWAP2 AND SWAP1 MSTORE DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x6DE JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6F1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x68 SHL SUB AND EQ PUSH2 0x723 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34F SWAP1 PUSH2 0x1B7A JUMP JUMPDEST DUP6 DUP6 DUP3 DUP2 DUP2 LT PUSH2 0x72F JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x744 SWAP2 SWAP1 PUSH2 0x186F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB1BF962D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x77C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x790 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7B4 SWAP2 SWAP1 PUSH2 0x1AB8 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7C0 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x642 JUMP JUMPDEST POP PUSH2 0x7E0 DUP2 PUSH2 0xFE6 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x35 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x60 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x819 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x853 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x840 PUSH2 0x17FC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x838 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x97F JUMPI DUP7 DUP7 DUP3 DUP2 DUP2 LT PUSH2 0x86D JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x882 SWAP2 SWAP1 PUSH2 0x186F JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x88E JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 MSTORE DUP7 DUP7 DUP3 DUP2 DUP2 LT PUSH2 0x8B2 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x8C7 SWAP2 SWAP1 PUSH2 0x186F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAFBCDC9 DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F2 SWAP2 SWAP1 PUSH2 0x1AF3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x909 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x91D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x941 SWAP2 SWAP1 PUSH2 0x1AD0 JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x94D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x964 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 ADD SWAP2 SWAP1 SWAP2 MSTORE MSTORE PUSH1 0x1 ADD PUSH2 0x859 JUMP JUMPDEST POP PUSH2 0x994 PUSH2 0x98D DUP6 DUP4 PUSH2 0x111E JUMP JUMPDEST DUP4 SWAP1 PUSH2 0xFD6 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x34 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D9 PUSH2 0x121C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SLOAD DUP2 GT PUSH2 0xA1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1CB2 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0xAEA PUSH32 0x0 PUSH1 0x0 NOT PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x312F6B83 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAB6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xADA SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x1221 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x68 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x68 SHL DUP2 DIV SWAP1 SWAP2 AND SWAP1 PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND DUP4 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xB96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34F SWAP1 PUSH2 0x1BD1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x36 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP5 DUP7 AND SWAP5 DUP6 OR SWAP1 SSTORE MLOAD PUSH32 0x4925EAFC82D0C4D67889898EEED64B18488AB19811E61620F387026DEC126A28 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH2 0xBFC JUMPI POP PUSH1 0x0 PUSH2 0xF0D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x35 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xC2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC68 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xC55 PUSH2 0x17FC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xC4D JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP9 DUP2 LT ISZERO PUSH2 0xD94 JUMPI DUP10 DUP10 DUP3 DUP2 DUP2 LT PUSH2 0xC82 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xC97 SWAP2 SWAP1 PUSH2 0x186F JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xCA3 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 MSTORE DUP10 DUP10 DUP3 DUP2 DUP2 LT PUSH2 0xCC7 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xCDC SWAP2 SWAP1 PUSH2 0x186F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAFBCDC9 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD07 SWAP2 SWAP1 PUSH2 0x1AF3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD32 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD56 SWAP2 SWAP1 PUSH2 0x1AD0 JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xD62 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xD79 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 ADD SWAP2 SWAP1 SWAP2 MSTORE MSTORE PUSH1 0x1 ADD PUSH2 0xC6E JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xDA1 DUP7 DUP4 PUSH2 0x1339 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xDF7 JUMPI PUSH2 0xDB3 DUP4 DUP3 PUSH2 0xFD6 JUMP JUMPDEST SWAP3 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x2468F9268C60AD90E2D49EDB0032C8A001E733AE888B3AB8E982EDF535BE1A76 DUP3 PUSH1 0x40 MLOAD PUSH2 0xDEE SWAP2 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP3 PUSH2 0xE08 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0xF0D JUMP JUMPDEST PUSH1 0x0 DUP4 DUP10 GT PUSH2 0xE17 JUMPI DUP9 PUSH2 0xE19 JUMP JUMPDEST DUP4 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x35 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP4 DUP9 SUB SWAP1 SSTORE MLOAD PUSH4 0x56E4BB97 PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH32 0x0 AND SWAP1 PUSH4 0xADC9772E SWAP1 PUSH2 0xE80 SWAP1 DUP10 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x1B07 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEAE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x5637D7F962248A7F05A7AB69EEC6446E31F3D0A299D997F135A65C62806E7891 DUP5 PUSH1 0x40 MLOAD PUSH2 0xEFF SWAP2 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 SWAP4 POP POP POP POP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE PUSH1 0x1 DUP5 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP3 DUP1 PUSH2 0xF52 DUP9 DUP6 DUP9 PUSH2 0x13A5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 EQ PUSH2 0xFCA JUMPI DUP7 ISZERO PUSH2 0xF6F JUMPI PUSH2 0xF6C DUP8 DUP3 DUP6 PUSH2 0x14D5 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD SWAP2 DUP11 AND SWAP2 PUSH32 0xBB123B5C06D5408BBEA3C4FEF481578175CFB432E3B482C6186F02ED9086585B SWAP1 PUSH2 0xFC1 SWAP1 DUP6 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0x431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xAEA JUMPI PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1004 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x106B DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1041 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP3 DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x105A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0x13A5 JUMP JUMPDEST POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1078 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD MLOAD DUP2 SLOAD PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x68 SHL SUB SWAP1 SWAP2 AND OR DUP2 SSTORE DUP3 MLOAD DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x10B2 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x87FA03892A0556CB6B8F97E6D533A150D4D55FCBF275FFF5FA003FA636BCC7FA DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x10F4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x110D SWAP2 SWAP1 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 ADD PUSH2 0xFE9 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1214 JUMPI PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x113E JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP8 MLOAD SWAP2 SWAP4 POP PUSH2 0x11B3 SWAP2 PUSH1 0x1 PUSH1 0x68 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x68 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP1 DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 SWAP2 DIV PUSH5 0xFFFFFFFFFF AND SWAP1 DUP11 SWAP1 DUP9 SWAP1 DUP2 LT PUSH2 0x11A2 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0x1504 JUMP JUMPDEST SWAP1 POP PUSH2 0x1208 PUSH2 0x1201 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x11C7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP4 DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x14D5 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0xFD6 JUMP JUMPDEST SWAP4 POP POP POP PUSH1 0x1 ADD PUSH2 0x1123 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0x12A7 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 DUP6 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x128D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO JUMPDEST PUSH2 0x12E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D0A PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1334 SWAP1 DUP5 SWAP1 PUSH2 0x15A4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1214 JUMPI PUSH2 0x139B PUSH2 0x98D DUP7 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x135A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1372 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x138A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0xF17 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x133E JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x68 SHL SUB PUSH1 0x1 PUSH1 0x68 SHL DUP3 DIV DUP2 AND SWAP2 SWAP1 DUP2 AND SWAP1 PUSH5 0xFFFFFFFFFF PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 SWAP2 DIV AND TIMESTAMP DUP2 EQ ISZERO PUSH2 0x13E2 JUMPI DUP3 SWAP4 POP POP POP POP PUSH2 0x999 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13F0 DUP5 DUP5 DUP5 DUP10 PUSH2 0x1504 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 EQ PUSH2 0x14AB JUMPI DUP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x68 SHL SUB AND EQ PUSH2 0x1421 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34F SWAP1 PUSH2 0x1BA9 JUMP JUMPDEST DUP7 SLOAD PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x68 SHL NOT AND PUSH1 0x1 PUSH1 0x68 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x68 SHL SUB DUP4 AND MUL OR PUSH5 0xFFFFFFFFFF PUSH1 0xD0 SHL NOT AND PUSH1 0x1 PUSH1 0xD0 SHL TIMESTAMP PUSH5 0xFFFFFFFFFF AND MUL OR DUP8 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH32 0x5777CA300DFE5BEAD41006FBCE4389794DBC0ED8D6CCCEBFAF94630AA04184BC SWAP1 PUSH2 0x149E SWAP1 DUP5 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x14CA JUMP JUMPDEST DUP7 SLOAD PUSH5 0xFFFFFFFFFF PUSH1 0xD0 SHL NOT AND PUSH1 0x1 PUSH1 0xD0 SHL TIMESTAMP PUSH5 0xFFFFFFFFFF AND MUL OR DUP8 SSTORE JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x14F4 PUSH2 0x14ED DUP6 DUP6 PUSH2 0x175C JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x176C JUMP JUMPDEST DUP2 PUSH2 0x14FB JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x34 SLOAD PUSH1 0x0 SWAP1 DUP5 ISZERO DUP1 PUSH2 0x1515 JUMPI POP DUP3 ISZERO JUMPDEST DUP1 PUSH2 0x1528 JUMPI POP TIMESTAMP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x153C JUMPI POP DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND LT ISZERO JUMPDEST ISZERO PUSH2 0x154A JUMPI DUP6 SWAP2 POP POP PUSH2 0x369 JUMP JUMPDEST PUSH1 0x0 DUP2 TIMESTAMP GT PUSH2 0x1559 JUMPI TIMESTAMP PUSH2 0x155B JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1572 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP9 AND PUSH2 0x175C JUMP JUMPDEST SWAP1 POP PUSH2 0x558 DUP9 PUSH2 0x159E DUP8 PUSH2 0x1598 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1592 DUP14 DUP9 PUSH2 0x176C JUMP JUMPDEST SWAP1 PUSH2 0x176C JUMP JUMPDEST SWAP1 PUSH2 0x1790 JUMP JUMPDEST SWAP1 PUSH2 0xFD6 JUMP JUMPDEST PUSH2 0x15B6 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x17A3 JUMP JUMPDEST PUSH2 0x1607 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1645 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1626 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x16A7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1703 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x400 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x171F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x400 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1CE0 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0x431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ISZERO DUP1 PUSH2 0x1787 JUMPI POP POP DUP2 DUP2 MUL DUP2 DUP4 DUP3 DUP2 PUSH2 0x1784 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0x431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP4 DUP2 PUSH2 0x179B JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x369 JUMPI POP POP ISZERO ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1837 JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x184E JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x1868 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1880 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x999 DUP2 PUSH2 0x1C99 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x189C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x999 DUP2 PUSH2 0x1C99 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18B9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x18C4 DUP2 PUSH2 0x1C99 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x18D4 DUP2 PUSH2 0x1C99 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18F3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x18FE DUP2 PUSH2 0x1C99 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1927 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x193D JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x1949 DUP7 DUP3 DUP8 ADD PUSH2 0x1826 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x195D DUP2 PUSH2 0x1C99 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x197D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1994 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x19A0 DUP9 DUP4 DUP10 ADD PUSH2 0x1826 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x19B8 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x19C5 DUP8 DUP3 DUP9 ADD PUSH2 0x1826 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x19E6 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19FC JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x1A08 DUP8 DUP3 DUP9 ADD PUSH2 0x1826 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x1A23 DUP2 PUSH2 0x1C99 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1A45 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A5B JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1A67 DUP9 DUP3 DUP10 ADD PUSH2 0x1826 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x1A82 DUP2 PUSH2 0x1C99 JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH2 0x1A92 DUP2 PUSH2 0x1C99 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AB1 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AC9 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AE2 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x494E56414C49445F555345525F41444452455353 PUSH1 0x60 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x494E56414C49445F544F5F41444452455353 PUSH1 0x70 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x24A72B20A624A22FA1A7A72324A3AAA920AA24A7A7 PUSH1 0x59 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x496E646578206F766572666C6F77 PUSH1 0x90 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x27A7262CAFA2A6A4A9A9A4A7A72FA6A0A720A3A2A9 PUSH1 0x59 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x10D3105253515497D5539055551213D492569151 PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x68 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x68 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH5 0xFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1CAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID NUMBER PUSH16 0x6E747261637420696E7374616E636520 PUSH9 0x617320616C72656164 PUSH26 0x206265656E20696E697469616C697A6564536166654552433230 GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x7563636565645361666545524332303A20617070 PUSH19 0x6F76652066726F6D206E6F6E2D7A65726F2074 PUSH16 0x206E6F6E2D7A65726F20616C6C6F7761 PUSH15 0x6365A2646970667358221220D94E1A PUSH28 0xC1C2DA8E7F89644F4C7824CBB4D6C28BE01BDA08C043C6DB1633574F PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ","sourceMap":"1115:6720:7:-:0;;;924:1:5;881:44;;1877:150:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;990:34:6;;;;;;;;1998:24:7;;;;::::1;::::0;1115:6720;;14:430:14;;;185:2;173:9;164:7;160:23;156:32;153:2;;;206:6;198;191:22;153:2;243:9;237:16;262:33;289:5;262:33;:::i;:::-;364:2;349:18;;343:25;314:5;;-1:-1:-1;377:35:14;343:25;377:35;:::i;:::-;431:7;421:17;;;143:301;;;;;:::o;449:133::-;-1:-1:-1;;;;;526:31:14;;516:42;;506:2;;572:1;569;562:12;506:2;496:86;:::o;:::-;1115:6720:7;;;;;;;;;;;;;;;;","generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:584:14","statements":[{"nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nodeType":"YulBlock","src":"143:301:14","statements":[{"body":{"nodeType":"YulBlock","src":"189:26:14","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"198:6:14"},{"name":"value0","nodeType":"YulIdentifier","src":"206:6:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"191:6:14"},"nodeType":"YulFunctionCall","src":"191:22:14"},"nodeType":"YulExpressionStatement","src":"191:22:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"164:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"160:3:14"},"nodeType":"YulFunctionCall","src":"160:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"185:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"156:3:14"},"nodeType":"YulFunctionCall","src":"156:32:14"},"nodeType":"YulIf","src":"153:2:14"},{"nodeType":"YulVariableDeclaration","src":"224:29:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"237:5:14"},"nodeType":"YulFunctionCall","src":"237:16:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"228:5:14","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"289:5:14"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"262:26:14"},"nodeType":"YulFunctionCall","src":"262:33:14"},"nodeType":"YulExpressionStatement","src":"262:33:14"},{"nodeType":"YulAssignment","src":"304:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"314:5:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"304:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"328:40:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"353:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"364:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"349:3:14"},"nodeType":"YulFunctionCall","src":"349:18:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"343:5:14"},"nodeType":"YulFunctionCall","src":"343:25:14"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"332:7:14","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"404:7:14"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"377:26:14"},"nodeType":"YulFunctionCall","src":"377:35:14"},"nodeType":"YulExpressionStatement","src":"377:35:14"},{"nodeType":"YulAssignment","src":"421:17:14","value":{"name":"value_1","nodeType":"YulIdentifier","src":"431:7:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"421:6:14"}]}]},"name":"abi_decode_tuple_t_contract$_IStakedTokenWithConfig_$2033t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"101:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"112:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"124:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"132:6:14","type":""}],"src":"14:430:14"},{"body":{"nodeType":"YulBlock","src":"496:86:14","statements":[{"body":{"nodeType":"YulBlock","src":"560:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"569:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"572:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"562:6:14"},"nodeType":"YulFunctionCall","src":"562:12:14"},"nodeType":"YulExpressionStatement","src":"562:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"519:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"530:5:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"545:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"550:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"541:3:14"},"nodeType":"YulFunctionCall","src":"541:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"554:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"537:3:14"},"nodeType":"YulFunctionCall","src":"537:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"526:3:14"},"nodeType":"YulFunctionCall","src":"526:31:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"516:2:14"},"nodeType":"YulFunctionCall","src":"516:42:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"509:6:14"},"nodeType":"YulFunctionCall","src":"509:50:14"},"nodeType":"YulIf","src":"506:2:14"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"485:5:14","type":""}],"src":"449:133:14"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_contract$_IStakedTokenWithConfig_$2033t_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"linkReferences":{}},"deployedBytecode":{"object":"608060405234801561001057600080fd5b506004361061012c5760003560e01c80638b599f26116100ad578063cbcbb50711610071578063cbcbb50714610263578063cc69afec1461022b578063dde43cba1461026b578063f11b818814610273578063f5cf673b146102955761012c565b80638b599f2614610218578063919cd40f1461022b57806399248ea714610233578063aaf5eb681461023b578063c4d66de8146102505761012c565b80633373ee4c116100f45780633373ee4c146101b957806339ccbdd3146101cc5780636d34b96e146101df57806374d945ec146101f257806379f171b2146102055761012c565b80631652e7b714610131578063198fa81e1461015c5780631c39b6721461017c5780633111e7b31461019157806331873e2e146101a4575b600080fd5b61014461013f36600461186f565b6102a8565b60405161015393929190611c75565b60405180910390f35b61016f61016a36600461186f565b6102e8565b6040516101539190611c6c565b610184610303565b6040516101539190611af3565b61016f61019f3660046119d1565b610327565b6101b76101b23660046118df565b610371565b005b61016f6101c73660046118a7565b610406565b6101b76101da366004611aa0565b610437565b61016f6101ed366004611a2e565b6104bf565b61018461020036600461186f565b610564565b6101b7610213366004611968565b610582565b61016f610226366004611913565b6107e7565b61016f6109a0565b6101846109a6565b6102436109ca565b6040516101539190611c8b565b6101b761025e36600461186f565b6109cf565b610184610aee565b61016f610b12565b61028661028136600461186f565b610b17565b60405161015393929190611c42565b6101b76102a33660046118a7565b610b4e565b6001600160a01b0316600090815260336020526040902054600160681b81046001600160681b039081169290821691600160d01b900464ffffffffff1690565b6001600160a01b031660009081526035602052604090205490565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006001600160a01b0382166103585760405162461bcd60e51b815260040161034f90611b4e565b60405180910390fd5b610366858585333387610bed565b90505b949350505050565b600061037f84338486610f17565b90508015610400576001600160a01b0384166000908152603560205260409020546103aa9082610fd6565b6001600160a01b038516600081815260356020526040908190209290925590517f2468f9268c60ad90e2d49edb0032c8a001e733ae888b3ab8e982edf535be1a76906103f7908490611c6c565b60405180910390a25b50505050565b6001600160a01b03808216600090815260336020908152604080832093861683526001909301905220545b92915050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461047f5760405162461bcd60e51b815260040161034f90611bd1565b60348190556040517f1cc1849a6602c3e91f2088cadea4381cc5717f2f28584197060ed2ebb434c16f906104b4908390611c6c565b60405180910390a150565b6001600160a01b038083166000908152603660205260408120549091339185911682146104fe5760405162461bcd60e51b815260040161034f90611c00565b6001600160a01b0385166105245760405162461bcd60e51b815260040161034f90611b20565b6001600160a01b03841661054a5760405162461bcd60e51b815260040161034f90611b4e565b610558888888338989610bed565b98975050505050505050565b6001600160a01b039081166000908152603660205260409020541690565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105ca5760405162461bcd60e51b815260040161034f90611bd1565b8281146105e95760405162461bcd60e51b815260040161034f90611b7a565b60608367ffffffffffffffff8111801561060257600080fd5b5060405190808252806020026020018201604052801561063c57816020015b6106296117dc565b8152602001906001900390816106215790505b50905060005b848110156107d65785858281811061065657fe5b905060200201602081019061066b919061186f565b82828151811061067757fe5b6020026020010151604001906001600160a01b031690816001600160a01b0316815250508383828181106106a757fe5b905060200201358282815181106106ba57fe5b60209081029190910101516001600160681b0390911690528383828181106106de57fe5b905060200201358282815181106106f157fe5b6020026020010151600001516001600160681b0316146107235760405162461bcd60e51b815260040161034f90611b7a565b85858281811061072f57fe5b9050602002016020810190610744919061186f565b6001600160a01b031663b1bf962d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561077c57600080fd5b505afa158015610790573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b49190611ab8565b8282815181106107c057fe5b6020908102919091018101510152600101610642565b506107e081610fe6565b5050505050565b6001600160a01b03811660009081526035602052604081205460608467ffffffffffffffff8111801561081957600080fd5b5060405190808252806020026020018201604052801561085357816020015b6108406117fc565b8152602001906001900390816108385790505b50905060005b8581101561097f5786868281811061086d57fe5b9050602002016020810190610882919061186f565b82828151811061088e57fe5b60209081029190910101516001600160a01b0390911690528686828181106108b257fe5b90506020020160208101906108c7919061186f565b6001600160a01b0316630afbcdc9866040518263ffffffff1660e01b81526004016108f29190611af3565b604080518083038186803b15801561090957600080fd5b505afa15801561091d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109419190611ad0565b83838151811061094d57fe5b602002602001015160200184848151811061096457fe5b60209081029190910101516040019190915252600101610859565b5061099461098d858361111e565b8390610fd6565b925050505b9392505050565b60345490565b7f000000000000000000000000000000000000000000000000000000000000000090565b601281565b60006109d961121c565b90506000548111610a1b5760405162461bcd60e51b815260040180806020018281038252602e815260200180611cb2602e913960400191505060405180910390fd5b80600081905550610aea7f00000000000000000000000000000000000000000000000000000000000000006000197f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663312f6b836040518163ffffffff1660e01b815260040160206040518083038186803b158015610aa257600080fd5b505afa158015610ab6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ada919061188b565b6001600160a01b03169190611221565b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600181565b6033602052600090815260409020546001600160681b0380821691600160681b810490911690600160d01b900464ffffffffff1683565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b965760405162461bcd60e51b815260040161034f90611bd1565b6001600160a01b0382811660008181526036602052604080822080546001600160a01b0319169486169485179055517f4925eafc82d0c4d67889898eeed64b18488ab19811e61620f387026dec126a289190a35050565b600084610bfc57506000610f0d565b6001600160a01b03831660009081526035602052604090205460608767ffffffffffffffff81118015610c2e57600080fd5b50604051908082528060200260200182016040528015610c6857816020015b610c556117fc565b815260200190600190039081610c4d5790505b50905060005b88811015610d9457898982818110610c8257fe5b9050602002016020810190610c97919061186f565b828281518110610ca357fe5b60209081029190910101516001600160a01b039091169052898982818110610cc757fe5b9050602002016020810190610cdc919061186f565b6001600160a01b0316630afbcdc9876040518263ffffffff1660e01b8152600401610d079190611af3565b604080518083038186803b158015610d1e57600080fd5b505afa158015610d32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d569190611ad0565b838381518110610d6257fe5b6020026020010151602001848481518110610d7957fe5b60209081029190910101516040019190915252600101610c6e565b506000610da18683611339565b90508015610df757610db38382610fd6565b9250856001600160a01b03167f2468f9268c60ad90e2d49edb0032c8a001e733ae888b3ab8e982edf535be1a7682604051610dee9190611c6c565b60405180910390a25b82610e085760009350505050610f0d565b6000838911610e175788610e19565b835b6001600160a01b03808916600090815260356020526040908190208388039055516356e4bb9760e11b81529192507f0000000000000000000000000000000000000000000000000000000000000000169063adc9772e90610e809089908590600401611b07565b600060405180830381600087803b158015610e9a57600080fd5b505af1158015610eae573d6000803e3d6000fd5b50505050876001600160a01b0316866001600160a01b0316886001600160a01b03167f5637d7f962248a7f05a7ab69eec6446e31f3d0a299d997f135a65c62806e789184604051610eff9190611c6c565b60405180910390a493505050505b9695505050505050565b6001600160a01b0380841660009081526033602090815260408083209388168352600184019091528120549091908280610f528885886113a5565b9050808314610fca578615610f6f57610f6c8782856114d5565b91505b6001600160a01b03808a1660008181526001870160205260409081902084905551918a16917fbb123b5c06d5408bbea3c4fef481578175cfb432e3b482c6186f02ed9086585b90610fc1908590611c6c565b60405180910390a35b50979650505050505050565b8082018281101561043157600080fd5b60005b8151811015610aea5760006033600084848151811061100457fe5b6020026020010151604001516001600160a01b03166001600160a01b03168152602001908152602001600020905061106b83838151811061104157fe5b6020026020010151604001518285858151811061105a57fe5b6020026020010151602001516113a5565b5082828151811061107857fe5b60209081029190910101515181546cffffffffffffffffffffffffff19166001600160681b0390911617815582518390839081106110b257fe5b6020026020010151604001516001600160a01b03167f87fa03892a0556cb6b8f97e6d533a150d4d55fcbf275fff5fa003fa636bcc7fa8484815181106110f457fe5b60200260200101516000015160405161110d9190611c2e565b60405180910390a250600101610fe9565b600080805b83518110156112145760006033600086848151811061113e57fe5b602090810291909101810151516001600160a01b031682528101919091526040016000908120805487519193506111b391600160681b82046001600160681b039081169290811691600160d01b90910464ffffffffff16908a90889081106111a257fe5b602002602001015160400151611504565b90506112086112018785815181106111c757fe5b602002602001015160200151838560010160008c6001600160a01b03166001600160a01b03168152602001908152602001600020546114d5565b8590610fd6565b93505050600101611123565b509392505050565b600190565b8015806112a7575060408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b15801561127957600080fd5b505afa15801561128d573d6000803e3d6000fd5b505050506040513d60208110156112a357600080fd5b5051155b6112e25760405162461bcd60e51b8152600401808060200182810382526036815260200180611d0a6036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b1790526113349084906115a4565b505050565b600080805b83518110156112145761139b61098d8686848151811061135a57fe5b60200260200101516000015187858151811061137257fe5b60200260200101516020015188868151811061138a57fe5b602002602001015160400151610f17565b915060010161133e565b81546000906001600160681b03600160681b82048116919081169064ffffffffff600160d01b90910416428114156113e257829350505050610999565b60006113f084848489611504565b90508381146114ab5780816001600160681b0316146114215760405162461bcd60e51b815260040161034f90611ba9565b86546cffffffffffffffffffffffffff60681b1916600160681b6001600160681b038316021764ffffffffff60d01b1916600160d01b4264ffffffffff16021787556040516001600160a01b038916907f5777ca300dfe5bead41006fbce4389794dbc0ed8d6cccebfaf94630aa04184bc9061149e908490611c6c565b60405180910390a26114ca565b865464ffffffffff60d01b1916600160d01b4264ffffffffff16021787555b979650505050505050565b6000670de0b6b3a76400006114f46114ed858561175c565b869061176c565b816114fb57fe5b04949350505050565b603454600090841580611515575082155b80611528575042846001600160801b0316145b8061153c575080846001600160801b031610155b1561154a5785915050610369565b6000814211611559574261155b565b815b90506000611572826001600160801b03881661175c565b90506105588861159e87611598670de0b6b3a76400006115928d8861176c565b9061176c565b90611790565b90610fd6565b6115b6826001600160a01b03166117a3565b611607576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b602083106116455780518252601f199092019160209182019101611626565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146116a7576040519150601f19603f3d011682016040523d82523d6000602084013e6116ac565b606091505b509150915081611703576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b8051156104005780806020019051602081101561171f57600080fd5b50516104005760405162461bcd60e51b815260040180806020018281038252602a815260200180611ce0602a913960400191505060405180910390fd5b8082038281111561043157600080fd5b60008215806117875750508181028183828161178457fe5b04145b61043157600080fd5b600081838161179b57fe5b049392505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610369575050151592915050565b604080516060810182526000808252602082018190529181019190915290565b604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b60008083601f840112611837578182fd5b50813567ffffffffffffffff81111561184e578182fd5b602083019150836020808302850101111561186857600080fd5b9250929050565b600060208284031215611880578081fd5b813561099981611c99565b60006020828403121561189c578081fd5b815161099981611c99565b600080604083850312156118b9578081fd5b82356118c481611c99565b915060208301356118d481611c99565b809150509250929050565b6000806000606084860312156118f3578081fd5b83356118fe81611c99565b95602085013595506040909401359392505050565b600080600060408486031215611927578283fd5b833567ffffffffffffffff81111561193d578384fd5b61194986828701611826565b909450925050602084013561195d81611c99565b809150509250925092565b6000806000806040858703121561197d578081fd5b843567ffffffffffffffff80821115611994578283fd5b6119a088838901611826565b909650945060208701359150808211156119b8578283fd5b506119c587828801611826565b95989497509550505050565b600080600080606085870312156119e6578384fd5b843567ffffffffffffffff8111156119fc578485fd5b611a0887828801611826565b909550935050602085013591506040850135611a2381611c99565b939692955090935050565b600080600080600060808688031215611a45578081fd5b853567ffffffffffffffff811115611a5b578182fd5b611a6788828901611826565b909650945050602086013592506040860135611a8281611c99565b91506060860135611a9281611c99565b809150509295509295909350565b600060208284031215611ab1578081fd5b5035919050565b600060208284031215611ac9578081fd5b5051919050565b60008060408385031215611ae2578182fd5b505080516020909101519092909150565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b602080825260149082015273494e56414c49445f555345525f4144445245535360601b604082015260600190565b602080825260129082015271494e56414c49445f544f5f4144445245535360701b604082015260600190565b60208082526015908201527424a72b20a624a22fa1a7a72324a3aaa920aa24a7a760591b604082015260600190565b6020808252600e908201526d496e646578206f766572666c6f7760901b604082015260600190565b60208082526015908201527427a7262cafa2a6a4a9a9a4a7a72fa6a0a720a3a2a960591b604082015260600190565b60208082526014908201527310d3105253515497d5539055551213d49256915160621b604082015260600190565b6001600160681b0391909116815260200190565b6001600160681b03938416815291909216602082015264ffffffffff909116604082015260600190565b90815260200190565b9283526020830191909152604082015260600190565b60ff91909116815260200190565b6001600160a01b0381168114611cae57600080fd5b5056fe436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a65645361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365a2646970667358221220d94e1a7bc1c2da8e7f89644f4c7824cbb4d6c28be01bda08c043c6db1633574f64736f6c63430007050033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B599F26 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xCBCBB507 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCBCBB507 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xCC69AFEC EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xDDE43CBA EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xF11B8188 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xF5CF673B EQ PUSH2 0x295 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x8B599F26 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x919CD40F EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x99248EA7 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x250 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x3373EE4C GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x3373EE4C EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x39CCBDD3 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x6D34B96E EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x74D945EC EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x79F171B2 EQ PUSH2 0x205 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x1652E7B7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x198FA81E EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x1C39B672 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x3111E7B3 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x31873E2E EQ PUSH2 0x1A4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0x186F JUMP JUMPDEST PUSH2 0x2A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16F PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0x186F JUMP JUMPDEST PUSH2 0x2E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH2 0x184 PUSH2 0x303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x1AF3 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x19F CALLDATASIZE PUSH1 0x4 PUSH2 0x19D1 JUMP JUMPDEST PUSH2 0x327 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x1B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x18DF JUMP JUMPDEST PUSH2 0x371 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16F PUSH2 0x1C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x18A7 JUMP JUMPDEST PUSH2 0x406 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0x1AA0 JUMP JUMPDEST PUSH2 0x437 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x1ED CALLDATASIZE PUSH1 0x4 PUSH2 0x1A2E JUMP JUMPDEST PUSH2 0x4BF JUMP JUMPDEST PUSH2 0x184 PUSH2 0x200 CALLDATASIZE PUSH1 0x4 PUSH2 0x186F JUMP JUMPDEST PUSH2 0x564 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0x1968 JUMP JUMPDEST PUSH2 0x582 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x226 CALLDATASIZE PUSH1 0x4 PUSH2 0x1913 JUMP JUMPDEST PUSH2 0x7E7 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x9A6 JUMP JUMPDEST PUSH2 0x243 PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x1C8B JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x25E CALLDATASIZE PUSH1 0x4 PUSH2 0x186F JUMP JUMPDEST PUSH2 0x9CF JUMP JUMPDEST PUSH2 0x184 PUSH2 0xAEE JUMP JUMPDEST PUSH2 0x16F PUSH2 0xB12 JUMP JUMPDEST PUSH2 0x286 PUSH2 0x281 CALLDATASIZE PUSH1 0x4 PUSH2 0x186F JUMP JUMPDEST PUSH2 0xB17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x2A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x18A7 JUMP JUMPDEST PUSH2 0xB4E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x68 SHL DUP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x68 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x35 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x358 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34F SWAP1 PUSH2 0x1B4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x366 DUP6 DUP6 DUP6 CALLER CALLER DUP8 PUSH2 0xBED JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F DUP5 CALLER DUP5 DUP7 PUSH2 0xF17 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x400 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x35 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3AA SWAP1 DUP3 PUSH2 0xFD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x35 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH32 0x2468F9268C60AD90E2D49EDB0032C8A001E733AE888B3AB8E982EDF535BE1A76 SWAP1 PUSH2 0x3F7 SWAP1 DUP5 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE PUSH1 0x1 SWAP1 SWAP4 ADD SWAP1 MSTORE KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x47F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34F SWAP1 PUSH2 0x1BD1 JUMP JUMPDEST PUSH1 0x34 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x1CC1849A6602C3E91F2088CADEA4381CC5717F2F28584197060ED2EBB434C16F SWAP1 PUSH2 0x4B4 SWAP1 DUP4 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x36 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 CALLER SWAP2 DUP6 SWAP2 AND DUP3 EQ PUSH2 0x4FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34F SWAP1 PUSH2 0x1C00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x524 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34F SWAP1 PUSH2 0x1B20 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x54A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34F SWAP1 PUSH2 0x1B4E JUMP JUMPDEST PUSH2 0x558 DUP9 DUP9 DUP9 CALLER DUP10 DUP10 PUSH2 0xBED JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x36 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34F SWAP1 PUSH2 0x1BD1 JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0x5E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34F SWAP1 PUSH2 0x1B7A JUMP JUMPDEST PUSH1 0x60 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x602 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x63C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x629 PUSH2 0x17DC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x621 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x7D6 JUMPI DUP6 DUP6 DUP3 DUP2 DUP2 LT PUSH2 0x656 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x66B SWAP2 SWAP1 PUSH2 0x186F JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x677 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x6A7 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6BA JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x68 SHL SUB SWAP1 SWAP2 AND SWAP1 MSTORE DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x6DE JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6F1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x68 SHL SUB AND EQ PUSH2 0x723 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34F SWAP1 PUSH2 0x1B7A JUMP JUMPDEST DUP6 DUP6 DUP3 DUP2 DUP2 LT PUSH2 0x72F JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x744 SWAP2 SWAP1 PUSH2 0x186F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB1BF962D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x77C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x790 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7B4 SWAP2 SWAP1 PUSH2 0x1AB8 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7C0 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x642 JUMP JUMPDEST POP PUSH2 0x7E0 DUP2 PUSH2 0xFE6 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x35 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x60 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x819 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x853 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x840 PUSH2 0x17FC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x838 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x97F JUMPI DUP7 DUP7 DUP3 DUP2 DUP2 LT PUSH2 0x86D JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x882 SWAP2 SWAP1 PUSH2 0x186F JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x88E JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 MSTORE DUP7 DUP7 DUP3 DUP2 DUP2 LT PUSH2 0x8B2 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x8C7 SWAP2 SWAP1 PUSH2 0x186F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAFBCDC9 DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F2 SWAP2 SWAP1 PUSH2 0x1AF3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x909 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x91D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x941 SWAP2 SWAP1 PUSH2 0x1AD0 JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x94D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x964 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 ADD SWAP2 SWAP1 SWAP2 MSTORE MSTORE PUSH1 0x1 ADD PUSH2 0x859 JUMP JUMPDEST POP PUSH2 0x994 PUSH2 0x98D DUP6 DUP4 PUSH2 0x111E JUMP JUMPDEST DUP4 SWAP1 PUSH2 0xFD6 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x34 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D9 PUSH2 0x121C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SLOAD DUP2 GT PUSH2 0xA1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1CB2 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0xAEA PUSH32 0x0 PUSH1 0x0 NOT PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x312F6B83 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAB6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xADA SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x1221 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x68 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x68 SHL DUP2 DIV SWAP1 SWAP2 AND SWAP1 PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND DUP4 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xB96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34F SWAP1 PUSH2 0x1BD1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x36 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP5 DUP7 AND SWAP5 DUP6 OR SWAP1 SSTORE MLOAD PUSH32 0x4925EAFC82D0C4D67889898EEED64B18488AB19811E61620F387026DEC126A28 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH2 0xBFC JUMPI POP PUSH1 0x0 PUSH2 0xF0D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x35 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xC2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC68 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xC55 PUSH2 0x17FC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xC4D JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP9 DUP2 LT ISZERO PUSH2 0xD94 JUMPI DUP10 DUP10 DUP3 DUP2 DUP2 LT PUSH2 0xC82 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xC97 SWAP2 SWAP1 PUSH2 0x186F JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xCA3 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 MSTORE DUP10 DUP10 DUP3 DUP2 DUP2 LT PUSH2 0xCC7 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xCDC SWAP2 SWAP1 PUSH2 0x186F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAFBCDC9 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD07 SWAP2 SWAP1 PUSH2 0x1AF3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD32 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD56 SWAP2 SWAP1 PUSH2 0x1AD0 JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xD62 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xD79 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 ADD SWAP2 SWAP1 SWAP2 MSTORE MSTORE PUSH1 0x1 ADD PUSH2 0xC6E JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xDA1 DUP7 DUP4 PUSH2 0x1339 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xDF7 JUMPI PUSH2 0xDB3 DUP4 DUP3 PUSH2 0xFD6 JUMP JUMPDEST SWAP3 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x2468F9268C60AD90E2D49EDB0032C8A001E733AE888B3AB8E982EDF535BE1A76 DUP3 PUSH1 0x40 MLOAD PUSH2 0xDEE SWAP2 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP3 PUSH2 0xE08 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0xF0D JUMP JUMPDEST PUSH1 0x0 DUP4 DUP10 GT PUSH2 0xE17 JUMPI DUP9 PUSH2 0xE19 JUMP JUMPDEST DUP4 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x35 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP4 DUP9 SUB SWAP1 SSTORE MLOAD PUSH4 0x56E4BB97 PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH32 0x0 AND SWAP1 PUSH4 0xADC9772E SWAP1 PUSH2 0xE80 SWAP1 DUP10 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x1B07 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEAE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x5637D7F962248A7F05A7AB69EEC6446E31F3D0A299D997F135A65C62806E7891 DUP5 PUSH1 0x40 MLOAD PUSH2 0xEFF SWAP2 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 SWAP4 POP POP POP POP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE PUSH1 0x1 DUP5 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP3 DUP1 PUSH2 0xF52 DUP9 DUP6 DUP9 PUSH2 0x13A5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 EQ PUSH2 0xFCA JUMPI DUP7 ISZERO PUSH2 0xF6F JUMPI PUSH2 0xF6C DUP8 DUP3 DUP6 PUSH2 0x14D5 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD SWAP2 DUP11 AND SWAP2 PUSH32 0xBB123B5C06D5408BBEA3C4FEF481578175CFB432E3B482C6186F02ED9086585B SWAP1 PUSH2 0xFC1 SWAP1 DUP6 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0x431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xAEA JUMPI PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1004 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x106B DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1041 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP3 DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x105A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0x13A5 JUMP JUMPDEST POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1078 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD MLOAD DUP2 SLOAD PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x68 SHL SUB SWAP1 SWAP2 AND OR DUP2 SSTORE DUP3 MLOAD DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x10B2 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x87FA03892A0556CB6B8F97E6D533A150D4D55FCBF275FFF5FA003FA636BCC7FA DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x10F4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x110D SWAP2 SWAP1 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 ADD PUSH2 0xFE9 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1214 JUMPI PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x113E JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP8 MLOAD SWAP2 SWAP4 POP PUSH2 0x11B3 SWAP2 PUSH1 0x1 PUSH1 0x68 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x68 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP1 DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 SWAP2 DIV PUSH5 0xFFFFFFFFFF AND SWAP1 DUP11 SWAP1 DUP9 SWAP1 DUP2 LT PUSH2 0x11A2 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0x1504 JUMP JUMPDEST SWAP1 POP PUSH2 0x1208 PUSH2 0x1201 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x11C7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP4 DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x14D5 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0xFD6 JUMP JUMPDEST SWAP4 POP POP POP PUSH1 0x1 ADD PUSH2 0x1123 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0x12A7 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 DUP6 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x128D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO JUMPDEST PUSH2 0x12E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D0A PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1334 SWAP1 DUP5 SWAP1 PUSH2 0x15A4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1214 JUMPI PUSH2 0x139B PUSH2 0x98D DUP7 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x135A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1372 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x138A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0xF17 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x133E JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x68 SHL SUB PUSH1 0x1 PUSH1 0x68 SHL DUP3 DIV DUP2 AND SWAP2 SWAP1 DUP2 AND SWAP1 PUSH5 0xFFFFFFFFFF PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 SWAP2 DIV AND TIMESTAMP DUP2 EQ ISZERO PUSH2 0x13E2 JUMPI DUP3 SWAP4 POP POP POP POP PUSH2 0x999 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13F0 DUP5 DUP5 DUP5 DUP10 PUSH2 0x1504 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 EQ PUSH2 0x14AB JUMPI DUP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x68 SHL SUB AND EQ PUSH2 0x1421 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34F SWAP1 PUSH2 0x1BA9 JUMP JUMPDEST DUP7 SLOAD PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x68 SHL NOT AND PUSH1 0x1 PUSH1 0x68 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x68 SHL SUB DUP4 AND MUL OR PUSH5 0xFFFFFFFFFF PUSH1 0xD0 SHL NOT AND PUSH1 0x1 PUSH1 0xD0 SHL TIMESTAMP PUSH5 0xFFFFFFFFFF AND MUL OR DUP8 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH32 0x5777CA300DFE5BEAD41006FBCE4389794DBC0ED8D6CCCEBFAF94630AA04184BC SWAP1 PUSH2 0x149E SWAP1 DUP5 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x14CA JUMP JUMPDEST DUP7 SLOAD PUSH5 0xFFFFFFFFFF PUSH1 0xD0 SHL NOT AND PUSH1 0x1 PUSH1 0xD0 SHL TIMESTAMP PUSH5 0xFFFFFFFFFF AND MUL OR DUP8 SSTORE JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x14F4 PUSH2 0x14ED DUP6 DUP6 PUSH2 0x175C JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x176C JUMP JUMPDEST DUP2 PUSH2 0x14FB JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x34 SLOAD PUSH1 0x0 SWAP1 DUP5 ISZERO DUP1 PUSH2 0x1515 JUMPI POP DUP3 ISZERO JUMPDEST DUP1 PUSH2 0x1528 JUMPI POP TIMESTAMP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x153C JUMPI POP DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND LT ISZERO JUMPDEST ISZERO PUSH2 0x154A JUMPI DUP6 SWAP2 POP POP PUSH2 0x369 JUMP JUMPDEST PUSH1 0x0 DUP2 TIMESTAMP GT PUSH2 0x1559 JUMPI TIMESTAMP PUSH2 0x155B JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1572 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP9 AND PUSH2 0x175C JUMP JUMPDEST SWAP1 POP PUSH2 0x558 DUP9 PUSH2 0x159E DUP8 PUSH2 0x1598 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1592 DUP14 DUP9 PUSH2 0x176C JUMP JUMPDEST SWAP1 PUSH2 0x176C JUMP JUMPDEST SWAP1 PUSH2 0x1790 JUMP JUMPDEST SWAP1 PUSH2 0xFD6 JUMP JUMPDEST PUSH2 0x15B6 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x17A3 JUMP JUMPDEST PUSH2 0x1607 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1645 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1626 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x16A7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1703 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x400 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x171F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x400 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1CE0 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0x431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ISZERO DUP1 PUSH2 0x1787 JUMPI POP POP DUP2 DUP2 MUL DUP2 DUP4 DUP3 DUP2 PUSH2 0x1784 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0x431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP4 DUP2 PUSH2 0x179B JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x369 JUMPI POP POP ISZERO ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1837 JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x184E JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x1868 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1880 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x999 DUP2 PUSH2 0x1C99 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x189C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x999 DUP2 PUSH2 0x1C99 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18B9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x18C4 DUP2 PUSH2 0x1C99 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x18D4 DUP2 PUSH2 0x1C99 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18F3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x18FE DUP2 PUSH2 0x1C99 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1927 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x193D JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x1949 DUP7 DUP3 DUP8 ADD PUSH2 0x1826 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x195D DUP2 PUSH2 0x1C99 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x197D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1994 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x19A0 DUP9 DUP4 DUP10 ADD PUSH2 0x1826 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x19B8 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x19C5 DUP8 DUP3 DUP9 ADD PUSH2 0x1826 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x19E6 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19FC JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x1A08 DUP8 DUP3 DUP9 ADD PUSH2 0x1826 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x1A23 DUP2 PUSH2 0x1C99 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1A45 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A5B JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1A67 DUP9 DUP3 DUP10 ADD PUSH2 0x1826 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x1A82 DUP2 PUSH2 0x1C99 JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH2 0x1A92 DUP2 PUSH2 0x1C99 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AB1 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AC9 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AE2 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x494E56414C49445F555345525F41444452455353 PUSH1 0x60 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x494E56414C49445F544F5F41444452455353 PUSH1 0x70 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x24A72B20A624A22FA1A7A72324A3AAA920AA24A7A7 PUSH1 0x59 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x496E646578206F766572666C6F77 PUSH1 0x90 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x27A7262CAFA2A6A4A9A9A4A7A72FA6A0A720A3A2A9 PUSH1 0x59 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x10D3105253515497D5539055551213D492569151 PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x68 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x68 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH5 0xFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1CAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID NUMBER PUSH16 0x6E747261637420696E7374616E636520 PUSH9 0x617320616C72656164 PUSH26 0x206265656E20696E697469616C697A6564536166654552433230 GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x7563636565645361666545524332303A20617070 PUSH19 0x6F76652066726F6D206E6F6E2D7A65726F2074 PUSH16 0x206E6F6E2D7A65726F20616C6C6F7761 PUSH15 0x6365A2646970667358221220D94E1A PUSH28 0xC1C2DA8E7F89644F4C7824CBB4D6C28BE01BDA08C043C6DB1633574F PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ","sourceMap":"1115:6720:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1795:201:6;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;5840:136:7;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1342:51::-;;;:::i;:::-;;;;;;;:::i;4411:257::-;;;;;;:::i;:::-;;:::i;3257:389::-;;;;;;:::i;:::-;;:::i;:::-;;1611:137:6;;;;;;:::i;:::-;;:::i;1076:186::-;;;;;;:::i;:::-;;:::i;4716:375:7:-;;;;;;:::i;:::-;;:::i;5674:118::-;;;;;;:::i;:::-;;:::i;2444:765::-;;;;;;:::i;:::-;;:::i;3694:669::-;;;;;;:::i;:::-;;:::i;1461:103:6:-;;;:::i;6024::7:-;;;:::i;703:36:6:-;;;:::i;:::-;;;;;;;:::i;2180:216:7:-;;;;;;:::i;:::-;;:::i;657:41:6:-;;;:::i;1301:36:7:-;;;:::i;744:43:6:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;5458:168:7:-;;;;;;:::i;:::-;;:::i;1795:201:6:-;-1:-1:-1;;;;;1903:13:6;1862:7;1903:13;;;:6;:13;;;;;:19;-1:-1:-1;;;1903:19:6;;-1:-1:-1;;;;;1903:19:6;;;;1924:31;;;;-1:-1:-1;;;1957:33:6;;;;;1795:201::o;5840:136:7:-;-1:-1:-1;;;;;5942:29:7;5920:7;5942:29;;;:22;:29;;;;;;;5840:136::o;1342:51::-;;;:::o;4411:257::-;4531:7;-1:-1:-1;;;;;4554:16:7;;4546:47;;;;-1:-1:-1;;;4546:47:7;;;;;;;:::i;:::-;;;;;;;;;4606:57;4620:6;;4628;4636:10;4648;4660:2;4606:13;:57::i;:::-;4599:64;;4411:257;;;;;;;:::o;3257:389::-;3375:22;3400:68;3425:4;3431:10;3443:11;3456;3400:24;:68::i;:::-;3375:93;-1:-1:-1;3478:19:7;;3474:168;;-1:-1:-1;;;;;3538:28:7;;;;;;:22;:28;;;;;;:48;;3571:14;3538:32;:48::i;:::-;-1:-1:-1;;;;;3507:28:7;;;;;;:22;:28;;;;;;;:79;;;;3599:36;;;;;;3620:14;;3599:36;:::i;:::-;;;;;;;;3474:168;3257:389;;;;:::o;1611:137:6:-;-1:-1:-1;;;;;1718:13:6;;;1696:7;1718:13;;;:6;:13;;;;;;;;:25;;;;;:19;;;;:25;;;;1611:137;;;;;:::o;1076:186::-;875:10;-1:-1:-1;;;;;889:16:6;875:30;;867:64;;;;-1:-1:-1;;;867:64:6;;;;;;;:::i;:::-;1173:16:::1;:34:::0;;;1218:39:::1;::::0;::::1;::::0;::::1;::::0;1192:15;;1218:39:::1;:::i;:::-;;;;;;;;1076:186:::0;:::o;4716:375:7:-;-1:-1:-1;;;;;1800:25:7;;;4903:7;1800:25;;;:19;:25;;;;;;4903:7;;4876:10;;4888:4;;1800:25;:36;;1792:69;;;;-1:-1:-1;;;1792:69:7;;;;;;;:::i;:::-;-1:-1:-1;;;;;4926:18:7;::::1;4918:51;;;;-1:-1:-1::0;;;4918:51:7::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4983:16:7;::::1;4975:47;;;;-1:-1:-1::0;;;4975:47:7::1;;;;;;;:::i;:::-;5035:51;5049:6;;5057;5065:10;5077:4;5083:2;5035:13;:51::i;:::-;5028:58:::0;4716:375;-1:-1:-1;;;;;;;;4716:375:7:o;5674:118::-;-1:-1:-1;;;;;5762:25:7;;;5740:7;5762:25;;;:19;:25;;;;;;;;5674:118::o;2444:765::-;875:10:6;-1:-1:-1;;;;;889:16:6;875:30;;867:64;;;;-1:-1:-1;;;867:64:6;;;;;;;:::i;:::-;2601:42:7;;::::1;2593:76;;;;-1:-1:-1::0;;;2593:76:7::1;;;;;;;:::i;:::-;2676:56;2782:6:::0;2741:55:::1;::::0;::::1;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2676:120;;2808:9;2803:366;2823:17:::0;;::::1;2803:366;;;2889:6;;2896:1;2889:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;2855:12;2868:1;2855:15;;;;;;;;;;;;;;:31;;:43;-1:-1:-1::0;;;;;2855:43:7::1;;;-1:-1:-1::0;;;;;2855:43:7::1;;;::::0;::::1;2950:18;;2969:1;2950:21;;;;;;;;;;;;;2906:12;2919:1;2906:15;;;;;;;;;::::0;;::::1;::::0;;;;;;-1:-1:-1;;;;;2906:66:7;;::::1;::::0;;3026:18;;3045:1;3026:21;;::::1;;;;;;;;;;;2989:12;3002:1;2989:15;;;;;;;;;;;;;;:33;;;-1:-1:-1::0;;;;;2989:58:7::1;;2981:92;;;;-1:-1:-1::0;;;2981:92:7::1;;;;;;;:::i;:::-;3132:6;;3139:1;3132:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3112:48:7::1;;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3082:12;3095:1;3082:15;;;;;;;;;::::0;;::::1;::::0;;;;;;;:27:::1;:80:::0;2842:3:::1;;2803:366;;;;3174:30;3191:12;3174:16;:30::i;:::-;937:1:6;2444:765:7::0;;;;:::o;3694:669::-;-1:-1:-1;;;;;3854:28:7;;3810:7;3854:28;;;:22;:28;;;;;;3889:51;3988:6;3949:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3889:113;;4013:9;4008:238;4028:17;;;4008:238;;;4091:6;;4098:1;4091:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;4060;4070:1;4060:12;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4060:40:7;;;;;4184:6;;4191:1;4184:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4164:69:7;;4234:4;4164:75;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4109:9;4119:1;4109:12;;;;;;;;;;;;;;:25;;4136:9;4146:1;4136:12;;;;;;;;;;;;;;;;;;:24;;4108:131;;;;;4047:3;;4008:238;;;;4270:59;4291:37;4312:4;4318:9;4291:20;:37::i;:::-;4270:16;;:20;:59::i;:::-;4251:78;-1:-1:-1;;;3694:669:7;;;;;;:::o;1461:103:6:-;1543:16;;1461:103;:::o;6024::7:-;6110:11;6024:103;:::o;703:36:6:-;737:2;703:36;:::o;2180:216:7:-;1040:16:5;1059:13;:11;:13::i;:::-;1040:32;;1097:23;;1086:8;:34;1078:93;;;;-1:-1:-1;;;1078:93:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1204:8;1178:23;:34;;;;2304:87:7::1;2359:11;-1:-1:-1::0;;2311:11:7::1;-1:-1:-1::0;;;;;2311:24:7::1;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2304:46:7::1;::::0;:87;:46:::1;:87::i;:::-;2180:216:::0;;:::o;657:41:6:-;;;:::o;1301:36:7:-;1336:1;1301:36;:::o;744:43:6:-;;;;;;;;;;;;-1:-1:-1;;;;;744:43:6;;;;-1:-1:-1;;;744:43:6;;;;;;-1:-1:-1;;;744:43:6;;;;;:::o;5458:168:7:-;875:10:6;-1:-1:-1;;;;;889:16:6;875:30;;867:64;;;;-1:-1:-1;;;867:64:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;5552:25:7;;::::1;;::::0;;;:19:::1;:25;::::0;;;;;:34;;-1:-1:-1;;;;;;5552:34:7::1;::::0;;::::1;::::0;;::::1;::::0;;5597:24;::::1;::::0;5552:25;5597:24:::1;5458:168:::0;;:::o;6617:1216::-;6768:7;6787:11;6783:40;;-1:-1:-1;6815:1:7;6808:8;;6783:40;-1:-1:-1;;;;;6855:28:7;;6828:24;6855:28;;;:22;:28;;;;;;6890:51;6989:6;6950:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;6890:113;;7014:9;7009:238;7029:17;;;7009:238;;;7092:6;;7099:1;7092:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;7061;7071:1;7061:12;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7061:40:7;;;;;7185:6;;7192:1;7185:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7165:69:7;;7235:4;7165:75;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7110:9;7120:1;7110:12;;;;;;;;;;;;;;:25;;7137:9;7147:1;7137:12;;;;;;;;;;;;;;;;;;:24;;7109:131;;;;;7048:3;;7009:238;;;;7253:22;7278:30;7292:4;7298:9;7278:13;:30::i;:::-;7253:55;-1:-1:-1;7318:19:7;;7314:144;;7366:36;:16;7387:14;7366:20;:36::i;:::-;7347:55;;7430:4;-1:-1:-1;;;;;7415:36:7;;7436:14;7415:36;;;;;;:::i;:::-;;;;;;;;7314:144;7468:21;7464:50;;7506:1;7499:8;;;;;;;7464:50;7520:21;7553:16;7544:6;:25;:53;;7591:6;7544:53;;;7572:16;7544:53;-1:-1:-1;;;;;7603:28:7;;;;;;;:22;:28;;;;;;;7634:32;;;7603:63;;7706:36;-1:-1:-1;;;7706:36:7;;7520:77;;-1:-1:-1;7706:11:7;:17;;;;:36;;7724:2;;7520:77;;7706:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7778:7;-1:-1:-1;;;;;7753:48:7;7774:2;-1:-1:-1;;;;;7753:48:7;7768:4;-1:-1:-1;;;;;7753:48:7;;7787:13;7753:48;;;;;;:::i;:::-;;;;;;;;7815:13;-1:-1:-1;;;;6617:1216:7;;;;;;;;;:::o;4445:641:6:-;-1:-1:-1;;;;;4634:13:6;;;4589:7;4634:13;;;:6;:13;;;;;;;;4673:21;;;;;:15;;;:21;;;;;;4589:7;;4634:13;4589:7;;4752:56;4641:5;4634:13;4796:11;4752:25;:56::i;:::-;4733:75;;4832:8;4819:9;:21;4815:239;;4854:17;;4850:105;;4900:46;4912:12;4926:8;4936:9;4900:11;:46::i;:::-;4883:63;;4850:105;-1:-1:-1;;;;;4963:21:6;;;;;;;:15;;;:21;;;;;;;:32;;;5008:39;;;;;;;;;4987:8;;5008:39;:::i;:::-;;;;;;;;4815:239;-1:-1:-1;5067:14:6;4445:641;-1:-1:-1;;;;;;;4445:641:6:o;448:111:13:-;540:5;;;535:16;;;;527:25;;;;;2136:624:6;2251:9;2246:510;2270:17;:24;2266:1;:28;2246:510;;;2309:29;2341:6;:44;2348:17;2366:1;2348:20;;;;;;;;;;;;;;:36;;;-1:-1:-1;;;;;2341:44:6;-1:-1:-1;;;;;2341:44:6;;;;;;;;;;;;2309:76;;2394:142;2429:17;2447:1;2429:20;;;;;;;;;;;;;;:36;;;2475:11;2496:17;2514:1;2496:20;;;;;;;;;;;;;;:32;;;2394:25;:142::i;:::-;;2577:17;2595:1;2577:20;;;;;;;;;;;;;;;;;;:38;2545:70;;-1:-1:-1;;2545:70:6;-1:-1:-1;;;;;2545:70:6;;;;;;2657:20;;;;2675:1;;2657:20;;;;;;;;;;;;:36;;;-1:-1:-1;;;;;2629:120:6;;2703:17;2721:1;2703:20;;;;;;;;;;;;;;:38;;;2629:120;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;2296:3:6;;2246:510;;6124:675;6253:7;;;6303:465;6327:6;:13;6323:1;:17;6303:465;;;6355:29;6387:6;:33;6394:6;6401:1;6394:9;;;;;;;;;;;;;;;;;;;:25;-1:-1:-1;;;;;6387:33:6;;;;;;;;;;;-1:-1:-1;6387:33:6;;;6483:17;;6596:9;;6387:33;;-1:-1:-1;6457:170:6;;-1:-1:-1;;;6483:17:6;;-1:-1:-1;;;;;6483:17:6;;;;6512:29;;;;-1:-1:-1;;;6553:31:6;;;;;;6596:9;;6603:1;;6596:9;;;;;;;;;;;;:21;;;6457:14;:170::i;:::-;6428:199;;6653:108;6681:72;6693:6;6700:1;6693:9;;;;;;;;;;;;;;:22;;;6717:10;6729:11;:17;;:23;6747:4;-1:-1:-1;;;;;6729:23:6;-1:-1:-1;;;;;6729:23:6;;;;;;;;;;;;;6681:11;:72::i;:::-;6653:14;;:18;:108::i;:::-;6636:125;-1:-1:-1;;;6342:3:6;;6303:465;;;-1:-1:-1;6780:14:6;6124:675;-1:-1:-1;;;6124:675:6:o;6205:90:7:-;1336:1;6205:90;:::o;1198:345:3:-;1312:10;;;1311:62;;-1:-1:-1;1328:39:3;;;-1:-1:-1;;;1328:39:3;;1352:4;1328:39;;;;-1:-1:-1;;;;;1328:39:3;;;;;;;;;:15;;;;;;:39;;;;;;;;;;;;;;;:15;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1328:39:3;:44;1311:62;1296:147;;;;-1:-1:-1;;;1296:147:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1475:62;;;-1:-1:-1;;;;;1475:62:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1475:62:3;-1:-1:-1;;;1475:62:3;;;1449:89;;1468:5;;1449:18;:89::i;:::-;1198:345;;;:::o;5390:461:6:-;5503:7;;;5553:266;5577:6;:13;5573:1;:17;5553:266;;;5622:190;5650:154;5686:4;5702:6;5709:1;5702:9;;;;;;;;;;;;;;:25;;;5739:6;5746:1;5739:9;;;;;;;;;;;;;;:22;;;5773:6;5780:1;5773:9;;;;;;;;;;;;;;:21;;;5650:24;:154::i;5622:190::-;5605:207;-1:-1:-1;5592:3:6;;5553:266;;3104:936;3274:17;;3240:7;;-1:-1:-1;;;;;;;;3274:17:6;;;;;3325:29;;;;3390:31;-1:-1:-1;;;3390:31:6;;;;3432:15;:38;;3428:74;;;3487:8;3480:15;;;;;;;3428:74;3508:16;3533:77;3548:8;3558:17;3577:19;3598:11;3533:14;:77::i;:::-;3508:102;;3633:8;3621;:20;3617:397;;3680:8;3667;-1:-1:-1;;;;;3659:29:6;;3651:56;;;;-1:-1:-1;;;3651:56:6;;;;;;;:::i;:::-;3780:37;;-1:-1:-1;;;;3780:37:6;-1:-1:-1;;;;;;;;3780:37:6;;;;-1:-1:-1;;;;3825:57:6;-1:-1:-1;;;3866:15:6;3825:57;;;;;;3895:34;;-1:-1:-1;;;;;3895:34:6;;;;;;;3780:37;;3895:34;:::i;:::-;;;;;;;;3617:397;;;3950:57;;-1:-1:-1;;;;3950:57:6;-1:-1:-1;;;3991:15:6;3950:57;;;;;;3617:397;4027:8;3104:936;-1:-1:-1;;;;;;;3104:936:6:o;7144:236::-;7275:7;7353:22;7297:53;7322:27;:12;7339:9;7322:16;:27::i;:::-;7297:20;;:24;:53::i;:::-;:78;;;;;;;7144:236;-1:-1:-1;;;;7144:236:6:o;7833:738::-;8041:16;;8000:7;;8074:22;;;:49;;-1:-1:-1;8106:17:6;;8074:49;:97;;;;8156:15;8133:19;-1:-1:-1;;;;;8133:38:6;;8074:97;:145;;;;8204:15;8181:19;-1:-1:-1;;;;;8181:38:6;;;8074:145;8063:197;;;8241:12;8234:19;;;;;8063:197;8266:24;8317:15;8299;:33;:69;;8353:15;8299:69;;;8335:15;8299:69;8266:102;-1:-1:-1;8374:17:6;8394:41;8266:102;-1:-1:-1;;;;;8394:41:6;;:20;:41::i;:::-;8374:61;-1:-1:-1;8454:112:6;8546:12;8454:78;8519:12;8454:60;8491:22;8454:32;:17;8374:61;8454:21;:32::i;:::-;:36;;:60::i;:::-;:64;;:78::i;:::-;:82;;:112::i;1547:555:3:-;1630:27;1638:5;-1:-1:-1;;;;;1630:25:3;;:27::i;:::-;1622:71;;;;;-1:-1:-1;;;1622:71:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;1756:12;1770:23;1805:5;-1:-1:-1;;;;;1797:19:3;1817:4;1797:25;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1797:25:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1755:67;;;;1836:7;1828:52;;;;;-1:-1:-1;;;1828:52:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1891:17;;:21;1887:211;;2025:10;2014:30;;;;;;;;;;;;;;;-1:-1:-1;2014:30:3;2006:85;;;;-1:-1:-1;;;2006:85:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;723:111:13;815:5;;;810:16;;;;802:25;;;;;999:125;1057:9;1086:6;;;:30;;-1:-1:-1;;1101:5:13;;;1115:1;1110;1101:5;1110:1;1096:15;;;;;:20;1086:30;1078:39;;;;;1130:171;1187:7;1293:1;1289;:5;;;;;;;1130:171;-1:-1:-1;;;1130:171:13:o;743:586:2:-;803:4;1242:20;;1089:66;1281:23;;;;;;:42;;-1:-1:-1;;1308:15:2;;;1273:51;-1:-1:-1;;743:586:2:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:404:14:-;;;147:3;140:4;132:6;128:17;124:27;114:2;;172:8;162;155:26;114:2;-1:-1:-1;202:20:14;;245:18;234:30;;231:2;;;284:8;274;267:26;231:2;328:4;320:6;316:17;304:29;;391:3;384:4;376;368:6;364:17;356:6;352:30;348:41;345:50;342:2;;;408:1;405;398:12;342:2;104:314;;;;;:::o;423:259::-;;535:2;523:9;514:7;510:23;506:32;503:2;;;556:6;548;541:22;503:2;600:9;587:23;619:33;646:5;619:33;:::i;687:263::-;;810:2;798:9;789:7;785:23;781:32;778:2;;;831:6;823;816:22;778:2;868:9;862:16;887:33;914:5;887:33;:::i;955:402::-;;;1084:2;1072:9;1063:7;1059:23;1055:32;1052:2;;;1105:6;1097;1090:22;1052:2;1149:9;1136:23;1168:33;1195:5;1168:33;:::i;:::-;1220:5;-1:-1:-1;1277:2:14;1262:18;;1249:32;1290:35;1249:32;1290:35;:::i;:::-;1344:7;1334:17;;;1042:315;;;;;:::o;1362:395::-;;;;1508:2;1496:9;1487:7;1483:23;1479:32;1476:2;;;1529:6;1521;1514:22;1476:2;1573:9;1560:23;1592:33;1619:5;1592:33;:::i;:::-;1644:5;1696:2;1681:18;;1668:32;;-1:-1:-1;1747:2:14;1732:18;;;1719:32;;1466:291;-1:-1:-1;;;1466:291:14:o;1762:600::-;;;;1926:2;1914:9;1905:7;1901:23;1897:32;1894:2;;;1947:6;1939;1932:22;1894:2;1992:9;1979:23;2025:18;2017:6;2014:30;2011:2;;;2062:6;2054;2047:22;2011:2;2106:76;2174:7;2165:6;2154:9;2150:22;2106:76;:::i;:::-;2201:8;;-1:-1:-1;2080:102:14;-1:-1:-1;;2286:2:14;2271:18;;2258:32;2299:33;2258:32;2299:33;:::i;:::-;2351:5;2341:15;;;1884:478;;;;;:::o;2367:815::-;;;;;2566:2;2554:9;2545:7;2541:23;2537:32;2534:2;;;2587:6;2579;2572:22;2534:2;2632:9;2619:23;2661:18;2702:2;2694:6;2691:14;2688:2;;;2723:6;2715;2708:22;2688:2;2767:76;2835:7;2826:6;2815:9;2811:22;2767:76;:::i;:::-;2862:8;;-1:-1:-1;2741:102:14;-1:-1:-1;2950:2:14;2935:18;;2922:32;;-1:-1:-1;2966:16:14;;;2963:2;;;3000:6;2992;2985:22;2963:2;;3044:78;3114:7;3103:8;3092:9;3088:24;3044:78;:::i;:::-;2524:658;;;;-1:-1:-1;3141:8:14;-1:-1:-1;;;;2524:658:14:o;3187:668::-;;;;;3368:2;3356:9;3347:7;3343:23;3339:32;3336:2;;;3389:6;3381;3374:22;3336:2;3434:9;3421:23;3467:18;3459:6;3456:30;3453:2;;;3504:6;3496;3489:22;3453:2;3548:76;3616:7;3607:6;3596:9;3592:22;3548:76;:::i;:::-;3643:8;;-1:-1:-1;3522:102:14;-1:-1:-1;;3725:2:14;3710:18;;3697:32;;-1:-1:-1;3779:2:14;3764:18;;3751:32;3792:33;3751:32;3792:33;:::i;:::-;3326:529;;;;-1:-1:-1;3326:529:14;;-1:-1:-1;;3326:529:14:o;3860:812::-;;;;;;4058:3;4046:9;4037:7;4033:23;4029:33;4026:2;;;4080:6;4072;4065:22;4026:2;4125:9;4112:23;4158:18;4150:6;4147:30;4144:2;;;4195:6;4187;4180:22;4144:2;4239:76;4307:7;4298:6;4287:9;4283:22;4239:76;:::i;:::-;4334:8;;-1:-1:-1;4213:102:14;-1:-1:-1;;4416:2:14;4401:18;;4388:32;;-1:-1:-1;4470:2:14;4455:18;;4442:32;4483:33;4442:32;4483:33;:::i;:::-;4535:5;-1:-1:-1;4592:2:14;4577:18;;4564:32;4605:35;4564:32;4605:35;:::i;:::-;4659:7;4649:17;;;4016:656;;;;;;;;:::o;4677:190::-;;4789:2;4777:9;4768:7;4764:23;4760:32;4757:2;;;4810:6;4802;4795:22;4757:2;-1:-1:-1;4838:23:14;;4747:120;-1:-1:-1;4747:120:14:o;4872:194::-;;4995:2;4983:9;4974:7;4970:23;4966:32;4963:2;;;5016:6;5008;5001:22;4963:2;-1:-1:-1;5044:16:14;;4953:113;-1:-1:-1;4953:113:14:o;5071:255::-;;;5211:2;5199:9;5190:7;5186:23;5182:32;5179:2;;;5232:6;5224;5217:22;5179:2;-1:-1:-1;;5260:16:14;;5316:2;5301:18;;;5295:25;5260:16;;5295:25;;-1:-1:-1;5169:157:14:o;5331:203::-;-1:-1:-1;;;;;5495:32:14;;;;5477:51;;5465:2;5450:18;;5432:102::o;5539:274::-;-1:-1:-1;;;;;5731:32:14;;;;5713:51;;5795:2;5780:18;;5773:34;5701:2;5686:18;;5668:145::o;6057:344::-;6259:2;6241:21;;;6298:2;6278:18;;;6271:30;-1:-1:-1;;;6332:2:14;6317:18;;6310:50;6392:2;6377:18;;6231:170::o;6406:342::-;6608:2;6590:21;;;6647:2;6627:18;;;6620:30;-1:-1:-1;;;6681:2:14;6666:18;;6659:48;6739:2;6724:18;;6580:168::o;6753:345::-;6955:2;6937:21;;;6994:2;6974:18;;;6967:30;-1:-1:-1;;;7028:2:14;7013:18;;7006:51;7089:2;7074:18;;6927:171::o;7103:338::-;7305:2;7287:21;;;7344:2;7324:18;;;7317:30;-1:-1:-1;;;7378:2:14;7363:18;;7356:44;7432:2;7417:18;;7277:164::o;7446:345::-;7648:2;7630:21;;;7687:2;7667:18;;;7660:30;-1:-1:-1;;;7721:2:14;7706:18;;7699:51;7782:2;7767:18;;7620:171::o;7796:344::-;7998:2;7980:21;;;8037:2;8017:18;;;8010:30;-1:-1:-1;;;8071:2:14;8056:18;;8049:50;8131:2;8116:18;;7970:170::o;8145:212::-;-1:-1:-1;;;;;8309:41:14;;;;8291:60;;8279:2;8264:18;;8246:111::o;8362:401::-;-1:-1:-1;;;;;8627:15:14;;;8609:34;;8679:15;;;;8674:2;8659:18;;8652:43;8743:12;8731:25;;;8726:2;8711:18;;8704:53;8550:2;8535:18;;8517:246::o;8768:177::-;8914:25;;;8902:2;8887:18;;8869:76::o;8950:319::-;9152:25;;;9208:2;9193:18;;9186:34;;;;9251:2;9236:18;;9229:34;9140:2;9125:18;;9107:162::o;9274:184::-;9446:4;9434:17;;;;9416:36;;9404:2;9389:18;;9371:87::o;9463:133::-;-1:-1:-1;;;;;9540:31:14;;9530:42;;9520:2;;9586:1;9583;9576:12;9520:2;9510:86;:::o","generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9598:14","statements":[{"nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nodeType":"YulBlock","src":"104:314:14","statements":[{"body":{"nodeType":"YulBlock","src":"153:30:14","statements":[{"expression":{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"162:8:14"},{"name":"arrayPos","nodeType":"YulIdentifier","src":"172:8:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"155:6:14"},"nodeType":"YulFunctionCall","src":"155:26:14"},"nodeType":"YulExpressionStatement","src":"155:26:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"132:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"140:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"128:3:14"},"nodeType":"YulFunctionCall","src":"128:17:14"},{"name":"end","nodeType":"YulIdentifier","src":"147:3:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"124:3:14"},"nodeType":"YulFunctionCall","src":"124:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"117:6:14"},"nodeType":"YulFunctionCall","src":"117:35:14"},"nodeType":"YulIf","src":"114:2:14"},{"nodeType":"YulAssignment","src":"192:30:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"215:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"202:12:14"},"nodeType":"YulFunctionCall","src":"202:20:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"192:6:14"}]},{"body":{"nodeType":"YulBlock","src":"265:30:14","statements":[{"expression":{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"274:8:14"},{"name":"arrayPos","nodeType":"YulIdentifier","src":"284:8:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"267:6:14"},"nodeType":"YulFunctionCall","src":"267:26:14"},"nodeType":"YulExpressionStatement","src":"267:26:14"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"237:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"245:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"234:2:14"},"nodeType":"YulFunctionCall","src":"234:30:14"},"nodeType":"YulIf","src":"231:2:14"},{"nodeType":"YulAssignment","src":"304:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"320:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"328:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"316:3:14"},"nodeType":"YulFunctionCall","src":"316:17:14"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"304:8:14"}]},{"body":{"nodeType":"YulBlock","src":"396:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"405:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"408:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"398:6:14"},"nodeType":"YulFunctionCall","src":"398:12:14"},"nodeType":"YulExpressionStatement","src":"398:12:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"356:6:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"368:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"376:4:14","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"364:3:14"},"nodeType":"YulFunctionCall","src":"364:17:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"352:3:14"},"nodeType":"YulFunctionCall","src":"352:30:14"},{"kind":"number","nodeType":"YulLiteral","src":"384:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"348:3:14"},"nodeType":"YulFunctionCall","src":"348:41:14"},{"name":"end","nodeType":"YulIdentifier","src":"391:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"345:2:14"},"nodeType":"YulFunctionCall","src":"345:50:14"},"nodeType":"YulIf","src":"342:2:14"}]},"name":"abi_decode_t_array$_t_address_$dyn_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"67:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"75:3:14","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"83:8:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"93:6:14","type":""}],"src":"14:404:14"},{"body":{"nodeType":"YulBlock","src":"493:189:14","statements":[{"body":{"nodeType":"YulBlock","src":"539:26:14","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"548:6:14"},{"name":"value0","nodeType":"YulIdentifier","src":"556:6:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"541:6:14"},"nodeType":"YulFunctionCall","src":"541:22:14"},"nodeType":"YulExpressionStatement","src":"541:22:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"514:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"523:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"510:3:14"},"nodeType":"YulFunctionCall","src":"510:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"535:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"506:3:14"},"nodeType":"YulFunctionCall","src":"506:32:14"},"nodeType":"YulIf","src":"503:2:14"},{"nodeType":"YulVariableDeclaration","src":"574:36:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"600:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"587:12:14"},"nodeType":"YulFunctionCall","src":"587:23:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"578:5:14","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"646:5:14"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"619:26:14"},"nodeType":"YulFunctionCall","src":"619:33:14"},"nodeType":"YulExpressionStatement","src":"619:33:14"},{"nodeType":"YulAssignment","src":"661:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"671:5:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"661:6:14"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"459:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"470:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"482:6:14","type":""}],"src":"423:259:14"},{"body":{"nodeType":"YulBlock","src":"768:182:14","statements":[{"body":{"nodeType":"YulBlock","src":"814:26:14","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"823:6:14"},{"name":"value0","nodeType":"YulIdentifier","src":"831:6:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"816:6:14"},"nodeType":"YulFunctionCall","src":"816:22:14"},"nodeType":"YulExpressionStatement","src":"816:22:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"789:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"798:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"785:3:14"},"nodeType":"YulFunctionCall","src":"785:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"810:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"781:3:14"},"nodeType":"YulFunctionCall","src":"781:32:14"},"nodeType":"YulIf","src":"778:2:14"},{"nodeType":"YulVariableDeclaration","src":"849:29:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"868:9:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"862:5:14"},"nodeType":"YulFunctionCall","src":"862:16:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"853:5:14","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"914:5:14"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"887:26:14"},"nodeType":"YulFunctionCall","src":"887:33:14"},"nodeType":"YulExpressionStatement","src":"887:33:14"},{"nodeType":"YulAssignment","src":"929:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"939:5:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"929:6:14"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"734:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"745:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"757:6:14","type":""}],"src":"687:263:14"},{"body":{"nodeType":"YulBlock","src":"1042:315:14","statements":[{"body":{"nodeType":"YulBlock","src":"1088:26:14","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1097:6:14"},{"name":"value1","nodeType":"YulIdentifier","src":"1105:6:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1090:6:14"},"nodeType":"YulFunctionCall","src":"1090:22:14"},"nodeType":"YulExpressionStatement","src":"1090:22:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1063:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1072:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1059:3:14"},"nodeType":"YulFunctionCall","src":"1059:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1084:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1055:3:14"},"nodeType":"YulFunctionCall","src":"1055:32:14"},"nodeType":"YulIf","src":"1052:2:14"},{"nodeType":"YulVariableDeclaration","src":"1123:36:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1149:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1136:12:14"},"nodeType":"YulFunctionCall","src":"1136:23:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1127:5:14","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1195:5:14"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1168:26:14"},"nodeType":"YulFunctionCall","src":"1168:33:14"},"nodeType":"YulExpressionStatement","src":"1168:33:14"},{"nodeType":"YulAssignment","src":"1210:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"1220:5:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1210:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"1234:47:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1266:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1277:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1262:3:14"},"nodeType":"YulFunctionCall","src":"1262:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1249:12:14"},"nodeType":"YulFunctionCall","src":"1249:32:14"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"1238:7:14","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"1317:7:14"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1290:26:14"},"nodeType":"YulFunctionCall","src":"1290:35:14"},"nodeType":"YulExpressionStatement","src":"1290:35:14"},{"nodeType":"YulAssignment","src":"1334:17:14","value":{"name":"value_1","nodeType":"YulIdentifier","src":"1344:7:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1334:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1000:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1011:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1023:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1031:6:14","type":""}],"src":"955:402:14"},{"body":{"nodeType":"YulBlock","src":"1466:291:14","statements":[{"body":{"nodeType":"YulBlock","src":"1512:26:14","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"1521:6:14"},{"name":"value2","nodeType":"YulIdentifier","src":"1529:6:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1514:6:14"},"nodeType":"YulFunctionCall","src":"1514:22:14"},"nodeType":"YulExpressionStatement","src":"1514:22:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1487:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1496:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1483:3:14"},"nodeType":"YulFunctionCall","src":"1483:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1508:2:14","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1479:3:14"},"nodeType":"YulFunctionCall","src":"1479:32:14"},"nodeType":"YulIf","src":"1476:2:14"},{"nodeType":"YulVariableDeclaration","src":"1547:36:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1573:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1560:12:14"},"nodeType":"YulFunctionCall","src":"1560:23:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1551:5:14","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1619:5:14"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1592:26:14"},"nodeType":"YulFunctionCall","src":"1592:33:14"},"nodeType":"YulExpressionStatement","src":"1592:33:14"},{"nodeType":"YulAssignment","src":"1634:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"1644:5:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1634:6:14"}]},{"nodeType":"YulAssignment","src":"1658:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1685:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1696:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1681:3:14"},"nodeType":"YulFunctionCall","src":"1681:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1668:12:14"},"nodeType":"YulFunctionCall","src":"1668:32:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1658:6:14"}]},{"nodeType":"YulAssignment","src":"1709:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1736:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1747:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1732:3:14"},"nodeType":"YulFunctionCall","src":"1732:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1719:12:14"},"nodeType":"YulFunctionCall","src":"1719:32:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1709:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1416:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1427:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1439:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1447:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1455:6:14","type":""}],"src":"1362:395:14"},{"body":{"nodeType":"YulBlock","src":"1884:478:14","statements":[{"body":{"nodeType":"YulBlock","src":"1930:26:14","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1939:6:14"},{"name":"value0","nodeType":"YulIdentifier","src":"1947:6:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1932:6:14"},"nodeType":"YulFunctionCall","src":"1932:22:14"},"nodeType":"YulExpressionStatement","src":"1932:22:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1905:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1914:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1901:3:14"},"nodeType":"YulFunctionCall","src":"1901:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1926:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1897:3:14"},"nodeType":"YulFunctionCall","src":"1897:32:14"},"nodeType":"YulIf","src":"1894:2:14"},{"nodeType":"YulVariableDeclaration","src":"1965:37:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1992:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1979:12:14"},"nodeType":"YulFunctionCall","src":"1979:23:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1969:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"2045:26:14","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2054:6:14"},{"name":"value0","nodeType":"YulIdentifier","src":"2062:6:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2047:6:14"},"nodeType":"YulFunctionCall","src":"2047:22:14"},"nodeType":"YulExpressionStatement","src":"2047:22:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2017:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2025:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2014:2:14"},"nodeType":"YulFunctionCall","src":"2014:30:14"},"nodeType":"YulIf","src":"2011:2:14"},{"nodeType":"YulVariableDeclaration","src":"2080:102:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2154:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2165:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2150:3:14"},"nodeType":"YulFunctionCall","src":"2150:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2174:7:14"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_calldata","nodeType":"YulIdentifier","src":"2106:43:14"},"nodeType":"YulFunctionCall","src":"2106:76:14"},"variables":[{"name":"value0_1","nodeType":"YulTypedName","src":"2084:8:14","type":""},{"name":"value1_1","nodeType":"YulTypedName","src":"2094:8:14","type":""}]},{"nodeType":"YulAssignment","src":"2191:18:14","value":{"name":"value0_1","nodeType":"YulIdentifier","src":"2201:8:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2191:6:14"}]},{"nodeType":"YulAssignment","src":"2218:18:14","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"2228:8:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2218:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"2245:45:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2275:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2286:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2271:3:14"},"nodeType":"YulFunctionCall","src":"2271:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2258:12:14"},"nodeType":"YulFunctionCall","src":"2258:32:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2249:5:14","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2326:5:14"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2299:26:14"},"nodeType":"YulFunctionCall","src":"2299:33:14"},"nodeType":"YulExpressionStatement","src":"2299:33:14"},{"nodeType":"YulAssignment","src":"2341:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"2351:5:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2341:6:14"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1834:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1845:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1857:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1865:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1873:6:14","type":""}],"src":"1762:600:14"},{"body":{"nodeType":"YulBlock","src":"2524:658:14","statements":[{"body":{"nodeType":"YulBlock","src":"2570:26:14","statements":[{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"2579:6:14"},{"name":"value3","nodeType":"YulIdentifier","src":"2587:6:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2572:6:14"},"nodeType":"YulFunctionCall","src":"2572:22:14"},"nodeType":"YulExpressionStatement","src":"2572:22:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2545:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2554:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2541:3:14"},"nodeType":"YulFunctionCall","src":"2541:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2566:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2537:3:14"},"nodeType":"YulFunctionCall","src":"2537:32:14"},"nodeType":"YulIf","src":"2534:2:14"},{"nodeType":"YulVariableDeclaration","src":"2605:37:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2632:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2619:12:14"},"nodeType":"YulFunctionCall","src":"2619:23:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2609:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2651:28:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2661:18:14","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2655:2:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"2706:26:14","statements":[{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"2715:6:14"},{"name":"value3","nodeType":"YulIdentifier","src":"2723:6:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2708:6:14"},"nodeType":"YulFunctionCall","src":"2708:22:14"},"nodeType":"YulExpressionStatement","src":"2708:22:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2694:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"2702:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2691:2:14"},"nodeType":"YulFunctionCall","src":"2691:14:14"},"nodeType":"YulIf","src":"2688:2:14"},{"nodeType":"YulVariableDeclaration","src":"2741:102:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2815:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2826:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2811:3:14"},"nodeType":"YulFunctionCall","src":"2811:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2835:7:14"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_calldata","nodeType":"YulIdentifier","src":"2767:43:14"},"nodeType":"YulFunctionCall","src":"2767:76:14"},"variables":[{"name":"value0_1","nodeType":"YulTypedName","src":"2745:8:14","type":""},{"name":"value1_1","nodeType":"YulTypedName","src":"2755:8:14","type":""}]},{"nodeType":"YulAssignment","src":"2852:18:14","value":{"name":"value0_1","nodeType":"YulIdentifier","src":"2862:8:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2852:6:14"}]},{"nodeType":"YulAssignment","src":"2879:18:14","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"2889:8:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2879:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"2906:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2939:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2950:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2935:3:14"},"nodeType":"YulFunctionCall","src":"2935:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2922:12:14"},"nodeType":"YulFunctionCall","src":"2922:32:14"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"2910:8:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"2983:26:14","statements":[{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"2992:6:14"},{"name":"value3","nodeType":"YulIdentifier","src":"3000:6:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2985:6:14"},"nodeType":"YulFunctionCall","src":"2985:22:14"},"nodeType":"YulExpressionStatement","src":"2985:22:14"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"2969:8:14"},{"name":"_1","nodeType":"YulIdentifier","src":"2979:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2966:2:14"},"nodeType":"YulFunctionCall","src":"2966:16:14"},"nodeType":"YulIf","src":"2963:2:14"},{"nodeType":"YulVariableDeclaration","src":"3018:104:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3092:9:14"},{"name":"offset_1","nodeType":"YulIdentifier","src":"3103:8:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3088:3:14"},"nodeType":"YulFunctionCall","src":"3088:24:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3114:7:14"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_calldata","nodeType":"YulIdentifier","src":"3044:43:14"},"nodeType":"YulFunctionCall","src":"3044:78:14"},"variables":[{"name":"value2_1","nodeType":"YulTypedName","src":"3022:8:14","type":""},{"name":"value3_1","nodeType":"YulTypedName","src":"3032:8:14","type":""}]},{"nodeType":"YulAssignment","src":"3131:18:14","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"3141:8:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3131:6:14"}]},{"nodeType":"YulAssignment","src":"3158:18:14","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"3168:8:14"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3158:6:14"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2466:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2477:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2489:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2497:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2505:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2513:6:14","type":""}],"src":"2367:815:14"},{"body":{"nodeType":"YulBlock","src":"3326:529:14","statements":[{"body":{"nodeType":"YulBlock","src":"3372:26:14","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3381:6:14"},{"name":"value0","nodeType":"YulIdentifier","src":"3389:6:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3374:6:14"},"nodeType":"YulFunctionCall","src":"3374:22:14"},"nodeType":"YulExpressionStatement","src":"3374:22:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3347:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"3356:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3343:3:14"},"nodeType":"YulFunctionCall","src":"3343:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"3368:2:14","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3339:3:14"},"nodeType":"YulFunctionCall","src":"3339:32:14"},"nodeType":"YulIf","src":"3336:2:14"},{"nodeType":"YulVariableDeclaration","src":"3407:37:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3434:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3421:12:14"},"nodeType":"YulFunctionCall","src":"3421:23:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3411:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3487:26:14","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3496:6:14"},{"name":"value0","nodeType":"YulIdentifier","src":"3504:6:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3489:6:14"},"nodeType":"YulFunctionCall","src":"3489:22:14"},"nodeType":"YulExpressionStatement","src":"3489:22:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3459:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"3467:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3456:2:14"},"nodeType":"YulFunctionCall","src":"3456:30:14"},"nodeType":"YulIf","src":"3453:2:14"},{"nodeType":"YulVariableDeclaration","src":"3522:102:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3596:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3607:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3592:3:14"},"nodeType":"YulFunctionCall","src":"3592:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3616:7:14"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_calldata","nodeType":"YulIdentifier","src":"3548:43:14"},"nodeType":"YulFunctionCall","src":"3548:76:14"},"variables":[{"name":"value0_1","nodeType":"YulTypedName","src":"3526:8:14","type":""},{"name":"value1_1","nodeType":"YulTypedName","src":"3536:8:14","type":""}]},{"nodeType":"YulAssignment","src":"3633:18:14","value":{"name":"value0_1","nodeType":"YulIdentifier","src":"3643:8:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3633:6:14"}]},{"nodeType":"YulAssignment","src":"3660:18:14","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"3670:8:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3660:6:14"}]},{"nodeType":"YulAssignment","src":"3687:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3714:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3725:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3710:3:14"},"nodeType":"YulFunctionCall","src":"3710:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3697:12:14"},"nodeType":"YulFunctionCall","src":"3697:32:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3687:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"3738:45:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3768:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3779:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3764:3:14"},"nodeType":"YulFunctionCall","src":"3764:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3751:12:14"},"nodeType":"YulFunctionCall","src":"3751:32:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3742:5:14","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3819:5:14"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3792:26:14"},"nodeType":"YulFunctionCall","src":"3792:33:14"},"nodeType":"YulExpressionStatement","src":"3792:33:14"},{"nodeType":"YulAssignment","src":"3834:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"3844:5:14"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3834:6:14"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3268:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3279:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3291:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3299:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3307:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3315:6:14","type":""}],"src":"3187:668:14"},{"body":{"nodeType":"YulBlock","src":"4016:656:14","statements":[{"body":{"nodeType":"YulBlock","src":"4063:26:14","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"4072:6:14"},{"name":"value4","nodeType":"YulIdentifier","src":"4080:6:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4065:6:14"},"nodeType":"YulFunctionCall","src":"4065:22:14"},"nodeType":"YulExpressionStatement","src":"4065:22:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4037:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"4046:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4033:3:14"},"nodeType":"YulFunctionCall","src":"4033:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"4058:3:14","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4029:3:14"},"nodeType":"YulFunctionCall","src":"4029:33:14"},"nodeType":"YulIf","src":"4026:2:14"},{"nodeType":"YulVariableDeclaration","src":"4098:37:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4125:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4112:12:14"},"nodeType":"YulFunctionCall","src":"4112:23:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4102:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"4178:26:14","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"4187:6:14"},{"name":"value4","nodeType":"YulIdentifier","src":"4195:6:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4180:6:14"},"nodeType":"YulFunctionCall","src":"4180:22:14"},"nodeType":"YulExpressionStatement","src":"4180:22:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4150:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"4158:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4147:2:14"},"nodeType":"YulFunctionCall","src":"4147:30:14"},"nodeType":"YulIf","src":"4144:2:14"},{"nodeType":"YulVariableDeclaration","src":"4213:102:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4287:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4298:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4283:3:14"},"nodeType":"YulFunctionCall","src":"4283:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4307:7:14"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_calldata","nodeType":"YulIdentifier","src":"4239:43:14"},"nodeType":"YulFunctionCall","src":"4239:76:14"},"variables":[{"name":"value0_1","nodeType":"YulTypedName","src":"4217:8:14","type":""},{"name":"value1_1","nodeType":"YulTypedName","src":"4227:8:14","type":""}]},{"nodeType":"YulAssignment","src":"4324:18:14","value":{"name":"value0_1","nodeType":"YulIdentifier","src":"4334:8:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4324:6:14"}]},{"nodeType":"YulAssignment","src":"4351:18:14","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"4361:8:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4351:6:14"}]},{"nodeType":"YulAssignment","src":"4378:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4405:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4416:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4401:3:14"},"nodeType":"YulFunctionCall","src":"4401:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4388:12:14"},"nodeType":"YulFunctionCall","src":"4388:32:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4378:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"4429:45:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4459:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4470:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4455:3:14"},"nodeType":"YulFunctionCall","src":"4455:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4442:12:14"},"nodeType":"YulFunctionCall","src":"4442:32:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4433:5:14","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4510:5:14"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4483:26:14"},"nodeType":"YulFunctionCall","src":"4483:33:14"},"nodeType":"YulExpressionStatement","src":"4483:33:14"},{"nodeType":"YulAssignment","src":"4525:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"4535:5:14"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4525:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"4549:47:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4581:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4592:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4577:3:14"},"nodeType":"YulFunctionCall","src":"4577:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4564:12:14"},"nodeType":"YulFunctionCall","src":"4564:32:14"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"4553:7:14","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"4632:7:14"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4605:26:14"},"nodeType":"YulFunctionCall","src":"4605:35:14"},"nodeType":"YulExpressionStatement","src":"4605:35:14"},{"nodeType":"YulAssignment","src":"4649:17:14","value":{"name":"value_1","nodeType":"YulIdentifier","src":"4659:7:14"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4649:6:14"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_uint256t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3950:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3961:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3973:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3981:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3989:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3997:6:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4005:6:14","type":""}],"src":"3860:812:14"},{"body":{"nodeType":"YulBlock","src":"4747:120:14","statements":[{"body":{"nodeType":"YulBlock","src":"4793:26:14","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4802:6:14"},{"name":"value0","nodeType":"YulIdentifier","src":"4810:6:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4795:6:14"},"nodeType":"YulFunctionCall","src":"4795:22:14"},"nodeType":"YulExpressionStatement","src":"4795:22:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4768:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"4777:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4764:3:14"},"nodeType":"YulFunctionCall","src":"4764:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"4789:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4760:3:14"},"nodeType":"YulFunctionCall","src":"4760:32:14"},"nodeType":"YulIf","src":"4757:2:14"},{"nodeType":"YulAssignment","src":"4828:33:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4851:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4838:12:14"},"nodeType":"YulFunctionCall","src":"4838:23:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4828:6:14"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4713:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4724:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4736:6:14","type":""}],"src":"4677:190:14"},{"body":{"nodeType":"YulBlock","src":"4953:113:14","statements":[{"body":{"nodeType":"YulBlock","src":"4999:26:14","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5008:6:14"},{"name":"value0","nodeType":"YulIdentifier","src":"5016:6:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5001:6:14"},"nodeType":"YulFunctionCall","src":"5001:22:14"},"nodeType":"YulExpressionStatement","src":"5001:22:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4974:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"4983:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4970:3:14"},"nodeType":"YulFunctionCall","src":"4970:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"4995:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4966:3:14"},"nodeType":"YulFunctionCall","src":"4966:32:14"},"nodeType":"YulIf","src":"4963:2:14"},{"nodeType":"YulAssignment","src":"5034:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5050:9:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5044:5:14"},"nodeType":"YulFunctionCall","src":"5044:16:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5034:6:14"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4919:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4930:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4942:6:14","type":""}],"src":"4872:194:14"},{"body":{"nodeType":"YulBlock","src":"5169:157:14","statements":[{"body":{"nodeType":"YulBlock","src":"5215:26:14","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5224:6:14"},{"name":"value0","nodeType":"YulIdentifier","src":"5232:6:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5217:6:14"},"nodeType":"YulFunctionCall","src":"5217:22:14"},"nodeType":"YulExpressionStatement","src":"5217:22:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5190:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"5199:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5186:3:14"},"nodeType":"YulFunctionCall","src":"5186:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"5211:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5182:3:14"},"nodeType":"YulFunctionCall","src":"5182:32:14"},"nodeType":"YulIf","src":"5179:2:14"},{"nodeType":"YulAssignment","src":"5250:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5266:9:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5260:5:14"},"nodeType":"YulFunctionCall","src":"5260:16:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5250:6:14"}]},{"nodeType":"YulAssignment","src":"5285:35:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5305:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5316:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5301:3:14"},"nodeType":"YulFunctionCall","src":"5301:18:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5295:5:14"},"nodeType":"YulFunctionCall","src":"5295:25:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5285:6:14"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5127:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5138:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5150:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5158:6:14","type":""}],"src":"5071:255:14"},{"body":{"nodeType":"YulBlock","src":"5432:102:14","statements":[{"nodeType":"YulAssignment","src":"5442:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5454:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5465:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5450:3:14"},"nodeType":"YulFunctionCall","src":"5450:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5442:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5484:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5499:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5515:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5520:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5511:3:14"},"nodeType":"YulFunctionCall","src":"5511:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"5524:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5507:3:14"},"nodeType":"YulFunctionCall","src":"5507:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5495:3:14"},"nodeType":"YulFunctionCall","src":"5495:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5477:6:14"},"nodeType":"YulFunctionCall","src":"5477:51:14"},"nodeType":"YulExpressionStatement","src":"5477:51:14"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5401:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5412:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5423:4:14","type":""}],"src":"5331:203:14"},{"body":{"nodeType":"YulBlock","src":"5668:145:14","statements":[{"nodeType":"YulAssignment","src":"5678:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5690:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5701:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5686:3:14"},"nodeType":"YulFunctionCall","src":"5686:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5678:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5720:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5735:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5751:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5756:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5747:3:14"},"nodeType":"YulFunctionCall","src":"5747:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"5760:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5743:3:14"},"nodeType":"YulFunctionCall","src":"5743:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5731:3:14"},"nodeType":"YulFunctionCall","src":"5731:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5713:6:14"},"nodeType":"YulFunctionCall","src":"5713:51:14"},"nodeType":"YulExpressionStatement","src":"5713:51:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5784:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5795:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5780:3:14"},"nodeType":"YulFunctionCall","src":"5780:18:14"},{"name":"value1","nodeType":"YulIdentifier","src":"5800:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5773:6:14"},"nodeType":"YulFunctionCall","src":"5773:34:14"},"nodeType":"YulExpressionStatement","src":"5773:34:14"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5629:9:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5640:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5648:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5659:4:14","type":""}],"src":"5539:274:14"},{"body":{"nodeType":"YulBlock","src":"5950:102:14","statements":[{"nodeType":"YulAssignment","src":"5960:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5972:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5983:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5968:3:14"},"nodeType":"YulFunctionCall","src":"5968:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5960:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6002:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6017:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6033:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6038:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6029:3:14"},"nodeType":"YulFunctionCall","src":"6029:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"6042:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6025:3:14"},"nodeType":"YulFunctionCall","src":"6025:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6013:3:14"},"nodeType":"YulFunctionCall","src":"6013:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5995:6:14"},"nodeType":"YulFunctionCall","src":"5995:51:14"},"nodeType":"YulExpressionStatement","src":"5995:51:14"}]},"name":"abi_encode_tuple_t_contract$_IStakedTokenWithConfig_$2033__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5919:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5930:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5941:4:14","type":""}],"src":"5818:234:14"},{"body":{"nodeType":"YulBlock","src":"6231:170:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6248:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6259:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6241:6:14"},"nodeType":"YulFunctionCall","src":"6241:21:14"},"nodeType":"YulExpressionStatement","src":"6241:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6282:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6293:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6278:3:14"},"nodeType":"YulFunctionCall","src":"6278:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"6298:2:14","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6271:6:14"},"nodeType":"YulFunctionCall","src":"6271:30:14"},"nodeType":"YulExpressionStatement","src":"6271:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6321:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6332:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6317:3:14"},"nodeType":"YulFunctionCall","src":"6317:18:14"},{"kind":"string","nodeType":"YulLiteral","src":"6337:22:14","type":"","value":"INVALID_USER_ADDRESS"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6310:6:14"},"nodeType":"YulFunctionCall","src":"6310:50:14"},"nodeType":"YulExpressionStatement","src":"6310:50:14"},{"nodeType":"YulAssignment","src":"6369:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6381:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6392:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6377:3:14"},"nodeType":"YulFunctionCall","src":"6377:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6369:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_4058a4fa702d397682b400d1a2d7894f822738ac481455440aeb37a04a780eca__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6208:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6222:4:14","type":""}],"src":"6057:344:14"},{"body":{"nodeType":"YulBlock","src":"6580:168:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6597:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6608:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6590:6:14"},"nodeType":"YulFunctionCall","src":"6590:21:14"},"nodeType":"YulExpressionStatement","src":"6590:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6631:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6642:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6627:3:14"},"nodeType":"YulFunctionCall","src":"6627:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"6647:2:14","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6620:6:14"},"nodeType":"YulFunctionCall","src":"6620:30:14"},"nodeType":"YulExpressionStatement","src":"6620:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6670:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6681:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6666:3:14"},"nodeType":"YulFunctionCall","src":"6666:18:14"},{"kind":"string","nodeType":"YulLiteral","src":"6686:20:14","type":"","value":"INVALID_TO_ADDRESS"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6659:6:14"},"nodeType":"YulFunctionCall","src":"6659:48:14"},"nodeType":"YulExpressionStatement","src":"6659:48:14"},{"nodeType":"YulAssignment","src":"6716:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6728:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6739:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6724:3:14"},"nodeType":"YulFunctionCall","src":"6724:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6716:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_60a6ecd9d15a2e4ae360b5943de5e7d94204c8fa7a9b93d3208a26418697ceb3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6557:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6571:4:14","type":""}],"src":"6406:342:14"},{"body":{"nodeType":"YulBlock","src":"6927:171:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6944:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6955:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6937:6:14"},"nodeType":"YulFunctionCall","src":"6937:21:14"},"nodeType":"YulExpressionStatement","src":"6937:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6978:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6989:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6974:3:14"},"nodeType":"YulFunctionCall","src":"6974:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"6994:2:14","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6967:6:14"},"nodeType":"YulFunctionCall","src":"6967:30:14"},"nodeType":"YulExpressionStatement","src":"6967:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7017:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7028:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7013:3:14"},"nodeType":"YulFunctionCall","src":"7013:18:14"},{"kind":"string","nodeType":"YulLiteral","src":"7033:23:14","type":"","value":"INVALID_CONFIGURATION"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7006:6:14"},"nodeType":"YulFunctionCall","src":"7006:51:14"},"nodeType":"YulExpressionStatement","src":"7006:51:14"},{"nodeType":"YulAssignment","src":"7066:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7078:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7089:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7074:3:14"},"nodeType":"YulFunctionCall","src":"7074:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7066:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_6959a97277e640037a0b87fbc8f4c35f54cb176c97a67a1f1334c0edec62895f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6904:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6918:4:14","type":""}],"src":"6753:345:14"},{"body":{"nodeType":"YulBlock","src":"7277:164:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7294:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7305:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7287:6:14"},"nodeType":"YulFunctionCall","src":"7287:21:14"},"nodeType":"YulExpressionStatement","src":"7287:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7328:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7339:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7324:3:14"},"nodeType":"YulFunctionCall","src":"7324:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"7344:2:14","type":"","value":"14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7317:6:14"},"nodeType":"YulFunctionCall","src":"7317:30:14"},"nodeType":"YulExpressionStatement","src":"7317:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7367:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7378:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7363:3:14"},"nodeType":"YulFunctionCall","src":"7363:18:14"},{"kind":"string","nodeType":"YulLiteral","src":"7383:16:14","type":"","value":"Index overflow"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7356:6:14"},"nodeType":"YulFunctionCall","src":"7356:44:14"},"nodeType":"YulExpressionStatement","src":"7356:44:14"},{"nodeType":"YulAssignment","src":"7409:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7421:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7432:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7417:3:14"},"nodeType":"YulFunctionCall","src":"7417:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7409:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_88066702ff2a817045c06422ff60e138f1b9ed6ff5eae8db2038ccb44cf1a522__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7254:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7268:4:14","type":""}],"src":"7103:338:14"},{"body":{"nodeType":"YulBlock","src":"7620:171:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7637:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7648:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7630:6:14"},"nodeType":"YulFunctionCall","src":"7630:21:14"},"nodeType":"YulExpressionStatement","src":"7630:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7671:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7682:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7667:3:14"},"nodeType":"YulFunctionCall","src":"7667:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"7687:2:14","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7660:6:14"},"nodeType":"YulFunctionCall","src":"7660:30:14"},"nodeType":"YulExpressionStatement","src":"7660:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7710:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7721:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7706:3:14"},"nodeType":"YulFunctionCall","src":"7706:18:14"},{"kind":"string","nodeType":"YulLiteral","src":"7726:23:14","type":"","value":"ONLY_EMISSION_MANAGER"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7699:6:14"},"nodeType":"YulFunctionCall","src":"7699:51:14"},"nodeType":"YulExpressionStatement","src":"7699:51:14"},{"nodeType":"YulAssignment","src":"7759:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7771:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7782:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7767:3:14"},"nodeType":"YulFunctionCall","src":"7767:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7759:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7597:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7611:4:14","type":""}],"src":"7446:345:14"},{"body":{"nodeType":"YulBlock","src":"7970:170:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7987:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7998:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7980:6:14"},"nodeType":"YulFunctionCall","src":"7980:21:14"},"nodeType":"YulExpressionStatement","src":"7980:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8021:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8032:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8017:3:14"},"nodeType":"YulFunctionCall","src":"8017:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"8037:2:14","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8010:6:14"},"nodeType":"YulFunctionCall","src":"8010:30:14"},"nodeType":"YulExpressionStatement","src":"8010:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8060:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8071:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8056:3:14"},"nodeType":"YulFunctionCall","src":"8056:18:14"},{"kind":"string","nodeType":"YulLiteral","src":"8076:22:14","type":"","value":"CLAIMER_UNAUTHORIZED"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8049:6:14"},"nodeType":"YulFunctionCall","src":"8049:50:14"},"nodeType":"YulExpressionStatement","src":"8049:50:14"},{"nodeType":"YulAssignment","src":"8108:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8120:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8131:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8116:3:14"},"nodeType":"YulFunctionCall","src":"8116:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8108:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_dc389f9f05ed02e337a2af628240d9d635867491305ed504870102f5e0924c61__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7947:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7961:4:14","type":""}],"src":"7796:344:14"},{"body":{"nodeType":"YulBlock","src":"8246:111:14","statements":[{"nodeType":"YulAssignment","src":"8256:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8268:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8279:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8264:3:14"},"nodeType":"YulFunctionCall","src":"8264:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8256:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8298:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8313:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"8321:28:14","type":"","value":"0xffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8309:3:14"},"nodeType":"YulFunctionCall","src":"8309:41:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8291:6:14"},"nodeType":"YulFunctionCall","src":"8291:60:14"},"nodeType":"YulExpressionStatement","src":"8291:60:14"}]},"name":"abi_encode_tuple_t_uint104__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8215:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8226:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8237:4:14","type":""}],"src":"8145:212:14"},{"body":{"nodeType":"YulBlock","src":"8517:246:14","statements":[{"nodeType":"YulAssignment","src":"8527:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8539:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8550:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8535:3:14"},"nodeType":"YulFunctionCall","src":"8535:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8527:4:14"}]},{"nodeType":"YulVariableDeclaration","src":"8562:38:14","value":{"kind":"number","nodeType":"YulLiteral","src":"8572:28:14","type":"","value":"0xffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8566:2:14","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8616:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8631:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"8639:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8627:3:14"},"nodeType":"YulFunctionCall","src":"8627:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8609:6:14"},"nodeType":"YulFunctionCall","src":"8609:34:14"},"nodeType":"YulExpressionStatement","src":"8609:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8663:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8674:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8659:3:14"},"nodeType":"YulFunctionCall","src":"8659:18:14"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8683:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"8691:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8679:3:14"},"nodeType":"YulFunctionCall","src":"8679:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8652:6:14"},"nodeType":"YulFunctionCall","src":"8652:43:14"},"nodeType":"YulExpressionStatement","src":"8652:43:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8715:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8726:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8711:3:14"},"nodeType":"YulFunctionCall","src":"8711:18:14"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"8735:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"8743:12:14","type":"","value":"0xffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8731:3:14"},"nodeType":"YulFunctionCall","src":"8731:25:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8704:6:14"},"nodeType":"YulFunctionCall","src":"8704:53:14"},"nodeType":"YulExpressionStatement","src":"8704:53:14"}]},"name":"abi_encode_tuple_t_uint104_t_uint104_t_uint40__to_t_uint104_t_uint104_t_uint40__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8470:9:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8481:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8489:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8497:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8508:4:14","type":""}],"src":"8362:401:14"},{"body":{"nodeType":"YulBlock","src":"8869:76:14","statements":[{"nodeType":"YulAssignment","src":"8879:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8891:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8902:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8887:3:14"},"nodeType":"YulFunctionCall","src":"8887:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8879:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8921:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"8932:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8914:6:14"},"nodeType":"YulFunctionCall","src":"8914:25:14"},"nodeType":"YulExpressionStatement","src":"8914:25:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8838:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8849:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8860:4:14","type":""}],"src":"8768:177:14"},{"body":{"nodeType":"YulBlock","src":"9107:162:14","statements":[{"nodeType":"YulAssignment","src":"9117:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9129:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9140:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9125:3:14"},"nodeType":"YulFunctionCall","src":"9125:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9117:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9159:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"9170:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9152:6:14"},"nodeType":"YulFunctionCall","src":"9152:25:14"},"nodeType":"YulExpressionStatement","src":"9152:25:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9197:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9208:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9193:3:14"},"nodeType":"YulFunctionCall","src":"9193:18:14"},{"name":"value1","nodeType":"YulIdentifier","src":"9213:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9186:6:14"},"nodeType":"YulFunctionCall","src":"9186:34:14"},"nodeType":"YulExpressionStatement","src":"9186:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9240:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9251:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9236:3:14"},"nodeType":"YulFunctionCall","src":"9236:18:14"},{"name":"value2","nodeType":"YulIdentifier","src":"9256:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9229:6:14"},"nodeType":"YulFunctionCall","src":"9229:34:14"},"nodeType":"YulExpressionStatement","src":"9229:34:14"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9060:9:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9071:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9079:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9087:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9098:4:14","type":""}],"src":"8950:319:14"},{"body":{"nodeType":"YulBlock","src":"9371:87:14","statements":[{"nodeType":"YulAssignment","src":"9381:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9393:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9404:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9389:3:14"},"nodeType":"YulFunctionCall","src":"9389:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9381:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9423:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9438:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"9446:4:14","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9434:3:14"},"nodeType":"YulFunctionCall","src":"9434:17:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9416:6:14"},"nodeType":"YulFunctionCall","src":"9416:36:14"},"nodeType":"YulExpressionStatement","src":"9416:36:14"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9340:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9351:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9362:4:14","type":""}],"src":"9274:184:14"},{"body":{"nodeType":"YulBlock","src":"9510:86:14","statements":[{"body":{"nodeType":"YulBlock","src":"9574:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9583:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9586:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9576:6:14"},"nodeType":"YulFunctionCall","src":"9576:12:14"},"nodeType":"YulExpressionStatement","src":"9576:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9533:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9544:5:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9559:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"9564:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9555:3:14"},"nodeType":"YulFunctionCall","src":"9555:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"9568:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9551:3:14"},"nodeType":"YulFunctionCall","src":"9551:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9540:3:14"},"nodeType":"YulFunctionCall","src":"9540:31:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9530:2:14"},"nodeType":"YulFunctionCall","src":"9530:42:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9523:6:14"},"nodeType":"YulFunctionCall","src":"9523:50:14"},"nodeType":"YulIf","src":"9520:2:14"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9499:5:14","type":""}],"src":"9463:133:14"}]},"contents":"{\n    { }\n    function abi_decode_t_array$_t_address_$dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(arrayPos, arrayPos) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(arrayPos, arrayPos) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, mul(length, 0x20)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        let value0_1, value1_1 := abi_decode_t_array$_t_address_$dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let value := calldataload(add(headStart, 32))\n        validator_revert_t_address(value)\n        value2 := value\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value3, value3) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value3, value3) }\n        let value0_1, value1_1 := abi_decode_t_array$_t_address_$dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value3, value3) }\n        let value2_1, value3_1 := abi_decode_t_array$_t_address_$dyn_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        let value0_1, value1_1 := abi_decode_t_array$_t_address_$dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        value2 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_t_address(value)\n        value3 := value\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_uint256t_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value4, value4) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value4, value4) }\n        let value0_1, value1_1 := abi_decode_t_array$_t_address_$dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        value2 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_t_address(value)\n        value3 := value\n        let value_1 := calldataload(add(headStart, 96))\n        validator_revert_t_address(value_1)\n        value4 := value_1\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_contract$_IStakedTokenWithConfig_$2033__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_4058a4fa702d397682b400d1a2d7894f822738ac481455440aeb37a04a780eca__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"INVALID_USER_ADDRESS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_60a6ecd9d15a2e4ae360b5943de5e7d94204c8fa7a9b93d3208a26418697ceb3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"INVALID_TO_ADDRESS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6959a97277e640037a0b87fbc8f4c35f54cb176c97a67a1f1334c0edec62895f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"INVALID_CONFIGURATION\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_88066702ff2a817045c06422ff60e138f1b9ed6ff5eae8db2038ccb44cf1a522__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Index overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"ONLY_EMISSION_MANAGER\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_dc389f9f05ed02e337a2af628240d9d635867491305ed504870102f5e0924c61__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"CLAIMER_UNAUTHORIZED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint104__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint104_t_uint104_t_uint40__to_t_uint104_t_uint104_t_uint40__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, 0xffffffffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"immutableReferences":{"1205":[{"start":773,"length":32},{"start":2472,"length":32},{"start":2599,"length":32},{"start":2635,"length":32},{"start":3657,"length":32}],"588":[{"start":1090,"length":32},{"start":1421,"length":32},{"start":2800,"length":32},{"start":2905,"length":32}]}},"methodIdentifiers":{"DISTRIBUTION_END()":"919cd40f","EMISSION_MANAGER()":"cbcbb507","PRECISION()":"aaf5eb68","REVISION()":"dde43cba","REWARD_TOKEN()":"99248ea7","STAKE_TOKEN()":"1c39b672","assets(address)":"f11b8188","claimRewards(address[],uint256,address)":"3111e7b3","claimRewardsOnBehalf(address[],uint256,address,address)":"6d34b96e","configureAssets(address[],uint256[])":"79f171b2","getAssetData(address)":"1652e7b7","getClaimer(address)":"74d945ec","getDistributionEnd()":"cc69afec","getRewardsBalance(address[],address)":"8b599f26","getUserAssetData(address,address)":"3373ee4c","getUserUnclaimedRewards(address)":"198fa81e","handleAction(address,uint256,uint256)":"31873e2e","initialize(address)":"c4d66de8","setClaimer(address,address)":"f5cf673b","setDistributionEnd(uint256)":"39ccbdd3"},"gasEstimates":{"creation":{"codeDepositCost":"1508200","executionCost":"infinite","totalCost":"infinite"},"external":{"DISTRIBUTION_END()":"1073","EMISSION_MANAGER()":"infinite","PRECISION()":"329","REVISION()":"294","REWARD_TOKEN()":"infinite","STAKE_TOKEN()":"infinite","assets(address)":"1494","claimRewards(address[],uint256,address)":"infinite","claimRewardsOnBehalf(address[],uint256,address,address)":"infinite","configureAssets(address[],uint256[])":"infinite","getAssetData(address)":"1412","getClaimer(address)":"1386","getDistributionEnd()":"1072","getRewardsBalance(address[],address)":"infinite","getUserAssetData(address,address)":"infinite","getUserUnclaimedRewards(address)":"1310","handleAction(address,uint256,uint256)":"infinite","initialize(address)":"infinite","setClaimer(address,address)":"infinite","setDistributionEnd(uint256)":"infinite"},"internal":{"_claimRewards(address[] calldata,uint256,address,address,address)":"infinite","getRevision()":"15"}}},"ewasm":{"wasm":""}}},"contracts/interfaces/IAaveDistributionManager.sol":{"IAaveDistributionManager":{"abi":[{"type":"function","name":"DISTRIBUTION_END","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getAssetData","inputs":[{"name":"asset","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getDistributionEnd","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getUserAssetData","inputs":[{"name":"user","type":"address","internalType":"address"},{"name":"asset","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"setDistributionEnd","inputs":[{"name":"distributionEnd","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"AssetConfigUpdated","inputs":[{"name":"asset","type":"address","indexed":true,"internalType":"address"},{"name":"emission","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"AssetIndexUpdated","inputs":[{"name":"asset","type":"address","indexed":true,"internalType":"address"},{"name":"index","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"DistributionEndUpdated","inputs":[{"name":"newDistributionEnd","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"UserIndexUpdated","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"asset","type":"address","indexed":true,"internalType":"address"},{"name":"index","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"emission\",\"type\":\"uint256\"}],\"name\":\"AssetConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"AssetIndexUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDistributionEnd\",\"type\":\"uint256\"}],\"name\":\"DistributionEndUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"UserIndexUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DISTRIBUTION_END\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDistributionEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getUserAssetData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"distributionEnd\",\"type\":\"uint256\"}],\"name\":\"setDistributionEnd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DISTRIBUTION_END()\":{\"details\":\"for backwards compatibility with the previous DistributionManager used\",\"returns\":{\"_0\":\"The end of the distribution*\"}},\"getAssetData(address)\":{\"details\":\"Returns the configuration of the distribution for a certain asset\",\"params\":{\"asset\":\"The address of the reference asset of the distribution\"},\"returns\":{\"_0\":\"The asset index, the emission per second and the last updated timestamp*\"}},\"getDistributionEnd()\":{\"details\":\"Gets the end date for the distribution\",\"returns\":{\"_0\":\"The end of the distribution*\"}},\"getUserAssetData(address,address)\":{\"details\":\"Returns the data of an user on a distribution\",\"params\":{\"asset\":\"The address of the reference asset of the distribution\",\"user\":\"Address of the user\"},\"returns\":{\"_0\":\"The new index*\"}},\"setDistributionEnd(uint256)\":{\"details\":\"Sets the end date for the distribution\",\"params\":{\"distributionEnd\":\"The end date timestamp*\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAaveDistributionManager.sol\":\"IAaveDistributionManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IAaveDistributionManager.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\npragma experimental ABIEncoderV2;\\n\\nimport {DistributionTypes} from '../lib/DistributionTypes.sol';\\n\\ninterface IAaveDistributionManager {\\n  \\n  event AssetConfigUpdated(address indexed asset, uint256 emission);\\n  event AssetIndexUpdated(address indexed asset, uint256 index);\\n  event UserIndexUpdated(address indexed user, address indexed asset, uint256 index);\\n  event DistributionEndUpdated(uint256 newDistributionEnd);\\n\\n  /**\\n  * @dev Sets the end date for the distribution\\n  * @param distributionEnd The end date timestamp\\n  **/\\n  function setDistributionEnd(uint256 distributionEnd) external;\\n\\n  /**\\n  * @dev Gets the end date for the distribution\\n  * @return The end of the distribution\\n  **/\\n  function getDistributionEnd() external view returns (uint256);\\n\\n  /**\\n  * @dev for backwards compatibility with the previous DistributionManager used\\n  * @return The end of the distribution\\n  **/\\n  function DISTRIBUTION_END() external view returns(uint256);\\n\\n   /**\\n   * @dev Returns the data of an user on a distribution\\n   * @param user Address of the user\\n   * @param asset The address of the reference asset of the distribution\\n   * @return The new index\\n   **/\\n   function getUserAssetData(address user, address asset) external view returns (uint256);\\n\\n   /**\\n   * @dev Returns the configuration of the distribution for a certain asset\\n   * @param asset The address of the reference asset of the distribution\\n   * @return The asset index, the emission per second and the last updated timestamp\\n   **/\\n   function getAssetData(address asset) external view returns (uint256, uint256, uint256);\\n}\\n\",\"keccak256\":\"0xe39e06bdb4b2df13217f8717de30808bf6bbf5805acb8a944a8fe4d2521aafca\",\"license\":\"agpl-3.0\"},\"contracts/lib/DistributionTypes.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\npragma experimental ABIEncoderV2;\\n\\nlibrary DistributionTypes {\\n  struct AssetConfigInput {\\n    uint104 emissionPerSecond;\\n    uint256 totalStaked;\\n    address underlyingAsset;\\n  }\\n\\n  struct UserStakeInput {\\n    address underlyingAsset;\\n    uint256 stakedByUser;\\n    uint256 totalStaked;\\n  }\\n}\\n\",\"keccak256\":\"0x8f1b12ff20b42316cc29449091350fdbd0f8d38e3dc5d0d7c5dae3978e3884e1\",\"license\":\"agpl-3.0\"}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","methods":{"DISTRIBUTION_END()":{"details":"for backwards compatibility with the previous DistributionManager used","returns":{"_0":"The end of the distribution*"}},"getAssetData(address)":{"details":"Returns the configuration of the distribution for a certain asset","params":{"asset":"The address of the reference asset of the distribution"},"returns":{"_0":"The asset index, the emission per second and the last updated timestamp*"}},"getDistributionEnd()":{"details":"Gets the end date for the distribution","returns":{"_0":"The end of the distribution*"}},"getUserAssetData(address,address)":{"details":"Returns the data of an user on a distribution","params":{"asset":"The address of the reference asset of the distribution","user":"Address of the user"},"returns":{"_0":"The new index*"}},"setDistributionEnd(uint256)":{"details":"Sets the end date for the distribution","params":{"distributionEnd":"The end date timestamp*"}}}},"evm":{"assembly":"","bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"DISTRIBUTION_END()":"919cd40f","getAssetData(address)":"1652e7b7","getDistributionEnd()":"cc69afec","getUserAssetData(address,address)":"3373ee4c","setDistributionEnd(uint256)":"39ccbdd3"}},"ewasm":{"wasm":""}}},"contracts/interfaces/IAaveIncentivesController.sol":{"IAaveIncentivesController":{"abi":[{"type":"function","name":"DISTRIBUTION_END","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"REWARD_TOKEN","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"claimRewards","inputs":[{"name":"assets","type":"address[]","internalType":"address[]"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"to","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"claimRewardsOnBehalf","inputs":[{"name":"assets","type":"address[]","internalType":"address[]"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"user","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"configureAssets","inputs":[{"name":"assets","type":"address[]","internalType":"address[]"},{"name":"emissionsPerSecond","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getAssetData","inputs":[{"name":"asset","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getClaimer","inputs":[{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getDistributionEnd","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getRewardsBalance","inputs":[{"name":"assets","type":"address[]","internalType":"address[]"},{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getUserAssetData","inputs":[{"name":"user","type":"address","internalType":"address"},{"name":"asset","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getUserUnclaimedRewards","inputs":[{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"handleAction","inputs":[{"name":"asset","type":"address","internalType":"address"},{"name":"userBalance","type":"uint256","internalType":"uint256"},{"name":"totalSupply","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setClaimer","inputs":[{"name":"user","type":"address","internalType":"address"},{"name":"claimer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setDistributionEnd","inputs":[{"name":"distributionEnd","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"AssetConfigUpdated","inputs":[{"name":"asset","type":"address","indexed":true,"internalType":"address"},{"name":"emission","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"AssetIndexUpdated","inputs":[{"name":"asset","type":"address","indexed":true,"internalType":"address"},{"name":"index","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ClaimerSet","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"claimer","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"DistributionEndUpdated","inputs":[{"name":"newDistributionEnd","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RewardsAccrued","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RewardsClaimed","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"claimer","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"UserIndexUpdated","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"asset","type":"address","indexed":true,"internalType":"address"},{"name":"index","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"emission\",\"type\":\"uint256\"}],\"name\":\"AssetConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"AssetIndexUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"ClaimerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDistributionEnd\",\"type\":\"uint256\"}],\"name\":\"DistributionEndUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsAccrued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"UserIndexUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DISTRIBUTION_END\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REWARD_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"claimRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"claimRewardsOnBehalf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"emissionsPerSecond\",\"type\":\"uint256[]\"}],\"name\":\"configureAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getClaimer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDistributionEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getRewardsBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getUserAssetData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserUnclaimedRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"userBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"name\":\"handleAction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"setClaimer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"distributionEnd\",\"type\":\"uint256\"}],\"name\":\"setDistributionEnd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DISTRIBUTION_END()\":{\"details\":\"for backwards compatibility with the previous DistributionManager used\",\"returns\":{\"_0\":\"The end of the distribution*\"}},\"REWARD_TOKEN()\":{\"details\":\"for backward compatibility with previous implementation of the Incentives controller\"},\"claimRewards(address[],uint256,address)\":{\"details\":\"Claims reward for an user, on all the assets of the lending pool, accumulating the pending rewards\",\"params\":{\"amount\":\"Amount of rewards to claim\",\"to\":\"Address that will be receiving the rewards\"},\"returns\":{\"_0\":\"Rewards claimed*\"}},\"claimRewardsOnBehalf(address[],uint256,address,address)\":{\"details\":\"Claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards. The caller must be whitelisted via \\\"allowClaimOnBehalf\\\" function by the RewardsAdmin role manager\",\"params\":{\"amount\":\"Amount of rewards to claim\",\"to\":\"Address that will be receiving the rewards\",\"user\":\"Address to check and claim rewards\"},\"returns\":{\"_0\":\"Rewards claimed*\"}},\"configureAssets(address[],uint256[])\":{\"details\":\"Configure assets for a certain rewards emission\",\"params\":{\"assets\":\"The assets to incentivize\",\"emissionsPerSecond\":\"The emission for each asset\"}},\"getAssetData(address)\":{\"details\":\"Returns the configuration of the distribution for a certain asset\",\"params\":{\"asset\":\"The address of the reference asset of the distribution\"},\"returns\":{\"_0\":\"The asset index, the emission per second and the last updated timestamp*\"}},\"getClaimer(address)\":{\"details\":\"Returns the whitelisted claimer for a certain address (0x0 if not set)\",\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The claimer address\"}},\"getDistributionEnd()\":{\"details\":\"Gets the end date for the distribution\",\"returns\":{\"_0\":\"The end of the distribution*\"}},\"getRewardsBalance(address[],address)\":{\"details\":\"Returns the total of rewards of an user, already accrued + not yet accrued\",\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The rewards*\"}},\"getUserAssetData(address,address)\":{\"details\":\"Returns the data of an user on a distribution\",\"params\":{\"asset\":\"The address of the reference asset of the distribution\",\"user\":\"Address of the user\"},\"returns\":{\"_0\":\"The new index*\"}},\"getUserUnclaimedRewards(address)\":{\"details\":\"returns the unclaimed rewards of the user\",\"params\":{\"user\":\"the address of the user\"},\"returns\":{\"_0\":\"the unclaimed user rewards\"}},\"handleAction(address,uint256,uint256)\":{\"details\":\"Called by the corresponding asset on any update that affects the rewards distribution\",\"params\":{\"asset\":\"The address of the user\",\"totalSupply\":\"The total supply of the asset in the lending pool*\",\"userBalance\":\"The balance of the user of the asset in the lending pool\"}},\"setClaimer(address,address)\":{\"details\":\"Whitelists an address to claim the rewards on behalf of another address\",\"params\":{\"claimer\":\"The address of the claimer\",\"user\":\"The address of the user\"}},\"setDistributionEnd(uint256)\":{\"details\":\"Sets the end date for the distribution\",\"params\":{\"distributionEnd\":\"The end date timestamp*\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAaveIncentivesController.sol\":\"IAaveIncentivesController\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IAaveDistributionManager.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\npragma experimental ABIEncoderV2;\\n\\nimport {DistributionTypes} from '../lib/DistributionTypes.sol';\\n\\ninterface IAaveDistributionManager {\\n  \\n  event AssetConfigUpdated(address indexed asset, uint256 emission);\\n  event AssetIndexUpdated(address indexed asset, uint256 index);\\n  event UserIndexUpdated(address indexed user, address indexed asset, uint256 index);\\n  event DistributionEndUpdated(uint256 newDistributionEnd);\\n\\n  /**\\n  * @dev Sets the end date for the distribution\\n  * @param distributionEnd The end date timestamp\\n  **/\\n  function setDistributionEnd(uint256 distributionEnd) external;\\n\\n  /**\\n  * @dev Gets the end date for the distribution\\n  * @return The end of the distribution\\n  **/\\n  function getDistributionEnd() external view returns (uint256);\\n\\n  /**\\n  * @dev for backwards compatibility with the previous DistributionManager used\\n  * @return The end of the distribution\\n  **/\\n  function DISTRIBUTION_END() external view returns(uint256);\\n\\n   /**\\n   * @dev Returns the data of an user on a distribution\\n   * @param user Address of the user\\n   * @param asset The address of the reference asset of the distribution\\n   * @return The new index\\n   **/\\n   function getUserAssetData(address user, address asset) external view returns (uint256);\\n\\n   /**\\n   * @dev Returns the configuration of the distribution for a certain asset\\n   * @param asset The address of the reference asset of the distribution\\n   * @return The asset index, the emission per second and the last updated timestamp\\n   **/\\n   function getAssetData(address asset) external view returns (uint256, uint256, uint256);\\n}\\n\",\"keccak256\":\"0xe39e06bdb4b2df13217f8717de30808bf6bbf5805acb8a944a8fe4d2521aafca\",\"license\":\"agpl-3.0\"},\"contracts/interfaces/IAaveIncentivesController.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\npragma experimental ABIEncoderV2;\\n\\nimport {IAaveDistributionManager} from '../interfaces/IAaveDistributionManager.sol';\\n\\ninterface IAaveIncentivesController is IAaveDistributionManager {\\n  \\n  event RewardsAccrued(address indexed user, uint256 amount);\\n  \\n  event RewardsClaimed(\\n    address indexed user,\\n    address indexed to,\\n    address indexed claimer,\\n    uint256 amount\\n  );\\n\\n  event ClaimerSet(address indexed user, address indexed claimer);\\n\\n  /**\\n   * @dev Whitelists an address to claim the rewards on behalf of another address\\n   * @param user The address of the user\\n   * @param claimer The address of the claimer\\n   */\\n  function setClaimer(address user, address claimer) external;\\n\\n  /**\\n   * @dev Returns the whitelisted claimer for a certain address (0x0 if not set)\\n   * @param user The address of the user\\n   * @return The claimer address\\n   */\\n  function getClaimer(address user) external view returns (address);\\n\\n  /**\\n   * @dev Configure assets for a certain rewards emission\\n   * @param assets The assets to incentivize\\n   * @param emissionsPerSecond The emission for each asset\\n   */\\n  function configureAssets(address[] calldata assets, uint256[] calldata emissionsPerSecond)\\n    external;\\n\\n\\n  /**\\n   * @dev Called by the corresponding asset on any update that affects the rewards distribution\\n   * @param asset The address of the user\\n   * @param userBalance The balance of the user of the asset in the lending pool\\n   * @param totalSupply The total supply of the asset in the lending pool\\n   **/\\n  function handleAction(\\n    address asset,\\n    uint256 userBalance,\\n    uint256 totalSupply\\n  ) external;\\n\\n  /**\\n   * @dev Returns the total of rewards of an user, already accrued + not yet accrued\\n   * @param user The address of the user\\n   * @return The rewards\\n   **/\\n  function getRewardsBalance(address[] calldata assets, address user)\\n    external\\n    view\\n    returns (uint256);\\n\\n  /**\\n   * @dev Claims reward for an user, on all the assets of the lending pool, accumulating the pending rewards\\n   * @param amount Amount of rewards to claim\\n   * @param to Address that will be receiving the rewards\\n   * @return Rewards claimed\\n   **/\\n  function claimRewards(\\n    address[] calldata assets,\\n    uint256 amount,\\n    address to\\n  ) external returns (uint256);\\n\\n  /**\\n   * @dev Claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards. The caller must\\n   * be whitelisted via \\\"allowClaimOnBehalf\\\" function by the RewardsAdmin role manager\\n   * @param amount Amount of rewards to claim\\n   * @param user Address to check and claim rewards\\n   * @param to Address that will be receiving the rewards\\n   * @return Rewards claimed\\n   **/\\n  function claimRewardsOnBehalf(\\n    address[] calldata assets,\\n    uint256 amount,\\n    address user,\\n    address to\\n  ) external returns (uint256);\\n\\n  /**\\n   * @dev returns the unclaimed rewards of the user\\n   * @param user the address of the user\\n   * @return the unclaimed user rewards\\n   */\\n  function getUserUnclaimedRewards(address user) external view returns (uint256);\\n\\n  /**\\n  * @dev for backward compatibility with previous implementation of the Incentives controller\\n  */\\n  function REWARD_TOKEN() external view returns (address);\\n}\\n\",\"keccak256\":\"0x8ab08988a5260afd53ebfe467750c2485a126390529cd82062c76b4f9259734c\",\"license\":\"agpl-3.0\"},\"contracts/lib/DistributionTypes.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\npragma experimental ABIEncoderV2;\\n\\nlibrary DistributionTypes {\\n  struct AssetConfigInput {\\n    uint104 emissionPerSecond;\\n    uint256 totalStaked;\\n    address underlyingAsset;\\n  }\\n\\n  struct UserStakeInput {\\n    address underlyingAsset;\\n    uint256 stakedByUser;\\n    uint256 totalStaked;\\n  }\\n}\\n\",\"keccak256\":\"0x8f1b12ff20b42316cc29449091350fdbd0f8d38e3dc5d0d7c5dae3978e3884e1\",\"license\":\"agpl-3.0\"}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","methods":{"DISTRIBUTION_END()":{"details":"for backwards compatibility with the previous DistributionManager used","returns":{"_0":"The end of the distribution*"}},"REWARD_TOKEN()":{"details":"for backward compatibility with previous implementation of the Incentives controller"},"claimRewards(address[],uint256,address)":{"details":"Claims reward for an user, on all the assets of the lending pool, accumulating the pending rewards","params":{"amount":"Amount of rewards to claim","to":"Address that will be receiving the rewards"},"returns":{"_0":"Rewards claimed*"}},"claimRewardsOnBehalf(address[],uint256,address,address)":{"details":"Claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards. The caller must be whitelisted via \"allowClaimOnBehalf\" function by the RewardsAdmin role manager","params":{"amount":"Amount of rewards to claim","to":"Address that will be receiving the rewards","user":"Address to check and claim rewards"},"returns":{"_0":"Rewards claimed*"}},"configureAssets(address[],uint256[])":{"details":"Configure assets for a certain rewards emission","params":{"assets":"The assets to incentivize","emissionsPerSecond":"The emission for each asset"}},"getAssetData(address)":{"details":"Returns the configuration of the distribution for a certain asset","params":{"asset":"The address of the reference asset of the distribution"},"returns":{"_0":"The asset index, the emission per second and the last updated timestamp*"}},"getClaimer(address)":{"details":"Returns the whitelisted claimer for a certain address (0x0 if not set)","params":{"user":"The address of the user"},"returns":{"_0":"The claimer address"}},"getDistributionEnd()":{"details":"Gets the end date for the distribution","returns":{"_0":"The end of the distribution*"}},"getRewardsBalance(address[],address)":{"details":"Returns the total of rewards of an user, already accrued + not yet accrued","params":{"user":"The address of the user"},"returns":{"_0":"The rewards*"}},"getUserAssetData(address,address)":{"details":"Returns the data of an user on a distribution","params":{"asset":"The address of the reference asset of the distribution","user":"Address of the user"},"returns":{"_0":"The new index*"}},"getUserUnclaimedRewards(address)":{"details":"returns the unclaimed rewards of the user","params":{"user":"the address of the user"},"returns":{"_0":"the unclaimed user rewards"}},"handleAction(address,uint256,uint256)":{"details":"Called by the corresponding asset on any update that affects the rewards distribution","params":{"asset":"The address of the user","totalSupply":"The total supply of the asset in the lending pool*","userBalance":"The balance of the user of the asset in the lending pool"}},"setClaimer(address,address)":{"details":"Whitelists an address to claim the rewards on behalf of another address","params":{"claimer":"The address of the claimer","user":"The address of the user"}},"setDistributionEnd(uint256)":{"details":"Sets the end date for the distribution","params":{"distributionEnd":"The end date timestamp*"}}}},"evm":{"assembly":"","bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"DISTRIBUTION_END()":"919cd40f","REWARD_TOKEN()":"99248ea7","claimRewards(address[],uint256,address)":"3111e7b3","claimRewardsOnBehalf(address[],uint256,address,address)":"6d34b96e","configureAssets(address[],uint256[])":"79f171b2","getAssetData(address)":"1652e7b7","getClaimer(address)":"74d945ec","getDistributionEnd()":"cc69afec","getRewardsBalance(address[],address)":"8b599f26","getUserAssetData(address,address)":"3373ee4c","getUserUnclaimedRewards(address)":"198fa81e","handleAction(address,uint256,uint256)":"31873e2e","setClaimer(address,address)":"f5cf673b","setDistributionEnd(uint256)":"39ccbdd3"}},"ewasm":{"wasm":""}}},"contracts/interfaces/IScaledBalanceToken.sol":{"IScaledBalanceToken":{"abi":[{"type":"function","name":"getScaledUserBalanceAndSupply","inputs":[{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"scaledBalanceOf","inputs":[{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"scaledTotalSupply","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"}],"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getScaledUserBalanceAndSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"scaledBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scaledTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getScaledUserBalanceAndSupply(address)\":{\"details\":\"Returns the scaled balance of the user and the scaled total supply.\",\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The scaled balance of the user\",\"_1\":\"The scaled balance and the scaled total supply*\"}},\"scaledBalanceOf(address)\":{\"details\":\"Returns the scaled balance of the user. The scaled balance is the sum of all the updated stored balance divided by the reserve's liquidity index at the moment of the update\",\"params\":{\"user\":\"The user whose balance is calculated\"},\"returns\":{\"_0\":\"The scaled balance of the user*\"}},\"scaledTotalSupply()\":{\"details\":\"Returns the scaled total supply of the token. Represents sum(debt/index)\",\"returns\":{\"_0\":\"The scaled total supply*\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IScaledBalanceToken.sol\":\"IScaledBalanceToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IScaledBalanceToken.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\ninterface IScaledBalanceToken {\\n  /**\\n   * @dev Returns the scaled balance of the user. The scaled balance is the sum of all the\\n   * updated stored balance divided by the reserve's liquidity index at the moment of the update\\n   * @param user The user whose balance is calculated\\n   * @return The scaled balance of the user\\n   **/\\n  function scaledBalanceOf(address user) external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the scaled balance of the user and the scaled total supply.\\n   * @param user The address of the user\\n   * @return The scaled balance of the user\\n   * @return The scaled balance and the scaled total supply\\n   **/\\n  function getScaledUserBalanceAndSupply(address user) external view returns (uint256, uint256);\\n\\n  /**\\n   * @dev Returns the scaled total supply of the token. Represents sum(debt/index)\\n   * @return The scaled total supply\\n   **/\\n  function scaledTotalSupply() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x5540d61b37bf2d7800474e406fc12485d33d269458e27d8dc1ac2f03c3a67f91\",\"license\":\"agpl-3.0\"}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","methods":{"getScaledUserBalanceAndSupply(address)":{"details":"Returns the scaled balance of the user and the scaled total supply.","params":{"user":"The address of the user"},"returns":{"_0":"The scaled balance of the user","_1":"The scaled balance and the scaled total supply*"}},"scaledBalanceOf(address)":{"details":"Returns the scaled balance of the user. The scaled balance is the sum of all the updated stored balance divided by the reserve's liquidity index at the moment of the update","params":{"user":"The user whose balance is calculated"},"returns":{"_0":"The scaled balance of the user*"}},"scaledTotalSupply()":{"details":"Returns the scaled total supply of the token. Represents sum(debt/index)","returns":{"_0":"The scaled total supply*"}}}},"evm":{"assembly":"","bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getScaledUserBalanceAndSupply(address)":"0afbcdc9","scaledBalanceOf(address)":"1da24f3e","scaledTotalSupply()":"b1bf962d"}},"ewasm":{"wasm":""}}},"contracts/interfaces/IStakedTokenWithConfig.sol":{"IStakedTokenWithConfig":{"abi":[{"type":"function","name":"STAKED_TOKEN","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"claimRewards","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"cooldown","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"redeem","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stake","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"}],"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"STAKED_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cooldown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IStakedTokenWithConfig.sol\":\"IStakedTokenWithConfig\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/aave-stake/contracts/interfaces/IStakedToken.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\ninterface IStakedToken {\\n  \\n  function stake(address to, uint256 amount) external;\\n\\n  function redeem(address to, uint256 amount) external;\\n\\n  function cooldown() external;\\n\\n  function claimRewards(address to, uint256 amount) external;\\n}\\n\",\"keccak256\":\"0x96309403461031e5b796bcd97cd504fdaa60487360abb795a51171dbcec596a2\",\"license\":\"agpl-3.0\"},\"contracts/interfaces/IStakedTokenWithConfig.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity 0.7.5;\\n\\nimport {IStakedToken} from '@aave/aave-stake/contracts/interfaces/IStakedToken.sol';\\n\\ninterface IStakedTokenWithConfig is IStakedToken {\\n  function STAKED_TOKEN() external view returns(address);\\n}\",\"keccak256\":\"0x59f099066f38943a1ef2da0b171bdc2ced04c389ef66bb74cdacb38691ee75df\",\"license\":\"AGPL-3.0\"}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev"},"evm":{"assembly":"","bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"STAKED_TOKEN()":"312f6b83","claimRewards(address,uint256)":"9a99b4f0","cooldown()":"787a08a6","redeem(address,uint256)":"1e9a6950","stake(address,uint256)":"adc9772e"}},"ewasm":{"wasm":""}}},"contracts/lib/DistributionTypes.sol":{"DistributionTypes":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/DistributionTypes.sol\":\"DistributionTypes\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lib/DistributionTypes.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\npragma experimental ABIEncoderV2;\\n\\nlibrary DistributionTypes {\\n  struct AssetConfigInput {\\n    uint104 emissionPerSecond;\\n    uint256 totalStaked;\\n    address underlyingAsset;\\n  }\\n\\n  struct UserStakeInput {\\n    address underlyingAsset;\\n    uint256 stakedByUser;\\n    uint256 totalStaked;\\n  }\\n}\\n\",\"keccak256\":\"0x8f1b12ff20b42316cc29449091350fdbd0f8d38e3dc5d0d7c5dae3978e3884e1\",\"license\":\"agpl-3.0\"}},\"version\":1}","userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev"},"evm":{"assembly":"    /* \"contracts/lib/DistributionTypes.sol\":95:352  library DistributionTypes {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/lib/DistributionTypes.sol\":95:352  library DistributionTypes {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220db1ce353cda4de6e3d5799b230efc0050fb88d2f8fdfcffbe7de1c3eefd64f7364736f6c63430007050033\n}\n","legacyAssembly":{".code":[{"begin":95,"end":352,"name":"PUSH #[$]","source":12,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":95,"end":352,"name":"PUSH [$]","source":12,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":95,"end":352,"name":"PUSH","source":12,"value":"B"},{"begin":95,"end":352,"name":"DUP3","source":12},{"begin":95,"end":352,"name":"DUP3","source":12},{"begin":95,"end":352,"name":"DUP3","source":12},{"begin":95,"end":352,"name":"CODECOPY","source":12},{"begin":95,"end":352,"name":"DUP1","source":12},{"begin":95,"end":352,"name":"MLOAD","source":12},{"begin":95,"end":352,"name":"PUSH","source":12,"value":"0"},{"begin":95,"end":352,"name":"BYTE","source":12},{"begin":95,"end":352,"name":"PUSH","source":12,"value":"73"},{"begin":95,"end":352,"name":"EQ","source":12},{"begin":95,"end":352,"name":"PUSH [tag]","source":12,"value":"1"},{"begin":95,"end":352,"name":"JUMPI","source":12},{"begin":95,"end":352,"name":"INVALID","source":12},{"begin":95,"end":352,"name":"tag","source":12,"value":"1"},{"begin":95,"end":352,"name":"JUMPDEST","source":12},{"begin":95,"end":352,"name":"ADDRESS","source":12},{"begin":95,"end":352,"name":"PUSH","source":12,"value":"0"},{"begin":95,"end":352,"name":"MSTORE","source":12},{"begin":95,"end":352,"name":"PUSH","source":12,"value":"73"},{"begin":95,"end":352,"name":"DUP2","source":12},{"begin":95,"end":352,"name":"MSTORE8","source":12},{"begin":95,"end":352,"name":"DUP3","source":12},{"begin":95,"end":352,"name":"DUP2","source":12},{"begin":95,"end":352,"name":"RETURN","source":12}],".data":{"0":{".auxdata":"a2646970667358221220db1ce353cda4de6e3d5799b230efc0050fb88d2f8fdfcffbe7de1c3eefd64f7364736f6c63430007050033",".code":[{"begin":95,"end":352,"name":"PUSHDEPLOYADDRESS","source":12},{"begin":95,"end":352,"name":"ADDRESS","source":12},{"begin":95,"end":352,"name":"EQ","source":12},{"begin":95,"end":352,"name":"PUSH","source":12,"value":"80"},{"begin":95,"end":352,"name":"PUSH","source":12,"value":"40"},{"begin":95,"end":352,"name":"MSTORE","source":12},{"begin":95,"end":352,"name":"PUSH","source":12,"value":"0"},{"begin":95,"end":352,"name":"DUP1","source":12},{"begin":95,"end":352,"name":"REVERT","source":12}]}}},"bytecode":{"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220db1ce353cda4de6e3d5799b230efc0050fb88d2f8fdfcffbe7de1c3eefd64f7364736f6c63430007050033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB SHR 0xE3 MSTORE8 0xCD LOG4 0xDE PUSH15 0x3D5799B230EFC0050FB88D2F8FDFCF 0xFB 0xE7 0xDE SHR RETURNDATACOPY 0xEF 0xD6 0x4F PUSH20 0x64736F6C63430007050033000000000000000000 ","sourceMap":"95:257:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220db1ce353cda4de6e3d5799b230efc0050fb88d2f8fdfcffbe7de1c3eefd64f7364736f6c63430007050033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB SHR 0xE3 MSTORE8 0xCD LOG4 0xDE PUSH15 0x3D5799B230EFC0050FB88D2F8FDFCF 0xFB 0xE7 0xDE SHR RETURNDATACOPY 0xEF 0xD6 0x4F PUSH20 0x64736F6C63430007050033000000000000000000 ","sourceMap":"95:257:12:-:0;;;;;;;;","linkReferences":{}},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"external":{},"internal":{}}},"ewasm":{"wasm":""}}},"contracts/lib/SafeMath.sol":{"SafeMath":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Optimized overflow and underflow safe math operations\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost inspired by uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lib/SafeMath.sol\":{\"content\":\"\\n// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.7.5;\\n\\n/// @title Optimized overflow and underflow safe math operations\\n/// @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\\n/// inspired by uniswap V3\\nlibrary SafeMath {\\n    /// @notice Returns x + y, reverts if sum overflows uint256\\n    /// @param x The augend\\n    /// @param y The addend\\n    /// @return z The sum of x and y\\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require((z = x + y) >= x);\\n    }\\n\\n    /// @notice Returns x - y, reverts if underflows\\n    /// @param x The minuend\\n    /// @param y The subtrahend\\n    /// @return z The difference of x and y\\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require((z = x - y) <= x);\\n    }\\n\\n    /// @notice Returns x * y, reverts if overflows\\n    /// @param x The multiplicand\\n    /// @param y The multiplier\\n    /// @return z The product of x and y\\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require(x == 0 || (z = x * y) / x == y);\\n    }\\n\\n    function div(uint256 x, uint256 y) internal pure returns(uint256) {\\n        // no need to check for division by zero - solidity already reverts\\n        return x / y;\\n    }\\n}\",\"keccak256\":\"0x2b50d4f17460ae53fe080389614dc2fe17d5ecf8e315d61f2643a7482389f937\",\"license\":\"agpl-3.0\"}},\"version\":1}","userdoc":{"version":1,"kind":"user","notice":"Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost inspired by uniswap V3"},"devdoc":{"version":1,"kind":"dev","title":"Optimized overflow and underflow safe math operations"},"evm":{"assembly":"    /* \"contracts/lib/SafeMath.sol\":268:1303  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/lib/SafeMath.sol\":268:1303  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205c72ff7376c3df1088d4163bd8c535329bf9a0a70b98cc788c1d59bfbd9cc39b64736f6c63430007050033\n}\n","legacyAssembly":{".code":[{"begin":268,"end":1303,"name":"PUSH #[$]","source":13,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":268,"end":1303,"name":"PUSH [$]","source":13,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":268,"end":1303,"name":"PUSH","source":13,"value":"B"},{"begin":268,"end":1303,"name":"DUP3","source":13},{"begin":268,"end":1303,"name":"DUP3","source":13},{"begin":268,"end":1303,"name":"DUP3","source":13},{"begin":268,"end":1303,"name":"CODECOPY","source":13},{"begin":268,"end":1303,"name":"DUP1","source":13},{"begin":268,"end":1303,"name":"MLOAD","source":13},{"begin":268,"end":1303,"name":"PUSH","source":13,"value":"0"},{"begin":268,"end":1303,"name":"BYTE","source":13},{"begin":268,"end":1303,"name":"PUSH","source":13,"value":"73"},{"begin":268,"end":1303,"name":"EQ","source":13},{"begin":268,"end":1303,"name":"PUSH [tag]","source":13,"value":"1"},{"begin":268,"end":1303,"name":"JUMPI","source":13},{"begin":268,"end":1303,"name":"INVALID","source":13},{"begin":268,"end":1303,"name":"tag","source":13,"value":"1"},{"begin":268,"end":1303,"name":"JUMPDEST","source":13},{"begin":268,"end":1303,"name":"ADDRESS","source":13},{"begin":268,"end":1303,"name":"PUSH","source":13,"value":"0"},{"begin":268,"end":1303,"name":"MSTORE","source":13},{"begin":268,"end":1303,"name":"PUSH","source":13,"value":"73"},{"begin":268,"end":1303,"name":"DUP2","source":13},{"begin":268,"end":1303,"name":"MSTORE8","source":13},{"begin":268,"end":1303,"name":"DUP3","source":13},{"begin":268,"end":1303,"name":"DUP2","source":13},{"begin":268,"end":1303,"name":"RETURN","source":13}],".data":{"0":{".auxdata":"a26469706673582212205c72ff7376c3df1088d4163bd8c535329bf9a0a70b98cc788c1d59bfbd9cc39b64736f6c63430007050033",".code":[{"begin":268,"end":1303,"name":"PUSHDEPLOYADDRESS","source":13},{"begin":268,"end":1303,"name":"ADDRESS","source":13},{"begin":268,"end":1303,"name":"EQ","source":13},{"begin":268,"end":1303,"name":"PUSH","source":13,"value":"80"},{"begin":268,"end":1303,"name":"PUSH","source":13,"value":"40"},{"begin":268,"end":1303,"name":"MSTORE","source":13},{"begin":268,"end":1303,"name":"PUSH","source":13,"value":"0"},{"begin":268,"end":1303,"name":"DUP1","source":13},{"begin":268,"end":1303,"name":"REVERT","source":13}]}}},"bytecode":{"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205c72ff7376c3df1088d4163bd8c535329bf9a0a70b98cc788c1d59bfbd9cc39b64736f6c63430007050033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C PUSH19 0xFF7376C3DF1088D4163BD8C535329BF9A0A70B SWAP9 0xCC PUSH25 0x8C1D59BFBD9CC39B64736F6C63430007050033000000000000 ","sourceMap":"268:1035:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205c72ff7376c3df1088d4163bd8c535329bf9a0a70b98cc788c1d59bfbd9cc39b64736f6c63430007050033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C PUSH19 0xFF7376C3DF1088D4163BD8C535329BF9A0A70B SWAP9 0xCC PUSH25 0x8C1D59BFBD9CC39B64736F6C63430007050033000000000000 ","sourceMap":"268:1035:13:-:0;;;;;;;;","linkReferences":{}},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"external":{},"internal":{"add(uint256,uint256)":"infinite","div(uint256,uint256)":"infinite","mul(uint256,uint256)":"infinite","sub(uint256,uint256)":"infinite"}}},"ewasm":{"wasm":""}}}}}],"expires_at":18446744073709551615}